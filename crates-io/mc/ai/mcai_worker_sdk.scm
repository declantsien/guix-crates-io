(define-module (crates-io mc ai mcai_worker_sdk) #:use-module (crates-io))

(define-public crate-mcai_worker_sdk-0.10.0 (c (n "mcai_worker_sdk") (v "0.10.0") (d (list (d (n "amq-protocol") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.0.0-alpha6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1r7pd6159q3k4pycppfr4rwmrzsryccq34zlas6h2y6yvfagzm23")))

(define-public crate-mcai_worker_sdk-0.10.1 (c (n "mcai_worker_sdk") (v "0.10.1") (d (list (d (n "amq-protocol") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.0.0-alpha6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "12ccgcmhcfbl06907y73m6hq1idpvb4i9km5fj95xr2i9wpy963v")))

(define-public crate-mcai_worker_sdk-0.10.2 (c (n "mcai_worker_sdk") (v "0.10.2") (d (list (d (n "amq-protocol") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.0-beta2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.0.0-beta4") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1vz00d3jmnb9s5jvmng8plni3s2gxfrkhnfj7238d2y1cax7xn74")))

(define-public crate-mcai_worker_sdk-0.10.3 (c (n "mcai_worker_sdk") (v "0.10.3") (d (list (d (n "amq-protocol") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "= 1.0.0-rc1") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0xm3ylpka0p6f3viyjgf1fyfi2ccmbgyizl5cav1adgirfx8ynxs")))

(define-public crate-mcai_worker_sdk-0.10.4 (c (n "mcai_worker_sdk") (v "0.10.4") (d (list (d (n "amq-protocol") (r "=6.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "=1.0.0-rc1") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1ldd3v1v4nr67j1z7q48l0hycs71rf71m3b867yqa308m8jaxs8d")))

(define-public crate-mcai_worker_sdk-0.11.0-alpha (c (n "mcai_worker_sdk") (v "0.11.0-alpha") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "pyo3") (r "^0.10") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "0cg63fhnqfyjxl2sm1b05ihr27pkzbhw410w81dn8r2qszilsfrz") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.0-beta (c (n "mcai_worker_sdk") (v "0.11.0-beta") (d (list (d (n "amq-protocol") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.25") (d #t) (k 2)) (d (n "pyo3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.14") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1n2ka7a4kvk1gva54nhxm7662k2mbvqisxv2s8a0idgjfpszf984") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.0 (c (n "mcai_worker_sdk") (v "0.11.0") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1ikmbrxrzdp6b272ffnrnb6jg4mlds09saaxrzcpwya20lv8hifx") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.1 (c (n "mcai_worker_sdk") (v "0.11.1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "0lnpihf2sp1q5ddrz72j4wlk2g7a7rpac0qy42nqzs49l6ak2rzf") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.2 (c (n "mcai_worker_sdk") (v "0.11.2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "11wzxh584n5k55797ma761v1b5r5rf11aawxq0cqc91nkkivp35q") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.3 (c (n "mcai_worker_sdk") (v "0.11.3") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "0clml83pifdzqfcdniilhdadgg3c5dmz01vdz15drqzrpb0rjg5q") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.4 (c (n "mcai_worker_sdk") (v "0.11.4") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "084522hhv2fwgwigzqf6x4qfhbl8xxqcjh7zjqb06sfy9rybr2fs") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.5 (c (n "mcai_worker_sdk") (v "0.11.5") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1y06gr2nf1a49h24s83zf6n6v9772d2mdp1ipqc9kwb75wsmzq4x") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.6 (c (n "mcai_worker_sdk") (v "0.11.6") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "0lh3y6fc5wd2bi8ck1c3ds85p3rzdp62cs4j4yp64y46q42mk7mn") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.7 (c (n "mcai_worker_sdk") (v "0.11.7") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.7.6") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1cxshw6w8q1fy40hxzfkl5zsnvqa5ixmdmsz48gzm9rlsaz3g4gw") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.8 (c (n "mcai_worker_sdk") (v "0.11.8") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1d4na78iln8xy417539zly4192v38ac4lw78z1syy5q5hs712i2h") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.9-rc1 (c (n "mcai_worker_sdk") (v "0.11.9-rc1") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "050wxn5vi6lc5wmi34ga2fvablfmjfrz9972ardqr2nk57whc524") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.9-rc2 (c (n "mcai_worker_sdk") (v "0.11.9-rc2") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "0i9x37jcv87jk52dzgsy6gfpkzp18d63dvk1mcpdykgqrf73f390") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.9 (c (n "mcai_worker_sdk") (v "0.11.9") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1vcz6xrx1pi8xp7qg5cdq8w4mfjn7lzafrzh01yi604xbkz1m9ws") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.10 (c (n "mcai_worker_sdk") (v "0.11.10") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.4") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.4") (d #t) (k 0)))) (h "1ra22pshival512isvym4b2yw9xxyb5445jkvwffln0503mcgsdb") (f (quote (("python" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha1 (c (n "mcai_worker_sdk") (v "1.0.0-alpha1") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0yfij4r09rb8avfzwwxq0kg2awnj802ii0fl5h38xncnvzj9n2w4") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha2 (c (n "mcai_worker_sdk") (v "1.0.0-alpha2") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0vwvldalr1a2dklyz1nmzipkkhzr31qivqmlcmfl4663mr1qvb81") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha3 (c (n "mcai_worker_sdk") (v "1.0.0-alpha3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "1zk96m514igz2y2m548mgs3vidhvipdad66f43ykhmi5ixswyg22") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-0.11.11 (c (n "mcai_worker_sdk") (v "0.11.11") (d (list (d (n "amq-protocol") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.27") (d #t) (k 2)) (d (n "pyo3") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "secure-reliable-transport") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.15") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "12a7g55g0ywacyiwsb5had39by97cadkl4achkqz13lxzzg10kix") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "secure-reliable-transport"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha4 (c (n "mcai_worker_sdk") (v "1.0.0-alpha4") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "15c9zy13bif9zlvsnfvj1a1fhwa60jkd2b2pr94a02zv4ipw6ykl") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "srt-protocol" "srt-tokio"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha5 (c (n "mcai_worker_sdk") (v "1.0.0-alpha5") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "03bl6svhcl93ixc3xd6svkjwingyrn4z97zzrxry8d36yj5lmw68") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "srt-protocol" "srt-tokio"))))))

(define-public crate-mcai_worker_sdk-1.0.0-alpha6 (c (n "mcai_worker_sdk") (v "1.0.0-alpha6") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0b82g7fyh8h3ranrc2rbzhy2qd7a53di1l9rgwqpnxc95v9dfngj") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "srt-protocol" "srt-tokio"))))))

(define-public crate-mcai_worker_sdk-1.0.0-rc1 (c (n "mcai_worker_sdk") (v "1.0.0-rc1") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dict_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "pyo3") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless-ffmpeg-sys") (r "^4.2.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "14f7hm8cxbxc2fvqld3jpwjmlc3f2ggjankpw2mw5ghsxh5knria") (f (quote (("python" "dict_derive" "pyo3") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "stainless-ffmpeg-sys" "srt-protocol" "srt-tokio"))))))

(define-public crate-mcai_worker_sdk-1.0.0-rc2 (c (n "mcai_worker_sdk") (v "1.0.0-rc2") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "1npih8mwxxn3m70rhb464zdvs74cm1qmzs7cl5nqjqywgrmxkfdr") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.0.0-rc3 (c (n "mcai_worker_sdk") (v "1.0.0-rc3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0as92jy0nz2vv73b8z9sqywdbrl3zbgy767116c0yc5hmanjwqql") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.0.0-rc4 (c (n "mcai_worker_sdk") (v "1.0.0-rc4") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0w07j4sr7vfvfksqrwhr8yv6cd3dlyb10jiik4w9zlcdahwdd228") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.0.0-rc5 (c (n "mcai_worker_sdk") (v "1.0.0-rc5") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "1arpsngrz6gw9v67g2g7mq6r3ld3sl1hxs0c3w1fcgww2dwv7dh3") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.0.0 (c (n "mcai_worker_sdk") (v "1.0.0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.5") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.5") (d #t) (k 0)))) (h "0007mcka2as3gr29z1mdpx3x8wgxfc0nm4zrl3y5zwrh7z4vflnv") (f (quote (("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.0-rc (c (n "mcai_worker_sdk") (v "1.1.0-rc") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "1sgv9nn68imhzwmmjh72ipq5d9s8mgfkxfppk449ighpaps542yw") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.0-rc2 (c (n "mcai_worker_sdk") (v "1.1.0-rc2") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0y1h5pqrw8pj075mls3m1w6z3kn7nizjjjp4dpbk780qc6b3frma") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.0-rc3 (c (n "mcai_worker_sdk") (v "1.1.0-rc3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0hy38sxpk93889nnacqxfzs0074m472ndrmlb70hjym6bfwfwc1m") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.0-rc4 (c (n "mcai_worker_sdk") (v "1.1.0-rc4") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "032bv7q3i8d5vc9x5m6hw2h8sgq69l5ss15kzj5hnz26w5pdvaab") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.0 (c (n "mcai_worker_sdk") (v "1.1.0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0k6mdlky8qy13fz2g4lxkrwhpcxzhy2gixn663cy5r71vny09sk3") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.1-rc (c (n "mcai_worker_sdk") (v "1.1.1-rc") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "161q9f2dsg7w86qhs8gplvzw38x6anz70b34jnkxnlpyq8h8wzzs") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.1-rc2 (c (n "mcai_worker_sdk") (v "1.1.1-rc2") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0k317akjls6ksv75dbfk377l2gckhp547lxnfdiya293cf59fw9i") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.1-rc3 (c (n "mcai_worker_sdk") (v "1.1.1-rc3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0xylcsi6fxnrnzrsz8ya5ynnv6kgcrpv97imn889ysq2f90cdnds") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.1-rc4 (c (n "mcai_worker_sdk") (v "1.1.1-rc4") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "19c90zq1hzxnhhb8flgmfz5bbnxyh5g9l23sgrljc0s5fjn9k3kg") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.1 (c (n "mcai_worker_sdk") (v "1.1.1") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.16") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0x73j8ajnf73k4bxxcnq8a0203sv6iz3arb4v9ijl6hxmn8k1z4p") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.2-rc1 (c (n "mcai_worker_sdk") (v "1.1.2-rc1") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "01d2kfw7bjm7602pj2i8w9ihh0c433dl6qnya9bkg1lrkkqc3b8r") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc0 (c (n "mcai_worker_sdk") (v "2.0.0-rc0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "license") (r "^2.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.1.1") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai_build") (r "^0.1.2") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0zmxvhgymmqhs3awfh00l14lajfpjbfdkymawxp4cihxaimrwpjy") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc1 (c (n "mcai_worker_sdk") (v "2.0.0-rc1") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "license") (r "^2.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.1.1") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai_build") (r "^0.1.2") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "1a1w3fbwjig470m8d23yg2glcksrnlq8wb5wa61yph8qdjfk2ch5") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc2 (c (n "mcai_worker_sdk") (v "2.0.0-rc2") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "license") (r "^2.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.1.1") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai_build") (r "^0.1.2") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0ym7bjliyrf0rkzrf6gvabj6d714y9mcnd20sljmdx14h0kb0ys4") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc3 (c (n "mcai_worker_sdk") (v "2.0.0-rc3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.1.1") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "12f1ls0947m75la1c0asjffik9s9wnsjxm5i9dx9b8b90vma79la") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc4 (c (n "mcai_worker_sdk") (v "2.0.0-rc4") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.1.1") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0c3zg05hsq9zbsygwpadyh02byfmrjp091apxdijrzmy8wc0m46h") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-1.1.3 (c (n "mcai_worker_sdk") (v "1.1.3") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "built") (r "^0.4") (d #t) (k 1)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "1w5zwprkd1k89wvivi0j9bwzc1az9iykaqbpn1p5pjqc2w9143my") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc5 (c (n "mcai_worker_sdk") (v "2.0.0-rc5") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "16qr1mbxvj3910j1ym0l2v8az75ayxb2np56bhrqbz440vrkp4m1") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc7 (c (n "mcai_worker_sdk") (v "2.0.0-rc7") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "01bh1gml5p1a16m5xiydyag4i6wllg50d7b4jdsmqzkmslizhva9") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc8 (c (n "mcai_worker_sdk") (v "2.0.0-rc8") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "192hx0zv9iv2w6fkvhgk0a218i7h1slbq362s5sg1x00m8gm4930") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc9 (c (n "mcai_worker_sdk") (v "2.0.0-rc9") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "09g6p363fi217c18xykiscd02bcp3n8vc317i81fhvg3ssni1b8q") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0-rc10 (c (n "mcai_worker_sdk") (v "2.0.0-rc10") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "15jjmcnm9m5f96qa4q1a56512a10fkb96jjw1klkbbd0vmi6zxdb") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.0.0 (c (n "mcai_worker_sdk") (v "2.0.0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "0vx3hl5h5y45b78cwg7dckxcps31c7rhkfcnbnq0x5wyzn20x6wj") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.1.0 (c (n "mcai_worker_sdk") (v "2.1.0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "1l5ga3nyjh08m0z6d7ry40rqcgdqlymcwp314zlnxk7vp44gyrag") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

(define-public crate-mcai_worker_sdk-2.1.1-rc0 (c (n "mcai_worker_sdk") (v "2.1.1-rc0") (d (list (d (n "amq-protocol") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "async-amqp") (r "^1.1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("attributes" "unstable"))) (d #t) (k 2)) (d (n "bytes") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonschema") (r "^0.16.0") (d #t) (k 0)) (d (n "lapin") (r "^1.6") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (f (quote ("kv_unstable_serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (f (quote ("file_appender"))) (d #t) (k 0)) (d (n "mcai-license") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_build") (r "^0.2.0") (d #t) (k 1)) (d (n "mockito") (r "^0.29") (d #t) (k 2)) (d (n "nvml-wrapper") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.0") (d #t) (k 0)) (d (n "semver") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^0.5.1") (d #t) (k 2)) (d (n "srt-protocol") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "srt-tokio") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "stainless_ffmpeg") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.23.4") (d #t) (k 0)) (d (n "tokio") (r "^1.1.0") (f (quote ("net" "time" "test-util" "macros" "io-util" "io-std" "sync" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)) (d (n "yaserde") (r "^0.7") (d #t) (k 0)) (d (n "yaserde_derive") (r "^0.7") (d #t) (k 0)))) (h "16lf8qjwrl93f911pws4bmz6raa5j8dlbpgrdxpb7la4845gx4vk") (f (quote (("rabbitmq_testing") ("rabbitmq_processor_testing" "processor_testing" "rabbitmq_testing") ("processor_testing") ("media_rabbitmq_processor_testing" "media" "processor_testing" "rabbitmq_testing" "live_testing") ("media_local_processor_testing" "media" "processor_testing") ("media" "bytes" "ringbuf" "stainless_ffmpeg" "srt-protocol" "srt-tokio") ("local_processor_testing" "processor_testing") ("live_testing") ("functional_testing"))))))

