(define-module (crates-io mc ai mcai-graph-renderer) #:use-module (crates-io))

(define-public crate-mcai-graph-renderer-0.1.0 (c (n "mcai-graph-renderer") (v "0.1.0") (d (list (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^0.8.1") (d #t) (k 1)) (d (n "material-icons") (r "^0.2.0") (d #t) (k 1)) (d (n "mcai-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mcai-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_models") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 1)))) (h "1k7ghpdjlhhb0z62jmmlr4sn99iwr3xwjvwlwh611y61aamrn6ic")))

(define-public crate-mcai-graph-renderer-0.2.0 (c (n "mcai-graph-renderer") (v "0.2.0") (d (list (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^0.8.1") (d #t) (k 1)) (d (n "material-icons") (r "^0.2.0") (d #t) (k 1)) (d (n "mcai-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mcai-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_models") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 1)))) (h "0vshw9zla4wmiqcvv01grxmlk0y3iwnaxmyw0l9h2x571inn9jyv")))

(define-public crate-mcai-graph-renderer-0.2.1 (c (n "mcai-graph-renderer") (v "0.2.1") (d (list (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^0.8.1") (d #t) (k 1)) (d (n "material-icons") (r "^0.2.0") (d #t) (k 1)) (d (n "mcai-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mcai-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_models") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 1)))) (h "0q8vin2sk8qidz7rgvp38c17n7m2iwc1fm07a2fc1w4amssvciba")))

(define-public crate-mcai-graph-renderer-0.2.2 (c (n "mcai-graph-renderer") (v "0.2.2") (d (list (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-iterator") (r "^0.8.1") (d #t) (k 1)) (d (n "material-icons") (r "^0.2.0") (d #t) (k 1)) (d (n "mcai-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mcai-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mcai_models") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 0)) (d (n "svg") (r "^0.10.0") (d #t) (k 1)))) (h "0fq1k0r2v6qyckc9dv46cj76iz7c0biwywbm0x7cymx406q90z26")))

