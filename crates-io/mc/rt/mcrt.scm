(define-module (crates-io mc rt mcrt) #:use-module (crates-io))

(define-public crate-mcrt-0.1.0 (c (n "mcrt") (v "0.1.0") (d (list (d (n "arctk") (r "0.10.*") (d #t) (k 0)) (d (n "arctk-attr") (r "0.1.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.1.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.4.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "08c6l5chqs7rrrn4az39a04zgc3zip3nfsg7glcbqcl77hn0yr3c")))

(define-public crate-mcrt-0.1.1 (c (n "mcrt") (v "0.1.1") (d (list (d (n "arctk") (r "0.10.*") (d #t) (k 0)) (d (n "arctk-attr") (r "0.1.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.1.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.4.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "0gnx6acl2kih0qk5mh2sx0zz046890j4cbssimws2657d0h24pxv")))

(define-public crate-mcrt-0.1.2 (c (n "mcrt") (v "0.1.2") (d (list (d (n "arctk") (r "0.10.*") (d #t) (k 0)) (d (n "arctk-attr") (r "0.1.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.1.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.4.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "1s77bfvlcicap4apd4wra3v7xw6r31559jqkbnl4f6a2z2ca044g")))

(define-public crate-mcrt-0.1.3 (c (n "mcrt") (v "0.1.3") (d (list (d (n "arctk") (r "0.10.*") (d #t) (k 0)) (d (n "arctk-attr") (r "0.1.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.1.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.4.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "0rkvmsv7ddg2v967ks2amy5fz0jdydxgq1wnb40h1iz4c2kbk8ab")))

(define-public crate-mcrt-0.2.0 (c (n "mcrt") (v "0.2.0") (d (list (d (n "arctk") (r "0.11.*") (f (quote ("terminal_size" "netcdf"))) (d #t) (k 0)) (d (n "arctk-attr") (r "0.2.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.2.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.5.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "1rg1nldcfm4y6pi2lfpbzjgfr9vr75456zqivxljycihgw1i3nzx")))

(define-public crate-mcrt-0.2.1 (c (n "mcrt") (v "0.2.1") (d (list (d (n "arctk") (r "0.11.*") (f (quote ("terminal_size" "netcdf"))) (d #t) (k 0)) (d (n "arctk-attr") (r "0.2.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.2.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.5.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "0a56npxf8iwxr4nmqlpzsxad0d62xjfahlpi3g99p2a1bqqkrjpy")))

(define-public crate-mcrt-0.2.2 (c (n "mcrt") (v "0.2.2") (d (list (d (n "arctk") (r "^0.11.8") (f (quote ("terminal_size" "netcdf"))) (d #t) (k 0)) (d (n "arctk-attr") (r "0.2.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.2.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.5.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "16gd0mp490wdi2yqqqnc54ygcmfs04a7kjwc5g897506bjc3l370")))

(define-public crate-mcrt-0.2.3 (c (n "mcrt") (v "0.2.3") (d (list (d (n "arctk") (r "^0.11.8") (f (quote ("terminal_size" "netcdf"))) (d #t) (k 0)) (d (n "arctk-attr") (r "0.2.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.2.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.5.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "158acvi7i2m793314an774xzq3w1kr2b9cbxyxz33a20b8vl53cs")))

(define-public crate-mcrt-0.3.0 (c (n "mcrt") (v "0.3.0") (d (list (d (n "arctk") (r "^0.12.0") (f (quote ("terminal_size" "netcdf"))) (d #t) (k 0)) (d (n "arctk-attr") (r "0.2.*") (d #t) (k 0)) (d (n "arctk-proc") (r "0.2.*") (d #t) (k 0)) (d (n "ndarray") (r "0.13.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.13.*") (d #t) (k 0)) (d (n "physical_constants") (r "0.3.*") (d #t) (k 0)) (d (n "rand") (r "0.7.*") (d #t) (k 0)) (d (n "rayon") (r "1.5.*") (d #t) (k 0)) (d (n "serde") (r "1.0.*") (f (quote ("derive"))) (d #t) (k 0)))) (h "0l9mrwdcbv5kb6lfc73hd991iq4x6pn9y5k9j51jlwl883h15vy7")))

