(define-module (crates-io mc -s mc-sgx-dcap-types) #:use-module (crates-io))

(define-public crate-mc-sgx-dcap-types-0.2.0 (c (n "mc-sgx-dcap-types") (v "0.2.0") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.2.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.2.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.2.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1lxk647l4g42ngc5m4g8nf7a3fsrqwjhmpc231iplchvxq2c3479") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.2.1 (c (n "mc-sgx-dcap-types") (v "0.2.1") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.2.1") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.2.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.2.1") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1d7crdjgcgw2cazrnkm7nv6qyip9wj5bvs2ng2ffdphnjw6w4fzi") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.3.0 (c (n "mc-sgx-dcap-types") (v "0.3.0") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.3.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.3.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.3.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0jrqhlanzdiz1fhh6rc95vacgx7ydhxpnfwqibdf2cjnbjqi2izs") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.4.0 (c (n "mc-sgx-dcap-types") (v "0.4.0") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.4.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.4.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.4.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.4.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (k 0)) (d (n "p256") (r "^0.11.1") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.150") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0kwm00r96g2i4ssxfhy1gcjhcnssm85zxfy73ifw246lv79xnrqg") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.4.1 (c (n "mc-sgx-dcap-types") (v "0.4.1") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.4.1") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.4.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.4.1") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.4.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.12.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "19c1cfqprhwc1pk877lsz7sbfxj0pdnbpba5kqbh3gsppx0jblrr") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.4.2 (c (n "mc-sgx-dcap-types") (v "0.4.2") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.4.2") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.4.2") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.4.2") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.4.2") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.12.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1y33sh53rv2rganwn9sxvwpkqv4x542spdh7wgc2617bmia06x8s") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.5.0 (c (n "mc-sgx-dcap-types") (v "0.5.0") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.5.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.5.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.5.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.5.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0z9p46mb7lp41ff3pnrinc1ankbvzk323ir8vz4is9j11sh906gi") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.6.0 (c (n "mc-sgx-dcap-types") (v "0.6.0") (d (list (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.6.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.6.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.6.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1vik4p2z1g09kz7jmc1my80vpy2wsl14ws0wh5yp51pdakzpnkag") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.6.1 (c (n "mc-sgx-dcap-types") (v "0.6.1") (d (list (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.6.1") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.6.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.6.1") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.6.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.0") (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.0") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "193xwk4f3wbk2x56rj9xzmfqf1dblgrfacy7399hh490f4bpv935") (f (quote (("default") ("alloc")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex") ("serde" "dep:serde")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.0 (c (n "mc-sgx-dcap-types") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1g9nzfair97v297jmihach0xl6m9zkx5gyb09zkh5gw1cfl5bw8a") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex") ("alloc" "dep:x509-cert")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.1 (c (n "mc-sgx-dcap-types") (v "0.7.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.1") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.1") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0ihjdgcwgd9jl3jv3fx7cjcgxjh38p0gfvrzrzx8iz2jdg6sj8rj") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex") ("alloc" "dep:x509-cert")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.2 (c (n "mc-sgx-dcap-types") (v "0.7.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.2") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.2") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.2") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.2") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1p46jgf8k8h5wqp8pzybsl8g0715m0i9l9plq5y7z50zg86knqph") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex") ("alloc" "dep:x509-cert")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.3 (c (n "mc-sgx-dcap-types") (v "0.7.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.3") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.3") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.3") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.3") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "102dck0109f1z8iqma4xh2iwhh9n4q7vzni5svfyks6sxhikdcv9") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex") ("alloc" "dep:x509-cert")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.4 (c (n "mc-sgx-dcap-types") (v "0.7.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.4") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.4") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.4") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.4") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1lx1c32gccicd2dfx81wl1kfzxyhw3xd2sai7mvfqw9m15l5j7g8") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.7.5 (c (n "mc-sgx-dcap-types") (v "0.7.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.7.5") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.7.5") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.7.5") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.7.5") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0zndmg8b16jv6wkr77hp55cy55jzwfn3zcsipar5a948kn22yhyc") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.8.0 (c (n "mc-sgx-dcap-types") (v "0.8.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.8.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.8.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.8.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.8.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "1rx3ayrra30lpygy1dy7kvs59gwbp9n80jxnx1a4drzn1jf6lpl2") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.9.0 (c (n "mc-sgx-dcap-types") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.9.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.9.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.9.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.9.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0ns7w1gpsc1nzg3zwn69si2rj1dy1gdiiiknbmn1spybdp0ja9mf") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.10.0 (c (n "mc-sgx-dcap-types") (v "0.10.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.10.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.10.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.10.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.10.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "0y6pk9wlz4kzrv6gjgrd9mi29s1fhg0n7by5asa3ddxvjq3ipraw") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.10.1 (c (n "mc-sgx-dcap-types") (v "0.10.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "const-oid") (r "^0.9.2") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.10.1") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.10.1") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.10.1") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.10.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.2") (k 0)) (d (n "p256") (r "^0.13.0") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16.0") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2.3") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^1.0.1") (d #t) (k 2)))) (h "17ygmwm9xxzxz0sb8zgsrv8idiysv4j3z3m6vcj37h1yz0nap4l5") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

(define-public crate-mc-sgx-dcap-types-0.11.0 (c (n "mc-sgx-dcap-types") (v "0.11.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "const-oid") (r "^0.9") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "mc-sgx-core-sys-types") (r "=0.11.0") (d #t) (k 2)) (d (n "mc-sgx-core-types") (r "=0.11.0") (d #t) (k 0)) (d (n "mc-sgx-dcap-sys-types") (r "=0.11.0") (d #t) (k 0)) (d (n "mc-sgx-util") (r "=0.11.0") (d #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "p256") (r "^0.13") (f (quote ("ecdsa-core" "ecdsa"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "static_assertions") (r "^1") (d #t) (k 0)) (d (n "subtle") (r "^2") (k 0)) (d (n "textwrap") (r "^0.16") (d #t) (k 2)) (d (n "x509-cert") (r "^0.2") (f (quote ("pem"))) (o #t) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("pem"))) (k 2)) (d (n "yare") (r "^2") (d #t) (k 2)))) (h "1abi0qp09551gm3dap2gsz45bs7bcmwzlcbjqayn359z7bciiij2") (f (quote (("default")))) (s 2) (e (quote (("tcb" "alloc" "dep:x509-cert" "dep:const-oid" "dep:hex" "serde/alloc") ("alloc" "dep:x509-cert" "serde/alloc")))) (r "1.62.1")))

