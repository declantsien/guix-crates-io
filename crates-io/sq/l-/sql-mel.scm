(define-module (crates-io sq l- sql-mel) #:use-module (crates-io))

(define-public crate-sql-mel-0.8.0-rc1 (c (n "sql-mel") (v "0.8.0-rc1") (d (list (d (n "async-std") (r "~1.12") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc1") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc1") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-native-tls"))) (d #t) (t "cfg(any(target_env = \"msvc\", target_vendor = \"apple\"))") (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-rustls"))) (d #t) (t "cfg(not(any(target_env = \"msvc\", target_vendor = \"apple\")))") (k 0)) (d (n "std-mel") (r "=0.8.0-rc1") (d #t) (k 0)))) (h "03gkd6wqhaa5khvjrkay3hgg0icasrxxmfq5qmsv7aj910r4fpwr") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-sql-mel-0.8.0-rc2 (c (n "sql-mel") (v "0.8.0-rc2") (d (list (d (n "async-std") (r "~1.12") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc2") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc2") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-native-tls"))) (d #t) (t "cfg(any(target_env = \"msvc\", target_vendor = \"apple\"))") (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-rustls"))) (d #t) (t "cfg(not(any(target_env = \"msvc\", target_vendor = \"apple\")))") (k 0)) (d (n "std-mel") (r "=0.8.0-rc2") (d #t) (k 0)))) (h "1m8g5bhxi4ima3q3s9z7rrx55qan133b73x37pcwpljdisl7rz18") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-sql-mel-0.8.0-rc3 (c (n "sql-mel") (v "0.8.0-rc3") (d (list (d (n "async-std") (r "~1.12") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "melodium-core") (r "=0.8.0-rc3") (d #t) (k 0)) (d (n "melodium-macro") (r "=0.8.0-rc3") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-native-tls"))) (d #t) (t "cfg(any(target_env = \"msvc\", target_vendor = \"apple\"))") (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-rustls"))) (d #t) (t "cfg(not(any(target_env = \"msvc\", target_vendor = \"apple\")))") (k 0)) (d (n "std-mel") (r "=0.8.0-rc3") (d #t) (k 0)))) (h "1a3qm1knvak39bicdq3byappzd880sv8njkh960ap737ychm7ksf") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

(define-public crate-sql-mel-0.8.0 (c (n "sql-mel") (v "0.8.0") (d (list (d (n "async-std") (r "~1.12") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "melodium-core") (r "^0.8.0") (d #t) (k 0)) (d (n "melodium-macro") (r "^0.8.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-native-tls"))) (d #t) (t "cfg(any(target_env = \"msvc\", target_vendor = \"apple\"))") (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-async-std" "postgres" "mysql" "tls-rustls"))) (d #t) (t "cfg(not(any(target_env = \"msvc\", target_vendor = \"apple\")))") (k 0)) (d (n "std-mel") (r "^0.8.0") (d #t) (k 0)))) (h "0jh05b5m64x7km0qlrc1vxm073fkcmvmd7ra7ajzh9bk5q07y6yq") (f (quote (("real") ("plugin") ("mock")))) (r "1.60")))

