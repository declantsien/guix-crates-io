(define-module (crates-io sq lx sqlx-macros-core) #:use-module (crates-io))

(define-public crate-sqlx-macros-core-0.7.0-alpha.1 (c (n "sqlx-macros-core") (v "0.7.0-alpha.1") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.0-alpha.1") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.0-alpha.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.0-alpha.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.0-alpha.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "0ljj7pzg468a6i54y4clfnmak5q4hqc2zw0plmhr3pij5b312w3k") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.0-alpha.2 (c (n "sqlx-macros-core") (v "0.7.0-alpha.2") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.0-alpha.2") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.0-alpha.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.0-alpha.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.0-alpha.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "1swdbnj94cm5g1iflh2fnav6f43jgxzxcc6cb68mgkxx4hm6ii63") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.0-alpha.3 (c (n "sqlx-macros-core") (v "0.7.0-alpha.3") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.0-alpha.3") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.0-alpha.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.0-alpha.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.0-alpha.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "1nniwf72x5d7jzx0gaywpf3r130jlzznmfq1y3pjmbf7mzc1vrrw") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.0 (c (n "sqlx-macros-core") (v "0.7.0") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.0") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.0") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.0") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.0") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "0n4a94ssx68k7zv0hw27zm8alv6i82h63jxkwla90sdr79i49mip") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("default") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.1 (c (n "sqlx-macros-core") (v "0.7.1") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.1") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.1") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "1z3xkjrarqkvhm18khf16ip1b628lykyh93zv0qj5ikqs8v86jla") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("default") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.2 (c (n "sqlx-macros-core") (v "0.7.2") (d (list (d (n "async-std") (r "^1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.2") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.2") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "1z4n5mw79k771qr88al65rqa9c0764sd3zazmavfs3g00khy2kha") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("default") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.3 (c (n "sqlx-macros-core") (v "0.7.3") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "atomic-write-file") (r "^0.1") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.3") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.3") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "0h88wahkxa6nam536lhwr1y0yxlr6la8b1x0hs0n88v790clbgfh") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("default") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

(define-public crate-sqlx-macros-core-0.7.4 (c (n "sqlx-macros-core") (v "0.7.4") (d (list (d (n "async-std") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.0") (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "heck") (r "^0.4") (f (quote ("unicode"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (k 0)) (d (n "quote") (r "^1.0.14") (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "sha2") (r "^0.10.0") (d #t) (k 0)) (d (n "sqlx-core") (r "=0.7.4") (f (quote ("offline"))) (d #t) (k 0)) (d (n "sqlx-mysql") (r "=0.7.4") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-postgres") (r "=0.7.4") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "sqlx-sqlite") (r "=0.7.4") (f (quote ("offline" "migrate"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^1.0.84") (f (quote ("full" "derive" "parsing" "printing" "clone-impls"))) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "net" "sync" "fs" "io-util" "rt"))) (o #t) (k 0)) (d (n "url") (r "^2.2.2") (k 0)))) (h "1j7k0fw7n6pgabqnj6cbp8s3rmd3yvqr4chjj878cvd1m99yycsq") (f (quote (("sqlite" "sqlx-sqlite") ("postgres" "sqlx-postgres") ("mysql" "sqlx-mysql") ("migrate" "sqlx-core/migrate") ("default") ("_tls-rustls" "sqlx-core/_tls-rustls") ("_tls-native-tls" "sqlx-core/_tls-native-tls") ("_rt-tokio" "tokio" "sqlx-core/_rt-tokio") ("_rt-async-std" "async-std" "sqlx-core/_rt-async-std")))) (s 2) (e (quote (("uuid" "sqlx-core/uuid" "sqlx-mysql?/uuid" "sqlx-postgres?/uuid" "sqlx-sqlite?/uuid") ("time" "sqlx-core/time" "sqlx-mysql?/time" "sqlx-postgres?/time" "sqlx-sqlite?/time") ("rust_decimal" "sqlx-core/rust_decimal" "sqlx-mysql?/rust_decimal" "sqlx-postgres?/rust_decimal") ("mac_address" "sqlx-core/mac_address" "sqlx-postgres?/mac_address") ("json" "sqlx-core/json" "sqlx-mysql?/json" "sqlx-sqlite?/json") ("ipnetwork" "sqlx-core/ipnetwork" "sqlx-postgres?/ipnetwork") ("chrono" "sqlx-core/chrono" "sqlx-mysql?/chrono" "sqlx-postgres?/chrono" "sqlx-sqlite?/chrono") ("bit-vec" "sqlx-core/bit-vec" "sqlx-postgres?/bit-vec") ("bigdecimal" "sqlx-core/bigdecimal" "sqlx-mysql?/bigdecimal" "sqlx-postgres?/bigdecimal"))))))

