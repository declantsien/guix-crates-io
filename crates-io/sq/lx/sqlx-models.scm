(define-module (crates-io sq lx sqlx-models) #:use-module (crates-io))

(define-public crate-sqlx-models-0.0.1 (c (n "sqlx-models") (v "0.0.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fehler") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.5") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("any" "runtime-tokio-native-tls"))) (d #t) (k 2)) (d (n "sqlx-models-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "sqlx-models-proc-macro") (r "^0.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0vpjg54z0ms2nns4xg8d68s37r096wsp6dn1zamyfla69ga7icjd") (f (quote (("migrations"))))))

(define-public crate-sqlx-models-0.0.2 (c (n "sqlx-models") (v "0.0.2") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fehler") (r "^1.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("any" "runtime-async-std-native-tls"))) (d #t) (k 2)) (d (n "sqlx-models-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "sqlx-models-proc-macro") (r "^0.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0rvvhknrkjqvz6r70wm4cy51rbzyjr9r8722an0npzy24yijwlfn")))

(define-public crate-sqlx-models-0.0.3 (c (n "sqlx-models") (v "0.0.3") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fehler") (r "^1.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("json"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("any" "runtime-async-std-native-tls"))) (d #t) (k 2)) (d (n "sqlx-models-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "sqlx-models-proc-macro") (r "^0.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "085qrcwjsg6rkma60pm20y6jjmqnxc71w5scw0ahc8bl4wj3wwys") (f (quote (("helpers" "sqlx-models-proc-macro/helpers"))))))

(define-public crate-sqlx-models-0.0.4 (c (n "sqlx-models") (v "0.0.4") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fehler") (r "^1.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("json"))) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("any" "runtime-async-std-native-tls"))) (d #t) (k 2)) (d (n "sqlx-models-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "sqlx-models-proc-macro") (r "^0.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0ff9zzh32cl5xv4jalzf37wamg5isrc11rm33wp3xq65m4mim7yq") (f (quote (("helpers" "sqlx-models-proc-macro/helpers"))))))

(define-public crate-sqlx-models-0.0.5 (c (n "sqlx-models") (v "0.0.5") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "fehler") (r "^1.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (o #t) (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.7") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.7") (f (quote ("any" "runtime-async-std-native-tls"))) (d #t) (k 2)) (d (n "sqlx-models-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "sqlx-models-proc-macro") (r "^0.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "topological-sort") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "120d6n54s9nbvyxq43jiqfni9wmfzhjq10hpnlbimblzzm1g6mdx") (f (quote (("json" "serde" "sqlx/json") ("helpers" "sqlx-models-proc-macro/helpers") ("binary" "serde" "bincode"))))))

