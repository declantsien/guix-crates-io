(define-module (crates-io sq li sqlite-compressions) #:use-module (crates-io))

(define-public crate-sqlite-compressions-0.1.0 (c (n "sqlite-compressions") (v "0.1.0") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("functions"))) (d #t) (k 0)))) (h "1d2xqvq00n81xn11r9nlq66brwrwy5dkyjwwji74598icw7hw3dy") (f (quote (("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.60.0")))

(define-public crate-sqlite-compressions-0.1.1 (c (n "sqlite-compressions") (v "0.1.1") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("functions"))) (d #t) (k 0)))) (h "1v0lfq45zaw97p8pzgxfw47d88rdshlns9z706bxcmxwnng1w8ak") (f (quote (("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.65.0")))

(define-public crate-sqlite-compressions-0.1.2 (c (n "sqlite-compressions") (v "0.1.2") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "1phnimms03bwcax53v5xns080581fv3005j244m2xxsds8j9yzj1") (f (quote (("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.65.0")))

(define-public crate-sqlite-compressions-0.2.3 (c (n "sqlite-compressions") (v "0.2.3") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "01j6v4l0azw387n9msh5a0albprvk5fbmxagisc9ad6p72zv3hgp") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "gzip" "brotli") ("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.65.0")))

(define-public crate-sqlite-compressions-0.2.4 (c (n "sqlite-compressions") (v "0.2.4") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "1xnbl04h34k4y0pg6wa1nyvn85wrhbyakhbfvnhlqkxdg8hzr4zc") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "gzip" "brotli") ("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.70.0")))

(define-public crate-sqlite-compressions-0.2.5 (c (n "sqlite-compressions") (v "0.2.5") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31") (f (quote ("functions"))) (d #t) (k 0)))) (h "0hq44py0vhlvhgw5injpw4m9mcwzddka0k304bfd14ahbyk9ls9c") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "gzip" "brotli") ("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.6 (c (n "sqlite-compressions") (v "0.2.6") (d (list (d (n "brotli") (r "^3") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "0vslw9264imd5wx28pf9ivc664kwf0imhmbsyzkcbrnk77c516q4") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "gzip" "brotli") ("default" "trace" "gzip" "brotli")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.7 (c (n "sqlite-compressions") (v "0.2.7") (d (list (d (n "brotli") (r "^4.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "0knnay49fj85ksxqi8v67bs4vly91991z9gv42yh85jq2c00kmyf") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "gzip" "brotli" "bzip2") ("default" "trace" "brotli" "bzip2" "gzip")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("bzip2" "dep:bzip2") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.8 (c (n "sqlite-compressions") (v "0.2.8") (d (list (d (n "brotli") (r "^4.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "qbsdiff") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "190wkks5n83bb67dv00hyy03h67l9hwv7f2dlin2dc8ldradzxd0") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "brotli" "bsdiff4" "bzip2" "gzip") ("default" "trace" "brotli" "bsdiff4" "bzip2" "gzip")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("bzip2" "dep:bzip2") ("bsdiff4" "dep:qbsdiff") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.9 (c (n "sqlite-compressions") (v "0.2.9") (d (list (d (n "brotli") (r "^4.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "bsdiff") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "qbsdiff") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "05r6h1lbh3g03m6f5xkq9x9i511ygpw0czxxyz887r7m3icgsqls") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip") ("default" "trace" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("bzip2" "dep:bzip2") ("bsdiffraw" "dep:bsdiff") ("bsdiff4" "dep:qbsdiff") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.10 (c (n "sqlite-compressions") (v "0.2.10") (d (list (d (n "brotli") (r "^4.0.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "bsdiff") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "qbsdiff") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.19") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "0yz4z9x9sxd573aj9imrgvh6qspic5m6sv16rv93r87q2pqg80m4") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip") ("default" "trace" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("bzip2" "dep:bzip2") ("bsdiffraw" "dep:bsdiff") ("bsdiff4" "dep:qbsdiff") ("brotli" "dep:brotli")))) (r "1.74.1")))

(define-public crate-sqlite-compressions-0.2.11 (c (n "sqlite-compressions") (v "0.2.11") (d (list (d (n "brotli") (r ">=5.0, <7.0") (o #t) (d #t) (k 0)) (d (n "bsdiff") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "bzip2") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "insta") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "qbsdiff") (r "^1.4.2") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.21") (d #t) (k 2)) (d (n "rusqlite") (r ">=0.30") (f (quote ("functions"))) (d #t) (k 0)))) (h "14gsdgvb3prcil1k33qk8na1rfy45xw3sj0kasl8mz17nfa0b5a6") (f (quote (("loadable_extension" "rusqlite/loadable_extension" "rusqlite/trace") ("default_loadable_extension" "loadable_extension" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip") ("default" "trace" "brotli" "bsdiff4" "bsdiffraw" "bzip2" "gzip")))) (s 2) (e (quote (("trace" "dep:log") ("gzip" "dep:flate2") ("bzip2" "dep:bzip2") ("bsdiffraw" "dep:bsdiff") ("bsdiff4" "dep:qbsdiff") ("brotli" "dep:brotli")))) (r "1.74.1")))

