(define-module (crates-io sq li sqlite3_ext) #:use-module (crates-io))

(define-public crate-sqlite3_ext-0.1.0 (c (n "sqlite3_ext") (v "0.1.0") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libsqlite3-sys") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "rusqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlite3_ext_macro") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.2.9") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("parsing" "full"))) (d #t) (k 1)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)) (d (n "which") (r "^4.2.5") (d #t) (k 1)))) (h "18zf0nr2q9jsmn0ii6is5rsjmqbdv0qyc3la67hi7lhw4yx3fjcg") (s 2) (e (quote (("with_rusqlite" "dep:rusqlite" "static") ("static_modern" "static" "libsqlite3-sys?/bundled_bindings") ("static" "dep:libsqlite3-sys") ("bundled" "static_modern" "libsqlite3-sys?/bundled"))))))

(define-public crate-sqlite3_ext-0.1.1 (c (n "sqlite3_ext") (v "0.1.1") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libsqlite3-sys") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "rusqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlite3_ext_macro") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.2.9") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("parsing" "full"))) (d #t) (k 1)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)) (d (n "which") (r "^4.2.5") (d #t) (k 1)))) (h "1fp3gybx0mvb8xncc7mjqw0spd6j3z35kidpz58sxpxyyqh6xqxi") (s 2) (e (quote (("with_rusqlite" "dep:rusqlite" "static") ("static_modern" "static" "libsqlite3-sys?/bundled_bindings") ("static" "dep:libsqlite3-sys") ("bundled" "static_modern" "libsqlite3-sys?/bundled"))))))

(define-public crate-sqlite3_ext-0.1.2 (c (n "sqlite3_ext") (v "0.1.2") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libsqlite3-sys") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "rusqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlite3_ext_macro") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.2.9") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("parsing" "full"))) (d #t) (k 1)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)) (d (n "which") (r "^4.2.5") (d #t) (k 1)))) (h "1cnwl1v259145pl33bi7x5akg8pp4f4rlly5j2qfz149zzzz722j") (s 2) (e (quote (("with_rusqlite" "dep:rusqlite" "static") ("static_modern" "static" "libsqlite3-sys?/bundled_bindings") ("static" "dep:libsqlite3-sys") ("bundled" "static_modern" "libsqlite3-sys?/bundled"))))))

(define-public crate-sqlite3_ext-0.1.3 (c (n "sqlite3_ext") (v "0.1.3") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "libsqlite3-sys") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 1)) (d (n "quote") (r "^1.0") (d #t) (k 1)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "rusqlite") (r "^0.27.0") (o #t) (d #t) (k 0)) (d (n "sealed") (r "^0.4.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sqlite3_ext_macro") (r "^0.1.0") (d #t) (k 0)) (d (n "subprocess") (r "^0.2.9") (d #t) (k 2)) (d (n "syn") (r "^1.0") (f (quote ("parsing" "full"))) (d #t) (k 1)) (d (n "trybuild") (r "^1.0.63") (d #t) (k 2)) (d (n "which") (r "^4.2.5") (d #t) (k 1)))) (h "0w8b45xif2gvi7c9cdx6b4w3m1ylzykgclxcdfd99b75h9v50b68") (s 2) (e (quote (("with_rusqlite" "dep:rusqlite" "static") ("static_modern" "static" "libsqlite3-sys?/bundled_bindings") ("static" "dep:libsqlite3-sys") ("bundled" "static_modern" "libsqlite3-sys?/bundled"))))))

