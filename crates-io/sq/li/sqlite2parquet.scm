(define-module (crates-io sq li sqlite2parquet) #:use-module (crates-io))

(define-public crate-sqlite2parquet-0.1.0 (c (n "sqlite2parquet") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^7.0.0") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0zb5l2hzywplkqkamzqv8ghbpfcm14blf8znrshafmkp0451bg5v")))

(define-public crate-sqlite2parquet-0.2.0 (c (n "sqlite2parquet") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^7.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0vv0n5f0j0g6299qmr80n902h7yl9x9p4fn2l81wig11jbs9cd7w")))

(define-public crate-sqlite2parquet-0.3.0 (c (n "sqlite2parquet") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^8.0.0") (f (quote ("zstd" "experimental"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "1k8myfp2dbprygg32fjm3gl4f095lv1bjfpyc3ni92kdjv00iv2h")))

(define-public crate-sqlite2parquet-0.4.0 (c (n "sqlite2parquet") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^9.0.2") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "18c0i101mzwk0ya0gp5azr6j7am1qn0ry0bcbfqw5sfkvsh6d1lp")))

(define-public crate-sqlite2parquet-0.5.0 (c (n "sqlite2parquet") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "crossterm") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^9.0.2") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1lkajcp0hrdmmqpisyw7a0khyl8g8yrxaxjnwa0rlbn7d2avlbqx") (f (quote (("default" "cli") ("cli" "crossterm" "structopt" "thousands"))))))

(define-public crate-sqlite2parquet-0.6.0 (c (n "sqlite2parquet") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "crossterm") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^13.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "0bzdjala2azsqqg0px99r121ib3350rb9ql8dasn8ki9w53a5z1g") (f (quote (("default" "cli") ("cli" "crossterm" "structopt" "thousands"))))))

(define-public crate-sqlite2parquet-0.7.0 (c (n "sqlite2parquet") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^13.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1fywhk4yw3aqk1142rd75fi9x5783fjx6408lggnmhs372cvsc57") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "thousands"))))))

(define-public crate-sqlite2parquet-0.8.0 (c (n "sqlite2parquet") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^14.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)))) (h "1ifrb1dciyr06bwzw4n19nliw3wlhyhh091jn3fzg7psg1xv4r4g") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "serde_yaml" "thousands"))))))

(define-public crate-sqlite2parquet-0.9.0 (c (n "sqlite2parquet") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^15.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.27.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (o #t) (d #t) (k 0)))) (h "0da86s5sfdhj9y5hbicdz89q7ma5crz2lxz8h53lbyvvpdb5p18l") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "serde_yaml" "thousands" "tracing-subscriber"))))))

(define-public crate-sqlite2parquet-0.10.0 (c (n "sqlite2parquet") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.59") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^19.0.0") (f (quote ("zstd"))) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (o #t) (d #t) (k 0)))) (h "1dhjm8jydmjlrd7aayr3cs3bh2pbd9f1avpshk9ybky7lycxy31r") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "serde_yaml" "thousands" "tracing-subscriber"))))))

(define-public crate-sqlite2parquet-0.10.1 (c (n "sqlite2parquet") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.59") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^27.0.0") (f (quote ("zstd"))) (k 0)) (d (n "rusqlite") (r "^0.28.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (o #t) (d #t) (k 0)))) (h "1c3zw8s5idcb0hndxnsd62al4zypxmkq0hc8cdm63bql34mkchd2") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "serde_yaml" "thousands" "tracing-subscriber"))))))

(define-public crate-sqlite2parquet-0.10.2 (c (n "sqlite2parquet") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (o #t) (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1.9") (d #t) (k 0)) (d (n "parquet") (r "^46") (f (quote ("zstd"))) (k 0)) (d (n "rusqlite") (r "^0.29") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (o #t) (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0wsp0ir3hc6r7klpfkkwbb3n77h9jq0n5la8pn845d5n0wix1p54") (f (quote (("default" "cli") ("cli" "clap" "crossterm" "serde_yaml" "thousands" "tracing-subscriber"))))))

