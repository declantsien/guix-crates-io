(define-module (crates-io sq ui squinn-proto) #:use-module (crates-io))

(define-public crate-squinn-proto-0.11.0 (c (n "squinn-proto") (v "0.11.0") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.2") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0861cvk2mx9qy57jx59g16k7kg7rwl4zq6a25pa7mva9x7951qqs") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.1 (c (n "squinn-proto") (v "0.11.1") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.2") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "1g2g8085scx16pkmndvv0wmg91hys2rzhvlls48iqrqk7qm5z10p") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.2 (c (n "squinn-proto") (v "0.11.2") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.2") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0nlwg2rix18n1hmpw41pidphfs2avn1x2xr5mjgh25d9afhnkcbf") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.3 (c (n "squinn-proto") (v "0.11.3") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "1d89bggd4zcc68fhqzrag0nf8d3s40hrd53ha2hfp2imf7nil46s") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.4 (c (n "squinn-proto") (v "0.11.4") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "187gpzz7l3s2y7265gn5mlsq4lqqr7sqysr1kcd5zpyxkm29gzrm") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.5 (c (n "squinn-proto") (v "0.11.5") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0zal9gyah9m83gsx58sz66xp4pzranilk56j79hg4n42j68yjar9") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.6 (c (n "squinn-proto") (v "0.11.6") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.6") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "1q7hfhab2a2y8i6v5bh55j1c3w6rkgywq18s275vlzsc26qj946v") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.7 (c (n "squinn-proto") (v "0.11.7") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.7") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "1r85bfrnlvm3w9qjc64k7liqafgm22rivwirfq03bfp54cn0hggr") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

(define-public crate-squinn-proto-0.11.8 (c (n "squinn-proto") (v "0.11.8") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rcgen") (r "^0.11.1") (d #t) (k 2)) (d (n "ring") (r "^0.16.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "rustls") (r "^0.21.0") (f (quote ("quic"))) (o #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "scionnet") (r "^0.0.7") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0bi4pfwjqkbwgs8x3v5b8h884siql0z2s35wgrdm8yihpslq5ggq") (f (quote (("tls-rustls" "rustls" "ring") ("native-certs" "rustls-native-certs") ("log" "tracing/log") ("default" "tls-rustls" "log")))) (r "1.65")))

