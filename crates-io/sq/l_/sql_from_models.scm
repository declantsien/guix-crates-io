(define-module (crates-io sq l_ sql_from_models) #:use-module (crates-io))

(define-public crate-sql_from_models-0.1.3 (c (n "sql_from_models") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sql_from_models-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "sql_from_models-proc-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-native-tls" "postgres"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1i6ncf5l16xvamyx9vjj65y50i5zlpk9k8dbb712rrs773s692lk") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite" "sqlx/json") ("sqlx-postgres" "sqlx" "sqlx/postgres" "sqlx/json") ("sqlx-mysql" "sqlx" "sqlx/mysql" "sqlx/json") ("json" "serde" "serde_json") ("default" "sqlformat"))))))

(define-public crate-sql_from_models-0.1.4 (c (n "sql_from_models") (v "0.1.4") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sql_from_models-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "sql_from_models-proc-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-native-tls" "postgres"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "06cfpj3nkg6zjyi2rzvzmpvndipvflqras2gs55s4mhsvj53v61l") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite" "sqlx/json") ("sqlx-postgres" "sqlx" "sqlx/postgres" "sqlx/json") ("sqlx-mysql" "sqlx" "sqlx/mysql" "sqlx/json") ("json" "serde" "serde_json") ("default" "sqlformat"))))))

(define-public crate-sql_from_models-0.1.5 (c (n "sql_from_models") (v "0.1.5") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sql_from_models-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "sql_from_models-proc-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-native-tls" "postgres"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0yma7dwklln8mnfb6dhw0yg8mxvccwv1q08gfi3gbfnsvvdvzj9i") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite" "sqlx/json") ("sqlx-postgres" "sqlx" "sqlx/postgres" "sqlx/json") ("sqlx-mysql" "sqlx" "sqlx/mysql" "sqlx/json") ("json" "serde" "serde_json") ("default" "sqlformat"))))))

(define-public crate-sql_from_models-0.1.6 (c (n "sql_from_models") (v "0.1.6") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (o #t) (d #t) (k 0)) (d (n "sql_from_models-parser") (r "^0.2.1") (d #t) (k 0)) (d (n "sql_from_models-proc-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "sqlformat") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-native-tls" "postgres"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0xgjaz62kwz2wg9526b403vmma9ac2cq72097x2ixgdfjha9m89a") (f (quote (("sqlx-sqlite" "sqlx" "sqlx/sqlite" "sqlx/json") ("sqlx-postgres" "sqlx" "sqlx/postgres" "sqlx/json") ("sqlx-mysql" "sqlx" "sqlx/mysql" "sqlx/json") ("json" "serde" "serde_json") ("default" "sqlformat"))))))

