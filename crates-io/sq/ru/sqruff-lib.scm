(define-module (crates-io sq ru sqruff-lib) #:use-module (crates-io))

(define-public crate-sqruff-lib-0.1.0 (c (n "sqruff-lib") (v "0.1.0") (d (list (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1abhrkmqkpnssd48mn5qv28xq6awd61aq0ql8g8k9rj108fj18ag")))

(define-public crate-sqruff-lib-0.1.1 (c (n "sqruff-lib") (v "0.1.1") (d (list (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1x3wqrc3ds4wb3ylvcyk7k478gwqvkblblhyw12fc2r8ljiwc998")))

(define-public crate-sqruff-lib-0.1.2 (c (n "sqruff-lib") (v "0.1.2") (d (list (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0hvydim1qisglfk16bzrcwydgilln5c2dykpqcx4ychp9v464930")))

(define-public crate-sqruff-lib-0.1.4 (c (n "sqruff-lib") (v "0.1.4") (d (list (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "03qvvlqls1n26w7k11zzf489j5rbhsjb56nn3vvnmx9n6rplxy5c")))

(define-public crate-sqruff-lib-0.2.2 (c (n "sqruff-lib") (v "0.2.2") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0ll2ib15yxxhc0rmklp3dqbl3hvkikwns4y41r2icy9wm09c3271")))

(define-public crate-sqruff-lib-0.4.1 (c (n "sqruff-lib") (v "0.4.1") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "11l81ghjz35npksbaz7qqsp7ygy91v08szy3i1f199snqd8yyh3z")))

(define-public crate-sqruff-lib-0.4.2 (c (n "sqruff-lib") (v "0.4.2") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1ajnpk2d71ix25z54ii3cj1hkwmk3y2b42gxbw8bk396min9bgni")))

(define-public crate-sqruff-lib-0.4.3 (c (n "sqruff-lib") (v "0.4.3") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0bmhf3bqy8y0wm8y38nps952yj7cihqyz6j001pwz3jxawn2l6zm")))

(define-public crate-sqruff-lib-0.4.4 (c (n "sqruff-lib") (v "0.4.4") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1pgy4qwygr6y8lzvqfcasm6mabl6qg8qcfddhn9igar8ki8gwhh4")))

(define-public crate-sqruff-lib-0.4.5 (c (n "sqruff-lib") (v "0.4.5") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0ywaqhgza07ykdm90gyk48pl7n3qsbaw2yp4h7n7zkrmb77ykbi9")))

(define-public crate-sqruff-lib-0.4.6 (c (n "sqruff-lib") (v "0.4.6") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "13d8z3mzqif2y5aqlbyqvp63yq23z2nnbz82kdrmg0krkp1mwf0a")))

(define-public crate-sqruff-lib-0.4.7 (c (n "sqruff-lib") (v "0.4.7") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0pbdnaab8lcgpsn578cllpijbhr5lph7ds3m5khdc42a5sp97d4r")))

(define-public crate-sqruff-lib-0.4.8 (c (n "sqruff-lib") (v "0.4.8") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "0f5r7pcv57zlbdlmz8p4dqnng8s45la9ndjqri1nrimys21da1yg")))

(define-public crate-sqruff-lib-0.4.9 (c (n "sqruff-lib") (v "0.4.9") (d (list (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 2)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "14v8anq38i5qdq0k8l2qi4mnazzsc3gafqvgh2s1f3ysw0685psc")))

(define-public crate-sqruff-lib-0.4.10 (c (n "sqruff-lib") (v "0.4.10") (d (list (d (n "ahash") (r "^0.8.11") (f (quote ("compile-time-rng"))) (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 0)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "js"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "071992frhfjw38r6z3l3hvlacmsybgkkgf8xacjmix7msahf09vb")))

(define-public crate-sqruff-lib-0.5.0 (c (n "sqruff-lib") (v "0.5.0") (d (list (d (n "ahash") (r "^0.8.11") (f (quote ("compile-time-rng"))) (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 0)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "js"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "17wvmb8dxqmn3d4rnbfp4rysv9gcigjww66llcpjqipbm2g08gv0")))

(define-public crate-sqruff-lib-0.5.1 (c (n "sqruff-lib") (v "0.5.1") (d (list (d (n "ahash") (r "^0.8.11") (f (quote ("compile-time-rng"))) (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 0)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "js"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "1lyhsmw13aj0q0csr6ayx0rk78yc4r5px8m01jga22nyi48kkvs4")))

(define-public crate-sqruff-lib-0.6.0 (c (n "sqruff-lib") (v "0.6.0") (d (list (d (n "ahash") (r "^0.8.11") (f (quote ("compile-time-rng"))) (d #t) (k 0)) (d (n "anstyle") (r "^1.0") (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "common-path") (r "^1.0.0") (d #t) (k 0)) (d (n "configparser") (r "^3.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2.0") (d #t) (k 0)) (d (n "dyn_ord") (r "^0.2.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "expect-test") (r "^1.5") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.1.0") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pprof") (r "^0.13") (f (quote ("flamegraph" "criterion"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 0)) (d (n "slyce") (r "^0.3.1") (d #t) (k 0)) (d (n "smol_str") (r "^0.2.1") (d #t) (k 0)) (d (n "stacker") (r "^0.1.15") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "js"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.4.0") (d #t) (k 0)))) (h "12g5nmqwcbmz7vahmrihpqh6nb3f3f4x8b54rhjfz5jb14ffips7")))

