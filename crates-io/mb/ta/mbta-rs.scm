(define-module (crates-io mb ta mbta-rs) #:use-module (crates-io))

(define-public crate-mbta-rs-0.0.1 (c (n "mbta-rs") (v "0.0.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "1xc45xf231gk52ba74rsdk2anwn9a9qf8lvxnx6z8p7d7xlsfg4d")))

(define-public crate-mbta-rs-0.1.0 (c (n "mbta-rs") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "17qx5d8v9ir0m719dvy7mdrj06kh5l9bgxp7618fi7x7v0gkjdvq")))

(define-public crate-mbta-rs-0.2.0 (c (n "mbta-rs") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "0gx6qgg7q7cldrccidgwl33szz4lyg8wylwzwrhi7irz70lrjs4l")))

(define-public crate-mbta-rs-0.2.1 (c (n "mbta-rs") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "polyline") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "raster") (r "^0.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "staticmap") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "1sycpxfp1bxr20sfjzndjkxx1amymxdv3qpr16kbk7fa46mqh7yz") (s 2) (e (quote (("map" "dep:staticmap" "dep:polyline" "dep:geo-types" "dep:tiny-skia" "dep:colors-transform"))))))

(define-public crate-mbta-rs-0.3.0 (c (n "mbta-rs") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "polyline") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "raster") (r "^0.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "staticmap") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "1zibfnrh823yrhi2xiacx2xn9lpjm6gyw0hgx5pgn18zlvp2c8pb") (s 2) (e (quote (("map" "dep:staticmap" "dep:polyline" "dep:geo-types" "dep:tiny-skia" "dep:colors-transform"))))))

(define-public crate-mbta-rs-0.4.0 (c (n "mbta-rs") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2.11") (o #t) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "polyline") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "raster") (r "^0.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "staticmap") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tiny-skia") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.4.0") (f (quote ("json"))) (d #t) (k 0)))) (h "0m603m1wcmz3gnxmi9aghm9zaar06wkaymkm4pq0kb9mhjyvqq40") (s 2) (e (quote (("map" "dep:staticmap" "dep:polyline" "dep:geo-types" "dep:tiny-skia" "dep:colors-transform"))))))

