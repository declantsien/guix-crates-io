(define-module (crates-io mb ro mbroker) #:use-module (crates-io))

(define-public crate-mbroker-0.1.0 (c (n "mbroker") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "segvec") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "sharded-slab") (r "^0.1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "waker-fn") (r "^1.1.0") (d #t) (k 2)))) (h "03rjh36pna8scq3r6glrb69d6qyww9vbipkvb931cg5p02df0bkz") (y #t)))

