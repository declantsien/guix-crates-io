(define-module (crates-io vm em vmemory) #:use-module (crates-io))

(define-public crate-vmemory-0.1.0 (c (n "vmemory") (v "0.1.0") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "object") (r "^0.27.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi" "winnt" "handleapi" "minwindef" "memoryapi" "fileapi" "winbase" "errhandlingapi" "tlhelp32"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0587nnichp412scxlxl448pf4dvmrcl3d9ji6jmc0ibyw3imsvga")))

(define-public crate-vmemory-0.1.1 (c (n "vmemory") (v "0.1.1") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "object") (r "^0.27.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi" "winnt" "handleapi" "minwindef" "memoryapi" "fileapi" "winbase" "errhandlingapi" "tlhelp32"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0i9x526bzzpj5yi6lwsifxxib92rim8bs29hsvwzpy439bv1aasj")))

(define-public crate-vmemory-0.1.2 (c (n "vmemory") (v "0.1.2") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ykf1lv9wjiv0g95z0hlpmv5psp6svkp62gaj84dn876s2qj6wkm")))

(define-public crate-vmemory-0.1.3 (c (n "vmemory") (v "0.1.3") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0w474rjr5v5xmx55j4v6rvrn02w51v3dq4chpcr70jb2rl6f6g0y")))

(define-public crate-vmemory-0.1.4 (c (n "vmemory") (v "0.1.4") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cgjzxpmqsca520w46q0mpf9mxl7qjzfrp3al76lrfv2pm40ksa1")))

(define-public crate-vmemory-0.1.5 (c (n "vmemory") (v "0.1.5") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0m4dwr47m78mmrcnm9nxv65nsbnx0pyv2qf7pzn7fib9ipjmb21v")))

(define-public crate-vmemory-0.1.6 (c (n "vmemory") (v "0.1.6") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1mnwwj89xqxfpr5ifspv7g1azg5570fz9kcq1j7sfp8gnxi5c448") (y #t)))

(define-public crate-vmemory-0.1.7 (c (n "vmemory") (v "0.1.7") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "118vbqvmc520v4yd69qbscdad9p3z572x8p1vqwqn8nmcbrjlfv8")))

(define-public crate-vmemory-0.1.8 (c (n "vmemory") (v "0.1.8") (d (list (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ntapi") (r "^0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winbase" "errhandlingapi" "memoryapi" "tlhelp32" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1h78h1s3gx3330axzxy47v6rdjihk4c18fzpf9cpvmn6mhzkq7py")))

