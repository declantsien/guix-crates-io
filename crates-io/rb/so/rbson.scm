(define-module (crates-io rb so rbson) #:use-module (crates-io))

(define-public crate-rbson-2.0.3 (c (n "rbson") (v "2.0.3") (d (list (d (n "ahash") (r "^0.7.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock" "std"))) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_with") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1g0xci6siny6zbafk5hhxbpy2ly44z5bgwfkav416qbr7ffcgxw8") (f (quote (("uuid-0_8") ("default") ("chrono-0_4"))))))

(define-public crate-rbson-2.0.4 (c (n "rbson") (v "2.0.4") (d (list (d (n "ahash") (r "^0.7.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock" "std"))) (k 2)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_with") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1718yvcvwkfjyb66rs3qys1q655ywhgm81y31rqam40jg24z46wb") (f (quote (("uuid-0_8") ("default") ("chrono-0_4"))))))

(define-public crate-rbson-2.0.5 (c (n "rbson") (v "2.0.5") (d (list (d (n "ahash") (r "^0.7.2") (d #t) (k 0)) (d (n "assert_matches") (r "^1.2") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.15") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock" "std"))) (k 2)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_with") (r "^1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1gy2ikf49bxhfzc23kgml389vvyj7yvc29k2nxdai0lng760xgv5") (f (quote (("uuid-0_8") ("default") ("chrono-0_4"))))))

