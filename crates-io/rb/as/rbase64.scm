(define-module (crates-io rb as rbase64) #:use-module (crates-io))

(define-public crate-rbase64-1.0.0 (c (n "rbase64") (v "1.0.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0m04qpfjcjwks1bqlv7ikxqwhs8ph45vmsik2b9vi2v5isr1s919")))

(define-public crate-rbase64-1.0.1 (c (n "rbase64") (v "1.0.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "129fwzfvjba99jp1dqqv9w9czk151basylc87ybgsxypvr5amfij")))

(define-public crate-rbase64-1.1.0 (c (n "rbase64") (v "1.1.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)))) (h "1xvzr5al1p05k5c40i2fggk1lqrx2cvq6fh39z0r6jd5vxsl9hdf")))

(define-public crate-rbase64-1.2.0 (c (n "rbase64") (v "1.2.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)))) (h "08n17av6j936i11znzg42bfq3qny6m6lyh7y4hp1kgnlbzakv7dj")))

(define-public crate-rbase64-1.2.1 (c (n "rbase64") (v "1.2.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)))) (h "0k11nf9451x4crf7r958n0kz7limpk3asa6j8h14bglxrpwqg6kq")))

(define-public crate-rbase64-1.3.0 (c (n "rbase64") (v "1.3.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)))) (h "1bzr22rpw5w7sxniv0wwbq1f4b4qgrxbz5kpd6ds85lz56byvf4s") (f (quote (("default" "cli") ("cli" "clap"))))))

(define-public crate-rbase64-1.3.1 (c (n "rbase64") (v "1.3.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)))) (h "018s27sdig39asjyw73cw1gcxw1f49v45ank26vb4bh5h5jfkmi1") (f (quote (("default" "cli") ("cli" "clap"))))))

(define-public crate-rbase64-1.4.0 (c (n "rbase64") (v "1.4.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "1ypw1rqbjs2lgnjrfrh3g5as54mw49q0q1f6f23jjq3wmxsj20x6") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-1.4.1 (c (n "rbase64") (v "1.4.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "19dgllhvczh9cbmy511kisq045l76300d9apvjm2acri4d5p91pk") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-1.4.2 (c (n "rbase64") (v "1.4.2") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "1vpjsllrysni428x2jcyi7pzrflidhfv045z4pxmk82d8p6yfl4g") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-1.4.3 (c (n "rbase64") (v "1.4.3") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "0axx86ixnw0zl0z0vl5x671ii9k48aa9lmyd0ki1hag5372pi5w1") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-1.5.0 (c (n "rbase64") (v "1.5.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "1kffmjwrk5yxdcq1pvb1n9hyglg99csn9z8l75lxq0bv83hphazj") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-2.0.0 (c (n "rbase64") (v "2.0.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "0i345kd3p8k58xp88xfx0vy9ixmbm6gapslhq3b9jxccs267llhi") (f (quote (("parallel" "rayon") ("default" "cli" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-2.0.1 (c (n "rbase64") (v "2.0.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "04da4lrnxsfrvdfcm231p1p1a2nzvp3avjvwznfk2f1jxlsnlll9") (f (quote (("parallel" "rayon") ("default" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-2.0.2 (c (n "rbase64") (v "2.0.2") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "0gl25my1k3d08xwbqxcap5qmjwkzrs931an7ad6mnxfpjz10srba") (f (quote (("parallel" "rayon") ("default" "parallel") ("cli" "clap"))))))

(define-public crate-rbase64-2.0.3 (c (n "rbase64") (v "2.0.3") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)))) (h "04wb2fprnv5vdj7y00grc9j0avpa6j53rnc6kihvgjx7abfky4sv") (f (quote (("parallel" "rayon") ("default" "parallel") ("cli" "clap"))))))

