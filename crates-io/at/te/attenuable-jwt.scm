(define-module (crates-io at te attenuable-jwt) #:use-module (crates-io))

(define-public crate-attenuable-jwt-0.1.0 (c (n "attenuable-jwt") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1.1") (d #t) (k 2)) (d (n "mockall") (r "^0.11.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 2)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.6") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "03kfslbhzfrr2601lm1xg27zwxzcchkma0wxm51ia64bka1mz9wk") (f (quote (("integration-test" "ed25519") ("ed25519" "ring" "zeroize"))))))

(define-public crate-attenuable-jwt-0.2.0 (c (n "attenuable-jwt") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.2") (f (quote ("pkcs8" "alloc"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "097q368m3lnww31cifr3c9s0g0h4sifnlh8jwa2kyn5577q1y506") (f (quote (("rng" "rand") ("integration-test" "ed25519" "rng") ("ed25519" "ed25519-dalek"))))))

(define-public crate-attenuable-jwt-0.3.0 (c (n "attenuable-jwt") (v "0.3.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.2") (f (quote ("pkcs8" "alloc"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "10yv4zc2s5q22anwax30574qbd75zlkz2hgcs73cap6ldqhvb3kx") (f (quote (("rng" "rand") ("ed25519" "ed25519-dalek") ("default" "ed25519" "rng"))))))

(define-public crate-attenuable-jwt-0.3.1 (c (n "attenuable-jwt") (v "0.3.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.2") (f (quote ("pkcs8" "alloc"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "02l65wq57bsyrf9dnpc9galq25kc3cl22wypybdai19n5pv46g63") (f (quote (("rng" "rand") ("ed25519" "ed25519-dalek") ("default" "ed25519" "rng"))))))

(define-public crate-attenuable-jwt-0.3.2 (c (n "attenuable-jwt") (v "0.3.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "ed25519") (r "^1.5.2") (f (quote ("pkcs8" "alloc"))) (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (f (quote ("rand"))) (d #t) (k 2)) (d (n "erased-serde") (r "^0.3.21") (d #t) (k 0)) (d (n "mockall") (r "^0.11.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0ayhazxaiczcvr915vz0fd47n4qnk7mnjqq09h2lr8pd49ysc9gy") (f (quote (("rng" "rand") ("ed25519" "ed25519-dalek") ("default" "ed25519" "rng"))))))

