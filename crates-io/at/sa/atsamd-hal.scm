(define-module (crates-io at sa atsamd-hal) #:use-module (crates-io))

(define-public crate-atsamd-hal-0.4.0 (c (n "atsamd-hal") (v "0.4.0") (d (list (d (n "atsamd21e18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.5") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "1sfy974gakpahrrjz85chx7yv34p4q398n04mkg01slpyqqhy8yr") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.4.1 (c (n "atsamd-hal") (v "0.4.1") (d (list (d (n "atsamd21e18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.5") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "07382rrahyfmhc7g7m1mbmabz2c0shnnvmvyx0byii26m6hj9wp0") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.5.0 (c (n "atsamd-hal") (v "0.5.0") (d (list (d (n "atsamd21e18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.4") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.5") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "1mmk97yjmcivhgm28j62cqirdk2jl5aqlf8bdi9raca4ilxwxzws") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.6.0 (c (n "atsamd-hal") (v "0.6.0") (d (list (d (n "atsamd21e18a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.5") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0hqx29gc05dy85zg882mi622hq82xpm9cgwdd2h0jfkbn2df4b8k") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.7.0 (c (n "atsamd-hal") (v "0.7.0") (d (list (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "07cnzyvpnzy6cryyfw0djs8dfi5zlisxkgma99czkn0ma187zcai") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.7.1 (c (n "atsamd-hal") (v "0.7.1") (d (list (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "1wnz6787wd91fy4awhybv748l941c1rggrnqd43cb0kmn8wcz2bh") (f (quote (("use_rtt" "jlink_rtt") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.7.2 (c (n "atsamd-hal") (v "0.7.2") (d (list (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0i6jks1n2agnn89rhslvnd4d0xpwbjakmrvlpy0divsbdnvdx2rp") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.7.3 (c (n "atsamd-hal") (v "0.7.3") (d (list (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0rk2anxmz4wdd9h2nqs3pc2kh060gxizg8nlvf3lzvi8sxajd7i8") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.7.4 (c (n "atsamd-hal") (v "0.7.4") (d (list (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.3") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.2") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-abort") (r "~0.3") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.1") (d #t) (k 2)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0mx9j4bx8zbis020pw05qcgib0whpbrsh56b96z82cj0p9zsy4cq") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt") ("samd51j20a" "atsamd51j20a") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt") ("samd51j19a" "atsamd51j19a") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt") ("samd51g19a" "atsamd51g19a") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt") ("samd21j18a" "atsamd21j18a") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt") ("samd21g18a" "atsamd21g18a") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt") ("samd21e18a" "atsamd21e18a"))))))

(define-public crate-atsamd-hal-0.8.0 (c (n "atsamd-hal") (v "0.8.0") (d (list (d (n "atsamd11c14a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsame54p20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0q9bi87yxby41ai593bjqzdygmp8m5pwdy823m23bd4sh8xv999k") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p20a-rt" "atsame54p20a" "atsame54p20a/rt" "same54") ("same54p20a" "atsame54p20a" "same54") ("same54") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt" "samd51") ("samd51j20a" "atsamd51j20a" "samd51") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt" "samd51") ("samd51j19a" "atsamd51j19a" "samd51") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt" "samd51") ("samd51g19a" "atsamd51g19a" "samd51") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt" "samd21") ("samd21j18a" "atsamd21j18a" "samd21") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt" "samd21") ("samd21g18a" "atsamd21g18a" "samd21") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt" "samd21") ("samd21e18a" "atsamd21e18a" "samd21") ("samd21") ("samd11c14a-rt" "atsamd11c14a" "atsamd11c14a/rt" "samd11") ("samd11c14a" "atsamd11c14a" "samd11") ("samd11"))))))

(define-public crate-atsamd-hal-0.8.2 (c (n "atsamd-hal") (v "0.8.2") (d (list (d (n "atsamd11c14a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21e18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "atsame54p20a") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "1s7bgdg4nz75rsqhx92vl113q2ggym59nifqqi27hpjqni2f8m6v") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p20a-rt" "atsame54p20a" "atsame54p20a/rt" "same54") ("same54p20a" "atsame54p20a" "same54") ("same54") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt" "samd51") ("samd51j20a" "atsamd51j20a" "samd51") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt" "samd51") ("samd51j19a" "atsamd51j19a" "samd51") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt" "samd51") ("samd51g19a" "atsamd51g19a" "samd51") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt" "samd21") ("samd21j18a" "atsamd21j18a" "samd21") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt" "samd21") ("samd21g18a" "atsamd21g18a" "samd21") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt" "samd21") ("samd21e18a" "atsamd21e18a" "samd21") ("samd21") ("samd11c14a-rt" "atsamd11c14a" "atsamd11c14a/rt" "samd11") ("samd11c14a" "atsamd11c14a" "samd11") ("samd11"))))))

(define-public crate-atsamd-hal-0.9.0 (c (n "atsamd-hal") (v "0.9.0") (d (list (d (n "atsamd11c14a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21e18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsame54p20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "03x6apka5asycicwhdwzy8l7wmq70ghj64x9p1wgh04p8hxhjid8") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p20a-rt" "atsame54p20a" "atsame54p20a/rt" "same54") ("same54p20a" "atsame54p20a" "same54") ("same54") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt" "samd51") ("samd51j20a" "atsamd51j20a" "samd51") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt" "samd51") ("samd51j19a" "atsamd51j19a" "samd51") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt" "samd51") ("samd51g19a" "atsamd51g19a" "samd51") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt" "samd21") ("samd21j18a" "atsamd21j18a" "samd21") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt" "samd21") ("samd21g18a" "atsamd21g18a" "samd21") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt" "samd21") ("samd21e18a" "atsamd21e18a" "samd21") ("samd21") ("samd11c14a-rt" "atsamd11c14a" "atsamd11c14a/rt" "samd11") ("samd11c14a" "atsamd11c14a" "samd11") ("samd11"))))))

(define-public crate-atsamd-hal-0.9.1 (c (n "atsamd-hal") (v "0.9.1") (d (list (d (n "atsamd11c14a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21e18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21g18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd21j18a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51g19a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51j19a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51j20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51n20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51p19a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsamd51p20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "atsame54p20a") (r "~0.7") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "~0.13") (d #t) (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "paste") (r "~0.1") (d #t) (k 0)) (d (n "rand_core") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "~0.1") (d #t) (k 0)) (d (n "void") (r "~1.0") (k 0)))) (h "0jhj66zi33hk6nvljdv9vqy9kwjg9qrad3ddfr3jpz70axnr02lh") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p20a-rt" "atsame54p20a" "atsame54p20a/rt" "same54") ("same54p20a" "atsame54p20a" "same54") ("same54") ("samd51p20a-rt" "atsamd51p20a" "atsamd51p20a/rt" "samd51") ("samd51p20a" "atsamd51p20a" "samd51") ("samd51p19a-rt" "atsamd51p19a" "atsamd51p19a/rt" "samd51") ("samd51p19a" "atsamd51p19a" "samd51") ("samd51n20a-rt" "atsamd51n20a" "atsamd51n20a/rt" "samd51") ("samd51n20a" "atsamd51n20a" "samd51") ("samd51j20a-rt" "atsamd51j20a" "atsamd51j20a/rt" "samd51") ("samd51j20a" "atsamd51j20a" "samd51") ("samd51j19a-rt" "atsamd51j19a" "atsamd51j19a/rt" "samd51") ("samd51j19a" "atsamd51j19a" "samd51") ("samd51g19a-rt" "atsamd51g19a" "atsamd51g19a/rt" "samd51") ("samd51g19a" "atsamd51g19a" "samd51") ("samd51") ("samd21j18a-rt" "atsamd21j18a" "atsamd21j18a/rt" "samd21") ("samd21j18a" "atsamd21j18a" "samd21") ("samd21g18a-rt" "atsamd21g18a" "atsamd21g18a/rt" "samd21") ("samd21g18a" "atsamd21g18a" "samd21") ("samd21e18a-rt" "atsamd21e18a" "atsamd21e18a/rt" "samd21") ("samd21e18a" "atsamd21e18a" "samd21") ("samd21") ("samd11c14a-rt" "atsamd11c14a" "atsamd11c14a/rt" "samd11") ("samd11c14a" "atsamd11c14a" "samd11") ("samd11"))))))

(define-public crate-atsamd-hal-0.10.0 (c (n "atsamd-hal") (v "0.10.0") (d (list (d (n "atsamd11c") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0pi1b08bi159g48bv1slg0kdg38w000l36mb68ha9dvha1h5lw7j") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51") ("samd51") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j") ("min-samd21j" "min-samd21g") ("min-samd21g"))))))

(define-public crate-atsamd-hal-0.10.1 (c (n "atsamd-hal") (v "0.10.1") (d (list (d (n "atsamd11c") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "1h6g6kghiwrc6cyl5a17q3c6d08w8c69nngi21ikmh18bsr6k5zq") (f (quote (("use_uart_debug") ("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51p") ("same54") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51p") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51p") ("same53") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51p") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51p") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51p") ("same51") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51") ("samd51") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j") ("min-samd21j" "min-samd21g") ("min-samd21g"))))))

(define-public crate-atsamd-hal-0.11.0 (c (n "atsamd-hal") (v "0.11.0") (d (list (d (n "atsamd11c") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r ">=0.9.0, <0.10.0") (o #t) (d #t) (k 0)) (d (n "bitfield") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "cortex-m") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "embedded-hal") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "jlink_rtt") (r ">=0.2.0, <0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "paste") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "rand_core") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "usb-device") (r ">=0.2.0, <0.3.0") (o #t) (d #t) (k 0)) (d (n "vcell") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "void") (r ">=1.0.0, <2.0.0") (k 0)))) (h "0gfb32lz9v96m7vrrd7czfmnnzyrhdxljrmd9p419i39g1yarr2m") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51p") ("same54") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51p") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51p") ("same53") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51p") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51p") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51p") ("same51") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g"))))))

(define-public crate-atsamd-hal-0.12.0 (c (n "atsamd-hal") (v "0.12.0") (d (list (d (n "atsamd11c") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0szr3p5vsr3dr9hpfkdiydi8z4axj38cld01kbylwrjdhvzj53w6") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51p") ("same54") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51p") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51p") ("same53") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51p") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51p") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51p") ("same51") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g"))))))

(define-public crate-atsamd-hal-0.13.0 (c (n "atsamd-hal") (v "0.13.0") (d (list (d (n "atsamd11c") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.6.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (k 0)) (d (n "rtic-monotonic") (r "^0.1.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "009sp32y3laabdlxcz21zx3xk6s207rz51rg4cigk5mbd5hwwpgb") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51n") ("same54" "device") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51n") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51j") ("same53" "device") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51n") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51j") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51g") ("same51" "device") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51" "device") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21" "device") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11d" "atsamd11d" "samd11") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11" "device") ("rtic" "cortex-m-rtic" "rtic-monotonic") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g") ("max-channels" "dma") ("library") ("dma" "unproven") ("device") ("default" "unproven"))))))

(define-public crate-atsamd-hal-0.14.0 (c (n "atsamd-hal") (v "0.14.0") (d (list (d (n "atsamd11c") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fugit") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (k 0)) (d (n "rtic-monotonic") (r "^0.1.0-rc.2") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.2.1") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0n7ips2gw3jvcghv3q8nfv37ah2l02s34dq84n16niwzamsc7p8w") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51n") ("same54" "device") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51n") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51j") ("same53" "device") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51n") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51j") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51g") ("same51" "device") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51" "device") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21" "device") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11d" "atsamd11d" "samd11") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11" "device") ("rtic" "rtic-monotonic" "fugit") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g") ("max-channels" "dma") ("library") ("dma" "unproven") ("device") ("default" "unproven")))) (r "1.56")))

(define-public crate-atsamd-hal-0.15.0 (c (n "atsamd-hal") (v "0.15.0") (d (list (d (n "atsamd11c") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fugit") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0xcvr01lr9javlqpv5gydsdjjrn04jfa0jyiqlh42kgb2w7bzabz") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51n") ("same54" "device") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51n") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51j") ("same53" "device") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51n") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51j") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51g") ("same51" "device") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51" "device") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21" "device") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11d" "atsamd11d" "samd11") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11" "device") ("rtic" "rtic-monotonic" "fugit") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g") ("max-channels" "dma") ("library") ("dma" "unproven") ("device") ("default" "unproven")))) (r "1.56")))

(define-public crate-atsamd-hal-0.15.1 (c (n "atsamd-hal") (v "0.15.1") (d (list (d (n "atsamd11c") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fugit") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "19i7g028b2440mqklrb3y6kpdf1mrvxwk0apgnzxyscbyfdk1vvk") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "atsame54p" "same54" "min-samd51p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "atsame54n" "same54" "min-samd51n") ("same54" "device") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "atsame53n" "same53" "min-samd51n") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "atsame53j" "same53" "min-samd51j") ("same53" "device") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "atsame51n" "same51" "min-samd51n") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "atsame51j" "same51" "min-samd51j") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "atsame51g" "same51" "min-samd51g") ("same51" "device") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "atsamd51p" "samd51" "min-samd51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "atsamd51n" "samd51" "min-samd51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "atsamd51j" "samd51" "min-samd51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "atsamd51g" "samd51" "min-samd51g") ("samd51" "device") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "atsamd21j" "samd21" "min-samd21j") ("samd21gl-rt" "samd21g-rt" "samd21gl") ("samd21gl" "samd21g") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "atsamd21g" "samd21" "min-samd21g") ("samd21el-rt" "samd21e-rt" "samd21el") ("samd21el" "samd21e") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "atsamd21e" "samd21") ("samd21" "device") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11d" "atsamd11d" "samd11") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "atsamd11c" "samd11") ("samd11" "device") ("rtic" "rtic-monotonic" "fugit") ("min-samd51p" "min-samd51n") ("min-samd51n" "min-samd51j") ("min-samd51j" "min-samd51g") ("min-samd51g") ("min-samd21j" "min-samd21g") ("min-samd21g") ("max-channels" "dma") ("library") ("dma" "unproven") ("device") ("default" "unproven")))) (r "1.56")))

(define-public crate-atsamd-hal-0.16.0 (c (n "atsamd-hal") (v "0.16.0") (d (list (d (n "aes") (r "^0.7.5") (d #t) (k 0)) (d (n "atsamd11c") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cipher") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mcan-core") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "opaque-debug") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "01ivgckv279ri0p13qgv87chw4n5zy312b8h39qdfmq7axnjjwwb") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("unproven" "embedded-hal/unproven") ("thumbv7" "device") ("thumbv6" "device") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54p" "same54" "atsame54p" "periph-e54p" "pins-e54p") ("same54n-rt" "same54n" "atsame54n/rt") ("same54n" "same54" "atsame54n" "periph-e54n" "pins-e54n") ("same54" "thumbv7") ("same53n-rt" "same53n" "atsame53n/rt") ("same53n" "same53" "atsame53n" "periph-e53n" "pins-e53n") ("same53j-rt" "same53j" "atsame53j/rt") ("same53j" "same53" "atsame53j" "periph-e53j" "pins-e53j") ("same53" "thumbv7") ("same51n-rt" "same51n" "atsame51n/rt") ("same51n" "same51" "atsame51n" "periph-e51n" "pins-e51n") ("same51j-rt" "same51j" "atsame51j/rt") ("same51j" "same51" "atsame51j" "periph-e51j" "pins-e51j") ("same51g-rt" "same51g" "atsame51g/rt") ("same51g" "same51" "atsame51g" "periph-e51g" "pins-e51g") ("same51" "thumbv7") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51p" "samd51" "atsamd51p" "periph-d51p" "pins-d51p") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51n" "samd51" "atsamd51n" "periph-d51n" "pins-d51n") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51j" "samd51" "atsamd51j" "periph-d51j" "pins-d51j") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd51g" "samd51" "atsamd51g" "periph-d51g" "pins-d51g") ("samd51" "thumbv7") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21j" "samd21" "atsamd21j" "periph-d21j" "pins-d21j") ("samd21gl-rt" "samd21gl" "atsamd21g/rt") ("samd21gl" "samd21" "atsamd21g" "periph-d21gl" "pins-d21gl") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21g" "samd21" "atsamd21g" "periph-d21g" "pins-d21g") ("samd21el-rt" "samd21el" "atsamd21e/rt") ("samd21el" "samd21" "atsamd21e" "periph-d21el" "pins-d21el") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd21e" "samd21" "atsamd21e" "periph-d21e" "pins-d21e") ("samd21" "thumbv6") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11d" "samd11" "atsamd11d" "periph-d11d" "pins-d11d") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("samd11c" "samd11" "atsamd11c" "periph-d11c" "pins-d11c") ("samd11" "thumbv6") ("rtic" "rtic-monotonic") ("pins-e54p" "pins-128") ("pins-e54n" "pins-100") ("pins-e53n" "pins-100") ("pins-e53j" "pins-64") ("pins-e51n" "pins-100") ("pins-e51j" "pins-64") ("pins-e51g" "pins-48a") ("pins-d51p" "pins-128") ("pins-d51n" "pins-100") ("pins-d51j" "pins-64") ("pins-d51g" "pins-48a") ("pins-d21j" "pins-64" "has-pa28") ("pins-d21gl" "pins-48l" "has-pa28") ("pins-d21g" "pins-48a" "has-pa28") ("pins-d21el" "pins-32l" "has-pa28") ("pins-d21e" "pins-32a" "has-pa28") ("pins-d11d" "pins-24" "has-pa28" "has-pa27") ("pins-d11c" "pins-14" "has-pa28") ("pins-64" "pins-48a" "pins-48l") ("pins-48l" "pins-48" "has-pb00" "has-pb01" "has-pb04" "has-pb05") ("pins-48a" "pins-48" "has-pa00" "has-pa01" "has-pb22" "has-pb23") ("pins-48" "pins-32" "has-pa27" "has-pb02" "has-pb03") ("pins-32l" "pins-32" "has-pb02" "has-pb03" "has-pb04" "has-pb05") ("pins-32a" "pins-32" "has-pa00" "has-pa01" "has-pa27") ("pins-32" "pins-24") ("pins-24" "pins-14") ("pins-14") ("pins-128" "pins-100") ("pins-100" "pins-64") ("periph-e54p" "periph-d51p" "has-ethernet" "has-can0" "has-can1") ("periph-e54n" "periph-d51n" "has-ethernet" "has-can0" "has-can1") ("periph-e53n" "periph-d51n" "has-ethernet") ("periph-e53j" "periph-d51j" "has-ethernet") ("periph-e51n" "periph-d51j" "has-can0" "has-can1" "has-tc6" "has-tc7" "has-sercom6" "has-sercom7") ("periph-e51j" "periph-d51j" "has-can0" "has-can1") ("periph-e51g" "periph-d51g" "has-can0") ("periph-d51p" "periph-d51n") ("periph-d51n" "periph-d51j" "has-tc6" "has-tc7" "has-sdhc1" "has-sercom6" "has-sercom7") ("periph-d51j" "periph-d51g" "has-i2s" "has-tcc2" "has-tcc3" "has-tc4" "has-tc5") ("periph-d51g" "periph-d51") ("periph-d51" "has-sercom0" "has-sercom1" "has-sercom2" "has-sercom3" "has-sercom4" "has-sercom5" "has-tc0" "has-tc1" "has-tc2" "has-tc3" "has-tcc0" "has-tcc1" "has-usb") ("periph-d21j" "periph-d21g" "has-tc6" "has-tc7") ("periph-d21gl" "periph-d21el" "has-sercom4" "has-sercom5") ("periph-d21g" "periph-d21e" "has-sercom4" "has-sercom5") ("periph-d21el" "periph-d21") ("periph-d21e" "periph-d21" "has-usb") ("periph-d21" "has-i2s" "has-sercom0" "has-sercom1" "has-sercom2" "has-sercom3" "has-tc3" "has-tc4" "has-tc5" "has-tcc0" "has-tcc1" "has-tcc2") ("periph-d11d" "periph-d11c" "has-sercom2") ("periph-d11c" "has-sercom0" "has-sercom1" "has-tc1" "has-tc2" "has-tcc0") ("max-channels" "dma") ("library") ("has-usb") ("has-tcc3") ("has-tcc2") ("has-tcc1") ("has-tcc0") ("has-tc7") ("has-tc6") ("has-tc5") ("has-tc4") ("has-tc3") ("has-tc2") ("has-tc1") ("has-tc0") ("has-sercom7") ("has-sercom6") ("has-sercom5") ("has-sercom4") ("has-sercom3") ("has-sercom2") ("has-sercom1") ("has-sercom0") ("has-sdhc1") ("has-pb23") ("has-pb22") ("has-pb05") ("has-pb04") ("has-pb03") ("has-pb02") ("has-pb01") ("has-pb00") ("has-pa28") ("has-pa27") ("has-pa01") ("has-pa00") ("has-i2s") ("has-gmac") ("has-ethernet") ("has-can1") ("has-can0") ("enable_unsafe_aes_newblock_cipher") ("dma" "unproven") ("device") ("default" "unproven") ("can" "mcan-core")))) (s 2) (e (quote (("defmt" "dep:defmt")))) (r "1.65")))

(define-public crate-atsamd-hal-0.17.0 (c (n "atsamd-hal") (v "0.17.0") (d (list (d (n "aes") (r "^0.7.5") (d #t) (k 0)) (d (n "atsamd-hal-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "atsamd11c") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd11d") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd21e") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd21g") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd21j") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd51g") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd51j") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd51n") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsamd51p") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame51g") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame51j") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame51n") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame53j") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame53n") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame54n") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "atsame54p") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitfield") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cipher") (r "^0.3") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal-02") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-1") (r "^1.0.0") (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "jlink_rtt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mcan-core") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11") (d #t) (k 0)) (d (n "nb") (r "^1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "opaque-debug") (r "^0.3.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)) (d (n "usb-device") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "vcell") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (k 0)))) (h "0bm2rmw8v0s7q87wsq9g34symbsgyc7hx36yn0zwjcp029ns5yw4") (f (quote (("use_rtt" "jlink_rtt") ("usb" "usb-device") ("sdmmc" "embedded-sdmmc") ("same54p-rt" "same54p" "atsame54p/rt") ("same54n-rt" "same54n" "atsame54n/rt") ("same53n-rt" "same53n" "atsame53n/rt") ("same53j-rt" "same53j" "atsame53j/rt") ("same51n-rt" "same51n" "atsame51n/rt") ("same51j-rt" "same51j" "atsame51j/rt") ("same51g-rt" "same51g" "atsame51g/rt") ("samd51p-rt" "samd51p" "atsamd51p/rt") ("samd51n-rt" "samd51n" "atsamd51n/rt") ("samd51j-rt" "samd51j" "atsamd51j/rt") ("samd51g-rt" "samd51g" "atsamd51g/rt") ("samd21j-rt" "samd21j" "atsamd21j/rt") ("samd21gl-rt" "samd21gl" "atsamd21g/rt") ("samd21g-rt" "samd21g" "atsamd21g/rt") ("samd21el-rt" "samd21el" "atsamd21e/rt") ("samd21e-rt" "samd21e" "atsamd21e/rt") ("samd11d-rt" "samd11d" "atsamd11d/rt") ("samd11c-rt" "samd11c" "atsamd11c/rt") ("rtic" "rtic-monotonic") ("max-channels" "dma") ("enable_unsafe_aes_newblock_cipher") ("dma") ("device") ("can" "mcan-core")))) (s 2) (e (quote (("same54p" "device" "dep:atsame54p") ("same54n" "device" "dep:atsame54n") ("same53n" "device" "dep:atsame53n") ("same53j" "device" "dep:atsame53j") ("same51n" "device" "dep:atsame51n") ("same51j" "device" "dep:atsame51j") ("same51g" "device" "dep:atsame51g") ("samd51p" "device" "dep:atsamd51p") ("samd51n" "device" "dep:atsamd51n") ("samd51j" "device" "dep:atsamd51j") ("samd51g" "device" "dep:atsamd51g") ("samd21j" "device" "dep:atsamd21j") ("samd21gl" "device" "dep:atsamd21g") ("samd21g" "device" "dep:atsamd21g") ("samd21el" "device" "dep:atsamd21e") ("samd21e" "device" "dep:atsamd21e") ("samd11d" "device" "dep:atsamd11d") ("samd11c" "device" "dep:atsamd11c") ("defmt" "dep:defmt")))) (r "1.65")))

