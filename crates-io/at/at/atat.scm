(define-module (crates-io at at atat) #:use-module (crates-io))

(define-public crate-atat-0.1.1 (c (n "atat") (v "0.1.1") (d (list (d (n "atat_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "0j8zv611i2zzlrg9fdm6jjc7m7k6pz2g6cmrfgm972n3v3iajnrv") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.2 (c (n "atat") (v "0.1.2") (d (list (d (n "atat_derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "10ym9yy712ldlqcdhvdfvrj6fdvns4qrknxj9hj6ps5k0xazdv3n") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.3 (c (n "atat") (v "0.1.3") (d (list (d (n "atat_derive") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "1vgg130v3kj3mcc1vbffm1nddh39npcm18a372m67j97jzlmnw6n") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.4 (c (n "atat") (v "0.1.4") (d (list (d (n "atat_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "02cnr1446qbk1198s5ljp82vlg2ah4ynw1d1lp9ik4jimv627pxj") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.5 (c (n "atat") (v "0.1.5") (d (list (d (n "atat_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "0winx2b7zdc5978mbsk83vssml8gn0ars7vkyw3g17fs0kz7jvzc") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.6 (c (n "atat") (v "0.1.6") (d (list (d (n "atat_derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "1k4h34d6qqsqiy5apsna256nhs94wlxs67h4nn7pw8f65qd3k6ag") (f (quote (("logging") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.1.7 (c (n "atat") (v "0.1.7") (d (list (d (n "atat_derive") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 2)))) (h "10jbl1sac8nal4cj927bnz1h4grd5dsfra8ydnf00rnz8f3wq7rb") (f (quote (("logging") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.3.0 (c (n "atat") (v "0.3.0") (d (list (d (n "atat_derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 2)) (d (n "heapless") (r "^0.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.3.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.5") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0fdf1ij4yjpz732ra4h64rkkq2j5i96fqf1kbzd2fsn9chw5zllg") (f (quote (("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.4.1 (c (n "atat") (v "0.4.1") (d (list (d (n "atat_derive") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtfm") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.5.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.4.0") (d #t) (k 0)) (d (n "typenum") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "1qilhip6517j7fzhcyzfs2xmrybgm0wshq741zf10k894lrldfrj") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.4.2 (c (n "atat") (v "0.4.2") (d (list (d (n "atat_derive") (r "^0.4.2-alpha.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.2") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.5.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.4.2-alpha.0") (d #t) (k 0)) (d (n "typenum") (r "^1") (d #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "10j2zf3a94h0724lyhwb9jrpgdm13352azb0y39nw2128limx99q") (f (quote (("logging" "log") ("derive" "atat_derive") ("default" "derive"))))))

(define-public crate-atat-0.6.0 (c (n "atat") (v "0.6.0") (d (list (d (n "atat_derive") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.4") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.6.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.5") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "1p766yrrj0j18pf5hrknfbiga34642jcgsavjhg2vbq1kkdsha2h") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.7.0 (c (n "atat") (v "0.7.0") (d (list (d (n "atat_derive") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.4") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.7.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.5") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "1f9m2rhxvvbsk25axkdzsyvl7k69dysy6r941y35qbvlz7xvvcas") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.7.1 (c (n "atat") (v "0.7.1") (d (list (d (n "atat_derive") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.12") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.4") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.7.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.5") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "02c7ddn231r7jgd8pkxxwj69y9fyp4jjyayfmk0dz24a7nq0s0na") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.8.0 (c (n "atat") (v "0.8.0") (d (list (d (n "atat_derive") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.8.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "1w441zyb5baw86yzagykjqyhjkqv85gx5rpm72xagv12ylpmc14i") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive")))) (y #t)))

(define-public crate-atat-0.8.2 (c (n "atat") (v "0.8.2") (d (list (d (n "atat_derive") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.8.2") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "0v2sxa2wkra3p0ani0f9yzrwqlvdj9wr2j2jwzjpkw64b1m64h20") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive")))) (y #t)))

(define-public crate-atat-0.8.4 (c (n "atat") (v "0.8.4") (d (list (d (n "atat_derive") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.8.4") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "0vhcnwppyidfsp61siqh0rrp8hf629kq7insmiznwpiiqsyr08ra") (f (quote (("std" "serde_at/std") ("log-logging" "log") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.9.0 (c (n "atat") (v "0.9.0") (d (list (d (n "atat_derive") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.9.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "0s8ww4al54g6fnnikmzp9ybxmvplvsrr23gxkbl5whwlcyns17ca") (f (quote (("std" "serde_at/std") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.10.0 (c (n "atat") (v "0.10.0") (d (list (d (n "atat_derive") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.5.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1") (k 0)) (d (n "serde_at") (r "^0.10.0") (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)) (d (n "typenum") (r "^1") (d #t) (k 0)))) (h "1k6wwrxm9gyr9zz0csx6hjp68ffkkd2ncg8q40ywg7vqp401955i") (f (quote (("std" "serde_at/std") ("derive" "atat_derive") ("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default" "derive"))))))

(define-public crate-atat-0.11.0 (c (n "atat") (v "0.11.0") (d (list (d (n "atat_derive") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_at") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)))) (h "0yiw47x29mqwh5dnmhgm9qv7zhivjf47sj73ypi7kr799zp3b10c") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive"))))))

(define-public crate-atat-0.11.1 (c (n "atat") (v "0.11.1") (d (list (d (n "atat_derive") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_at") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.6") (f (quote ("stm32l4x5" "rt"))) (d #t) (k 2)))) (h "1gqad0wc4dw1sp3dphzbzlra5d781anl136fhc4dfkv837h6kqxf") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive"))))))

(define-public crate-atat-0.12.0 (c (n "atat") (v "0.12.0") (d (list (d (n "atat_derive") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_at") (r "^0.12.0") (o #t) (d #t) (k 0)))) (h "10ilddm3vkc56gv9lbg5dmzxvl2hs9bwl9y0p3jz42m4j55sj5nk") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive"))))))

(define-public crate-atat-0.13.0 (c (n "atat") (v "0.13.0") (d (list (d (n "atat_derive") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_at") (r "^0.13.0") (o #t) (d #t) (k 0)))) (h "032s63r51rq3l1dpy9as3v8xcgzkmjfrirc5kjarphm8sankcxbn") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive"))))))

(define-public crate-atat-0.13.1 (c (n "atat") (v "0.13.1") (d (list (d (n "atat_derive") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "serde_at") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "1bp18arcpfx4ifp52p03qf1p0m0q9wp4awn0l98mk595m12c5flg") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive" "bytes") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.14.0 (c (n "atat") (v "0.14.0") (d (list (d (n "atat_derive") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "serde_at") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "1yhm2z50hvypz52xlkd7llbnq5hwbzzvsipwh38mc9na0jwqsp9x") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("defmt-warn" "defmt") ("defmt-trace" "defmt") ("defmt-info" "defmt") ("defmt-error" "defmt") ("defmt-default" "defmt") ("defmt-debug" "defmt") ("default" "derive" "bytes") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.15.0 (c (n "atat") (v "0.15.0") (d (list (d (n "atat_derive") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "cortex-m-rt") (r "^0.6.13") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (t "thumbv7em-none-eabihf") (k 2)) (d (n "serde_at") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "08c3d2x7kb810kkkwywp61p0hrxlik41r24mdf8gy5kbwb4yi7bx") (f (quote (("std" "serde_at/std") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.16.0 (c (n "atat") (v "0.16.0") (d (list (d (n "atat_derive") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.1") (d #t) (k 2)) (d (n "dwt-systick-monotonic") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "serde_at") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "1a4jn09gc35rf7g9snabx3jz5prkdjnrnnp138x9n9x668fp8b7c") (f (quote (("std" "serde_at/std" "nom/std") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.16.1 (c (n "atat") (v "0.16.1") (d (list (d (n "atat_derive") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.1") (d #t) (k 2)) (d (n "dwt-systick-monotonic") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "serde_at") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "0ngnij8v281lfr54i1hsazr7ws4hhlm8jczqrcn75vq5qx0adp4w") (f (quote (("std" "serde_at/std" "nom/std") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.17.0 (c (n "atat") (v "0.17.0") (d (list (d (n "atat_derive") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.1") (d #t) (k 2)) (d (n "dwt-systick-monotonic") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "serde_at") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "1n4gdan9xa01yrxa5a8sxdhfmfqkmacnpnw1ii9fhg63aqyp264b") (f (quote (("std" "serde_at/std" "nom/std") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.18.0 (c (n "atat") (v "0.18.0") (d (list (d (n "atat_derive") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.6") (f (quote ("critical-section-single-core"))) (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.7.1") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.1") (d #t) (k 2)) (d (n "dwt-systick-monotonic") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 2)) (d (n "serde_at") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)))) (h "062acpvwi10gjf0md5srlb9wq8ipvlb88k4gsh2sgz28bgzmw4g4") (f (quote (("std" "serde_at/std" "nom/std") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes"))))))

(define-public crate-atat-0.19.0 (c (n "atat") (v "0.19.0") (d (list (d (n "atat_derive") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "serde_at") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "19qk8x6g9h51p72xzcsq1wphrwbkfl66lyk3x66xvdsq6nhsdh1l") (f (quote (("std" "serde_at/std" "nom/std" "embassy-time/std" "embedded-io/std" "embedded-io/tokio") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes") ("async" "embedded-io/async" "futures")))) (s 2) (e (quote (("defmt" "dep:defmt" "embedded-io/defmt"))))))

(define-public crate-atat-0.19.1 (c (n "atat") (v "0.19.1") (d (list (d (n "atat_derive") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "serde_at") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "1ahdpipyxk0qb7zxxhmgnz43nqrndjwfzjcnir0xvk7g16ckkcgm") (f (quote (("std" "serde_at/std" "nom/std" "embassy-time/std" "embedded-io/std" "embedded-io/tokio") ("hex_str_arrays") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes") ("async" "embedded-io/async" "futures")))) (s 2) (e (quote (("defmt" "dep:defmt" "embedded-io/defmt"))))))

(define-public crate-atat-0.20.0 (c (n "atat") (v "0.20.0") (d (list (d (n "atat_derive") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3.0") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "serde_at") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "1js55v2fix7iskwcaxxsad9m5nq50rywnr829nmd68vlw8sxcv23") (f (quote (("std" "serde_at/std" "nom/std" "embassy-time/std" "embedded-io/std") ("hex_str_arrays") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes") ("async" "embedded-io-async" "futures")))) (s 2) (e (quote (("defmt" "dep:defmt" "embedded-io-async/defmt-03"))))))

(define-public crate-atat-0.21.0 (c (n "atat") (v "0.21.0") (d (list (d (n "atat_derive") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embassy-time") (r "^0.2") (d #t) (k 0)) (d (n "embassy-time") (r "^0.2") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "serde_at") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "serde_at") (r "^0.21.0") (f (quote ("heapless"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "1wa0qc0g13pyr46wj37prki4f075gnibi6hylmhj7gkqm8zpybl2") (f (quote (("std" "serde_at/std" "nom/std" "embassy-time/std" "embedded-io/std") ("hex_str_arrays") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes")))) (s 2) (e (quote (("defmt" "dep:defmt" "embedded-io-async/defmt-03" "heapless/defmt-03"))))))

(define-public crate-atat-0.22.0 (c (n "atat") (v "0.22.0") (d (list (d (n "atat_derive") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (d #t) (k 0)) (d (n "embassy-time") (r "^0.3") (f (quote ("std" "generic-queue"))) (d #t) (k 2)) (d (n "embedded-io") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "heapless") (r "^0.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "heapless-bytes") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nom") (r "^7.1") (k 0)) (d (n "serde_at") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "serde_at") (r "^0.22.0") (f (quote ("heapless"))) (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.14") (o #t) (k 0)) (d (n "static_cell") (r "^2.0.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "0i6l7wx21bdakhcfxjg233c2kallgiqjs18p4nvgyhisfr7zf41q") (f (quote (("std" "serde_at/std" "nom/std" "embassy-time/std" "embedded-io/std") ("hex_str_arrays") ("heapless" "serde_at/heapless") ("derive" "atat_derive" "serde_at") ("default" "derive" "bytes") ("custom-error-messages") ("bytes" "heapless-bytes" "serde_bytes")))) (s 2) (e (quote (("defmt" "dep:defmt" "embedded-io-async/defmt-03" "heapless/defmt-03"))))))

