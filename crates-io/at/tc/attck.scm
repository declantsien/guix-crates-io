(define-module (crates-io at tc attck) #:use-module (crates-io))

(define-public crate-attck-0.1.0 (c (n "attck") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_self_cell") (r "^0.6.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "stix") (r "^0.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)))) (h "07hs1f24fcvx58n63n211x4s06iafv8wgyl4vdy2z5yy0nah2cvn") (f (quote (("mobile") ("ics") ("enterprise") ("default" "enterprise" "ics" "mobile"))))))

(define-public crate-attck-0.2.0 (c (n "attck") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_self_cell") (r "^0.6.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "stix") (r "^0.2.0") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)))) (h "180pklrqllyz75my38zl8vnc3633p5hvpn2pkd4rj3ckg6xnd8ja") (f (quote (("mobile") ("ics") ("enterprise") ("default" "enterprise" "ics" "mobile"))))))

(define-public crate-attck-0.3.0 (c (n "attck") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_self_cell") (r "^0.6.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "stix") (r "^0.3.0") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "url") (r "^2.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)))) (h "1qi497yyh19rjk32g255n38klgi9488flp60naflakhd31rgaldw") (f (quote (("mobile") ("ics") ("enterprise") ("default" "enterprise" "ics" "mobile"))))))

