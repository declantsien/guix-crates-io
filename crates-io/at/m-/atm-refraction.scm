(define-module (crates-io at m- atm-refraction) #:use-module (crates-io))

(define-public crate-atm-refraction-0.1.0 (c (n "atm-refraction") (v "0.1.0") (d (list (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)))) (h "1g1pnllxgzp6w690yaidw3083jbaghligvvi0h0z50s0pxx6rsik") (f (quote (("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.2.0 (c (n "atm-refraction") (v "0.2.0") (d (list (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)))) (h "11s73fw3icn02iyrm4xiypp9hwjxm5lxmjqmkr5zihj7y8mzvf15") (f (quote (("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.3.0 (c (n "atm-refraction") (v "0.3.0") (d (list (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0rvwjfyrw7jqn88467h2m3f14j60hibvbjpn4518mrczf9yj2mz3") (f (quote (("serialization" "serde" "serde_derive") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.3.1 (c (n "atm-refraction") (v "0.3.1") (d (list (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "06k5fb3v0b8mjhcwawrma05hgmp8rjp1ykval6gk7rbhwp30z842") (f (quote (("serialization" "serde" "serde_derive") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.4.0 (c (n "atm-refraction") (v "0.4.0") (d (list (d (n "cubic-splines") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0fh1v78y3g6pxqj7lsg47awqv09jr7xp09v9mh7ymrm0m8hh5yp2") (f (quote (("serialization" "serde" "serde_derive" "cubic-splines/serialization") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.4.1 (c (n "atm-refraction") (v "0.4.1") (d (list (d (n "cubic-splines") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0ypqvmfi583w45d566q6c37xpnzssd82wllmzrdlp3s9ag1wwf2f") (f (quote (("serialization" "serde" "serde_derive" "cubic-splines/serialization") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.4.2 (c (n "atm-refraction") (v "0.4.2") (d (list (d (n "cubic-splines") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "15f4gm5c01c1pzdf606npc2ijnnhq5bcppcx5kg8k2s26hsqrppk") (f (quote (("serialization" "serde" "serde_derive" "cubic-splines/serialization") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.5.0 (c (n "atm-refraction") (v "0.5.0") (d (list (d (n "cubic-splines") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1psbba0hdvp3bpb83cfkk59rsfkm93isdwvmir39mxxgns7hnlzh") (f (quote (("serialization" "serde" "serde_derive" "cubic-splines/serialization") ("default" "nom/regexp"))))))

(define-public crate-atm-refraction-0.6.0 (c (n "atm-refraction") (v "0.6.0") (d (list (d (n "cubic-splines") (r "^0.2") (d #t) (k 0)) (d (n "nom") (r "^4.1") (d #t) (k 0)) (d (n "numeric-algs") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1fjzwpcwws65r0mdpv1zxxj462n9wppxb9nr6f8ngspdqy7j08jq") (f (quote (("serialization" "serde" "serde_derive" "cubic-splines/serialization") ("default" "nom/regexp"))))))

