(define-module (crates-io at ri atri_qq) #:use-module (crates-io))

(define-public crate-atri_qq-0.2.0 (c (n "atri_qq") (v "0.2.0") (d (list (d (n "anyhow") (r "<=1.0.59") (d #t) (k 0)) (d (n "async-trait") (r "^0") (d #t) (k 0)) (d (n "atri_ffi") (r "^0.2.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-deque") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (k 0)) (d (n "prost") (r "^0.9") (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "ricq") (r "^0") (d #t) (k 0)) (d (n "ricq-guild") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0") (f (quote ("macros" "local-offset" "formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "mio" "io-std" "io-util" "fs" "signal"))) (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (f (quote ("fmt" "local-time"))) (d #t) (k 0)))) (h "1s8r1423lyzazw5lzds95z8dv3j4hjc1hiz9f3111aj3xr4pq5p3") (y #t)))

