(define-module (crates-io ny du nydus-app) #:use-module (crates-io))

(define-public crate-nydus-app-0.1.0 (c (n "nydus-app") (v "0.1.0") (d (list (d (n "built") (r "=0.4.3") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "flexi_logger") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "nydus-error") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r ">=1.0.27") (f (quote ("serde_derive"))) (d #t) (k 0)))) (h "1473cqn95v7rp70vjk5m9m2v53i195k599xb5f3vn6836h8nw5li")))

(define-public crate-nydus-app-0.2.0 (c (n "nydus-app") (v "0.2.0") (d (list (d (n "built") (r "=0.4.3") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "flexi_logger") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r ">=0.23.0") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r ">=1.0.27") (f (quote ("serde_derive"))) (d #t) (k 0)))) (h "1dhz9w50wccyw3mbh1nvz9jsa8vjpcq6sma8z5dgc8fz8ry2rl1p")))

(define-public crate-nydus-app-0.3.0 (c (n "nydus-app") (v "0.3.0") (d (list (d (n "built") (r "=0.4.3") (f (quote ("chrono" "git2"))) (d #t) (k 1)) (d (n "flexi_logger") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive"))) (d #t) (k 0)))) (h "06fk0rm05lcdr6wlmjh4rly5r9g9pm0ncvqmx4k32i5mk582657f")))

(define-public crate-nydus-app-0.3.1 (c (n "nydus-app") (v "0.3.1") (d (list (d (n "flexi_logger") (r "^0.23") (f (quote ("compress"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.1.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("formatting"))) (d #t) (k 1)))) (h "1s15f4qikb3bl12jy9w7pvd7w0fxkhj84y24nfwpzaxf5b5qc82k")))

(define-public crate-nydus-app-0.3.2 (c (n "nydus-app") (v "0.3.2") (d (list (d (n "flexi_logger") (r "^0.23") (f (quote ("compress"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-panics") (r "^2.1.0") (f (quote ("with-backtrace"))) (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("formatting"))) (d #t) (k 1)))) (h "000snqcpgqrbgwny1q29xffdrb9v3rrkd9myzvd35vl6wgpcfvb2")))

