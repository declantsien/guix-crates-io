(define-module (crates-io ny du nydus-rafs) #:use-module (crates-io))

(define-public crate-nydus-rafs-0.1.0 (c (n "nydus-rafs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "=0.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake3") (r "^1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("miniz-sys"))) (k 0)) (d (n "fuse-backend-rs") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4-sys") (r "^1.9.2") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 0)) (d (n "nydus-api") (r "^0.1.0") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2.0") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.5.0") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.6.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "spmc") (r "^0.3.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "vm-memory") (r "^0.7.0") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.9.0") (d #t) (k 2)))) (h "1zq3nr0nkp6n9k7cq21bx5r5v755k6lil0ij5s4qqcnp7ffh964w") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev") ("backend-registry" "nydus-storage/backend-registry") ("backend-oss" "nydus-storage/backend-oss"))))))

(define-public crate-nydus-rafs-0.1.1 (c (n "nydus-rafs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake3") (r "^1.0") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4-sys") (r "^1.9.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.1") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.5") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "spmc") (r "^0.3.0") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (o #t) (d #t) (k 0)) (d (n "vm-memory") (r "^0.9") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.10") (d #t) (k 2)))) (h "1x4r8jyqsqnk9dsnj7vg24jx7rbamfqz7li8s71ar42a1f5nx854") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev") ("backend-registry" "nydus-storage/backend-registry") ("backend-oss" "nydus-storage/backend-oss"))))))

(define-public crate-nydus-rafs-0.2.0 (c (n "nydus-rafs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake3") (r "^1.0") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4-sys") (r "^1.9.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.2") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.6") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "spmc") (r "^0.3.0") (d #t) (k 0)) (d (n "vm-memory") (r "^0.9") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.10") (d #t) (k 2)))) (h "0asvdlcrl4sp4gnnhhwh0fhab4b2qng6vbl2gm9c5415b9zsqh6j") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev") ("backend-s3" "nydus-storage/backend-s3") ("backend-registry" "nydus-storage/backend-registry") ("backend-oss" "nydus-storage/backend-oss"))))))

(define-public crate-nydus-rafs-0.2.1 (c (n "nydus-rafs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake3") (r "^1.0") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4-sys") (r "^1.9.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.2") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.6") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "spmc") (r "^0.3.0") (d #t) (k 0)) (d (n "vm-memory") (r "^0.9") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.10") (d #t) (k 2)))) (h "1p3400yiimw33x2jyw04p6nx0gxpllqyg7jn3y9ivh7nymgmrw4c") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev"))))))

(define-public crate-nydus-rafs-0.2.2 (c (n "nydus-rafs") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "blake3") (r "^1.0") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4-sys") (r "^1.9.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.2") (d #t) (k 0)) (d (n "nydus-error") (r "^0.2") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.6") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "spmc") (r "^0.3.0") (d #t) (k 0)) (d (n "vm-memory") (r "^0.9") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.10") (d #t) (k 2)))) (h "0b6h3vdnigc2rq63a1qgymb5hwdqw93pdzp9f8p885mabnafdb70") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev"))))))

(define-public crate-nydus-rafs-0.3.1 (c (n "nydus-rafs") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.3") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.6") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "vm-memory") (r "^0.9") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.10") (d #t) (k 2)))) (h "0v878ng332fn5fs2ikhwidm4wvflgr10gyy4mz950a27k55f88gd") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev"))))))

(define-public crate-nydus-rafs-0.3.2 (c (n "nydus-rafs") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "fuse-backend-rs") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (d #t) (k 0)) (d (n "nydus-api") (r "^0.3") (d #t) (k 0)) (d (n "nydus-storage") (r "^0.6") (f (quote ("backend-localfs"))) (d #t) (k 0)) (d (n "nydus-utils") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("serde_derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "vm-memory") (r "^0.10") (d #t) (k 0)) (d (n "vmm-sys-util") (r "^0.11") (d #t) (k 2)))) (h "0rslp0h55b096jqldmihym9vsvyvmsjmrh6477qwb48wyxg8dpmd") (f (quote (("virtio-fs" "fuse-backend-rs/virtiofs" "vm-memory/backend-mmap") ("vhost-user-fs" "fuse-backend-rs/vhost-user-fs") ("fusedev" "fuse-backend-rs/fusedev"))))))

