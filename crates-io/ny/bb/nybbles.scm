(define-module (crates-io ny bb nybbles) #:use-module (crates-io))

(define-public crate-nybbles-0.1.0 (c (n "nybbles") (v "0.1.0") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "const-hex") (r "^1.10") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_new" "union"))) (k 0)))) (h "0rqkkwj2lp873cfm4jrgs2m2mxgc9xlfim9zbjq437s78lgw3dav") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "const-hex/std" "serde?/std" "alloy-rlp?/std" "proptest?/std") ("serde" "dep:serde" "smallvec/serde") ("rlp" "dep:alloy-rlp") ("arbitrary" "dep:arbitrary" "dep:proptest" "smallvec/arbitrary" "std")))) (r "1.64")))

(define-public crate-nybbles-0.1.1 (c (n "nybbles") (v "0.1.1") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "const-hex") (r "^1.10") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_new" "union"))) (k 0)))) (h "1h3d1wwp0b6r81wdmrf3qw1frpdxnxyq6kagdxwfgy2p4gddmpa7") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "const-hex/std" "serde?/std" "alloy-rlp?/std" "proptest?/std") ("serde" "dep:serde" "smallvec/serde") ("rlp" "dep:alloy-rlp") ("arbitrary" "dep:arbitrary" "dep:proptest" "smallvec/arbitrary" "std")))) (r "1.64")))

(define-public crate-nybbles-0.1.2 (c (n "nybbles") (v "0.1.2") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "const-hex") (r "^1.10") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_new" "union"))) (k 0)))) (h "14rc0jrvdyljbyx7xk0kdcs4fqa1k1pmlm2l5di0jb7vak1ics43") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "const-hex/std" "serde?/std" "alloy-rlp?/std" "proptest?/std") ("serde" "dep:serde" "smallvec/serde") ("rlp" "dep:alloy-rlp") ("arbitrary" "dep:arbitrary" "dep:proptest" "smallvec/arbitrary" "std")))) (r "1.64")))

(define-public crate-nybbles-0.2.0 (c (n "nybbles") (v "0.2.0") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "const-hex") (r "^1.10") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_new" "union"))) (k 0)))) (h "1218fha4i3x9f0d70904kb2m0a2nj6gjw8v80jw1br0ppbx9h47j") (f (quote (("default" "std")))) (y #t) (s 2) (e (quote (("std" "const-hex/std" "serde?/std" "alloy-rlp?/std" "proptest?/std") ("serde" "dep:serde" "smallvec/serde") ("rlp" "dep:alloy-rlp") ("arbitrary" "dep:arbitrary" "dep:proptest" "smallvec/arbitrary" "std")))) (r "1.64")))

(define-public crate-nybbles-0.2.1 (c (n "nybbles") (v "0.2.1") (d (list (d (n "alloy-rlp") (r "^0.3") (o #t) (k 0)) (d (n "arbitrary") (r "^1.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "const-hex") (r "^1.10") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.0") (f (quote ("const_new" "union"))) (k 0)))) (h "08vvjcc3w0xa92l1k75ckid6b4mk05ynvj75whgzi5vx87h6pw4m") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "const-hex/std" "serde?/std" "alloy-rlp?/std" "proptest?/std") ("serde" "dep:serde" "smallvec/serde") ("rlp" "dep:alloy-rlp") ("arbitrary" "dep:arbitrary" "dep:proptest" "smallvec/arbitrary" "std")))) (r "1.64")))

