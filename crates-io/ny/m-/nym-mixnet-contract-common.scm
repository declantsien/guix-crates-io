(define-module (crates-io ny m- nym-mixnet-contract-common) #:use-module (crates-io))

(define-public crate-nym-mixnet-contract-common-0.1.0 (c (n "nym-mixnet-contract-common") (v "0.1.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.1.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "07dx8xpdi5xrpqd7i4s0l7dza8hjgfa0y1av92kr5b6la3d9a0h2") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.2.0 (c (n "nym-mixnet-contract-common") (v "0.2.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.2.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "03qska8gj8dr2napg4zh0fz8p7hd8ygbs8ibhrrlc90y7fnsvf57") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.3.0 (c (n "nym-mixnet-contract-common") (v "0.3.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.3.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "^1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "075xydrnjd7fhyl77ap3349jivwxqp6yparal142a27zfzgby67v") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.4.0 (c (n "nym-mixnet-contract-common") (v "0.4.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.4.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "=1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-json-wasm") (r "=0.4.1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "1br3zfb036svd6jixdly3pqj842jbcfij6ij3w40x21ajyppf7zw") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.5.0 (c (n "nym-mixnet-contract-common") (v "0.5.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.4.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "=1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-json-wasm") (r "=0.4.1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "1kl817anjaf64mfx6qwj07bycs5w9nahvsflywlfpxnr0572za01") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.6.0 (c (n "nym-mixnet-contract-common") (v "0.6.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.5.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "=1.0.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-json-wasm") (r "=0.4.1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "0zvjfaabl6pgkp5c768w1jnndpj3baggnmp39g10zm3lgwsfchhr") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

(define-public crate-nym-mixnet-contract-common-0.7.0 (c (n "nym-mixnet-contract-common") (v "0.7.0") (d (list (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "contracts-common") (r "^0.6.0") (d #t) (k 0) (p "nym-contracts-common")) (d (n "cosmwasm-std") (r "=1.2.5") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-json-wasm") (r "=0.4.1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.6") (f (quote ("parsing" "formatting"))) (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("serde" "macros"))) (d #t) (k 2)) (d (n "ts-rs") (r "^6.1.2") (o #t) (d #t) (k 0)))) (h "13jrklffkbqdlms7nzr9k7fi2677gsiam560yis9qflvl4xm0xbh") (f (quote (("generate-ts" "ts-rs") ("default") ("contract-testing")))) (r "1.62")))

