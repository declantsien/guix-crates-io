(define-module (crates-io ci ta cita-secp256k1) #:use-module (crates-io))

(define-public crate-cita-secp256k1-0.1.0 (c (n "cita-secp256k1") (v "0.1.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 2)) (d (n "cita-crypto-trait") (r "^0.1") (d #t) (k 0)) (d (n "cita-types") (r "^0.1") (d #t) (k 0)) (d (n "hashable") (r "^0.1") (d #t) (k 0) (p "cita-hashable")) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("rand-std" "recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "1ss9h9hwl53vq7rpqihgslivcz0jl5fasmds68ddq52zlgd0wpq8") (f (quote (("sm3hash" "hashable/sm3hash") ("sha3hash" "hashable/sha3hash") ("default") ("blake2bhash" "hashable/blake2bhash"))))))

(define-public crate-cita-secp256k1-0.1.1 (c (n "cita-secp256k1") (v "0.1.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cita-crypto-trait") (r "^0.1") (d #t) (k 0)) (d (n "cita-types") (r "^0.1") (d #t) (k 0)) (d (n "hashable") (r "^0.1") (d #t) (k 0) (p "cita-hashable")) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand-std" "recovery"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "1r6ysi9n34xaxmfw81ik02isvg9bwbhg2q0mkk0vqni4lnjrxx0c") (f (quote (("sm3hash" "hashable/sm3hash") ("sha3hash" "hashable/sha3hash") ("default") ("blake2bhash" "hashable/blake2bhash"))))))

