(define-module (crates-io ci ta cita-vm) #:use-module (crates-io))

(define-public crate-cita-vm-0.1.0 (c (n "cita-vm") (v "0.1.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1qb3v59sgzrfah1w2i4fd1rir1la2yi3xa4jphp63m9rzk78g1v9") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.1 (c (n "cita-vm") (v "0.1.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0wwf5zqlrrxzssqixmxcq2lcnmidna1585pa6sp3x2gkhrr37vln") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.2 (c (n "cita-vm") (v "0.1.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1sa2pdq9cvdw24hg4b8jaq5g7shzavvr48qvdh2df435zvwm5knm") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.3 (c (n "cita-vm") (v "0.1.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1d94aadyq6ihkjkrj3ya4mf9nzhs10dc5ghj06f7in0h3vyifgbk") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.4 (c (n "cita-vm") (v "0.1.4") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0avd82r4nsbrgjm2w233vfbrazar7bjc7fv9ix3a43vsb2hrrz9r") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.5 (c (n "cita-vm") (v "0.1.5") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1r5844mn59dk8m9fc96mf966x94z349x3i3ncmq616ajkwkvvh8l") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.1.6 (c (n "cita-vm") (v "0.1.6") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita-evm") (r "^0.1") (d #t) (k 0)) (d (n "cita-state") (r "^0.1") (k 0)) (d (n "cita_trie") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hashbrown") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ripemd160") (r "^0.8") (d #t) (k 0)) (d (n "rlp") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "002dbj2lxxzlssirjqpsy6cjykchhsa1947wsmfnxpdghm2q1jwa") (f (quote (("hashlib-sha3" "cita-state/hashlib-sha3") ("hashlib-keccak" "cita-state/hashlib-keccak") ("default" "cita-state/hashlib-keccak"))))))

(define-public crate-cita-vm-0.2.1 (c (n "cita-vm") (v "0.2.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "18hv7ipvix8vnnm9yyv609m96rm5i5s111ar56cwabl6kid84r2v") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b")))) (y #t)))

(define-public crate-cita-vm-0.2.2 (c (n "cita-vm") (v "0.2.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "0qi43d6ihi9d6ibpdh5rppsmrxjin59bicfd317gafjf4b552w3k") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.2.3 (c (n "cita-vm") (v "0.2.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^3.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12") (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd160") (r "^0.9") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)))) (h "1f5n62czwjb9330hsi6bwps84v7dhid2ai99mnl9mjaijqbnncjb") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.3.0 (c (n "cita-vm") (v "0.3.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1v7chpz8hnlaagy4m4x6mhsjgrhwqya5d7ri2v5faj599mrdxqx9") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.3.1 (c (n "cita-vm") (v "0.3.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "0zg1h7g5czkydza06wmmkgbgs4yrpmf55csga2x60qzcm04qjyb7") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.3.2 (c (n "cita-vm") (v "0.3.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "109hwsin6499bp28lcwba12wf909qsqaxi5z2dlnf0kdnrzmq5rh") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.3.3 (c (n "cita-vm") (v "0.3.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1dszhjfw326q8bxafwqmfzy01rx10k5f84njsaj82nkcdnqz2zbp") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.3.4 (c (n "cita-vm") (v "0.3.4") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1vr7d6byv33nryhi2hf4lm7qhh0wpkiigsmf1y91xlhn4i3xl4gw") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.4.0 (c (n "cita-vm") (v "0.4.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "0w30ldk2k83r44sxvqdfwdm5bfgzapxg6i5papwr5kwpfiynmygq") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b")))) (y #t)))

(define-public crate-cita-vm-0.4.1 (c (n "cita-vm") (v "0.4.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1r415zx6mv7z5v0xcy6p58cm0553iask9prf8jbm7fd5j83nams1") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b")))) (y #t)))

(define-public crate-cita-vm-0.4.2 (c (n "cita-vm") (v "0.4.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "0hpp490kq3sb6ls8bv9jfci6paa37ckc9za7mfx0bzksqlrd23w6") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

(define-public crate-cita-vm-0.5.0 (c (n "cita-vm") (v "0.5.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ripemd") (r "^0.1") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.7") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)))) (h "1wrdkndzj2f0xhmgfvckhvj557rcddymb25lyzv2jx2qdxacvqdi") (f (quote (("sm3hash" "hasher/hash-sm3") ("sha3hash" "hasher/hash-keccak") ("default" "sha3hash") ("blake2bhash" "hasher/hash-blake2b"))))))

