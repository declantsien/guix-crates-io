(define-module (crates-io ci ph ciphersuite) #:use-module (crates-io))

(define-public crate-ciphersuite-0.1.0 (c (n "ciphersuite") (v "0.1.0") (d (list (d (n "dalek-ff-group") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hash2curve"))) (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (f (quote ("bits"))) (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "minimal-ed448") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "18prajrb2vhinyfrh3qa54dvahyxlx1cczpwx1y3nk5lwyf2vzh8") (f (quote (("std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("dalek" "sha2" "dalek-ff-group")))) (s 2) (e (quote (("p256" "kp256" "dep:p256"))))))

(define-public crate-ciphersuite-0.1.1 (c (n "ciphersuite") (v "0.1.1") (d (list (d (n "dalek-ff-group") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hash2curve"))) (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (f (quote ("bits"))) (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "minimal-ed448") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1fh69x7sjbdk1dgw8aw4kcpz5z4a2849x1rl28i5fm059d5f45z1") (f (quote (("std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("default" "std") ("dalek" "sha2" "dalek-ff-group")))) (s 2) (e (quote (("p256" "kp256" "dep:p256"))))))

(define-public crate-ciphersuite-0.2.0 (c (n "ciphersuite") (v "0.2.0") (d (list (d (n "dalek-ff-group") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hash2curve"))) (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (f (quote ("bits"))) (d #t) (k 0)) (d (n "ff-group-tests") (r "^0.12") (d #t) (k 2)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.12") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "minimal-ed448") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "transcript") (r "^0.3") (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0skj5wvw7iqc3w4wd39zx1j67gir1lvq14l2f0r9gfqi6z3i9yn4") (f (quote (("std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("default" "std") ("dalek" "sha2" "dalek-ff-group")))) (s 2) (e (quote (("p256" "kp256" "dep:p256"))))))

(define-public crate-ciphersuite-0.3.0 (c (n "ciphersuite") (v "0.3.0") (d (list (d (n "dalek-ff-group") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12") (f (quote ("hash2curve"))) (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (f (quote ("bits"))) (d #t) (k 0)) (d (n "ff-group-tests") (r "^0.12") (d #t) (k 2)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.12") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "minimal-ed448") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.12") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "transcript") (r "^0.3") (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "164226f2wvzqkzrgpx0785gwkrd6mhjjnca4lnkmigsha5zpsbj8") (f (quote (("std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("default" "std") ("dalek" "sha2" "dalek-ff-group")))) (s 2) (e (quote (("p256" "kp256" "dep:p256"))))))

(define-public crate-ciphersuite-0.4.0 (c (n "ciphersuite") (v "0.4.0") (d (list (d (n "dalek-ff-group") (r "^0.4") (o #t) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hash2curve"))) (o #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("bits"))) (k 0)) (d (n "ff-group-tests") (r "^0.13") (d #t) (k 2)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (k 0)) (d (n "minimal-ed448") (r "^0.4") (o #t) (k 0)) (d (n "p256") (r "^0.13.1") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "std-shims") (r "^0.1.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "transcript") (r "^0.3") (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (k 0)))) (h "1d4qysz0y5n145l5gv8gsvzpnccnsj1h021bkp18jm70750dlxam") (f (quote (("std" "zeroize/std" "std-shims/std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("default" "std") ("dalek" "sha2" "dalek-ff-group") ("alloc" "std-shims")))) (s 2) (e (quote (("p256" "kp256" "dep:p256")))) (r "1.70")))

(define-public crate-ciphersuite-0.4.1 (c (n "ciphersuite") (v "0.4.1") (d (list (d (n "dalek-ff-group") (r "^0.4") (o #t) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("hash2curve"))) (o #t) (k 0)) (d (n "ff") (r "^0.13") (f (quote ("bits"))) (k 0)) (d (n "ff-group-tests") (r "^0.13") (d #t) (k 2)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (k 0)) (d (n "minimal-ed448") (r "^0.4") (o #t) (k 0)) (d (n "p256") (r "^0.13.1") (f (quote ("arithmetic" "bits" "hash2curve"))) (o #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (k 0)) (d (n "sha3") (r "^0.10") (o #t) (k 0)) (d (n "std-shims") (r "^0.1.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "transcript") (r "^0.3.2") (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (k 0)))) (h "16b7ijwz529q3ml4lha62ihfl1w6jczhzyaxjrg60k35xrrzwzhv") (f (quote (("std" "zeroize/std" "std-shims/std") ("secp256k1" "kp256" "k256") ("ristretto" "dalek") ("kp256" "sha2" "elliptic-curve") ("ed448" "sha3" "minimal-ed448") ("ed25519" "dalek") ("default" "std") ("dalek" "sha2" "dalek-ff-group") ("alloc" "std-shims")))) (s 2) (e (quote (("p256" "kp256" "dep:p256")))) (r "1.70")))

