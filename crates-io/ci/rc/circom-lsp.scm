(define-module (crates-io ci rc circom-lsp) #:use-module (crates-io))

(define-public crate-circom-lsp-0.1.0 (c (n "circom-lsp") (v "0.1.0") (d (list (d (n "circom_parser") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-parser")) (d (n "circom_structure") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-program-structure")) (d (n "circom_type_checker") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-type-analysis")) (d (n "codespan-reporting") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ropey") (r "^1.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt-multi-thread" "macros" "io-std"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.19.0") (d #t) (k 0)))) (h "0y85k15dkmnqbnixwjc96f7j3pny8q9kd4vfbb914dmj1j8r3dd8")))

(define-public crate-circom-lsp-0.1.1 (c (n "circom-lsp") (v "0.1.1") (d (list (d (n "circom_parser") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-parser")) (d (n "circom_structure") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-program-structure")) (d (n "circom_type_checker") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-type-analysis")) (d (n "codespan-reporting") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ropey") (r "^1.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt-multi-thread" "macros" "io-std"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.19.0") (d #t) (k 0)))) (h "16lif7g3c52l4ndvcyxzva2v2kdxz3w4w0nz3vy5cszhp9gy6kxl")))

(define-public crate-circom-lsp-0.1.2 (c (n "circom-lsp") (v "0.1.2") (d (list (d (n "circom_parser") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-parser")) (d (n "circom_structure") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-program-structure")) (d (n "circom_type_checker") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-type-analysis")) (d (n "codespan-reporting") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ropey") (r "^1.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt-multi-thread" "macros" "io-std"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.19.0") (d #t) (k 0)))) (h "12aviwca7ww0b9z0spdyaadvhp0cb2igvskb3is6aws24r9gkdrp")))

(define-public crate-circom-lsp-0.1.3 (c (n "circom-lsp") (v "0.1.3") (d (list (d (n "circom_parser") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-parser")) (d (n "circom_structure") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-program-structure")) (d (n "circom_type_checker") (r "^2.1.5") (d #t) (k 0) (p "circom-lsp-type-analysis")) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19.9") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "ropey") (r "^1.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt-multi-thread" "macros" "io-std"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.19.0") (d #t) (k 0)))) (h "1zm6mx938waiw30jqv0jszn1ayk8ganfd5mwk6mkwpc2xd6mfk8w")))

