(define-module (crates-io ci rc circulo) #:use-module (crates-io))

(define-public crate-circulo-0.1.0 (c (n "circulo") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.68") (f (quote ("std" "backtrace"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1.61") (k 0)) (d (n "buhtig") (r "^0.0.9") (o #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("color" "derive" "std" "help"))) (o #t) (k 0)) (d (n "futures") (r "^0.3.25") (k 0)) (d (n "jacklog") (r "^0.1.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("strum_macros" "std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0.38") (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std" "attributes"))) (k 0)))) (h "18p0dcsrnxzaag80yxa1dg3zg0pasfkhinpygxzil7llaz8wvq96") (f (quote (("default" "bin") ("bin" "anyhow" "buhtig" "clap" "jacklog" "tokio"))))))

