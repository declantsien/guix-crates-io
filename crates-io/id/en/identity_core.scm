(define-module (crates-io id en identity_core) #:use-module (crates-io))

(define-public crate-identity_core-0.1.0 (c (n "identity_core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "totems") (r "^0.2.7") (d #t) (k 2)))) (h "07si5bzmrk4bnp8v5y9xkq2db42vy5zbhbj4sp2m3ca0wp6xqrir")))

(define-public crate-identity_core-0.6.0 (c (n "identity_core") (v "0.6.0") (d (list (d (n "identity-diff") (r "=0.6.0") (k 0)) (d (n "iota-crypto") (r ">=0.7, <0.10") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "0ga68ms95jghfl7ql75ksg146gz9nj3phblbc0hjqvyphy6j27mp")))

(define-public crate-identity_core-0.6.1 (c (n "identity_core") (v "0.6.1") (d (list (d (n "identity-diff") (r "=0.6.1") (k 0)) (d (n "iota-crypto") (r ">=0.7, <0.10") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "0gd7xwxck08lhmm8pr3vv74imhf7wrbwxckxbkycm7q1rzz7fczl")))

(define-public crate-identity_core-0.7.0-alpha.1 (c (n "identity_core") (v "0.7.0-alpha.1") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.1") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "1kjs0zx18fy6wb506frs8wlpryywq0l17l92qlr86z05vmyayq1f")))

(define-public crate-identity_core-0.7.0-alpha.2 (c (n "identity_core") (v "0.7.0-alpha.2") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.2") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "00i0mxzrk58ffan36412db68dkf26g01hlnlypb77lc3rxgwz6af")))

(define-public crate-identity_core-0.7.0-alpha.3 (c (n "identity_core") (v "0.7.0-alpha.3") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.3") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "1ribpiww15wl0qfq7c8hfsih3zpd7nlnmfwl7s1816y6z6zxgx4y")))

(define-public crate-identity_core-0.7.0-alpha.4 (c (n "identity_core") (v "0.7.0-alpha.4") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.4") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "19qn7prbwz5512wrvy3k9qdfzy6yvbdmnhhk1sbgbnhgxmsxs190")))

(define-public crate-identity_core-0.7.0-alpha.5 (c (n "identity_core") (v "0.7.0-alpha.5") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.5") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "0yqq5ldk9ib5x2ifnx9a19b5y56jbmi9ag9jprk7yrskfy8jd73s") (r "1.65")))

(define-public crate-identity_core-0.7.0-alpha.6 (c (n "identity_core") (v "0.7.0-alpha.6") (d (list (d (n "identity-diff") (r "=0.7.0-alpha.6") (k 0)) (d (n "iota-crypto") (r "^0.12.1") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "1b419vqdnca62lmzgj2s3mv0qgpnx5gbv28k4mrxjliv7qslpvhj") (r "1.65")))

(define-public crate-identity_core-0.6.2 (c (n "identity_core") (v "0.6.2") (d (list (d (n "identity-diff") (r "=0.6.2") (k 0)) (d (n "iota-crypto") (r ">=0.7, <0.10") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "17pcnl2531dzfm12bmkcd3sq7rivg8k9dhia99jd4bmh4rm0dqba")))

(define-public crate-identity_core-0.6.3-rc.1 (c (n "identity_core") (v "0.6.3-rc.1") (d (list (d (n "identity-diff") (r "=0.6.3-rc.1") (k 0)) (d (n "iota-crypto") (r ">=0.7, <0.10") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "0wqa68w2v3kbqgj1lhwamjz8clp7p0gdw6d06zlg88gpl8p1zjml")))

(define-public crate-identity_core-0.7.0-alpha.7 (c (n "identity_core") (v "0.7.0-alpha.7") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "1n4mkhvwgq4xz4j9k7vmrgmiqzc03gwfv1kndkgs2jl0hgw75ix6") (r "1.65")))

(define-public crate-identity_core-0.6.3 (c (n "identity_core") (v "0.6.3") (d (list (d (n "identity-diff") (r "=0.6.3") (k 0)) (d (n "iota-crypto") (r ">=0.7, <0.10") (f (quote ("ed25519" "random" "sha" "x25519"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (k 0)) (d (n "serde_jcs") (r "^0.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.4") (k 0)))) (h "0la7ma636rbslhqw8v6rk630yyzslqmc0v7yd03mals3jihvmhsb")))

(define-public crate-identity_core-0.7.0-alpha.8 (c (n "identity_core") (v "0.7.0-alpha.8") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "019irdq1lbi4pv91kzgjcpc44671y80mynx1mm8qxpbzfxan9h64") (r "1.65")))

(define-public crate-identity_core-1.0.0-rc.1 (c (n "identity_core") (v "1.0.0-rc.1") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "0idp2n6fhm4a7s76my8h3nzpvkgwx6iyz94vns7b3gzfkfc7y15i") (r "1.65")))

(define-public crate-identity_core-1.0.0 (c (n "identity_core") (v "1.0.0") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "1cxlr6l590jppapv92y1axgyzlm4yikhhrnxlk9kgdwsm081ivis") (r "1.65")))

(define-public crate-identity_core-1.1.0-alpha.1 (c (n "identity_core") (v "1.1.0-alpha.1") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "0irg97x3gvall9g5jmswsb3rln4mr8ksml3hm2zp85db34lkxcbn") (r "1.65")))

(define-public crate-identity_core-1.1.0 (c (n "identity_core") (v "1.1.0") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "083gpgi1i58kiabckk0wgcng65q057azw8vhmaqsia56pfhbqyjn") (r "1.65")))

(define-public crate-identity_core-1.1.1 (c (n "identity_core") (v "1.1.1") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "0f3g88fd1apgibl9a68bnj15p12iw84q32maq5krk96lx86rl7b2") (r "1.65")))

(define-public crate-identity_core-1.0.1 (c (n "identity_core") (v "1.0.1") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "0r711302kfybs4kbqxzx6wvqnpx3apr5h146gj57b327z112lshk") (r "1.65")))

(define-public crate-identity_core-1.2.0 (c (n "identity_core") (v "1.2.0") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "044ipi5d8w46z4y6lryx4ghi6ayi2jkkc6ywrv0j02c7hzarckk4") (r "1.65")))

(define-public crate-identity_core-1.3.0 (c (n "identity_core") (v "1.3.0") (d (list (d (n "iota-crypto") (r "^0.23") (f (quote ("ed25519" "random" "sha" "x25519" "std"))) (k 0)) (d (n "js-sys") (r "^0.3.55") (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "multibase") (r "^0.9") (f (quote ("std"))) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("alloc" "derive" "std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("std" "derive"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("std" "serde" "parsing" "formatting"))) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (k 0)) (d (n "zeroize") (r "^1.6") (k 0)))) (h "05ficipxgdycm794rgyy6w1b94bc4a1z51jsf0zwmkvcggm23p1k") (r "1.65")))

