(define-module (crates-io by te bytekind) #:use-module (crates-io))

(define-public crate-bytekind-0.1.0 (c (n "bytekind") (v "0.1.0") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "0z2nzx28illcz01ri51nd1l1y7l1ng83rkjxys663kyn5mwc3h53") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.1 (c (n "bytekind") (v "0.1.1") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "15myxf4dqiagnlm8xs4kgpfic3wgmlhnr0ac99kgnw5171dxaa45") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.2 (c (n "bytekind") (v "0.1.2") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "1qzbghbdvk707mn0s5s24sin8l4b8l1vn95bmfirnzxyfryix2h7") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.3 (c (n "bytekind") (v "0.1.3") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "1qm8xfypklpjvabflp1ab7hniixll2rf0gm1x9a2izjrba12qssv") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.4 (c (n "bytekind") (v "0.1.4") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "0akljdhy35808kfaaksnh4qz7z10r128z950iimil4xs3rsmgv6y") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.5 (c (n "bytekind") (v "0.1.5") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "0za71bqxvh2kjsmwfnr4a9ig6m9d86cv5563kh4mk1bkh9s96c7p") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.6 (c (n "bytekind") (v "0.1.6") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "1c5fiqs57z1bp2sbk2sffag8i1xhwf7h8zzlabccdrppnqpcz9hc") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.1.7 (c (n "bytekind") (v "0.1.7") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "1awzs1gca35rw0p550nf32wa9w2hqc1ijaqdnwcls6c7kybq94as") (f (quote (("std") ("default" "std" "hex"))))))

(define-public crate-bytekind-0.2.0 (c (n "bytekind") (v "0.2.0") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 2)) (d (n "unarray") (r "^0.1.4") (d #t) (k 0)))) (h "06n4fhj8nqc0hm3x6mmzqpjnh777xzx28pr3k2cz2nq3601wfwjc") (f (quote (("std") ("default" "std" "hex"))))))

