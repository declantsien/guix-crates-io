(define-module (crates-io s3 -s s3-sync) #:use-module (crates-io))

(define-public crate-s3-sync-0.1.0 (c (n "s3-sync") (v "0.1.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "either") (r "^1.5.2") (d #t) (k 0)) (d (n "ensure") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "problem") (r "^5.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.40.0") (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.40.0") (d #t) (k 0)))) (h "1jg1b2a2lhsv6avd4h16xmk14ffnlld1ylgq2b05ic8i053gxapy")))

(define-public crate-s3-sync-0.2.0 (c (n "s3-sync") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "either") (r "^1.5.2") (d #t) (k 0)) (d (n "ensure") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "problem") (r "^5.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.42.0") (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.42.0") (d #t) (k 0)))) (h "0dgn3vn5w2xgcajvjvxkl6ba0vbv9zvjxin5qcqrsrh334cc35i8")))

(define-public crate-s3-sync-0.2.1 (c (n "s3-sync") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "either") (r "^1.5.2") (d #t) (k 0)) (d (n "ensure") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "problem") (r "^5.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.42.0") (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.42.0") (d #t) (k 0)))) (h "021iwjh2cnhwb24l1wbx7g31vm3xmhm7izwwsynnndc7mdvijniv")))

(define-public crate-s3-sync-0.3.0 (c (n "s3-sync") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.5.2") (d #t) (k 0)) (d (n "ensure") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "problem") (r "^5.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.42.0") (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.42.0") (d #t) (k 0)))) (h "1yi7lzpmcngv2nzmi0npxaspyg82slv31az1z8k05a3dkgkq1fkk")))

(define-public crate-s3-sync-0.4.0 (c (n "s3-sync") (v "0.4.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "either") (r "^1.5.2") (d #t) (k 0)) (d (n "ensure") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "itertools") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "problem") (r "^5.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.42.0") (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.42.0") (d #t) (k 0)))) (h "19w5mnr6zp49rs11dj86miy4bb67gjyw40wa4s6g8bdajzclsxbb")))

