(define-module (crates-io ds f- dsf-rpc) #:use-module (crates-io))

(define-public crate-dsf-rpc-0.1.0 (c (n "dsf-rpc") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "humantime") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "0xbsd4iwqdw1j0bvql57zll6gkw2j8n08firhh4fxajhlwjvbcz5") (f (quote (("default" "diesel"))))))

(define-public crate-dsf-rpc-0.1.1 (c (n "dsf-rpc") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "humantime") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "0h06dzmcl5ygq2ybr8lp6my0xj1jy555y3zzg00387i9d9hqgsxc") (f (quote (("default" "diesel"))))))

(define-public crate-dsf-rpc-0.1.2 (c (n "dsf-rpc") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "humantime") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "1khhv845y8fwc5ifqh719jjcs8vrg5x7q5yhhkzk5gw1jxdaha6x") (f (quote (("default" "diesel"))))))

(define-public crate-dsf-rpc-0.1.3 (c (n "dsf-rpc") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.2") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "humantime") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "124hwsd792spx58jkag9dc2aa4f0fgsnr0bj2a9zmj23yjqxrwf5") (f (quote (("std") ("default" "std" "diesel"))))))

(define-public crate-dsf-rpc-0.2.0 (c (n "dsf-rpc") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-english") (r "^0.1.4") (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "dsf-core") (r "^0.2.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "humantime") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "0lvxkshdaz9xa4p7p00c2i89nb8wsi12lgnmwjs55w7670fjakjk") (f (quote (("std") ("default" "std" "diesel"))))))

