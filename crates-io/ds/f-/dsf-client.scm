(define-module (crates-io ds f- dsf-client) #:use-module (crates-io))

(define-public crate-dsf-client-0.1.0 (c (n "dsf-client") (v "0.1.0") (d (list (d (n "async-std") (r "^1.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dsf-rpc") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "simplelog") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.0") (d #t) (k 0)) (d (n "tui") (r "^0.9.0") (f (quote ("crossterm"))) (k 0)))) (h "0dpyw0gi8pzb1vnda4nxaqgzw6slrjwphxwgsbd13p4jghj1yv6j") (f (quote (("default" "cli") ("cli" "structopt" "simplelog" "humantime"))))))

(define-public crate-dsf-client-0.1.2 (c (n "dsf-client") (v "0.1.2") (d (list (d (n "async-std") (r "^1.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dsf-rpc") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "simplelog") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.0") (d #t) (k 0)) (d (n "tui") (r "^0.9.0") (f (quote ("crossterm"))) (k 0)))) (h "11jsxya8nif9vn51yxqi3l11736ag8la41pfqrzhk0lhhjjzw81g") (f (quote (("default" "cli") ("cli" "structopt" "simplelog" "humantime"))))))

(define-public crate-dsf-client-0.1.3 (c (n "dsf-client") (v "0.1.3") (d (list (d (n "async-std") (r "^1.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "dsf-core") (r "^0.1.3") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "dsf-rpc") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "simplelog") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.0") (d #t) (k 0)) (d (n "tui") (r "^0.9.0") (f (quote ("crossterm"))) (k 0)))) (h "1ck7329i7kk07w5wl090z7sw4pf5bij2n0qza0jsn5zcwddv6l34") (f (quote (("default" "cli") ("cli" "structopt" "simplelog" "humantime"))))))

(define-public crate-dsf-client-0.2.0 (c (n "dsf-client") (v "0.2.0") (d (list (d (n "async-std") (r "^1.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.0.11") (d #t) (k 0)) (d (n "colored") (r "^1.9.0") (d #t) (k 0)) (d (n "dsf-core") (r "^0.2.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "dsf-rpc") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures_codec") (r "^0.4.0") (f (quote ("json"))) (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "simplelog") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.0") (d #t) (k 0)) (d (n "tui") (r "^0.9.0") (f (quote ("crossterm"))) (k 0)))) (h "0sdadgrkwx771hlkg1nwjrydl7d7n0wn0sndccz4znjf88vf352a") (f (quote (("default" "cli") ("cli" "structopt" "simplelog" "humantime"))))))

