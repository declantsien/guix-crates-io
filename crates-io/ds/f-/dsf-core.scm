(define-module (crates-io ds f- dsf-core) #:use-module (crates-io))

(define-public crate-dsf-core-0.1.0 (c (n "dsf-core") (v "0.1.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "derive_builder") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 0)) (d (n "futures-timer") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "ls") (r "^0.0.0") (d #t) (k 0)) (d (n "newtype_array") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slice-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2.0") (d #t) (k 0)))) (h "03ayc92iljyf1mn5jy0kb21iy6a6w44n8n73kcapsiaf2m77fi24")))

(define-public crate-dsf-core-0.1.1 (c (n "dsf-core") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.19") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "derive_builder") (r "^0.7.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.9.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "ls") (r "^0.0.0") (d #t) (k 0)) (d (n "newtype_array") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "slice-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "1ir7x38jb6lpxrkzb776y9czdakl3jzc03rx6w1ia3lpa70cphs0")))

(define-public crate-dsf-core-0.1.2 (c (n "dsf-core") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.19") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.10") (d #t) (k 0)) (d (n "derive_builder") (r "^0.7.0") (d #t) (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^0.9.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-timer") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "ls") (r "^0.0.0") (d #t) (k 0)) (d (n "newtype_array") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "slice-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "1bgscyfpl1z897s6f75ypfs48l6gzx9d1bbs5j3jaqqrz89p3ay5")))

(define-public crate-dsf-core-0.1.3 (c (n "dsf-core") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.19") (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "bytes") (r "^0.5.4") (k 0)) (d (n "chrono") (r "^0.4.11") (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "managed") (r "^0.7.1") (k 0)) (d (n "no-std-net") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (k 0)) (d (n "slice-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (k 0)) (d (n "strum") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "strum_macros") (r "^0.17.1") (d #t) (k 0)))) (h "0ip3wqc0hp31rb45jjygxj8h26pr4vc3y0h2s1di8zsdbwg84lbd") (f (quote (("std" "managed/std" "bytes/std" "base64/std" "byteorder/std" "sodiumoxide/std" "sha2/std" "chrono/std" "strum") ("default" "std" "serde") ("alloc" "base64/alloc" "chrono/alloc"))))))

(define-public crate-dsf-core-0.2.0 (c (n "dsf-core") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.19") (d #t) (k 0)) (d (n "base64") (r "^0.12.1") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "bytes") (r "^0.5.4") (k 0)) (d (n "chrono") (r "^0.4.11") (k 0)) (d (n "diesel") (r "^1.4.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "managed") (r "^0.7.1") (k 0)) (d (n "no-std-net") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (k 0)) (d (n "slice-ext") (r "^0.1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2.5") (k 0)) (d (n "strum") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "strum_macros") (r "^0.20.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "0ns8a3715xhh0mss681m1jyyxaf335s719qic8678005h6lrq1ii") (f (quote (("std" "managed/std" "bytes/std" "base64/std" "byteorder/std" "sodiumoxide/std" "sha2/std" "chrono/std" "strum" "strum_macros") ("default" "std" "serde") ("alloc" "base64/alloc" "chrono/alloc"))))))

