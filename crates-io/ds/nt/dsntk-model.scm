(define-module (crates-io ds nt dsntk-model) #:use-module (crates-io))

(define-public crate-dsntk-model-0.0.0 (c (n "dsntk-model") (v "0.0.0") (d (list (d (n "dsntk-common") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.1") (d #t) (k 0)))) (h "03z6i9v6sg1v7xrb3x94xflp6a3dklsfjdpmy9zzanwixnhfx889")))

(define-public crate-dsntk-model-0.0.1 (c (n "dsntk-model") (v "0.0.1") (d (list (d (n "dsntk-common") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.1") (d #t) (k 0)))) (h "0xl4mzzbmn5l5cw19xg6i27iqb8j2019msxmxlmcjr8v2gywvxd9")))

(define-public crate-dsntk-model-0.0.2 (c (n "dsntk-model") (v "0.0.2") (d (list (d (n "dsntk-common") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.1") (d #t) (k 0)))) (h "03rakidwbkjagdn84fqkb361k4z8h059lf6ih1k0n3cvkbg5ipyh")))

(define-public crate-dsntk-model-0.0.3 (c (n "dsntk-model") (v "0.0.3") (d (list (d (n "dsntk-common") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)))) (h "0dz50ycpxzlr6ab4529dkycbr6rd9n1dz4npl8ca2v8h9lgwhsby")))

(define-public crate-dsntk-model-0.0.4 (c (n "dsntk-model") (v "0.0.4") (d (list (d (n "dsntk-common") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)))) (h "1lxqhd387yxa42znkyypmdik58098h9k1kq25bw6grjzy97s0bp3")))

(define-public crate-dsntk-model-0.0.5 (c (n "dsntk-model") (v "0.0.5") (d (list (d (n "dsntk-common") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-examples") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)))) (h "1ivda47c0lcbiy3laj0n8v6r4448sxn51msy5drnpnq42rnhwv39")))

