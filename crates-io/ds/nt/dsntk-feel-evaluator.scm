(define-module (crates-io ds nt dsntk-feel-evaluator) #:use-module (crates-io))

(define-public crate-dsntk-feel-evaluator-0.0.0 (c (n "dsntk-feel-evaluator") (v "0.0.0") (d (list (d (n "dsntk-common") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.0") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)))) (h "13zazcm8g92a1khjzq397ijk2rr3bwsann4c55q82413n1ir6y14")))

(define-public crate-dsntk-feel-evaluator-0.0.1 (c (n "dsntk-feel-evaluator") (v "0.0.1") (d (list (d (n "dsntk-common") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.1") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)))) (h "1wsddh7ifmm8z52y7991311sakqcax0s4f99hwz9w134ijkvnwhf")))

(define-public crate-dsntk-feel-evaluator-0.0.2 (c (n "dsntk-feel-evaluator") (v "0.0.2") (d (list (d (n "dsntk-common") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.2") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)))) (h "0g8ijn5qvldky2z77ximmj1skm121i56x0yryc2cwxabxf9r2cmi")))

(define-public crate-dsntk-feel-evaluator-0.0.3 (c (n "dsntk-feel-evaluator") (v "0.0.3") (d (list (d (n "dsntk-common") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.3") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)))) (h "1sdz5s49ik23g7shh0p3sk5kpllh5igxkb6my6jf8q5qjps07jg2")))

(define-public crate-dsntk-feel-evaluator-0.0.4 (c (n "dsntk-feel-evaluator") (v "0.0.4") (d (list (d (n "dsntk-common") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel-regex") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.4") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)))) (h "00hbsz9rx8rm4ifqwqwqg30l9kpqqwa2k5gnnhpf3k19lkd5qs9w")))

(define-public crate-dsntk-feel-evaluator-0.0.5 (c (n "dsntk-feel-evaluator") (v "0.0.5") (d (list (d (n "dsntk-common") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel-parser") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel-regex") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-feel-temporal") (r "^0.0.5") (d #t) (k 0)) (d (n "dsntk-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.3") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)))) (h "11nfid769ibqh9962k7nq81ghjzr1g0zf3lfn5afly60pqj9i04l")))

