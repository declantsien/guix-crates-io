(define-module (crates-io ds rs dsrs) #:use-module (crates-io))

(define-public crate-dsrs-0.1.0 (c (n "dsrs") (v "0.1.0") (d (list (d (n "amadeus-streaming") (r "^0.4") (d #t) (k 2)) (d (n "byte-slice-cast") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cxx") (r "^1.0") (d #t) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "hyperloglogplus") (r "^0.4") (f (quote ("const-loop"))) (d #t) (k 2)) (d (n "ordered-float") (r "^2.5") (d #t) (k 2)) (d (n "probabilistic-collections") (r "^0.7") (d #t) (k 2)) (d (n "probably") (r "^0.3") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1z2pw15s0m22w2m67pm1sj04m2wl058mx0bpzqhy8c4b091ihpy9")))

(define-public crate-dsrs-0.2.0 (c (n "dsrs") (v "0.2.0") (d (list (d (n "amadeus-streaming") (r "^0.4") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cxx") (r "^1.0") (d #t) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "hyperloglogplus") (r "^0.4") (f (quote ("const-loop"))) (d #t) (k 2)) (d (n "memchr") (r "^2.3") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 2)) (d (n "probabilistic-collections") (r "^0.7") (d #t) (k 2)) (d (n "probably") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "1c1pznjzqkxz8gnlpq8kn4fx7hiqb39biih6islsf775n58cw10p")))

(define-public crate-dsrs-0.3.0 (c (n "dsrs") (v "0.3.0") (d (list (d (n "amadeus-streaming") (r "^0.4") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cxx") (r "^1.0") (d #t) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "hyperloglogplus") (r "^0.4") (f (quote ("const-loop"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 2)) (d (n "probabilistic-collections") (r "^0.7") (d #t) (k 2)) (d (n "probably") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "05pvyvlzbx09bq96spp5dyfgdsvs437inz15fjwqavwssl2l7j7x")))

(define-public crate-dsrs-0.4.0 (c (n "dsrs") (v "0.4.0") (d (list (d (n "amadeus-streaming") (r "^0.4") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cxx") (r "^1.0") (d #t) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "hyperloglogplus") (r "^0.4") (f (quote ("const-loop"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 2)) (d (n "probabilistic-collections") (r "^0.7") (d #t) (k 2)) (d (n "probably") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)))) (h "0nq6f69i9n5cx5vc0ccc5qwg4m9fcfnnrqp3nifxvgpxrxadhmfp")))

(define-public crate-dsrs-0.6.1 (c (n "dsrs") (v "0.6.1") (d (list (d (n "amadeus-streaming") (r "^0.4") (d #t) (k 2)) (d (n "assert_cmd") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "byte-slice-cast") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cxx") (r "^1.0") (d #t) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "hyperloglogplus") (r "^0.4") (f (quote ("const-loop"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "memchr") (r "^2.3") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (d #t) (k 2)) (d (n "probabilistic-collections") (r "^0.7") (d #t) (k 2)) (d (n "probably") (r "^0.3") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thin-dst") (r "^1.1") (d #t) (k 0)))) (h "1v4v3z6h1si6gvkq485knj3ajkz2wqv3mmz05g13yva8zfmh6l1f")))

