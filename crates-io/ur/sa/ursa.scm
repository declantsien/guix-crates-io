(define-module (crates-io ur sa ursa) #:use-module (crates-io))

(define-public crate-ursa-0.1.0-dev-1 (c (n "ursa") (v "0.1.0-dev-1") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (d #t) (k 2)) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7.1") (d #t) (k 0)) (d (n "sha3") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)))) (h "0bb08284n0xhq00nvw72bbc8fir3y0vbyyp9igsw54309sii499f") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rust-crypto" "rustlibsecp256k1" "cl") ("pair_amcl" "amcl") ("native" "secp256k1" "libsodium-ffi") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.0-dev-2 (c (n "ursa") (v "0.1.0-dev-2") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (d #t) (k 2)) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7.1") (d #t) (k 0)) (d (n "sha3") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)))) (h "13bc3gdccsz86gqhnqfzyg7zpzc3n0cd9dblgh3fapp9p3jxy61b") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rust-crypto" "rustlibsecp256k1" "cl") ("pair_amcl" "amcl") ("native" "secp256k1" "libsodium-ffi") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.0-dev-3 (c (n "ursa") (v "0.1.0-dev-3") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.1.0") (d #t) (k 2)) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.7.1") (d #t) (k 0)) (d (n "sha3") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)))) (h "15150ikb2qnld5akpbsj7z0vy92xmpaizsyd0kbk0qa85iizglpa") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rust-crypto" "rustlibsecp256k1" "cl") ("pair_amcl" "amcl") ("native" "secp256k1" "libsodium-ffi") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.0 (c (n "ursa") (v "0.1.0") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0l4f6li0l42sb06b8jkxxjzibbfa0ascydjn6qd4fj9xsrgb3aiz") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.1-dev-1 (c (n "ursa") (v "0.1.1-dev-1") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "178g0bl9ybib4ra455x12zzg4mr3w8h9nd1kq3haw1l5pws8095p") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.1-dev-2 (c (n "ursa") (v "0.1.1-dev-2") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "06b9bqn2vi07rv7s02akh13j29dgrsjjgnhy3bw9gk175ywf84cl") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.1.1 (c (n "ursa") (v "0.1.1") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "1y6rybjmh9ppcmc9657x5yffxijhzpd81hh5806fdgk1d0x6i0ch") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-1 (c (n "ursa") (v "0.2.0-dev-1") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0l1pq962ywdqhwhswmx3gri85lyvnq1dvp0l87pj2h48811hghgb") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-2 (c (n "ursa") (v "0.2.0-dev-2") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "03wxdfsyh779m60zplsjl01pvhrp1n99pb0b3vzs9jxzb7c266mm") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-3 (c (n "ursa") (v "0.2.0-dev-3") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "05m6578j0yqazbdvhj51qhbrbhs30g8yfl2m6nrsqn573w59ql8y") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-4 (c (n "ursa") (v "0.2.0-dev-4") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0r75dvvdrpz3p4s1kjrgvz5gxq4ii6yajdmam9745mqbw64dyd4h") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-5 (c (n "ursa") (v "0.2.0-dev-5") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0365bi404zs878dzb4d4ihrd5vrgj2ak11pl380p353msg27rw99") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "ffi" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0-dev-6 (c (n "ursa") (v "0.2.0-dev-6") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "1psc757m2z6l84x6f5gh7vgqhg7f4jgclb4a3q8vzbff6lj5wi05") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.2.0 (c (n "ursa") (v "0.2.0") (d (list (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.5.10") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.12") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.13") (d #t) (k 2)) (d (n "log") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rustlibsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.2.2") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.12.0") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.12.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^0.5") (d #t) (k 0)))) (h "0hl9zhm0ad2s3fzy18la2g5n0k6vvlrh26ilg339my7y8fr37hzc") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "portable" "js-sys") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls") ("pair_amcl" "amcl") ("native" "secp256k1") ("ffi" "ffi-support") ("default" "bn_openssl" "pair_amcl" "serialization" "native" "cl" "bls") ("cl") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi"))))))

(define-public crate-ursa-0.3.0 (c (n "ursa") (v "0.3.0") (d (list (d (n "aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.1.7") (f (quote ("bls381"))) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (k 0)) (d (n "block-modes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.2") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "generic-array") (r "^0.13") (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.1.17") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 0)) (d (n "rust-crypto-wasm") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.2.1") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "rustlibsecp256k1") (r "^0.3") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.3") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.15") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1wa337d34rizxmxqyf418hwyyag9xizasi588hjb0qrw3k3xklib") (f (quote (("wasm" "wasm-bindgen" "console_error_panic_hook" "pair_amcl" "bn_rust" "serialization" "rustlibsecp256k1" "bls" "blake2/std" "sha2/std" "sha3" "js-sys" "rust-crypto-wasm" "encryption") ("std" "sha2/std" "sha3" "blake2/std" "ed25519-dalek/std" "ed25519-dalek/u64_backend") ("serialization" "serde" "serde_json" "serde_derive") ("portable" "bn_rust" "pair_amcl" "serialization" "rustlibsecp256k1" "cl" "bls" "std" "encryption") ("pair_amcl" "amcl") ("nightly" "sha2/asm" "sha3" "blake2/simd_asm" "ed25519-dalek/nightly" "ed25519-dalek/avx2_backend") ("native_secp256k1" "secp256k1") ("ffi" "ffi-support") ("encryption_asm" "aescbc_openssl" "aesgcm_openssl" "chacha20poly1305_libsodium") ("encryption" "aes-cbc" "aes-gcm" "chacha20poly1305") ("default" "bn_openssl" "pair_amcl" "serialization" "native_secp256k1" "cl" "bls" "std" "encryption_asm") ("cl") ("chacha20poly1305_libsodium" "libsodium-ffi") ("chacha20poly1305" "rustchacha20poly1305") ("bn_rust" "num-bigint" "glass_pumpkin" "int_traits" "num-integer" "num-traits") ("bn_openssl" "openssl" "int_traits") ("bls") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "bn_openssl" "pair_amcl" "serialization" "encryption_asm" "native_secp256k1" "ffi" "cl" "bls" "nightly") ("aesgcm_openssl" "aead" "openssl") ("aescbc_openssl" "aead" "openssl") ("aes-cbc" "aead" "aes" "block-modes" "block-padding" "hmac" "sha2" "subtle"))))))

(define-public crate-ursa-0.3.1 (c (n "ursa") (v "0.3.1") (d (list (d (n "aead") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.1.7") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (k 0)) (d (n "block-modes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0-pre.2") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.3.1") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "rustlibsecp256k1") (r "^0.3") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.3") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.17") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.0") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "18yl22nj6k58gcvnxp52andxcjaz2kzrqh1yrrph5yx611vzd1q1") (f (quote (("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "serde" "signatures") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "log" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("default" "encryption" "hashes" "serde" "signatures_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

(define-public crate-ursa-0.3.2 (c (n "ursa") (v "0.3.2") (d (list (d (n "aead") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.1.7") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (k 0)) (d (n "block-modes") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "= 1.2.3") (o #t) (k 0)) (d (n "ed25519-dalek") (r "= 1.0.0-pre.2") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "= 0.6.5") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "= 0.1.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.3.1") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "rustlibsecp256k1") (r "^0.3") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.3") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.17") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "= 0.5.2") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "1rhkqyl3m0mavx31z59wqp8izxgwx7mraddpxlm5ibgbjq67yfng") (f (quote (("x25519_asm" "arrayref" "curve25519-dalek/nightly" "curve25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "x25519-dalek/nightly" "x25519-dalek/u64_backend" "zeroize") ("x25519" "arrayref" "curve25519-dalek/std" "curve25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "x25519-dalek/std" "x25519-dalek/u64_backend" "zeroize") ("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "kex" "serde" "signatures") ("logger" "env_logger" "log") ("kex_native" "ecdh_secp256k1_native" "x25519") ("kex_asm" "ecdh_secp256k1_asm" "x25519_asm") ("kex" "ecdh_secp256k1" "x25519") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "logger" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("ecdh_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdh_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdh_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("default" "encryption" "hashes" "kex" "serde" "signatures_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

(define-public crate-ursa-0.3.4 (c (n "ursa") (v "0.3.4") (d (list (d (n "aead") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.3.5") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (k 0)) (d (n "block-modes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2.0.0") (o #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.0") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "=0.1.42") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "=0.7") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.2.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.5.0") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "rustlibsecp256k1") (r "^0.3") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.3") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.17") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "=0.6.0") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "0fmmrj7dcwb557zn5yshvcmg8wp1gcpj46l83145l4h8hkhrawh2") (f (quote (("x25519_asm" "arrayref" "curve25519-dalek/nightly" "curve25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "x25519-dalek/nightly" "x25519-dalek/u64_backend" "zeroize") ("x25519" "arrayref" "curve25519-dalek/std" "curve25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "x25519-dalek/std" "x25519-dalek/u64_backend" "zeroize") ("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "kex" "serde" "signatures") ("logger" "env_logger" "log") ("kex_native" "ecdh_secp256k1_native" "x25519") ("kex_asm" "ecdh_secp256k1_asm" "x25519_asm") ("kex" "ecdh_secp256k1" "x25519") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "logger" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/simd_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("ecdh_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdh_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdh_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("default" "encryption" "hashes" "kex" "serde" "signatures_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

(define-public crate-ursa-0.3.5 (c (n "ursa") (v "0.3.5") (d (list (d (n "aead") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254" "secp256k1"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.4.0") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (k 0)) (d (n "block-modes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2.0.0") (o #t) (k 0)) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hkdf") (r "^0.8") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.0") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "=0.1.42") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "=0.7") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.2.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.5.0") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "rustlibsecp256k1") (r "^0.3") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rustlibsecp256k1") (r "^0.3") (d #t) (k 2) (p "libsecp256k1")) (d (n "secp256k1") (r "^0.17") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2.1") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "=0.6.0") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "1dm8kym1w7s0km0anpqw9n2l957yl2ygzzva1agal0z3hdd0pra2") (f (quote (("x25519_asm" "arrayref" "curve25519-dalek/nightly" "curve25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "x25519-dalek/nightly" "x25519-dalek/u64_backend" "zeroize") ("x25519" "arrayref" "curve25519-dalek/std" "curve25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "x25519-dalek/std" "x25519-dalek/u64_backend" "zeroize") ("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("sharing_native" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("sharing" "failure" "glass_pumpkin" "int_traits" "lazy_static" "num-bigint" "num-integer" "num-traits" "log" "rand" "sha2/std" "time") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "kex" "serde" "signatures" "sharing") ("logger" "env_logger" "log") ("kex_native" "ecdh_secp256k1_native" "x25519") ("kex_asm" "ecdh_secp256k1_asm" "x25519_asm") ("kex" "ecdh_secp256k1" "x25519") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "logger" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/simd_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("ecdh_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdh_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "secp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdh_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "rustlibsecp256k1" "sha2/std" "zeroize") ("default" "encryption" "hashes" "kex" "serde" "signatures_native" "sharing_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "secp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

(define-public crate-ursa-0.3.6 (c (n "ursa") (v "0.3.6") (d (list (d (n "aead") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.4.0") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "bitcoinsecp256k1") (r "^0.19") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "bitcoinsecp256k1") (r "^0.19") (d #t) (k 2) (p "secp256k1")) (d (n "blake2") (r "^0.9") (o #t) (k 0)) (d (n "block-modes") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hkdf") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdh" "ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "k256") (r "^0.7") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.0") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "=0.1.42") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.2.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.7") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha3") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "12v8avd86zp09mgabh39yjkqw0n75gnvhdr6k6lp6qc1zm150fjw") (f (quote (("x25519_asm" "arrayref" "curve25519-dalek/nightly" "curve25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "x25519-dalek/nightly" "x25519-dalek/u64_backend" "zeroize") ("x25519" "arrayref" "curve25519-dalek/std" "curve25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "x25519-dalek/std" "x25519-dalek/u64_backend" "zeroize") ("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("sharing_native" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("sharing" "failure" "glass_pumpkin" "int_traits" "lazy_static" "num-bigint" "num-integer" "num-traits" "log" "rand" "sha2/std" "time") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "kex" "serde" "signatures" "sharing") ("logger" "env_logger" "log") ("kex_native" "ecdh_secp256k1_native" "x25519") ("kex_asm" "ecdh_secp256k1_asm" "x25519_asm") ("kex" "ecdh_secp256k1" "x25519") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "logger" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/simd_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "k256" "sha2/std" "zeroize") ("ecdh_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdh_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdh_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "k256" "sha2/std" "zeroize") ("default" "encryption" "hashes" "kex" "serde" "signatures_native" "sharing_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "hkdf" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "bitcoinsecp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

(define-public crate-ursa-0.3.7 (c (n "ursa") (v "0.3.7") (d (list (d (n "aead") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "aes") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "amcl") (r "^0.2") (f (quote ("bn254"))) (o #t) (k 0)) (d (n "amcl_wrapper") (r "^0.4.0") (f (quote ("bls381"))) (o #t) (d #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "bitcoinsecp256k1") (r "^0.19") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0) (p "secp256k1")) (d (n "bitcoinsecp256k1") (r "^0.19") (d #t) (k 2) (p "secp256k1")) (d (n "blake2") (r "^0.9") (o #t) (k 0)) (d (n "block-modes") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "block-padding") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bytebuffer-rs") (r "^0.3.0") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^3.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "ffi-support") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "glass_pumpkin") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "hkdf") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "k256") (r "^0.9.6") (f (quote ("ecdh" "ecdsa" "sha256"))) (o #t) (d #t) (k 0)) (d (n "k256") (r "^0.9.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "libsodium-ffi") (r "^0.2.2") (d #t) (k 2)) (d (n "log") (r "^0.4.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.0") (f (quote ("rand"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "=0.1.42") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("wasm-bindgen"))) (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "=0.2.1") (o #t) (d #t) (k 0)) (d (n "rustchacha20poly1305") (r "^0.7") (o #t) (d #t) (k 0) (p "chacha20poly1305")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9.5") (o #t) (k 0)) (d (n "sha3") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (o #t) (d #t) (k 0)))) (h "0fz66b9fhaqncr8x9505m7adjzsnz6lhjp71k7sy7lz430pacq47") (f (quote (("x25519_asm" "arrayref" "curve25519-dalek/nightly" "curve25519-dalek/avx2_backend" "hex" "rand" "rand_chacha" "sha2/asm" "x25519-dalek/nightly" "x25519-dalek/u64_backend" "zeroize") ("x25519" "arrayref" "curve25519-dalek/std" "curve25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "x25519-dalek/std" "x25519-dalek/u64_backend" "zeroize") ("wasm" "console_error_panic_hook" "failure" "hex" "js-sys" "log" "rand/wasm-bindgen" "serde" "serde_json" "wasm-bindgen" "zeroize") ("signatures_native" "cl_native" "ed25519" "ecdsa_secp256k1_native" "bls_bls12381" "bls_bn254") ("signatures_asm" "cl_native" "ed25519_asm" "ecdsa_secp256k1_asm" "bls_bls12381" "bls_bn254_asm") ("signatures" "cl" "ed25519" "ecdsa_secp256k1" "bls_bls12381" "bls_bn254") ("sharing_native" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("sharing" "failure" "glass_pumpkin" "int_traits" "lazy_static" "num-bigint" "num-integer" "num-traits" "log" "rand" "sha2/std" "time") ("portable_wasm" "portable" "wasm") ("portable" "clear_on_drop/no_cc" "encryption" "hashes" "kex" "serde" "signatures" "sharing") ("logger" "env_logger" "log") ("kex_native" "ecdh_secp256k1_native" "x25519") ("kex_asm" "ecdh_secp256k1_asm" "x25519_asm") ("kex" "ecdh_secp256k1" "x25519") ("hashes_asm" "blake2/simd_asm" "sha2/asm" "sha3") ("hashes" "blake2/std" "sha2/std" "sha3") ("ffi" "failure" "ffi-support" "logger" "serde" "serde_json" "time") ("encryption_asm" "aescbc_native" "aesgcm_native" "chacha20poly1305_native") ("encryption" "aescbc" "aesgcm" "chacha20poly1305") ("ed25519_asm" "arrayref" "ed25519-dalek/nightly" "ed25519-dalek/simd_backend" "hex" "rand" "rand_chacha" "sha2/asm" "zeroize") ("ed25519" "arrayref" "ed25519-dalek/std" "ed25519-dalek/u64_backend" "hex" "rand" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdsa_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdsa_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "k256" "sha2/std" "zeroize") ("ecdh_secp256k1_native" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/std" "zeroize") ("ecdh_secp256k1_asm" "arrayref" "failure" "hex" "log" "rand" "bitcoinsecp256k1" "rand_chacha" "sha2/asm" "zeroize") ("ecdh_secp256k1" "amcl" "arrayref" "failure" "hex" "rand" "rand_chacha" "k256" "sha2/std" "zeroize") ("default" "encryption" "hashes" "kex" "serde" "signatures_native" "sharing_native") ("cl_native" "amcl" "failure" "int_traits" "lazy_static" "log" "openssl" "rand" "time") ("cl" "amcl" "failure" "glass_pumpkin" "int_traits" "lazy_static" "log" "num-bigint" "num-integer" "num-traits" "rand" "sha2/std" "time") ("chacha20poly1305_native" "aead" "hex" "lazy_static" "libsodium-ffi" "rand" "zeroize") ("chacha20poly1305" "aead" "hex" "rand" "rustchacha20poly1305" "zeroize") ("bls_bn254_asm" "amcl" "failure" "log" "rand" "sha2/asm" "sha3") ("bls_bn254" "amcl" "failure" "log" "rand" "sha2/std" "sha3") ("bls_bls12381" "amcl_wrapper" "hex" "hkdf" "zeroize") ("benchmarkxchacha20poly1305" "libsodium-ffi") ("benchmarksecp256k1" "bitcoinsecp256k1" "openssl") ("benchmarked25519" "libsodium-ffi") ("benchmarkaesgcm" "openssl") ("benchmarkaescbc" "openssl") ("asm" "encryption_asm" "ffi" "hashes_asm" "serde" "signatures_asm") ("aesgcm_native" "aead" "hex" "rand" "openssl" "zeroize") ("aesgcm" "aead" "aes-gcm" "hex" "rand" "zeroize") ("aescbc_native" "aead" "hex" "rand" "openssl" "zeroize") ("aescbc" "aead" "aes" "block-modes" "block-padding" "hex" "hmac" "rand" "sha2/std" "subtle" "zeroize"))))))

