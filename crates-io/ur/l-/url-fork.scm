(define-module (crates-io ur l- url-fork) #:use-module (crates-io))

(define-public crate-url-fork-2.4.0 (c (n "url-fork") (v "2.4.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.0") (f (quote ("alloc"))) (k 0)) (d (n "idna") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "no-std-net") (r "^0.6.0") (o #t) (k 0)) (d (n "percent-encoding") (r "^2.3.0") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "04bd7i5cpxr0ap0i5q2ri6i9ni8qlc3819kb3ki18nax965k3h42") (f (quote (("std" "idna/std" "percent-encoding/std" "form_urlencoded/std" "serde/std" "alloc") ("no_std_net" "no-std-net") ("expose_internals") ("default" "std") ("debugger_visualizer") ("alloc")))) (y #t) (r "1.56")))

(define-public crate-url-fork-3.0.0 (c (n "url-fork") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2") (f (quote ("alloc"))) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "unicode-bidi") (r "^0.3") (f (quote ("hardcoded-data"))) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (k 0)))) (h "1kn2s5rgnqb7xsvcvx3rzhbhp3crsyf4hxk7i9qhn7qhgsfzqslm") (f (quote (("std" "percent-encoding/std" "form_urlencoded/std" "serde/std" "unicode-bidi/std" "unicode-normalization/std") ("expose_internals") ("default" "std")))) (r "1.56")))

(define-public crate-url-fork-3.0.1 (c (n "url-fork") (v "3.0.1") (d (list (d (n "form_urlencoded") (r "^1.2") (f (quote ("alloc"))) (k 0)) (d (n "idna") (r "^0.5") (f (quote ("alloc"))) (k 0)) (d (n "percent-encoding") (r "^2.3") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1ml9mml1yjhdv9b18yf98vbrn3mgx45bf01h9laqdrxq74y358vz") (f (quote (("std" "form_urlencoded/std" "idna/std" "percent-encoding/std" "serde/std") ("expose_internals") ("default" "std")))) (r "1.56")))

