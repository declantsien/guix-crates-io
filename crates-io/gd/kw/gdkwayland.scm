(define-module (crates-io gd kw gdkwayland) #:use-module (crates-io))

(define-public crate-gdkwayland-0.0.0 (c (n "gdkwayland") (v "0.0.0") (h "0pdg0klc7d3iqdiyfn0kgkgs4dfxkrbx6ij4mb98fhd9cxh5h0pl")))

(define-public crate-gdkwayland-0.15.0 (c (n "gdkwayland") (v "0.15.0") (d (list (d (n "ffi") (r "^0.15.0") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.15.0") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.15.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "08xh98m08qigvcvfv840dqlxmqhlnhhgx3a6riyxvxdxmcihnlf9") (f (quote (("v3_24" "v3_22" "ffi/v3_24" "gdk/v3_24") ("v3_22" "v3_20" "ffi/v3_22" "gdk/v3_22") ("v3_20" "ffi/v3_20" "gdk/v3_20") ("dox" "ffi/dox")))) (y #t) (r "1.56")))

(define-public crate-gdkwayland-0.15.1 (c (n "gdkwayland") (v "0.15.1") (d (list (d (n "ffi") (r "^0.15.1") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.15.1") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.15.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "1wr0kqhhkr9j1nqqswz5g483h59cypf3z3q5hwbg28jidm9z9b3k") (f (quote (("v3_24" "v3_22" "ffi/v3_24" "gdk/v3_24") ("v3_22" "v3_20" "ffi/v3_22" "gdk/v3_22") ("v3_20" "ffi/v3_20" "gdk/v3_20") ("dox" "ffi/dox")))) (r "1.56")))

(define-public crate-gdkwayland-0.15.2 (c (n "gdkwayland") (v "0.15.2") (d (list (d (n "ffi") (r "^0.15.1") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.15.1") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.15.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "0jkfbwjqm8waq8lsygxcbr464rd0nsizkm4g8pvrdxmy6p7zcqc3") (f (quote (("v3_24" "v3_22" "ffi/v3_24" "gdk/v3_24") ("v3_22" "v3_20" "ffi/v3_22" "gdk/v3_22") ("v3_20" "ffi/v3_20" "gdk/v3_20") ("dox" "ffi/dox")))) (r "1.56")))

(define-public crate-gdkwayland-0.15.3 (c (n "gdkwayland") (v "0.15.3") (d (list (d (n "ffi") (r "^0.15.1") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.15.1") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.15.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "0hsmy07pkbi3lgrn8px45idd04rc33yq6yv50nnbla0wirrgjiyn") (f (quote (("v3_24_22" "v3_24" "ffi/v3_24_22") ("v3_24" "v3_22" "ffi/v3_24" "gdk/v3_24") ("v3_22" "v3_20" "ffi/v3_22" "gdk/v3_22") ("v3_20" "ffi/v3_20" "gdk/v3_20") ("dox" "ffi/dox")))) (r "1.56")))

(define-public crate-gdkwayland-0.15.5 (c (n "gdkwayland") (v "0.15.5") (d (list (d (n "ffi") (r "^0.15.1") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.15.1") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.15.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "16aw4a4hjxfah88nl7vppwl8cnrqzcxf47q50xz8634gkwl5yf81") (f (quote (("v3_24_22" "v3_24" "ffi/v3_24_22") ("v3_24" "v3_22" "ffi/v3_24" "gdk/v3_24") ("v3_22" "v3_20" "ffi/v3_22" "gdk/v3_22") ("v3_20" "ffi/v3_20" "gdk/v3_20") ("dox" "ffi/dox")))) (r "1.56")))

(define-public crate-gdkwayland-0.16.0 (c (n "gdkwayland") (v "0.16.0") (d (list (d (n "ffi") (r "^0.16") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.16") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.16") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29") (f (quote ("use_system_lib"))) (d #t) (k 0)))) (h "0xjwzzhfr8nz6fwwf2ag3b1c9x03z68lkrrx4ip5k6g791a4z853") (f (quote (("v3_24_22" "v3_24" "ffi/v3_24_22") ("v3_24" "ffi/v3_24" "gdk/v3_24") ("dox" "ffi/dox" "gdk/dox" "glib/dox")))) (r "1.63")))

(define-public crate-gdkwayland-0.17.0 (c (n "gdkwayland") (v "0.17.0") (d (list (d (n "ffi") (r "^0.17") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.17") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.17") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (d #t) (k 0)))) (h "1w5hp28jlblm3h3kxciv0pspwwswg62kclyx23rsipi0ca36g0rz") (f (quote (("v3_24_22" "v3_24" "ffi/v3_24_22") ("v3_24" "ffi/v3_24" "gdk/v3_24") ("dox" "ffi/dox" "gdk/dox" "glib/dox")))) (r "1.64")))

(define-public crate-gdkwayland-0.18.0 (c (n "gdkwayland") (v "0.18.0") (d (list (d (n "ffi") (r "^0.18") (d #t) (k 0) (p "gdkwayland-sys")) (d (n "gdk") (r "^0.18") (d #t) (k 0)) (d (n "gir-format-check") (r "^0.1") (d #t) (k 2)) (d (n "glib") (r "^0.18") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "wayland-backend") (r "^0.1") (f (quote ("client_system"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30") (d #t) (k 0)))) (h "0l0s08zz6yi1phnk95h1lcvm3rsccm8bwhyd33c5xqyasidnps2l") (f (quote (("v3_24_22" "v3_24" "ffi/v3_24_22") ("v3_24" "ffi/v3_24" "gdk/v3_24")))) (r "1.70")))

