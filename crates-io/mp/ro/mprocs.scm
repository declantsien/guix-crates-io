(define-module (crates-io mp ro mprocs) #:use-module (crates-io))

(define-public crate-mprocs-0.2.1 (c (n "mprocs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)))) (h "1slsamysrjmb3i6qpppvzalqb03bwvvggrqpn4q9y1vvqaka4hpq")))

(define-public crate-mprocs-0.2.2 (c (n "mprocs") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)))) (h "0w9pj8r5inbanrxq9ws0igp8am7virxjzinpn4q5r6lmmmky9kdl")))

(define-public crate-mprocs-0.2.3 (c (n "mprocs") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)))) (h "04wkmspygh47q0gfrmwgwy4rmi19jwyv3igl45w6q1ril30n2dml")))

(define-public crate-mprocs-0.3.0 (c (n "mprocs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)))) (h "0pbf998rxwzr5a80cgbd6wcnysgvgd1ihikrvr9wayjmc44sy1c2")))

(define-public crate-mprocs-0.4.0 (c (n "mprocs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0cpwg3g32jrx8zskszr8nrh72jbywdydiyzsymmwfajlcmqirqgk")))

(define-public crate-mprocs-0.4.1 (c (n "mprocs") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0qpfy3xs69jrwzysd4b2mxsgfrpc73isff57whrcmn66fnkgf6vq")))

(define-public crate-mprocs-0.5.0 (c (n "mprocs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0vwm2a8sqry6bz8fzfpcwfm32vcff7n4z4mx3vnkpraafn7610j2")))

(define-public crate-mprocs-0.6.0 (c (n "mprocs") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "1czhahmxqcznna0jj7hnb7biqqsjf9l6gkya0h9sb6rlnh1v8mc5")))

(define-public crate-mprocs-0.6.2 (c (n "mprocs") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.1.0") (d #t) (k 0) (p "mprocs-vt100")) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0bliz61gfrlriyh1w7ay7rjibpb87lqq5i36xzw2abwys3mznw7i")))

(define-public crate-mprocs-0.6.3 (c (n "mprocs") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "clipboard-win") (r "^4.4.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.1.0") (d #t) (k 0) (p "mprocs-pty")) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.1.0") (d #t) (k 0) (p "mprocs-vt100")) (d (n "which") (r "^4.2.5") (d #t) (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "166dk4vrb87n5gzffszwxnar7j3d14f4im1ksqxr8c9fbwf5pgyc")))

(define-public crate-mprocs-0.6.4 (c (n "mprocs") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "clipboard-win") (r "^4.4.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "flexi_logger") (r "^0.22.3") (f (quote ("colors"))) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.120") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mlua") (r "^0.8.3") (f (quote ("luajit52" "vendored" "serialize"))) (d #t) (k 0)) (d (n "phf") (r "^0.10.1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "portable-pty") (r "^0.1.0") (d #t) (k 0) (p "mprocs-pty")) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "triggered") (r "^0.1.2") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (d #t) (k 0)) (d (n "tui-input") (r "^0.4.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vt100") (r "^0.1.1") (d #t) (k 0) (p "mprocs-vt100")) (d (n "which") (r "^4.2.5") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("consoleapi" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xdg") (r "^2.4.1") (d #t) (k 0)))) (h "0bz8gb2i0c18rm7m6ci4v0hiskv6ppd4vxzpvvlmfb0baqj41z79")))

