(define-module (crates-io mp c- mpc-protocol) #:use-module (crates-io))

(define-public crate-mpc-protocol-0.4.0 (c (n "mpc-protocol") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "binary-stream") (r "^8.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "pem") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0q13b6rypvv0lxfascgk0wh5ygw7g5zlg8c7r38gnlvmmbybm2iq")))

(define-public crate-mpc-protocol-0.4.1 (c (n "mpc-protocol") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "binary-stream") (r "^8.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pem") (r "^2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0ygp3bk5i0rbpa687y748x1nnfab4xsr6drpsiif52k38vxiqc4x")))

(define-public crate-mpc-protocol-0.5.0 (c (n "mpc-protocol") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "binary-stream") (r "^8.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1v1chrn3l32ax8zx3j87qi7vsz5z5r247yyrnbs8h5p46pisbspn") (s 2) (e (quote (("zlib" "dep:flate2"))))))

(define-public crate-mpc-protocol-0.6.0 (c (n "mpc-protocol") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "binary-stream") (r "^8.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "192wa70mc2hdqsz6fvxgg8bk1a7nvmr3p3rciyf1jdgckdk1f9h6") (s 2) (e (quote (("zlib" "dep:flate2"))))))

(define-public crate-mpc-protocol-0.6.1 (c (n "mpc-protocol") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "binary-stream") (r "^8.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("zlib"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pem") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "snow") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1h6fg16fsfgfwz8b6976jp6sb1vy9qrq09vzqxnq8sc3yx7gm449") (s 2) (e (quote (("zlib" "dep:flate2"))))))

