(define-module (crates-io mp c- mpc-relay) #:use-module (crates-io))

(define-public crate-mpc-relay-0.1.0 (c (n "mpc-relay") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "wrap_help" "env"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mpc-relay-protocol") (r "^0.1") (d #t) (k 0)) (d (n "mpc-relay-server") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "macros" "fs" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-log") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0078vq54p68y8a5z39vxn26rfw37pbqrzs69y3504m7qc5bfa68w")))

(define-public crate-mpc-relay-0.2.0 (c (n "mpc-relay") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "wrap_help" "env"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mpc-relay-protocol") (r "^0.2") (d #t) (k 0)) (d (n "mpc-relay-server") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "macros" "fs" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-log") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0mmm3pz3jn70gfqh88bd32jbbbc62g0cj2c2x6p6mpgbddr62xnq")))

(define-public crate-mpc-relay-0.3.0 (c (n "mpc-relay") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "wrap_help" "env"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mpc-relay-protocol") (r "^0.3") (d #t) (k 0)) (d (n "mpc-relay-server") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "macros" "fs" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-log") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1zgbxa7a004abwmz0lfnhkmx6j7rr4r0wiz6dysn56nzqqrs4qpq")))

(define-public crate-mpc-relay-0.4.0 (c (n "mpc-relay") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "wrap_help" "env"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mpc-protocol") (r "^0.4") (d #t) (k 0)) (d (n "mpc-relay-server") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serial_test") (r "^2") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "macros" "fs" "io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-log") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "104ihw904cmsp6dmkmp4vxhk51b8ivvqvc4mqpga2jw05kbz4yab")))

