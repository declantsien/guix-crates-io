(define-module (crates-io mp t_ mpt_trie) #:use-module (crates-io))

(define-public crate-mpt_trie-0.1.0 (c (n "mpt_trie") (v "0.1.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "eth_trie") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "10ck8ql71q6xv9ghgm0mdb1in16xpwximgmigxw5i3zy4sphii0w") (f (quote (("trie_debug" "num") ("default" "trie_debug"))))))

(define-public crate-mpt_trie-0.1.1 (c (n "mpt_trie") (v "0.1.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "eth_trie") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "1kb0kc7kgqprqk8xzlvy42zpifmzmr3s1gvs29pf8880cdzxgxmv") (f (quote (("trie_debug" "num") ("default" "trie_debug"))))))

(define-public crate-mpt_trie-0.2.0 (c (n "mpt_trie") (v "0.2.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "eth_trie") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "0yq3fp11l43r9xb928n4v0br2shdzz0raq1k0xwsnkzrcgp88s97") (f (quote (("trie_debug" "num") ("default" "trie_debug"))))))

(define-public crate-mpt_trie-0.2.1 (c (n "mpt_trie") (v "0.2.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "eth_trie") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "impl-codec") (r "^0.6.0") (d #t) (k 0)) (d (n "impl-num-traits") (r "^0.1.2") (d #t) (k 0)) (d (n "impl-rlp") (r "^0.3.0") (d #t) (k 0)) (d (n "impl-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "07yg16icham591rs1xa82ppbfxkbhikck7zg15dhqg6qilq6j4vx") (f (quote (("trie_debug" "num") ("default" "trie_debug"))))))

