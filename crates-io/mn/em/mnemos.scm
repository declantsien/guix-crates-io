(define-module (crates-io mn em mnemos) #:use-module (crates-io))

(define-public crate-mnemos-0.0.1 (c (n "mnemos") (v "0.0.1") (d (list (d (n "bbqueue") (r "^0.5.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "byte-slab") (r "^0.2.2") (d #t) (k 0)) (d (n "cassette") (r "^0.2.3") (d #t) (k 0)) (d (n "common") (r "^0.0.1") (f (quote ("use-defmt"))) (d #t) (k 0) (p "mnemos-common")) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-test") (r "^0.3.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.6") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "groundhog") (r "^0.2.5") (d #t) (k 0)) (d (n "groundhog-nrf52") (r "^0.5.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7.10") (f (quote ("defmt-impl"))) (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.9.1") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-smartled") (r "^0.5.0") (f (quote ("52840"))) (d #t) (k 0)) (d (n "nrf52840-hal") (r "^0.14.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "postcard") (r "^0.7.3") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 0)) (d (n "smart-leds-trait") (r "^0.2.1") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.8") (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1.1") (d #t) (k 0)))) (h "1d98k52akqk7nii68f17whd1886izcf3r5xsqkcgf65wgpdd4ifc")))

(define-public crate-mnemos-0.1.0 (c (n "mnemos") (v "0.1.0") (d (list (d (n "bbqueue") (r "^0.5.1") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "byte-slab") (r "^0.2.2") (d #t) (k 0)) (d (n "cassette") (r "^0.2.3") (d #t) (k 0)) (d (n "common") (r "^0.1.0") (f (quote ("use-defmt"))) (d #t) (k 0) (p "mnemos-common")) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.0") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^1.0.0") (d #t) (k 0)) (d (n "defmt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.3.0") (d #t) (k 0)) (d (n "defmt-test") (r "^0.3.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.6") (d #t) (k 0)) (d (n "fugit") (r "^0.3.3") (d #t) (k 0)) (d (n "groundhog") (r "^0.2.5") (d #t) (k 0)) (d (n "groundhog-nrf52") (r "^0.5.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7.10") (f (quote ("defmt-impl"))) (d #t) (k 0)) (d (n "linked_list_allocator") (r "^0.9.1") (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "nrf-smartled") (r "^0.5.0") (f (quote ("52840"))) (d #t) (k 0)) (d (n "nrf52840-hal") (r "^0.14.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3.0") (f (quote ("print-defmt"))) (d #t) (k 0)) (d (n "postcard") (r "^0.7.3") (d #t) (k 0)) (d (n "rtic-monotonic") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (k 0)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 0)) (d (n "smart-leds-trait") (r "^0.2.1") (d #t) (k 0)) (d (n "usb-device") (r "^0.2.8") (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1.1") (d #t) (k 0)))) (h "1kl65rwz5ha8xl1s8z1slnbphkvyildpnrgpm5qs0nr20h5baigz")))

