(define-module (crates-io wx -w wx-work) #:use-module (crates-io))

(define-public crate-wx-work-0.1.0 (c (n "wx-work") (v "0.1.0") (d (list (d (n "actix-rt") (r "^1") (d #t) (k 0)) (d (n "actix-web") (r "^2") (d #t) (k 0)) (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "xmltree") (r "^0.10") (d #t) (k 0)))) (h "16bxfigxxh7jrq38r4nwnxqq6pqinish1rx0dnl18x6mc52c2ak3")))

(define-public crate-wx-work-0.1.1 (c (n "wx-work") (v "0.1.1") (d (list (d (n "actix-rt") (r "^1") (d #t) (k 0)) (d (n "actix-web") (r "^2") (d #t) (k 0)) (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "xmltree") (r "^0.10") (d #t) (k 0)))) (h "1jnmpk5yq0wbkwpgzlkg7lhdyjig8sjd7h45ky7svym1wzbgxdhz")))

(define-public crate-wx-work-0.2.0 (c (n "wx-work") (v "0.2.0") (d (list (d (n "actix-web") (r "^4.0.0-beta.6") (d #t) (k 0)) (d (n "aes") (r "^0.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "block-modes") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json" "blocking" "multipart"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.6") (f (quote ("full"))) (d #t) (k 0)) (d (n "xmltree") (r "^0.10") (d #t) (k 0)))) (h "0in7ds5l0r7md1ww18cgd8xs2zf0waivcc2snw1b8zdrghh72b19")))

