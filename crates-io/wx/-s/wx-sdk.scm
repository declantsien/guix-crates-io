(define-module (crates-io wx -s wx-sdk) #:use-module (crates-io))

(define-public crate-wx-sdk-0.0.1 (c (n "wx-sdk") (v "0.0.1") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "xmlwriter") (r "^0.1") (d #t) (k 0)))) (h "1s6n2087xy1jw6k9gr9p2hswwv6zcv90xpl01b3mi7c82xg77r5z") (f (quote (("pay") ("op") ("mxa") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.2 (c (n "wx-sdk") (v "0.0.2") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "xmlwriter") (r "^0.1") (d #t) (k 0)))) (h "1hygq4z7sch89k0qm1iln938adqj3p34v601bcv5h1issflhkjam") (f (quote (("pay") ("op") ("mxa") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.3 (c (n "wx-sdk") (v "0.0.3") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0q94cnhy51ncmafs6a0iw3b917yfdn8bsqj7jr7k6262by1yf97b") (f (quote (("pay") ("mxa") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.4 (c (n "wx-sdk") (v "0.0.4") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "11vbbvmk7smlap8f3jjgx73j3rb96zw5p7qpc9vf1hjykfbkr1d7") (f (quote (("pay") ("mxa") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.5 (c (n "wx-sdk") (v "0.0.5") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0x9h9bw0j849h9b7y3yx3vrd283dnb7icm9i6h411adkr6ghvinc") (f (quote (("wxa") ("pay") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.6 (c (n "wx-sdk") (v "0.0.6") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "164j6b9lcdgggyp4gzqs130fzl7hzjczj3s99p2zhy8s0j3vcp4y") (f (quote (("wxa") ("pay") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.7 (c (n "wx-sdk") (v "0.0.7") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1mpk1ixmg05q99s1agwd93p4m57z2xsmpsnhbfig2nqsq5hy2k3n") (f (quote (("wxa") ("pay") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.8 (c (n "wx-sdk") (v "0.0.8") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0arin4x2sqs005dvnafp55i7hhxpm9v3bf26h6wi1iwjg3lc0pwb") (f (quote (("wxa") ("pay") ("mp") ("default" "mp"))))))

(define-public crate-wx-sdk-0.0.9 (c (n "wx-sdk") (v "0.0.9") (d (list (d (n "aes") (r "^0.7.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64ct") (r "^1.0.0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "block-modes") (r "^0.8.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "exile") (r "^0.0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "multipart"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 1)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1q1fgkd7jyilvj3wk051879adkgm29m0y7mzxykchaj5w4kwarzh") (f (quote (("wxa") ("pay") ("mp") ("default" "mp"))))))

