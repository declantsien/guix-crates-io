(define-module (crates-io ec to ector) #:use-module (crates-io))

(define-public crate-ector-0.1.0 (c (n "ector") (v "0.1.0") (d (list (d (n "atomic-polyfill") (r "^0.1") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "^1.0.0-alpha.8") (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0cn3vlmh0sbdfzn8l2m26p980mhxmr5y6a1lj2flkq2bbzki0ijb") (f (quote (("time") ("std") ("default" "std" "log" "time"))))))

(define-public crate-ector-0.1.1 (c (n "ector") (v "0.1.1") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.1.1") (f (quote ("nightly"))) (k 0)) (d (n "embassy-executor") (r "^0.1.0") (f (quote ("std" "integrated-timers" "nightly"))) (k 2)) (d (n "embassy-sync") (r "^0.1.0") (f (quote ("nightly"))) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "nightly"))) (k 2)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=0.1.0-alpha.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 0)))) (h "0mq6syl4fipn6v40xwrjm49r235a29pncchf00kw158nkas3lmsh") (f (quote (("time") ("std" "embassy-executor/std" "embassy-executor/integrated-timers" "embassy-time/std" "critical-section/std") ("default" "std" "log" "time"))))))

(define-public crate-ector-0.2.0 (c (n "ector") (v "0.2.0") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.1.1") (f (quote ("nightly"))) (k 0)) (d (n "embassy-executor") (r "^0.1.0") (f (quote ("std" "integrated-timers" "nightly"))) (k 2)) (d (n "embassy-sync") (r "^0.1.0") (f (quote ("nightly"))) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "nightly"))) (k 2)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (o #t) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.10") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 0)))) (h "0f4nbyp6x18hyqfkf0xac8d009y03ac4w33f5d20hwpjpj1safn3") (f (quote (("time") ("std" "embassy-executor/std" "embassy-executor/integrated-timers" "embassy-time/std" "critical-section/std") ("default" "std" "log" "time")))) (s 2) (e (quote (("test-util" "dep:embedded-hal" "dep:embedded-hal-1" "dep:embedded-hal-async"))))))

(define-public crate-ector-0.3.0 (c (n "ector") (v "0.3.0") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.1.1") (f (quote ("nightly"))) (k 0)) (d (n "embassy-executor") (r "^0.1.0") (f (quote ("std" "integrated-timers" "nightly"))) (k 2)) (d (n "embassy-sync") (r "^0.2") (f (quote ("nightly"))) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "nightly"))) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 0)))) (h "0kwcykbc1x5rn5a3zcvvlx3lsks62wcf4rm3fxjyj5qvdp18h51a") (f (quote (("time") ("test-utils") ("std" "embassy-executor/std" "embassy-executor/integrated-timers" "embassy-time/std" "critical-section/std") ("default" "std" "log" "time"))))))

(define-public crate-ector-0.4.0 (c (n "ector") (v "0.4.0") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.4.0") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.2") (f (quote ("nightly" "pender-callback"))) (k 0)) (d (n "embassy-executor") (r "^0.2.0") (f (quote ("integrated-timers" "nightly" "arch-std" "executor-thread"))) (k 2)) (d (n "embassy-sync") (r "^0.2") (f (quote ("nightly"))) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "nightly"))) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 0)))) (h "0rjvpf5s5mhybhih1xzvq91xckidnw46d5ijhk0wlp47dyhjdcph") (f (quote (("time") ("test-utils") ("std" "embassy-executor/integrated-timers" "embassy-executor/arch-std" "embassy-time/std" "critical-section/std") ("default" "std" "log" "time"))))))

(define-public crate-ector-0.5.0 (c (n "ector") (v "0.5.0") (d (list (d (n "atomic-polyfill") (r "^1") (d #t) (k 0)) (d (n "critical-section") (r "^1.1") (f (quote ("std"))) (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ector-macros") (r "^0.5.0") (d #t) (k 0)) (d (n "embassy-executor") (r "^0.3") (f (quote ("nightly"))) (k 0)) (d (n "embassy-executor") (r "^0.3.0") (f (quote ("integrated-timers" "nightly" "arch-std" "executor-thread"))) (k 2)) (d (n "embassy-sync") (r "^0.3") (f (quote ("nightly"))) (k 0)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("std" "nightly"))) (k 2)) (d (n "futures") (r "^0.3") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 0)))) (h "1r9df4b6ajwq6parz5g28gq5qqzwz7c2rfqrln2ix001kaj7dc1m") (f (quote (("time") ("test-utils") ("std" "embassy-executor/integrated-timers" "embassy-executor/arch-std" "embassy-time/std" "critical-section/std") ("default" "std" "log" "time"))))))

