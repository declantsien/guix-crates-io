(define-module (crates-io dc ap dcap-ql) #:use-module (crates-io))

(define-public crate-dcap-ql-0.0.0 (c (n "dcap-ql") (v "0.0.0") (h "1kwyn47vf1gfsrsbl5w76ihqbzx2sglxx02v0yvxp2b9x2rvmafb")))

(define-public crate-dcap-ql-0.1.0 (c (n "dcap-ql") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.2.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.6.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.1.0") (d #t) (k 0)))) (h "03nm0n5ya3bxzzk4cw11b737gvxa5mwyba5mrji5ig0pfk8l21jc") (f (quote (("test-sgx-flc") ("link" "dcap-ql-sys/link"))))))

(define-public crate-dcap-ql-0.2.0 (c (n "dcap-ql") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.2.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.2.0") (d #t) (k 0)))) (h "1dn1aqpgf6ilwnjijw2589pfvkkqm518g2mb5fxl7nmwy7max521") (f (quote (("test-sgx-flc") ("link" "dcap-ql-sys/link"))))))

(define-public crate-dcap-ql-0.2.1 (c (n "dcap-ql") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.2.0") (d #t) (k 0)))) (h "1bb073pw5i7vanq7wyhwh1mdr1shcpkgi28aqciwdwhxavnfdfl7") (f (quote (("test-sgx-flc") ("link" "dcap-ql-sys/link"))))))

(define-public crate-dcap-ql-0.3.0 (c (n "dcap-ql") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.5.1") (o #t) (k 0)) (d (n "mbedtls") (r "^0.5.1") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "0iybhx2vdr71nc6afqv7w0r0wdgi16xi9ja52iq8pfxnvhxzb4ii") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.1 (c (n "dcap-ql") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.6.0") (o #t) (k 0)) (d (n "mbedtls") (r "^0.6.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "1mlvai0abl6iyr3y5a3qfirsh4qvdlbyi1mzh5nfkpfsn0qkaf53") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.2 (c (n "dcap-ql") (v "0.3.2") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.6.0") (o #t) (k 0)) (d (n "mbedtls") (r "^0.6.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "1awxls4h8x89crs5nlmw8fiaxivpfrgrx3v1hdb3dgxj7npq5r77") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.3 (c (n "dcap-ql") (v "0.3.3") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.7.0") (o #t) (k 0)) (d (n "mbedtls") (r "^0.7.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.3.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "0mwz6rpmpwmg5iwbx7fwswdhiy59zpgfvbh71sa79yi5jvxvw3ny") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.4 (c (n "dcap-ql") (v "0.3.4") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.8.0") (o #t) (k 0)) (d (n "mbedtls") (r "^0.8.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "1xxbprp3ccv43n3c88dm4xjsxvk0hblirxi0hdcg498vfvkhd7v0") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.5 (c (n "dcap-ql") (v "0.3.5") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.8.0") (o #t) (k 0)) (d (n "mbedtls") (r "^0.8.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "0gjkvq5wjs5vhaszbkjq32y74bfjmhz6yx5fzmpz5dqnlxabd2vl") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.6 (c (n "dcap-ql") (v "0.3.6") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r ">=0.8.0, <0.10.0") (o #t) (k 0)) (d (n "mbedtls") (r ">=0.8.0, <0.10.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "1lyz1r8rqa5asq15czjjjzf9jg6ks5cv6h9z9azj18pk2js8808r") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.3.7 (c (n "dcap-ql") (v "0.3.7") (d (list (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r ">=0.8.0, <0.10.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "mbedtls") (r ">=0.8.0, <0.10.0") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.7.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "0hyyw9dlmsa4chs88p41afbq91wsg3ch7qwplqmvhssjnvwxaqqa") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

(define-public crate-dcap-ql-0.4.0 (c (n "dcap-ql") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.1.0") (d #t) (k 0)) (d (n "dcap-ql-sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "mbedtls") (r "^0.12") (f (quote ("std" "x509"))) (o #t) (k 0)) (d (n "mbedtls") (r "^0.12") (d #t) (k 2)) (d (n "num") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "report-test") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sgx-isa") (r "^0.4.0") (d #t) (k 0)) (d (n "sgxs") (r "^0.8.0") (d #t) (k 2)) (d (n "sgxs-loaders") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "yasna") (r "^0.3") (f (quote ("num-bigint" "bit-vec"))) (o #t) (d #t) (k 0)))) (h "0429wyac22d16dk584ya5bdrlby1swmsgaax2a8cqd5xcnb9pvbn") (f (quote (("verify" "mbedtls" "num" "yasna") ("test-sgx-flc" "bindings") ("link" "dcap-ql-sys/link" "bindings") ("default" "bindings") ("bindings" "dcap-ql-sys" "sgxs-loaders" "libc"))))))

