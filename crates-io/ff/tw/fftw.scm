(define-module (crates-io ff tw fftw) #:use-module (crates-io))

(define-public crate-fftw-0.1.0 (c (n "fftw") (v "0.1.0") (d (list (d (n "fftw-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.36") (d #t) (k 0)))) (h "1rzggaj2nlqlisnjkdb6s5rmwvifi7vw98ghz80pl9ndpb5c62x3")))

(define-public crate-fftw-0.2.0 (c (n "fftw") (v "0.2.0") (d (list (d (n "fftw-sys") (r "^0.2.0") (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.37") (d #t) (k 0)))) (h "0chswxgw5xh6fysd5awib48n2rrnd6919vkab0ms3i02lsp5f82c") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("default" "source"))))))

(define-public crate-fftw-0.2.1 (c (n "fftw") (v "0.2.1") (d (list (d (n "fftw-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.37") (d #t) (k 0)))) (h "0xvar390b4ap3w41p8vmbvlv0vmvk0a1ka48p0kj83lwd1h3dsq7") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("default" "source"))))))

(define-public crate-fftw-0.2.2 (c (n "fftw") (v "0.2.2") (d (list (d (n "fftw-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.37") (d #t) (k 0)))) (h "07j1fl35kc8m89kabyir2zgp5xpn3jj640wmbhn2jhbl01k69jzx") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("default" "source"))))))

(define-public crate-fftw-0.3.0 (c (n "fftw") (v "0.3.0") (d (list (d (n "fftw-sys") (r "^0.3.0") (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.1.37") (d #t) (k 0)) (d (n "num-traits") (r "^0.1.37") (d #t) (k 0)))) (h "19r63jv4251a2p9ih43ynjwp9knnwvb4dqc3j9x3i47j5nz4al27") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.4.0 (c (n "fftw") (v "0.4.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.3.0") (k 0)) (d (n "float-cmp") (r "^0.2.3") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.11") (d #t) (k 0)) (d (n "num-complex") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "procedurals") (r "^0.2") (d #t) (k 0)))) (h "0q2jrxakdlvwf1fbz07b5149hzz5hspqgpnx34mkppvhclviiry0") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.5.0 (c (n "fftw") (v "0.5.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.3.0") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "0nnfhqq48z0y4s1wckylpfsls7wc0kaz0j3aygabr1qnzls5j3cd") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.5.1 (c (n "fftw") (v "0.5.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.4.0") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "13i6zzvw8mjk1dr5k4k2zgl15df33klzv35wfxrzkfj3kvr2rd7l") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.6.0 (c (n "fftw") (v "0.6.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.5.0") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "0ayqgbxqs4hrzwx55kyrahxmgdkx1s9bmni5srq0cx26qvqk33dm") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.6.1 (c (n "fftw") (v "0.6.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.5.0") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "07wbglbgkqzd58x5j00giq41banki92i9k2l8g1zlayya66bwk0b") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.6.2 (c (n "fftw") (v "0.6.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.5.0") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)))) (h "1y4p6b7fhqwccyc0qc5ly16kyyzn9v99lnl870q12q2fw9d04qcs") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.7.0 (c (n "fftw") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.6.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1vxdc7z586ad0nwzj32mklr8y4ff053m8npv3d969b3bpd5siilx") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

(define-public crate-fftw-0.8.0 (c (n "fftw") (v "0.8.0") (d (list (d (n "bitflags") (r "^2.2.1") (d #t) (k 0)) (d (n "fftw-sys") (r "^0.8.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "1ln5fd0rlvqc7rn8s2a3gv0w778vr0z8k16hjg265hgjqzs499aw") (f (quote (("system" "fftw-sys/system") ("source" "fftw-sys/source") ("intel-mkl" "fftw-sys/intel-mkl") ("default" "source"))))))

