(define-module (crates-io ff _d ff_derive) #:use-module (crates-io))

(define-public crate-ff_derive-0.1.0 (c (n "ff_derive") (v "0.1.0") (d (list (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 0)))) (h "1k9y0j4r526yj8m9fq4biac78wcb8pwxiq01br8vj2pbyza2k9dp")))

(define-public crate-ff_derive-0.2.0 (c (n "ff_derive") (v "0.2.0") (d (list (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^0.11") (d #t) (k 0)))) (h "1r2pzx2a4m83x8iy7ins935vyc6cpkngdznkbmi1xqaqj75b3mrz")))

(define-public crate-ff_derive-0.3.0 (c (n "ff_derive") (v "0.3.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (d #t) (k 0)))) (h "18p2z5ln56m6ylnd4h9zj902yxg7rj08k8vc84b5fp8ixs850cvh")))

(define-public crate-ff_derive-0.4.0 (c (n "ff_derive") (v "0.4.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "16s2fhz5mkdwklj9xfl6livpl640ns0pv3axfs45jh9662jkijx9")))

(define-public crate-ff_derive-0.4.1 (c (n "ff_derive") (v "0.4.1") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1aavl1lxvnq9vwwh7m6adgqch6ps3zdb0jd6sc7a00fac9ynwyd5")))

(define-public crate-ff_derive-0.6.0 (c (n "ff_derive") (v "0.6.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1swzs9wjbdw1f6azyhg2lg53ls9q5dadigfaqflkfl54c2pnlxx3")))

(define-public crate-ff_derive-0.7.0 (c (n "ff_derive") (v "0.7.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0shdjzmqk2lvjj6vfwj1jbyb5b7k258mqr51qkqyg9fljxnpjxk8")))

(define-public crate-ff_derive-0.8.0 (c (n "ff_derive") (v "0.8.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1bwhnbzf01g594qi7j3lsaz723pc6zbvm7j10yby4va93vs067jw")))

(define-public crate-ff_derive-0.10.0 (c (n "ff_derive") (v "0.10.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "168ka3gwm6zz75jqkzxfdjrvxfp4iq1wbfq7sjfjdgakcv1h2yg0")))

(define-public crate-ff_derive-0.11.0 (c (n "ff_derive") (v "0.11.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0p7qbgh12r0m31ar4v5xq4ifj9isakv9nb09qwxgkkmdccl9f8x9")))

(define-public crate-ff_derive-0.11.1 (c (n "ff_derive") (v "0.11.1") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0m1z42hnpm6iyk38vl1kx9sl1fn8kz9x6s8g37jb81m7innj0x3i") (f (quote (("bits"))))))

(define-public crate-ff_derive-0.12.0 (c (n "ff_derive") (v "0.12.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0jaqq7fcgsq5930g7nzh79cg2ndi7w3bfb6xq2fg33jscnbdvpcm") (f (quote (("bits"))))))

(define-public crate-ff_derive-0.12.1 (c (n "ff_derive") (v "0.12.1") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0jvqilpzzbw3j3sh1sf0914n2l4v020iifmgvglnc7wgfjh6znqp") (f (quote (("bits"))))))

(define-public crate-ff_derive-0.13.0 (c (n "ff_derive") (v "0.13.0") (d (list (d (n "addchain") (r "^0.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0jnq13qqmnvgh1xmjzdgynwgbbkf64qibqf5a5hjiva5pq24gxg9") (f (quote (("bits"))))))

