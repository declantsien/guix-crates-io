(define-module (crates-io ff _d ff_derive_ce) #:use-module (crates-io))

(define-public crate-ff_derive_ce-0.4.0 (c (n "ff_derive_ce") (v "0.4.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "syn") (r "^0.14") (d #t) (k 0)))) (h "0ninyjbadysp5g04davka0jd07h30wpny7hg8bbp43y37vwkg6qq")))

(define-public crate-ff_derive_ce-0.5.0 (c (n "ff_derive_ce") (v "0.5.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (d #t) (k 0)))) (h "02cna8xlxm25pakpgixhrx52av01a0jy43w8ln7d736fhlqgflyn") (f (quote (("derive_serde") ("default"))))))

(define-public crate-ff_derive_ce-0.5.1 (c (n "ff_derive_ce") (v "0.5.1") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.14") (d #t) (k 0)))) (h "1fbdsgpa7qp1kzsfm418bl6bzgk1pizmp88yfavnpcy5fr75n90x") (f (quote (("derive_serde") ("default"))))))

(define-public crate-ff_derive_ce-0.6.0 (c (n "ff_derive_ce") (v "0.6.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1h5x0052ybn6kg3vn45z654wypaljq3i8xga9rwbx6zddcbha7ai") (f (quote (("derive_serde") ("default"))))))

(define-public crate-ff_derive_ce-0.7.0 (c (n "ff_derive_ce") (v "0.7.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1c8v7bhblq5a681psq5fm1wlx9k8acpyw1jpxdih74ai1izmchvm") (f (quote (("default"))))))

(define-public crate-ff_derive_ce-0.8.0 (c (n "ff_derive_ce") (v "0.8.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0jxcs6bgjbrp0ar1b80yyvrkcj48xywbyr63bqq14bscdpx55h2h") (f (quote (("default"))))))

(define-public crate-ff_derive_ce-0.9.0 (c (n "ff_derive_ce") (v "0.9.0") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "001lb5df9mh92wbc37sdpwv68xpmwds6s0mb9cpw2kbiv35zxm3p") (f (quote (("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.9.1 (c (n "ff_derive_ce") (v "0.9.1") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1hlfa7hapzqmxgs7isn24i6wp6riay64526mi2k8kwn0liy8qz8r") (f (quote (("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.9.2 (c (n "ff_derive_ce") (v "0.9.2") (d (list (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "1g7y0hxq5wrqg25141kjqzn1zra59iqdd1bnkixs98c7z2jb56xl") (f (quote (("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.9.3 (c (n "ff_derive_ce") (v "0.9.3") (d (list (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "08z8vynb85jxcmag54w3mjzw1y89ayd3ba6kl9x4sjrpfc0a1rfx") (f (quote (("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.10.0 (c (n "ff_derive_ce") (v "0.10.0") (d (list (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "031ix3wc2zwqamf2jq8rl4pcjb2058y53lwbqsrf53apn10mrj7j") (f (quote (("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.11.0 (c (n "ff_derive_ce") (v "0.11.0") (d (list (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0w0gci1liaxfhdj949yax3w68lqdhrmjvmihsw6lw0690la2kfv2") (f (quote (("serde") ("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.11.1 (c (n "ff_derive_ce") (v "0.11.1") (d (list (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "0bmjc7yhica37j0pqypb5ragzp8vkzkldj4fpzkiv368wm38jmw5") (f (quote (("serde") ("default") ("asm"))))))

(define-public crate-ff_derive_ce-0.11.2 (c (n "ff_derive_ce") (v "0.11.2") (d (list (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (d #t) (k 0)))) (h "084b7l3ypj6q86fjp7dxzxs9lwfaqkyc41saxv2gmcfvi36vqvxr") (f (quote (("serde") ("default") ("asm"))))))

