(define-module (crates-io ml x9 mlx9064x) #:use-module (crates-io))

(define-public crate-mlx9064x-0.0.1 (c (n "mlx9064x") (v "0.0.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7") (d #t) (k 2)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "0z0dc8vhifi6ccf2cdll3kpd132pd16slbr4cvy6lgiyfgmy12a1") (f (quote (("std" "arrayvec/std" "bytes/std") ("default" "std"))))))

(define-public crate-mlx9064x-0.0.2 (c (n "mlx9064x") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "0vqvbgvhjgr55a8cwhp1lmm2wdbbbiid52pbd5krlrkf94mscmlw") (f (quote (("std" "arrayvec/std" "bytes/std") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

(define-public crate-mlx9064x-0.0.3 (c (n "mlx9064x") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "0ipfw4fs9a5mpb3b42k8bppndnx3jl0jghpanjw6r15k6n7i4aii") (f (quote (("std" "arrayvec/std" "bytes/std") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

(define-public crate-mlx9064x-0.0.4 (c (n "mlx9064x") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "0hjrgjy565gcnivrh9xxbvf0g7hjz01jvph7chcbclk61qvqavn2") (f (quote (("std" "arrayvec/std" "bytes/std") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

(define-public crate-mlx9064x-0.1.0 (c (n "mlx9064x") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "1iycnlryv4kl477an0fhqwjmn68gmkv78r4b7b8g8w6sclx1r72n") (f (quote (("std" "arrayvec/std" "bytes/std") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

(define-public crate-mlx9064x-0.1.1 (c (n "mlx9064x") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "09r43wz9q4f6np5rihjhcaajmwqnf45903vbmm02kd3567rsd2z0") (f (quote (("std" "arrayvec/std" "bytes/std") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

(define-public crate-mlx9064x-0.2.0 (c (n "mlx9064x") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "0y2xg0rk68z33j13cafra7ansldcw9rmnbdlpij6ahxrv69h56n2") (f (quote (("std" "arrayvec/std" "num-traits/std") ("libm" "num-traits/libm") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std")))) (y #t)))

(define-public crate-mlx9064x-0.2.1 (c (n "mlx9064x") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "embedded-hal") (r "^0.2.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "num_enum") (r "^0.5") (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)))) (h "1nx4f6jfiliav04a7g4p25ld1vk43c05s4hg5cdiw74w58l8f4qx") (f (quote (("std" "arrayvec/std" "num-traits/std") ("libm" "num-traits/libm") ("examples" "anyhow" "linux-embedded-hal" "std") ("default" "std"))))))

