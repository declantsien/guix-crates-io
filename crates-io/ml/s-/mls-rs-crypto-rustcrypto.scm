(define-module (crates-io ml s- mls-rs-crypto-rustcrypto) #:use-module (crates-io))

(define-public crate-mls-rs-crypto-rustcrypto-0.6.0 (c (n "mls-rs-crypto-rustcrypto") (v "0.6.0") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "enum-iterator") (r "^1.1.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.14.0") (k 0)) (d (n "mls-rs-core") (r "^0.14.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.4.0") (k 0)) (d (n "mls-rs-crypto-traits") (r "^0.6.0") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "1h10dbnbbrfil8qvn6g6hnc9awkvy6825av1rlqxywyc6px2nxfl") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "sha1" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

(define-public crate-mls-rs-crypto-rustcrypto-0.6.1 (c (n "mls-rs-crypto-rustcrypto") (v "0.6.1") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "enum-iterator") (r "^1.1.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.14.0") (k 0)) (d (n "mls-rs-core") (r "^0.14.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.5.0") (k 0)) (d (n "mls-rs-crypto-hpke") (r "^0.5.0") (f (quote ("test_utils"))) (k 2)) (d (n "mls-rs-crypto-traits") (r "^0.6.1") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "0i6k0syzq9s1dbykzwx6smdvp3kgn4i7a9319438rb6048v6p2p7") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "sha1" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

(define-public crate-mls-rs-crypto-rustcrypto-0.7.0 (c (n "mls-rs-crypto-rustcrypto") (v "0.7.0") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "enum-iterator") (r "^1.1.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.15.0") (k 0)) (d (n "mls-rs-core") (r "^0.15.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.6.0") (k 0)) (d (n "mls-rs-crypto-hpke") (r "^0.6.0") (f (quote ("test_utils"))) (k 2)) (d (n "mls-rs-crypto-traits") (r "^0.7.0") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "0c36bfkyrryl64ilv8nl3gn6jx169lnl1r8pqf44j0i1f8wa54nb") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "sha1" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

(define-public crate-mls-rs-crypto-rustcrypto-0.8.0 (c (n "mls-rs-crypto-rustcrypto") (v "0.8.0") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "enum-iterator") (r "^1.1.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.16.0") (k 0)) (d (n "mls-rs-core") (r "^0.16.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.7.0") (k 0)) (d (n "mls-rs-crypto-hpke") (r "^0.7.0") (f (quote ("test_utils"))) (k 2)) (d (n "mls-rs-crypto-traits") (r "^0.8.0") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "0kn1xs531qjrccjyc8brrizzp1jjpkdi87qf7l08qagqzwg0r3kn") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "sha1" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

(define-public crate-mls-rs-crypto-rustcrypto-0.9.0 (c (n "mls-rs-crypto-rustcrypto") (v "0.9.0") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.7") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.17.0") (k 0)) (d (n "mls-rs-core") (r "^0.17.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.8.0") (k 0)) (d (n "mls-rs-crypto-hpke") (r "^0.8.0") (f (quote ("test_utils"))) (k 2)) (d (n "mls-rs-crypto-traits") (r "^0.9.0") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "17l12mqvcs0z77bmbp3sacs1phn6fm7qnvspcpwvf1mkd31vlrvf") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

(define-public crate-mls-rs-crypto-rustcrypto-0.10.0 (c (n "mls-rs-crypto-rustcrypto") (v "0.10.0") (d (list (d (n "aead") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "aes-gcm") (r "^0.10") (f (quote ("zeroize"))) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (t "cfg(mls_build_async)") (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "const-oid") (r "^0.9") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2") (f (quote ("alloc" "rand_core"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (f (quote ("reset"))) (k 0)) (d (n "maybe-async") (r "^0.2.10") (d #t) (k 0)) (d (n "mls-rs-core") (r "^0.18.0") (k 0)) (d (n "mls-rs-core") (r "^0.18.0") (f (quote ("test_suite"))) (d #t) (k 2)) (d (n "mls-rs-crypto-hpke") (r "^0.9.0") (k 0)) (d (n "mls-rs-crypto-hpke") (r "^0.9.0") (f (quote ("test_utils"))) (k 2)) (d (n "mls-rs-crypto-traits") (r "^0.10.0") (k 0)) (d (n "mls-rs-identity-x509") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "p256") (r "^0.13") (f (quote ("alloc" "ecdh" "ecdsa" "pem"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "sec1") (r "^0.7") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "spki") (r "^0.7") (f (quote ("std" "alloc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (f (quote ("alloc" "static_secrets"))) (k 0)) (d (n "x509-cert") (r "^0.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("alloc" "zeroize_derive"))) (k 0)))) (h "0j52jhzmqai9jc18bln9agw4p2jnyc18i2805c4r5rg0p0czqdm7") (f (quote (("x509" "std" "mls-rs-identity-x509" "x509-cert" "spki" "const-oid" "mls-rs-core/x509") ("default" "std" "x509") ("browser" "getrandom/js")))) (s 2) (e (quote (("std" "mls-rs-core/std" "mls-rs-crypto-hpke/std" "mls-rs-crypto-traits/std" "getrandom/std" "rand_core/std" "aead/std" "sha2/std" "hmac/std" "hkdf/std" "p256/std" "sec1/std" "dep:thiserror"))))))

