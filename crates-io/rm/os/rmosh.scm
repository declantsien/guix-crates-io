(define-module (crates-io rm os rmosh) #:use-module (crates-io))

(define-public crate-rmosh-0.0.1 (c (n "rmosh") (v "0.0.1") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "19v8dv1qpl5g4l5fr7lnysfn1q9x4w9w28n4n3wmpa98x9fnyph4") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc")))) (y #t)))

(define-public crate-rmosh-0.0.2 (c (n "rmosh") (v "0.0.2") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "1wkzk778d7gvw6vxjcbm9mp9fynw4iaydz517v0r6xrdc2jkbhjf") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc")))) (y #t)))

(define-public crate-rmosh-0.0.3 (c (n "rmosh") (v "0.0.3") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "1s4z2xa081icsan8kvsshrs58qx7kvym2dd5m452dna8ijp06658") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc")))) (y #t)))

(define-public crate-rmosh-0.0.4 (c (n "rmosh") (v "0.0.4") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "0rcmxpsa1wh4c92d2ggxwlm8hqfa8gblhsqcpchxfyg495rsmfm5") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.5 (c (n "rmosh") (v "0.0.5") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "0yxahdy07vzdxvkp6jyss48xqvqcybg4791b9d03r5s0fpvr3frm") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.6 (c (n "rmosh") (v "0.0.6") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "10yl1mvxd8rqmwyrp97af4xj7bvx64a79w2bl3jf39s55cngks97") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.7 (c (n "rmosh") (v "0.0.7") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "14zpf2yypdk1gxjp8f74jbh58lm93hkfgvdffyr8889bdmh4a6gy") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.8 (c (n "rmosh") (v "0.0.8") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "1dgnk6swiz2rwwf3yzi00p9w7av8iz3vvgv8al93ajbigihzbr2g") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.9 (c (n "rmosh") (v "0.0.9") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "proc-status") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)))) (h "0llns5091p7w29l7x9i4n25k7rn4pk5vqksvvchhzj1wbad0zlyj") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.10 (c (n "rmosh") (v "0.0.10") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "proc-status") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)))) (h "0m5wnkgb9n8ijicm81kkkszpqpqbzc19sb5asn4mi7rqyjga84rj") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.11 (c (n "rmosh") (v "0.0.11") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "onig") (r "^6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "proc-status") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)))) (h "1jdyfiy0n1w0hl7mjhg1aa9gx1sj3i88j4sywb6mv3h1cfr652zx") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.12 (c (n "rmosh") (v "0.0.12") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "onig") (r "^6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "proc-status") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)))) (h "1hyn84qiq6z6bd3md6ss3a0z7w59cam7hf84hqn1chcs9hjrs24b") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

(define-public crate-rmosh-0.0.13 (c (n "rmosh") (v "0.0.13") (d (list (d (n "bumpalo") (r "^3.11.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "enum-display-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "lalrpop") (r "^0.19.7") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.19") (f (quote ("lexer"))) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.27") (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "onig") (r "^6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0") (k 0)) (d (n "proc-status") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6.1") (d #t) (k 0)))) (h "14h82v3gywhjhh6gyasy732dfqbbf1ci4dmwjfpay75f2craxra9") (f (quote (("test_gc_size") ("debug_log_vm") ("debug_log_gc"))))))

