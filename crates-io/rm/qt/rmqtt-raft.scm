(define-module (crates-io rm qt rmqtt-raft) #:use-module (crates-io))

(define-public crate-rmqtt-raft-0.2.0 (c (n "rmqtt-raft") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.6") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)))) (h "040yw96ic2vrrpmskign1lj9x81grr46dggkklxqknmih4ry9rrr")))

(define-public crate-rmqtt-raft-0.2.1 (c (n "rmqtt-raft") (v "0.2.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.6") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)))) (h "1g6cvbr1p87j07f0iw0zndigy6izrgrkla967ibm9dji081cnd82")))

(define-public crate-rmqtt-raft-0.2.2 (c (n "rmqtt-raft") (v "0.2.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.6") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)))) (h "0xk1qykh88b3ixyhhxkm53jgqsw3p8hmbjlwbg50ngnmbjwjhc3f")))

(define-public crate-rmqtt-raft-0.2.3 (c (n "rmqtt-raft") (v "0.2.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.6") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)))) (h "0sgjjj16xahqdhk2idxzhl5p3qbp11dfx3bz2jbpp8g21znhg4bl")))

(define-public crate-rmqtt-raft-0.2.4 (c (n "rmqtt-raft") (v "0.2.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)))) (h "0hvjn605lqm470kkkbdmgn9zk77b6vha12vqb85y6ba428m9gppa")))

(define-public crate-rmqtt-raft-0.2.5 (c (n "rmqtt-raft") (v "0.2.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)))) (h "05d6gqfwdkxm5p4d22akk09chdypr1fa6nn8lr862xvm6smid67r")))

(define-public crate-rmqtt-raft-0.3.0 (c (n "rmqtt-raft") (v "0.3.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)))) (h "04flrv13a64xhdyv5jiq88n3lb07qrr52rj0k9bkhcj66rc29bgc")))

(define-public crate-rmqtt-raft-0.3.1 (c (n "rmqtt-raft") (v "0.3.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)))) (h "1d4xxh4c1hmw12rsi3az4zxn6djvjmawmmydi2wanj3njz9kr7ri")))

(define-public crate-rmqtt-raft-0.3.2 (c (n "rmqtt-raft") (v "0.3.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "protobuf") (r "^2.28") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "socket2") (r "^0.4") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("protobuf-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (d #t) (k 1)))) (h "1c0p2ys4vyn5nhwqznfd5wpzi3gzb8p94df2y9a0vmg7595074m8") (f (quote (("reuseport" "socket2" "tokio-stream") ("reuseaddr" "socket2" "tokio-stream") ("reuse" "reuseport" "reuseaddr") ("default"))))))

(define-public crate-rmqtt-raft-0.3.3 (c (n "rmqtt-raft") (v "0.3.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("prost-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)))) (h "03smhipapl7g9kc46p5v170g769xf9lvzbfirg14mvj42wih5kz9") (f (quote (("reuseport" "socket2" "tokio-stream") ("reuseaddr" "socket2" "tokio-stream") ("reuse" "reuseport" "reuseaddr") ("default"))))))

(define-public crate-rmqtt-raft-0.3.4 (c (n "rmqtt-raft") (v "0.3.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("prost-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)))) (h "0y2wc5ckz86dr0mivvjxwqc6qfw6fz2ca0ad6hn0r19jgfzky0jd") (f (quote (("reuseport" "socket2" "tokio-stream") ("reuseaddr" "socket2" "tokio-stream") ("reuse" "reuseport" "reuseaddr") ("default"))))))

(define-public crate-rmqtt-raft-0.3.5 (c (n "rmqtt-raft") (v "0.3.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "dashmap") (r "^5.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tikv-raft") (r "^0.7") (f (quote ("prost-codec"))) (k 0) (p "raft")) (d (n "tokio") (r "^1") (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (o #t) (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)))) (h "1ka227afwx4180agsmxzydn2ll3148kykygv6f9jp8s4v54d85hh") (f (quote (("reuseport" "socket2" "tokio-stream") ("reuseaddr" "socket2" "tokio-stream") ("reuse" "reuseport" "reuseaddr") ("default"))))))

