(define-module (crates-io ad bl adblock) #:use-module (crates-io))

(define-public crate-adblock-0.1.0 (c (n "adblock") (v "0.1.0") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0ajcnsivfdx6nf9gpjnjxjkxjwlp6wwvb1g6sp8xrl2zwjkqfkwr") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.1 (c (n "adblock") (v "0.1.1") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1jvq9pankynzr6pabqmv7mdywqcl43hv8dd72y9cybarhdbfvcyf") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.2 (c (n "adblock") (v "0.1.2") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "13906fxrkm4yp46snyzbqv7vkw5ani41qbxpnk6isdhqaxfmrl68") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.3 (c (n "adblock") (v "0.1.3") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1w5f6m9c3wgg90hpvgvfvzb988cx3m8birffmymch2952915h0xs") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.4 (c (n "adblock") (v "0.1.4") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "105i7vv55b6nk0m968hvs7kidayb982yc3hxwwfr06z013pmz6h3") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.5 (c (n "adblock") (v "0.1.5") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "fasthash") (r "^0.4") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (t "cfg(any(unix, windows))") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1ip0wf56ad0p437agzki4xy7d8x0ql28bm3rqxqzp7ifkbndqvzs") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.9 (c (n "adblock") (v "0.1.9") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "02wzix7pzkmdcz9d3hyam24v9msjr8f6qpw86qs9ad3bi3jmzyx7") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.8 (c (n "adblock") (v "0.1.8") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1vbzvc9x82y9v0ny5id3pgvmycar3nv0w5h1snpmrbxwgj5k04cz") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.10 (c (n "adblock") (v "0.1.10") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0lmc6gliwsca8hv28ywrlgphyn3i49cxjcy3xjwyflzxxa2dfjh7") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.11 (c (n "adblock") (v "0.1.11") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0604waz4lrykap5m627sk4ibqshcm1dgja6rik6y0psbvxklm7mf") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.12 (c (n "adblock") (v "0.1.12") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0h20x3c4nc1dljgb4f49n0syy985lg954kq010ikb5jldh3bsl45") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.13 (c (n "adblock") (v "0.1.13") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1x7cjm763m7979ynbpnx4sh2vjxrqhyk05vsl94wk6cxrnjaw7wj") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.14 (c (n "adblock") (v "0.1.14") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0f246fly6ijxlawn8x60d920m807mb7am1lxcy8zqzn953rbq01f") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.15 (c (n "adblock") (v "0.1.15") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0srjqrv914jsf20safgh1b8zfprzf9m4bxqw5jmk7d9pm288y9xk") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.16 (c (n "adblock") (v "0.1.16") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0l7b7ldw9jg307b0w390pkd8xny66vbpw7qkwidzcql5bccm3hkz") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.17 (c (n "adblock") (v "0.1.17") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "17x137zjshy5z3vj7f5lj1d9izv69kpla4dljbdm05w20a86wdvr") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.18 (c (n "adblock") (v "0.1.18") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0c8hc9c5c08xc938rznx0y775w0m9qsp02v5jg58j96piaihysar") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.19 (c (n "adblock") (v "0.1.19") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1max5dnk65dpk5nrkrlhi1rbvvfi44sbv78jwl7fdh9giz6802a3") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.21 (c (n "adblock") (v "0.1.21") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0s0dj6qmj58pcnv23329m8qcwnymh6ql40jh2xn9mzna3pzznfsi") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.22 (c (n "adblock") (v "0.1.22") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "object-pool") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0qy0ngc4rkb46y9bsc1pmgpyms5kpqsrpsq4g69v1s2sbiz9pl2l") (f (quote (("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling"))))))

(define-public crate-adblock-0.1.23 (c (n "adblock") (v "0.1.23") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "object-pool") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "14nr9rx6sgzr8lghjp5382hf29nhp3x2vwsi6s8m1xj4x2z1m4fi") (f (quote (("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling"))))))

(define-public crate-adblock-0.1.24 (c (n "adblock") (v "0.1.24") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0iasjr60c6qz1j3w3az60k150sjgvbhhpkmyfsppaczc058ly3m1") (f (quote (("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling"))))))

(define-public crate-adblock-0.1.25 (c (n "adblock") (v "0.1.25") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1dzxs82xpk0kg20ghbh0c3cjkkmpj7v83fbw6i42a83hrpadrfag") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.26 (c (n "adblock") (v "0.1.26") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1jjvpkidvk1y8w5fwls92hwfzfh7f4ngwvkryi07y5fmncmh09v3") (f (quote (("full-domain-matching"))))))

(define-public crate-adblock-0.1.27 (c (n "adblock") (v "0.1.27") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1ahaqmni3hkgj67m93sphyx2k63nb5wjpj22svmjgnb9b92lkqjn") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.28 (c (n "adblock") (v "0.1.28") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bincode") (r "^1.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memoffset") (r "^0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "~3.0.8") (d #t) (k 0)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1advnlr99zq89zycay1xmbksvb35q3i71si7x25rihzai3arjsxa") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.29 (c (n "adblock") (v "0.1.29") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "19vw39vh978wvgp01hjr4k09zxljw939iv00mppi0q8xvrw3dlvg") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.30 (c (n "adblock") (v "0.1.30") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "177rrq1m6076c8rn453fgmxj1v82bqngrhn6xmimq9z9v0a520kw") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.31-beta.0 (c (n "adblock") (v "0.1.31-beta.0") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1l8vpalh2p287zfmczqi4xg8fkc08i3pz4w098ak2qwqpyz0dz99") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.31-beta.1 (c (n "adblock") (v "0.1.31-beta.1") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0wyzcbmc91s06ph5y3pm0hjzc3jw8fnyz9y15252dbmw2pxp9w33") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.31-beta.2 (c (n "adblock") (v "0.1.31-beta.2") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0ii6ril0h5dj77r253yhvamqkc5vf8icl5g4rnis6xiaf6y88bvd") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.31 (c (n "adblock") (v "0.1.31") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1v4vs1gqgd446isfd28186q7mlp3fm1whcn8rq66nifw5zgcrzbc") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.32 (c (n "adblock") (v "0.1.32") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1j6ryzj25b4y413l6jajpn9ad7s79i38hms9nzvpz6m8p7kamjd8") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.33 (c (n "adblock") (v "0.1.33") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1awgfp7jfj6iaqf3kv5ni7y2dpf0lz57763yf5dymip43k34l59v") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.34 (c (n "adblock") (v "0.1.34") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1h4jsfpwckdj6ryfzv8p1qbwsza4jxhzadr96lk8d2v2psps5sg3") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.35 (c (n "adblock") (v "0.1.35") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.9") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.3") (f (quote ("serde"))) (k 0)) (d (n "idna") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.92") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0anzafpk19csgxa8gdmzsids13642pc96md5nl5l1lbdxixcvqnj") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.36 (c (n "adblock") (v "0.1.36") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "18xwikv5jylk9520z7kynrzhi5ry560y9l8wjych6qj40s9w7g0g") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.2.0 (c (n "adblock") (v "0.2.0") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0z9qnbv64ljr5nyhcl5qlpwph4qpj7j4mcyy20qaa32ghc29rhdz") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.2.1 (c (n "adblock") (v "0.2.1") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "12b8ggjgpc5vcrna309kkh6mjnc3x0hsyjig9d8g9452w16pfw1b") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.1.38 (c (n "adblock") (v "0.1.38") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1mrrppcipjfsam29cbnrfi9s4iabs1r8j38cz4k8a3j4rqrckz9i") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.1.40 (c (n "adblock") (v "0.1.40") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0zjgfhhn2s7vl2ljnr4hqb4izqw24vyypzx4m7fsrvwqxa49gwf5") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling"))))))

(define-public crate-adblock-0.2.4 (c (n "adblock") (v "0.2.4") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1czjjb0llmcyg2lwydp5b6zrs43i8dx0idwzs57xcs1r7imjv15g") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.5 (c (n "adblock") (v "0.2.5") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "153cni8dm3crn8mnglh1knpavkd2iwmnkbs4fx1vcdjhvhq0dk5w") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.6 (c (n "adblock") (v "0.2.6") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0mzf16b19a7flfknm94dax2gr1y1rq8wi8ajfnxy9cysvr6yvi96") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.7 (c (n "adblock") (v "0.2.7") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "15fn7fwjr219mpa6fxiq8jhl1axn0grwvqf1mjhp4f84ividl17r") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.8 (c (n "adblock") (v "0.2.8") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1ia331da6jmpcbsryd8x4pysdb8k2abi8s46qlpm6ylbamjck333") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.9 (c (n "adblock") (v "0.2.9") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "194v531s2cjbs0baixc1x7z0rzh5k12xlqff2pskc8idnvx18an7") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.10 (c (n "adblock") (v "0.2.10") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "057li4f7cdbfgmfvpmwd3z0as26q7scw37ngwf8jdj6s1k3rzmyl") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.2.11 (c (n "adblock") (v "0.2.11") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1pnjpf83srp0631ss0jn12rm6k9vmbhgdbzghlv4g34l5np4ri9w") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.3.0 (c (n "adblock") (v "0.3.0") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "12sg1shyxh7asfxddghr24yic1ap4xv1hbipb17lagdds3pj68vx") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("default" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.3.1 (c (n "adblock") (v "0.3.1") (d (list (d (n "addr") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "psl") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0kwm6lc4b1cjs0iv51fhaipka8wlz3pd6w1nxbq1pl70ny8bcn6z") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("docs-rs-incompatible" "psl") ("default-not-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-not-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors"))))))

(define-public crate-adblock-0.3.2 (c (n "adblock") (v "0.3.2") (d (list (d (n "addr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "04bfzpjk32wsmvkq5rw1q4p67v8zk2a1j0hym3ciwil2bg03gp2l") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("docs-rs-incompatible" "embedded-domain-resolver") ("default-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.3 (c (n "adblock") (v "0.3.3") (d (list (d (n "addr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.10") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0.12") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "0dgvl1j731q4jp3r2iz0z413479vlg09lk3246awld5hrgy3jyns") (f (quote (("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("docs-rs-incompatible" "embedded-domain-resolver") ("default-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.4 (c (n "adblock") (v "0.3.4") (d (list (d (n "addr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)))) (h "1dwl2rncahrm1271adpa90fh77dizj8lk2l9criy59lw16rl818r") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("docs-rs-incompatible" "embedded-domain-resolver") ("default-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.5 (c (n "adblock") (v "0.3.5") (d (list (d (n "addr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1dks7m63x1vd3zw79rwn2vn2ark7p4qrifb68951k0iavywhjz89") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("docs-rs-incompatible" "embedded-domain-resolver") ("default-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.6 (c (n "adblock") (v "0.3.6") (d (list (d (n "addr") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1qms96y4l8k6d5i4ndjvgk28nxl3949l0s0qpl8qlhhwqgsrmg06") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("docs-rs-incompatible" "embedded-domain-resolver") ("default-docs-rs" "full-regex-handling" "object-pooling") ("default" "default-docs-rs" "docs-rs-incompatible") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.7 (c (n "adblock") (v "0.3.7") (d (list (d (n "addr") (r "^0.9") (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1bzi6rns9sb7qzzd8xialz88amp4rv5a1scjbmybn714vsg1cw7q") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.8 (c (n "adblock") (v "0.3.8") (d (list (d (n "addr") (r "^0.9") (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "01rw8xycyxflfgjghawm8maxxrm4qg68wfyp6awf9axlqsg8n6x4") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.9 (c (n "adblock") (v "0.3.9") (d (list (d (n "addr") (r "^0.11") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0jia53qykkqivjv0i95gr23mp664j8rg8xza8p5vj9nd7sk8d9g9") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.10 (c (n "adblock") (v "0.3.10") (d (list (d (n "addr") (r "^0.11") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1pwpf4r5rrcnmd5i07lrm7r9z5d8bys5j3zgbaxgn69619hcqk78") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.11 (c (n "adblock") (v "0.3.11") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "10kw8lwiqrwp3jb2z9mchy4ymfb4b9v8406k860052xz0a12vnwm") (f (quote (("resource-assembler") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.12 (c (n "adblock") (v "0.3.12") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1i8p6b2gwld61rg5rq0xwlq77ya6rarbvnnz337h1q940v4aym9c") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.13 (c (n "adblock") (v "0.3.13") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.13.7") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0g30i418zinf5xas5gl0cnm47xxry9z08amq273jrsi4gs53vpqk") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.14 (c (n "adblock") (v "0.3.14") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.2") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "003nkl8x652vdzaf2j8d6nbiaq42qasy3njabdbiq1lbqv17ygz2") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json")))) (y #t)))

(define-public crate-adblock-0.3.15 (c (n "adblock") (v "0.3.15") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0d11170jwm23jyqw0dmksnf641mlk7lj1id04j4hvgmf4vq0d4ay") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.3.16 (c (n "adblock") (v "0.3.16") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0nl27pwl0mn7qhy03wawpfp8vjg3zb8p1dl4nl6jq858f5ybm0km") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json")))) (y #t)))

(define-public crate-adblock-0.3.17 (c (n "adblock") (v "0.3.17") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1502j27lny6g80sh4ir0663inn46fgrm6p6bv1hfinizwbqldmyq") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.4.0 (c (n "adblock") (v "0.4.0") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0fvrbbh6gv0imiihcgcwk7kwj060nfxn1qqqz4yfa3ga1whz7hhx") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.4.1 (c (n "adblock") (v "0.4.1") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "16ynk7y4wh4ndh3chwxqq512pdg8hk3lcrcgkgcivjpbkyrvyrdl") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.4.2 (c (n "adblock") (v "0.4.2") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0l8fg9lzinglmhwiw5jwbk7g7k4wcdcw4jdficqnj36ncxlqkxyl") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.4.3 (c (n "adblock") (v "0.4.3") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1gq2f6dcnihm90a0v69gnp58az1qk5wbn29ibmnxhgwhfl3d1gaj") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.0 (c (n "adblock") (v "0.5.0") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1cgwiclmcp9dw5hbvwqghx9m2hgzikbbijsivpf27wxh3qnz7cvs") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.1 (c (n "adblock") (v "0.5.1") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "18b69qrrjblrrvj5g8a3a53w8c442fwg9dxkibzhvk8glxdsmm09") (f (quote (("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.2 (c (n "adblock") (v "0.5.2") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0vxsiq3cyx11pj5za3500ynwgcjk5i8karnfphabkh5bripvlmm6") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.3 (c (n "adblock") (v "0.5.3") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "17bwqw996x96zh3ham50ky0a0aw5w1myflv13zvyhr5s2ffwj4my") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.4 (c (n "adblock") (v "0.5.4") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0f583bm1nk2yfhnsi124928h0pmknif3rx8mkqgrfvslam5hd3ww") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.5 (c (n "adblock") (v "0.5.5") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "025qp4j2q8iy0pjp6qwsmbhpvsnfxm4vy55ip9hapfv5g9a115xy") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.6 (c (n "adblock") (v "0.5.6") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "05c3iw2i6nyimxknd4avg61ibv7mzpzfrqgkvv98zj4vp3smwy17") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("full-domain-matching") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.7 (c (n "adblock") (v "0.5.7") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0j112i3857c63zbmdsaashaa2psg0rwpqz6saixgxb6if7gmrbi1") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.5.8 (c (n "adblock") (v "0.5.8") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1qgjcrm7vqxq5ispdj95ql7payy5d5rj0zfwba4b076xxvw1q4yq") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.6.0 (c (n "adblock") (v "0.6.0") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1qqdqihb3dy8bgg678f8ww95lx5pmzkkbzhvb3k3aji1ic1c2mxw") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.6.1 (c (n "adblock") (v "0.6.1") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.8") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "185h4xllsnhav79k1nkkkdk3vp63ij13awjdhx7rpc6z6fh07qv8") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.6.2 (c (n "adblock") (v "0.6.2") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1kvfyb6707ag57ik1d4bcb7qwvvljhq439lnqcnq0y656bx3jyrk") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.6.3 (c (n "adblock") (v "0.6.3") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "17yk939skd0208fp0pwmvnhwqr7zfbd13sajqx23bh9nl6yaihkl") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.0 (c (n "adblock") (v "0.7.0") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1ppw0xqryfzkjwg8wmpjgkifpiqj7z9vygzl2d8n8kkfs39k2fj1") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.1 (c (n "adblock") (v "0.7.1") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1mlmgfgm3v25x3i6liwmq133j7mgcakyprcsplzbrpllg6mddi5h") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.2 (c (n "adblock") (v "0.7.2") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0kv1rrbyib2a3szzys7gn38p4ybll36485vyk3by36cwk43s51c5") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.3 (c (n "adblock") (v "0.7.3") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1rmhv192yxycjr2pi1kymkaadf1dxivwq27wdqm8qhyzqzap1pyy") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.6.4 (c (n "adblock") (v "0.6.4") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.23") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1m8rfandp2f4arwx2bfsqxabxzzh5ns58c23fssmw40zqq0ql9j7") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.4 (c (n "adblock") (v "0.7.4") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "13diq4kyyhx740iwqsxird75jmy89bb278rq8qszhlc2a5bxp667") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.5 (c (n "adblock") (v "0.7.5") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "twoway") (r "^0.2") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "01ja8q67rvjps5nwhs5biflrhl97bh8rq48mx01y6hyjzpmk26fd") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.6 (c (n "adblock") (v "0.7.6") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1xqly7xh8i5y2sdzg3imifgy66kxyldzyjrqqc7yph8pyqn7nfsn") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.7 (c (n "adblock") (v "0.7.7") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0ivvfnbbc66ybxg5n16r3rvw508vqrzzz5b0kyy2785yq4gc6scr") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.8 (c (n "adblock") (v "0.7.8") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1l8ii4h1z6121q0ba5yijp6ckfahgd99drpv8xp3a19sfsbv9p6q") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.9 (c (n "adblock") (v "0.7.9") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1rv1pswpp8n73j7pc3mfqmbvj5j87iy2dd34w24jr5ajm3ysbbdx") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.10 (c (n "adblock") (v "0.7.10") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1i9qcsa9xn0ykgckr8lp40n3zry2pvcffm7pykndwxzb3cxwdswj") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.11 (c (n "adblock") (v "0.7.11") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0c5gh665jpz641k0imks5kjisv5zjxnj0znljhvh2qvc0l6scaq2") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.12 (c (n "adblock") (v "0.7.12") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1r8nmpa51sbpa3zlv2h1db7s1igzgkk1kr9zrx1xq2aa28vi0qzf") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.13 (c (n "adblock") (v "0.7.13") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1m6ksk9ja56fxahzvjb3xs8h9i52l2nyy40q3kzi06lx1jmz0cah") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.14 (c (n "adblock") (v "0.7.14") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1a1pxy0pv15fsl4x80qw9p1q3hd8pr9c8j5rymd44wp4jjivww0b") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.15 (c (n "adblock") (v "0.7.15") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0lga8bdvlxnmdcv18blbgvpvfbdr76x037srmyfrc18gv2l78lj3") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.16 (c (n "adblock") (v "0.7.16") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0sjn75dr8bmmx49kirbvwc38bnbgc5dw1k6npziis0qcfvcw7rzv") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.17 (c (n "adblock") (v "0.7.17") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0qi3i63v9hjv7yvpp5n18bshd6ias24pihi0jvlk2jp5lp6x0bg2") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.18 (c (n "adblock") (v "0.7.18") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0zb1mjlnf86v9y701zlpmvvci04f5c1p31ydy7z2f6bdn6vlns1r") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.7.19 (c (n "adblock") (v "0.7.19") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rmp-serde-legacy") (r "^0.13.7") (d #t) (k 0) (p "rmp-serde")) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "01m8ijfy33sv432jwa18zgji9l4nbjf4x94wlj0wl88gchxzkg6r") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("object-pooling" "lifeguard") ("metrics") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("debug-info") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.0 (c (n "adblock") (v "0.8.0") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "006aljl4nriqm9lm7cp1dvx678bj865494b83y7xrpxlsyrdw9fd") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.1 (c (n "adblock") (v "0.8.1") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0gxgi8zwjdj5asn9i5jwar0h0ln03hwx7m7vb5hb34lynx9jkw52") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.2 (c (n "adblock") (v "0.8.2") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1c4yag8fkiyjkpdn6a0fav6spcjp1m8l1fqaq0vkmimii4z9n6s0") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.3 (c (n "adblock") (v "0.8.3") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "133j5flcyr7ahxzznrz44xah7g89scag2ismx5fnkv5daklgcr8n") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.4 (c (n "adblock") (v "0.8.4") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "07avcpk1k4yf9r72zij1vy7h2i5dmsg3px6lj1hz860a05xj0g53") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.5 (c (n "adblock") (v "0.8.5") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1ja3826fpq8nq7vlj8hr663ysfigf064qwrs8zr9yxmbc20b5kk8") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.6 (c (n "adblock") (v "0.8.6") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1l45q1020qnnv67zyki6f3z49x2g1ax6wdjk8z528c579jl2l6gk") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.7 (c (n "adblock") (v "0.8.7") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1dr3f5p50pc8pcr5zlxrm84sjz56c5fqzkfp6l55c3whb7z12922") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.8 (c (n "adblock") (v "0.8.8") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "0nzzhrs2kb1p9x81a1gvlg93d8xaf7d49bz10jykdfx9gq4wzrl0") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.9 (c (n "adblock") (v "0.8.9") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1qsrplrb7h0834nm768q95w4k16v13ilrxqwjc2xm56lc617whxi") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

(define-public crate-adblock-0.8.10 (c (n "adblock") (v "0.8.10") (d (list (d (n "addr") (r "^0.14") (f (quote ("psl"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "cssparser") (r "^0.28") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "idna") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lifeguard") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "mock_instant") (r "^0.2") (f (quote ("sync"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 2)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "seahash") (r "^3") (d #t) (k 0)) (d (n "selectors") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "16jizzsawh1aqjnljnzysyy2ighv3npk7csapsnv4y1i1nmcj64p") (f (quote (("unsync-regex-caching") ("resource-assembler" "serde_json") ("regex-debug-info") ("object-pooling" "lifeguard") ("full-regex-handling") ("embedded-domain-resolver" "addr") ("default" "embedded-domain-resolver" "full-regex-handling" "object-pooling" "unsync-regex-caching") ("css-validation" "cssparser" "selectors") ("content-blocking" "serde_json"))))))

