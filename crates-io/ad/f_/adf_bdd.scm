(define-module (crates-io ad f_ adf_bdd) #:use-module (crates-io))

(define-public crate-adf_bdd-0.2.4 (c (n "adf_bdd") (v "0.2.4") (d (list (d (n "biodivine-lib-bdd") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)))) (h "0sac375mlwcml7fgln5d03k2hyvpxv604v272kq18ia3lng530g7") (f (quote (("variablelist" "HashSet") ("importexport") ("default" "adhoccounting" "variablelist") ("adhoccounting") ("HashSet"))))))

(define-public crate-adf_bdd-0.3.0 (c (n "adf_bdd") (v "0.3.0") (d (list (d (n "biodivine-lib-bdd") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "roaring") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)))) (h "11b1x1r89z6hlsbd40rzz55afqmxhshxvgq8w1w8rkw1lyw63h29") (f (quote (("variablelist" "HashSet") ("importexport") ("default" "adhoccounting" "variablelist") ("benchmark" "adhoccounting" "variablelist") ("adhoccountmodels" "adhoccounting") ("adhoccounting") ("HashSet"))))))

(define-public crate-adf_bdd-0.3.1 (c (n "adf_bdd") (v "0.3.1") (d (list (d (n "biodivine-lib-bdd") (r "^0.4.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std_rng"))) (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)))) (h "19f2jlvxn5a1swv2cgfw50w8m4lgmjly1fnbxmgq9nll21cwp20m") (f (quote (("variablelist" "HashSet") ("importexport") ("frontend") ("default" "adhoccounting" "variablelist" "frontend") ("benchmark" "adhoccounting" "variablelist") ("adhoccountmodels" "adhoccounting") ("adhoccounting") ("HashSet"))))))

