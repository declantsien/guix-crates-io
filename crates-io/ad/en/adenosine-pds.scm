(define-module (crates-io ad en adenosine-pds) #:use-module (crates-io))

(define-public crate-adenosine-pds-0.1.0 (c (n "adenosine-pds") (v "0.1.0") (d (list (d (n "adenosine-cli") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "integer-encoding") (r "^3") (f (quote ("tokio_async"))) (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.13") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)))) (h "0h8bbsq0783wvmjy492hi8ibxlkxxailayngplrqr75l00bc5xs1") (r "1.61")))

(define-public crate-adenosine-pds-0.1.1 (c (n "adenosine-pds") (v "0.1.1") (d (list (d (n "adenosine-cli") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "integer-encoding") (r "^3") (f (quote ("tokio_async"))) (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.13") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)))) (h "1dkpmydwmkjj1fwjrvx112y6jd82y382lfha6pnmyk183hxz42ma") (r "1.61")))

(define-public crate-adenosine-pds-0.1.2 (c (n "adenosine-pds") (v "0.1.2") (d (list (d (n "adenosine-cli") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "integer-encoding") (r "^3") (f (quote ("tokio_async"))) (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.13") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)))) (h "0hxi3qix80nnydvzqxbmw2alh8pyp6nqggrb0i8g1707m1qhvnca") (r "1.61")))

(define-public crate-adenosine-pds-0.2.0 (c (n "adenosine-pds") (v "0.2.0") (d (list (d (n "adenosine-cli") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "integer-encoding") (r "^3") (f (quote ("tokio_async"))) (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.13") (d #t) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multibase") (r "^0.9") (d #t) (k 0)) (d (n "multihash") (r "^0.16") (d #t) (k 0)) (d (n "p256") (r "^0.11") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha256") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)))) (h "0jglvql068n13bcxdb88v027qanyxba7z2sfkyiv8bms6n6b9hmb") (r "1.61")))

(define-public crate-adenosine-pds-0.3.0 (c (n "adenosine-pds") (v "0.3.0") (d (list (d (n "adenosine") (r "^0.3.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (f (quote ("dag-cbor" "derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "01p0mbsxzyb9wbvif2xxndmxmiqka6y3xr3nj832s1922mw8y3is") (r "1.61")))

(define-public crate-adenosine-pds-0.4.0 (c (n "adenosine-pds") (v "0.4.0") (d (list (d (n "adenosine") (r "^0.4.0") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "askama") (r "^0.11") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "bcrypt") (r "^0.13") (d #t) (k 0)) (d (n "data-encoding") (r "^2") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld") (r "^0.14") (f (quote ("dag-cbor" "derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rouille") (r "^3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.26") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1v01595723hmpx84lxngzjhq6zdf88bkclkypk57cnan9h445lvp") (r "1.61")))

