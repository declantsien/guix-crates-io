(define-module (crates-io ad de adder-codec-core) #:use-module (crates-io))

(define-public crate-adder-codec-core-0.1.0 (c (n "adder-codec-core") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1ki4sbn9h0sac21dhhda13bvqhx57gaw5a901lf38w4xsrl7mrlv")))

(define-public crate-adder-codec-core-0.1.1 (c (n "adder-codec-core") (v "0.1.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1rlh0zlwlkf9071b5sqsqf08rcjghvprn2bhhzn0bqga5bb6ikaj")))

(define-public crate-adder-codec-core-0.1.2 (c (n "adder-codec-core") (v "0.1.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "074rj1l3l2rk4w7ci71lmcribymmm355jradcwv2670i9hy6yv6w")))

(define-public crate-adder-codec-core-0.2.0 (c (n "adder-codec-core") (v "0.2.0") (d (list (d (n "arithmetic-coding") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "0hddy028x3qwcbwvnlkqk19n76kad5aalxsjszwsk6ddngp380cn") (f (quote (("default")))) (s 2) (e (quote (("compression" "dep:arithmetic-coding"))))))

(define-public crate-adder-codec-core-0.2.1 (c (n "adder-codec-core") (v "0.2.1") (d (list (d (n "arithmetic-coding") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "0ylngn1flpmyrc2s3dlbvm0jgb7r9z7fg5j57ha046cvvhr3fpxy") (f (quote (("default")))) (s 2) (e (quote (("compression" "dep:arithmetic-coding"))))))

(define-public crate-adder-codec-core-0.3.0 (c (n "adder-codec-core") (v "0.3.0") (d (list (d (n "arithmetic-coding-adder-dep") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "1dyjag3qpwnkdxfh6vcqhdkadcf36pdls608spvv0rkk0v6g4qig") (f (quote (("default" "compression")))) (y #t) (s 2) (e (quote (("compression" "dep:arithmetic-coding-adder-dep"))))))

(define-public crate-adder-codec-core-0.3.1 (c (n "adder-codec-core") (v "0.3.1") (d (list (d (n "arithmetic-coding-adder-dep") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "08jalw5haivj8xk500swpqb76q6d2dbfnx09qbjdgacdhn6bq801") (f (quote (("default" "compression")))) (s 2) (e (quote (("compression" "dep:arithmetic-coding-adder-dep"))))))

(define-public crate-adder-codec-core-0.3.2 (c (n "adder-codec-core") (v "0.3.2") (d (list (d (n "arithmetic-coding-adder-dep") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "19mvd12njikj2g5vgcrvrny99jn26cdqqi6dfmiq8izmj5d80jzq") (f (quote (("default" "compression")))) (s 2) (e (quote (("compression" "dep:arithmetic-coding-adder-dep"))))))

(define-public crate-adder-codec-core-0.3.3 (c (n "adder-codec-core") (v "0.3.3") (d (list (d (n "arithmetic-coding-adder-dep") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitstream-io") (r "^1.6.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "fenwick") (r "^2.0.1") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "numquant") (r "^0.2.0") (d #t) (k 0)) (d (n "priority-queue") (r "^1.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustdct") (r "^0.7.1") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "transpose") (r "^0.2.2") (d #t) (k 0)))) (h "1m0r21pmbbankdq5rfnhxw2p634cfjs7q8qqbr9yk1fx7js64n69") (f (quote (("default" "compression")))) (s 2) (e (quote (("compression" "dep:arithmetic-coding-adder-dep"))))))

