(define-module (crates-io ty pi typify-impl) #:use-module (crates-io))

(define-public crate-typify-impl-0.0.3 (c (n "typify-impl") (v "0.0.3") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vrkpxpi0rvra7d195p6fp8x7c5s9svp7g7a3dyhlh4mp9sg7hpv")))

(define-public crate-typify-impl-0.0.4 (c (n "typify-impl") (v "0.0.4") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1rrjrf8biqgxpn8p3c8vifv0bhrd7ih6ag7nr03h3682g31dmvjv")))

(define-public crate-typify-impl-0.0.5 (c (n "typify-impl") (v "0.0.5") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "076npsd3nmic091jzq7l5yqppvhv32x68m3zzr49hdyqy603cqqz")))

(define-public crate-typify-impl-0.0.6 (c (n "typify-impl") (v "0.0.6") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("uuid"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 2)))) (h "0363nxb4ld90smgmiq815f4d0chbr235rchqibmxrq7ifyivbcal")))

(define-public crate-typify-impl-0.0.7 (c (n "typify-impl") (v "0.0.7") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 2)))) (h "0j4p9fd6g8hhr6nhggimbm5lrvd8fkfgpc69swq5kbq69k2d64c0")))

(define-public crate-typify-impl-0.0.8 (c (n "typify-impl") (v "0.0.8") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (d #t) (k 2)))) (h "15sl7dyd361bkcdz1h9kkbm5j2ljcz01nwnkpjm5sdrvi97pwzxj")))

(define-public crate-typify-impl-0.0.9 (c (n "typify-impl") (v "0.0.9") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 2)))) (h "1pkvds9cp7v1nfscr79xpxcbspc9ilg74k72lyjh515yand3cwmm")))

(define-public crate-typify-impl-0.0.10 (c (n "typify-impl") (v "0.0.10") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.4.1") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.3") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 2)))) (h "19gggxd8wx6vvgqls7fyrnab54qz51v6y8sayfxy5xhxj45lsqm7")))

(define-public crate-typify-impl-0.0.11 (c (n "typify-impl") (v "0.0.11") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.5.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 2)) (d (n "schema") (r "^0.0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (d #t) (k 2)))) (h "06maf7y0z18w6xibcamrvn4mq802s5xfv211q9papkkqjds7vllm")))

(define-public crate-typify-impl-0.0.12 (c (n "typify-impl") (v "0.0.12") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.6.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (d #t) (k 2)))) (h "1vrbif114cf4kzr4wyml784gxkhf6szh5vfn4vsys4vvb13vplrl")))

(define-public crate-typify-impl-0.0.13 (c (n "typify-impl") (v "0.0.13") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.6.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (d #t) (k 2)))) (h "0ks4q9n8samxddp9q9dj8w1asd0bljffp3n3fplpgzg2vp79x3aw")))

(define-public crate-typify-impl-0.0.14 (c (n "typify-impl") (v "0.0.14") (d (list (d (n "expectorate") (r "^1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.7.1") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.13") (d #t) (k 0)) (d (n "schemars") (r "^0.8.13") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.12") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "161251dq8sizsblwfcl0q212nrbawpg751l69ip6d7vpj8hpb74x")))

(define-public crate-typify-impl-0.0.15 (c (n "typify-impl") (v "0.0.15") (d (list (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "expectorate") (r "^1.1") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regress") (r "^0.7.1") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.13") (d #t) (k 0)) (d (n "schemars") (r "^0.8.13") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.12") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "1kvrzcqp62xydnq36yk905vpwypbrg5yqaz6z65cbrxdvx2741c9")))

(define-public crate-typify-impl-0.0.16 (c (n "typify-impl") (v "0.0.16") (d (list (d (n "env_logger") (r "^0.10.2") (d #t) (k 2)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "heck") (r "^0.4.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.78") (d #t) (k 0)) (d (n "quote") (r "^1.0.35") (d #t) (k 0)) (d (n "regress") (r "^0.8.0") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2.1") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("uuid1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "syn") (r "^2.0.51") (f (quote ("full"))) (d #t) (k 0)) (d (n "syn") (r "^2.0.51") (f (quote ("full" "extra-traits"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.12") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (d #t) (k 2)))) (h "0zm8ya0g2kfyfw59pnxla9aflwnqrhp439f75n7gh11q94w2zqwm")))

(define-public crate-typify-impl-0.1.0 (c (n "typify-impl") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.10.2") (d #t) (k 2)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "heck") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "paste") (r "^1.0.15") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.81") (d #t) (k 0)) (d (n "quote") (r "^1.0.36") (d #t) (k 0)) (d (n "regress") (r "^0.9.1") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2.1") (d #t) (k 2)) (d (n "schema") (r "^0.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.17") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("uuid1" "impl_json_schema"))) (d #t) (k 2)) (d (n "semver") (r "^1.0.22") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "syn") (r "^2.0.63") (f (quote ("full"))) (d #t) (k 0)) (d (n "syn") (r "^2.0.63") (f (quote ("full" "extra-traits"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "unicode-ident") (r "^1.0.12") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "1bnm186wnbwy292wn7hvg9yjycpl2j0yw3yqb3waym06k57b5fwk")))

