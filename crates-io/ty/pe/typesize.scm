(define-module (crates-io ty pe typesize) #:use-module (crates-io))

(define-public crate-typesize-0.1.0 (c (n "typesize") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "0byahya1gk577rqchmdaava69i6n37kvpprd0p25paycihi9jj1p") (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.1 (c (n "typesize") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "0p6yvcwq338i341nr5wrk0p36xlakcmihi43niafahc725j3i9sc") (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.2 (c (n "typesize") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "0766d64yz3y7bbgs9vcw43grj5n0jd8588m893v9sbax8i9ajhry") (f (quote (("details" "typesize-derive/details")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.3 (c (n "typesize") (v "0.1.3") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "06sncjw721vd0ycn0ix0cris5imx4hgnan5m46xss121rmxqlqs6") (f (quote (("details" "typesize-derive/details")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.4 (c (n "typesize") (v "0.1.4") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "195mdlr2qyax1lj7s5ibwg7f4gqlm7lgq25mif06djxbjsmi5l80") (f (quote (("details" "typesize-derive/details")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.5 (c (n "typesize") (v "0.1.5") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "nonmax") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "18bdg35p51ngnw8pqyrj711k45s3pzghvjf8491j4f3ff84lb4in") (f (quote (("details" "typesize-derive/details")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("nonmax" "dep:nonmax") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.6 (c (n "typesize") (v "0.1.6") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "extract_map") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "nonmax") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "0m5gxk3srvr73z3zkcicymzspq1a16vhr15qqslj973a2zkjv1mc") (f (quote (("std") ("details" "typesize-derive/details") ("default" "std")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("nonmax" "dep:nonmax") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("extract_map_01" "dep:extract_map") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend"))))))

(define-public crate-typesize-0.1.7 (c (n "typesize") (v "0.1.7") (d (list (d (n "arrayvec") (r "^0.7.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (f (quote ("raw-api"))) (o #t) (d #t) (k 0)) (d (n "extract_map") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "halfbrown") (r "^0.2.4") (o #t) (k 0)) (d (n "hashbrown") (r "^0.14.2") (o #t) (k 0)) (d (n "mini-moka") (r "^0.10.2") (o #t) (k 0)) (d (n "nonmax") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "simd-json") (r "^0.13") (o #t) (k 0)) (d (n "time") (r "^0.3.30") (o #t) (k 0)) (d (n "typesize-derive") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (k 0)))) (h "03zf3k54hbn0mvcx1axv5b5crvlb435h9rwr7vv7dg09qx14hw7b") (f (quote (("std") ("details" "typesize-derive/details") ("default" "std")))) (s 2) (e (quote (("url" "dep:url") ("time" "dep:time") ("simd_json" "dep:simd-json" "halfbrown") ("serde_json" "dep:serde_json") ("secrecy" "dep:secrecy") ("parking_lot" "dep:parking_lot") ("nonmax" "dep:nonmax") ("mini_moka" "dep:mini-moka") ("hashbrown" "dep:hashbrown") ("halfbrown" "dep:halfbrown" "hashbrown") ("extract_map_01" "dep:extract_map") ("dashmap" "dep:dashmap" "mini-moka?/sync" "hashbrown") ("chrono" "dep:chrono") ("arrayvec" "dep:arrayvec" "halfbrown?/arraybackend")))) (r "1.65")))

