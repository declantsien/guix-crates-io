(define-module (crates-io ty pe typed-generational-arena) #:use-module (crates-io))

(define-public crate-typed-generational-arena-0.1.0 (c (n "typed-generational-arena") (v "0.1.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0r9ah4vsqv32s1jk2n71l2lsfqjjzf857hkialcnn40gn3byfqg1") (f (quote (("std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.1.1 (c (n "typed-generational-arena") (v "0.1.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1waipsr4p78j4p7wszrzpyvcj5xh3491k1jrwbd5v7dx81w0yhij") (f (quote (("std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.1.2 (c (n "typed-generational-arena") (v "0.1.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1zw0zmd1pxw8sdp5n4mz9w30xvwrr8cf5c12y8nmhd3n69wy0aw5") (f (quote (("std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.1.3 (c (n "typed-generational-arena") (v "0.1.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "18yhkjyr24hxjwc6z1097xb6x27mm8q43hbz2yh7k31r7y3ngdnf") (f (quote (("std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.0 (c (n "typed-generational-arena") (v "0.2.0") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0b253ss3mv43y5bvmbd7k3v0vbf4dvawlz9w4r26lccapzhz341w") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.1 (c (n "typed-generational-arena") (v "0.2.1") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "11qcqi25kpkcyzd3193q8jqsj6b0racnhsladjg9ampvdl7j0163") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.2 (c (n "typed-generational-arena") (v "0.2.2") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1irrd2xhp9jh5yg7z04papx4b69534j3p4l150ajjxzv61lkiyh6") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.3 (c (n "typed-generational-arena") (v "0.2.3") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0hvkwqh18wpyh9vw5mxrnv9daxgkll5rp1xsfp1fj1bq70b4v7kg") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.4 (c (n "typed-generational-arena") (v "0.2.4") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1x1xq26lkxj06pdyz3ddbs4y42nl8bihyfpi2qbcl52bm3m1s00g") (f (quote (("std" "num-traits/std") ("default" "std"))))))

(define-public crate-typed-generational-arena-0.2.5 (c (n "typed-generational-arena") (v "0.2.5") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1.5") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "derivative") (r "^1.0") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "nonzero_ext") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1h34xm0kdyas3mhm5q94cccjl0vw6k2a2mfgzjh5zvx07yg9zwiv") (f (quote (("std" "num-traits/std") ("default" "std"))))))

