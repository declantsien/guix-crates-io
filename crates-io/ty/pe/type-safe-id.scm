(define-module (crates-io ty pe type-safe-id) #:use-module (crates-io))

(define-public crate-type-safe-id-0.0.0 (c (n "type-safe-id") (v "0.0.0") (h "02fyl3c4v9r7h7yrp4xz6djxbfq5j60cnxfbdpq76bggn3kyh8kv")))

(define-public crate-type-safe-id-0.1.0 (c (n "type-safe-id") (v "0.1.0") (d (list (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (f (quote ("std"))) (d #t) (k 0)))) (h "01x5va0nm01h7r6flq2irzjwgwp1mh7qm5ql0r3qz5lfqnsqp4ky") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "smol_str/serde"))))))

(define-public crate-type-safe-id-0.1.1 (c (n "type-safe-id") (v "0.1.1") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.0") (d #t) (k 0)))) (h "19cjkp3vkab018pcrnhqw10awhf98cx07jlsp2w7n9x3hs1kflml") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "smol_str/serde") ("arbitrary" "dep:arbitrary" "smol_str/arbitrary"))))))

(define-public crate-type-safe-id-0.2.0 (c (n "type-safe-id") (v "0.2.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (d #t) (k 2)))) (h "06dqp80fmshn97c13sk6siddi6vnbs8q5p13rxlc9gp4z2nnns6k") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("arbitrary" "dep:arbitrary"))))))

(define-public crate-type-safe-id-0.2.1 (c (n "type-safe-id") (v "0.2.1") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.0") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (d #t) (k 2)))) (h "1bb1j0ppfqshl7qnmp2hmdyv0cqm1m9dsny44spabij46sji24mv") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("arbitrary" "dep:arbitrary"))))))

(define-public crate-type-safe-id-0.3.0 (c (n "type-safe-id") (v "0.3.0") (d (list (d (n "arbitrary") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "libtest-mimic") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.0") (f (quote ("v7"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde"))) (d #t) (k 2)))) (h "1qks65i9xjyzx3pci46ciy74jr1di3az9zh29s7768and1wm0572") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde") ("arbitrary" "dep:arbitrary"))))))

