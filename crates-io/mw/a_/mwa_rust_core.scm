(define-module (crates-io mw a_ mwa_rust_core) #:use-module (crates-io))

(define-public crate-mwa_rust_core-0.1.0 (c (n "mwa_rust_core") (v "0.1.0") (d (list (d (n "approx") (r "0.4.*") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "criterion") (r "0.3.*") (d #t) (k 2)) (d (n "erfa-sys") (r "0.1.*") (d #t) (k 0)) (d (n "hifitime") (r "2.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "mwalib") (r ">=0.9.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "0.14.*") (f (quote ("approx"))) (d #t) (k 2)) (d (n "num-complex") (r "0.3.*") (d #t) (k 0)) (d (n "num-traits") (r "0.2.*") (d #t) (k 0)) (d (n "rayon") (r "~1") (d #t) (k 0)) (d (n "static_assertions") (r "1.1.*") (d #t) (k 0)) (d (n "thiserror") (r "1.0.*") (d #t) (k 0)))) (h "1hlxb236sym8gllx3p7zrvwc948lw1z43qwilc4cda7xyi42bhf0") (f (quote (("erfa-static" "erfa-sys/static") ("default" "mwalib") ("cfitsio-static" "mwalib/cfitsio-static") ("all-static" "erfa-static" "cfitsio-static"))))))

(define-public crate-mwa_rust_core-0.1.1 (c (n "mwa_rust_core") (v "0.1.1") (d (list (d (n "approx") (r ">=0.4, <0.6") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "criterion") (r "0.3.*") (d #t) (k 2)) (d (n "erfa-sys") (r "0.1.*") (d #t) (k 0)) (d (n "hifitime") (r "2.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "mwalib") (r ">=0.9.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "0.14.*") (f (quote ("approx"))) (d #t) (k 2)) (d (n "num-complex") (r ">=0.3, <0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.0") (d #t) (k 2)) (d (n "num-traits") (r "0.2.*") (d #t) (k 0)) (d (n "rayon") (r "~1") (d #t) (k 0)) (d (n "thiserror") (r "1.0.*") (d #t) (k 0)))) (h "0ghfb28hfdws5r1n2kzwypw32pyjya8pzrjzl1a7ikpvdrgigypv") (f (quote (("erfa-static" "erfa-sys/static") ("default" "mwalib") ("cfitsio-static" "mwalib/cfitsio-static") ("all-static" "erfa-static" "cfitsio-static"))))))

(define-public crate-mwa_rust_core-0.1.2 (c (n "mwa_rust_core") (v "0.1.2") (d (list (d (n "approx") (r ">=0.4, <0.6") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "criterion") (r "0.3.*") (d #t) (k 2)) (d (n "erfa-sys") (r "0.1.*") (d #t) (k 0)) (d (n "hifitime") (r "2.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "mwalib") (r ">=0.9.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "0.14.*") (f (quote ("approx"))) (d #t) (k 2)) (d (n "num-complex") (r ">=0.3, <0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.0") (d #t) (k 2)) (d (n "num-traits") (r "0.2.*") (d #t) (k 0)) (d (n "rayon") (r "~1") (d #t) (k 0)) (d (n "thiserror") (r "1.0.*") (d #t) (k 0)))) (h "1vm9m5v38khdl78cn9x1a9d89p1jhcr2j11b3n5jwihpinwghai2") (f (quote (("erfa-static" "erfa-sys/static") ("default" "mwalib") ("cfitsio-static" "mwalib/cfitsio-static") ("all-static" "erfa-static" "cfitsio-static"))))))

(define-public crate-mwa_rust_core-0.2.0 (c (n "mwa_rust_core") (v "0.2.0") (d (list (d (n "approx") (r ">=0.4, <0.6") (f (quote ("num-complex"))) (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (f (quote ("num-complex"))) (d #t) (k 2)) (d (n "criterion") (r "0.3.*") (d #t) (k 2)) (d (n "erfa-sys") (r "0.1.*") (d #t) (k 0)) (d (n "hifitime") (r "2.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "mwalib") (r ">=0.9.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "0.14.*") (f (quote ("approx"))) (d #t) (k 2)) (d (n "num-complex") (r ">=0.3, <0.5") (d #t) (k 0)) (d (n "num-complex") (r "^0.3.0") (d #t) (k 2)) (d (n "num-traits") (r "0.2.*") (d #t) (k 0)) (d (n "rayon") (r "~1") (d #t) (k 0)) (d (n "thiserror") (r "1.0.*") (d #t) (k 0)))) (h "0d7nljhnvdicsk68bjyakpm94pfjdc8dv8z6l7xrgvcr58pxzx56") (f (quote (("erfa-static" "erfa-sys/static") ("default" "mwalib") ("cfitsio-static" "mwalib/cfitsio-static") ("all-static" "erfa-static" "cfitsio-static"))))))

