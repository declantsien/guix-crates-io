(define-module (crates-io mw at mwatch-kernel-stm32l4) #:use-module (crates-io))

(define-public crate-mwatch-kernel-stm32l4-2.0.0 (c (n "mwatch-kernel-stm32l4") (v "2.0.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.5.8") (d #t) (k 0)) (d (n "cortex-m-log") (r "^0.4.0") (f (quote ("itm" "log-integration"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.8") (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.6") (d #t) (k 0)) (d (n "crc") (r "^1.8.1") (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "heapless") (r "^0.4.2") (d #t) (k 0)) (d (n "hm11") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "max17048") (r "^0.1.0") (d #t) (k 0)) (d (n "mwatch-kernel") (r "^2.0") (d #t) (k 0) (p "mwatch_kernel")) (d (n "panic-itm") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.2") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "panic-semihosting") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "rtt-target") (r "^0.3.1") (f (quote ("cortex-m"))) (o #t) (d #t) (k 0)) (d (n "simple-hex") (r "^0.1.0") (d #t) (k 0)) (d (n "ssd1351") (r "^0.4.1") (f (quote ("graphics" "buffered"))) (d #t) (k 0)) (d (n "stm32l4xx-hal") (r "^0.5.0") (f (quote ("rt" "stm32l4x2"))) (d #t) (k 0)) (d (n "time") (r "^0.3") (k 0)))) (h "1ms3hiy2hdan9854c98gls41ff8fdzrkha0lbyd2hwl3099nikq5") (f (quote (("dyn-tsc-cal") ("disable-input") ("default" "rtt") ("crc-fb")))) (s 2) (e (quote (("semihosting" "dep:panic-semihosting") ("rtt" "dep:rtt-target" "dep:panic-rtt-target") ("itm" "dep:panic-itm"))))))

