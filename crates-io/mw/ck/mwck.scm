(define-module (crates-io mw ck mwck) #:use-module (crates-io))

(define-public crate-mwck-0.1.0 (c (n "mwck") (v "0.1.0") (d (list (d (n "bitcoin") (r "^0.30") (f (quote ("serde" "std"))) (k 0)) (d (n "delegate") (r "^0.10.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "esplora-client") (r "^0.6") (f (quote ("async"))) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "alloc"))) (k 0)) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt-multi-thread" "time" "macros" "sync" "signal"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "time" "macros" "sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (f (quote ("native-tls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)) (d (n "wasm-logger") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ws_stream_wasm") (r "^0.7.4") (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "13fynipccsi2jaxlixjgih02ha035322n7gq643inbmx6c40g1nq")))

