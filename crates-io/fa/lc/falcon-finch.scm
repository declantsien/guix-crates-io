(define-module (crates-io fa lc falcon-finch) #:use-module (crates-io))

(define-public crate-falcon-finch-0.4.5 (c (n "falcon-finch") (v "0.4.5") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "falcon") (r "^0.4.10") (d #t) (k 0)) (d (n "falcon-z3") (r "^0.4.10") (d #t) (k 0)) (d (n "falcon_capstone") (r "^0.4.0") (d #t) (k 0)) (d (n "goblin") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustyline") (r "^6.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)))) (h "1qzfkng6zi807m57zmd6wm4svm4023xs3hmdi3s9l0chgymlpgjx") (f (quote (("capstone4" "falcon/capstone4"))))))

(define-public crate-falcon-finch-0.4.6 (c (n "falcon-finch") (v "0.4.6") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "falcon") (r "^0.4.11") (d #t) (k 0)) (d (n "falcon-z3") (r "^0.4.11") (d #t) (k 0)) (d (n "falcon_capstone") (r "^0.4.0") (d #t) (k 0)) (d (n "goblin") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustyline") (r "^6.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "unicorn") (r "^0.9.1") (d #t) (k 0)))) (h "0whb8rcc7lqkz4n6w5p1v2rhar741vxlx5dwrd7liv3dn6v6wzx6") (f (quote (("capstone4" "falcon/capstone4"))))))

(define-public crate-falcon-finch-0.4.7 (c (n "falcon-finch") (v "0.4.7") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "falcon") (r "^0.4.12") (d #t) (k 0)) (d (n "falcon-z3") (r "^0.4.12") (d #t) (k 0)) (d (n "falcon_capstone") (r "^0.4.0") (d #t) (k 0)) (d (n "goblin") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustyline") (r "^6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)))) (h "072lcr3dcd2cpfr28sax4ji90ppy04wdc8h2yqd25q9kcj1x2yyh") (f (quote (("capstone4" "falcon/capstone4"))))))

(define-public crate-falcon-finch-0.5.1 (c (n "falcon-finch") (v "0.5.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "falcon") (r "^0.5.1") (d #t) (k 0)) (d (n "falcon-z3") (r "^0.5.1") (d #t) (k 0)) (d (n "falcon_capstone") (r "^0.4.1") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^5.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustyline") (r "^6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)))) (h "1xm2dfajn1gjklrih0lypns41fybrpnz9g7kcnlr6vai0bm3yr23") (f (quote (("capstone4" "falcon/capstone4"))))))

(define-public crate-falcon-finch-0.5.2 (c (n "falcon-finch") (v "0.5.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "falcon") (r "^0.5.2") (d #t) (k 0)) (d (n "falcon-z3") (r "^0.5.2") (d #t) (k 0)) (d (n "falcon_capstone") (r "^0.5.0") (d #t) (k 0)) (d (n "goblin") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6.2") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustyline") (r "^9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.10") (d #t) (k 0)))) (h "0ydfd9y7ahdr6h2bgfd0jswf0li1y8kb1m8nn8mfdbvwz44gvspp") (f (quote (("thread_safe" "falcon/thread_safe") ("capstone4" "falcon/capstone4"))))))

