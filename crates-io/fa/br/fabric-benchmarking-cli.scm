(define-module (crates-io fa br fabric-benchmarking-cli) #:use-module (crates-io))

(define-public crate-fabric-benchmarking-cli-2.0.1 (c (n "fabric-benchmarking-cli") (v "2.0.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "codec") (r "^2.0.1") (d #t) (k 0) (p "tetsy-scale-codec")) (d (n "externalities") (r "^0.8.2") (d #t) (k 0)) (d (n "fabric-benchmarking") (r "^2.0.0") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "structopt") (r "^0.3.8") (d #t) (k 0)) (d (n "tc-cli") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-client-db") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-executor") (r "^0.8.0") (d #t) (k 0)) (d (n "tc-service") (r "^0.8.0") (k 0)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-keystore") (r "^0.8.1") (d #t) (k 0)) (d (n "tp-runtime") (r "^2.0.2") (d #t) (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (d #t) (k 0)))) (h "1lxk6byb5fzgjvv8bi0vlvw5502h64xyg1rx3j9bn8rg20zl47dy") (f (quote (("default" "db") ("db" "tc-client-db/with-tetsy-kvdb-rocksdb" "tc-client-db/with-tetsy-db"))))))

