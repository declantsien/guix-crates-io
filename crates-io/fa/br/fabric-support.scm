(define-module (crates-io fa br fabric-support) #:use-module (crates-io))

(define-public crate-fabric-support-2.0.0 (c (n "fabric-support") (v "2.0.0") (d (list (d (n "arithmetic") (r "^2.0.2") (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "fabric-metadata") (r "^12.0.0") (k 0)) (d (n "fabric-support-procedural") (r "^2.0.1") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.4.1") (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (k 0)) (d (n "tet-io") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetcore-tracing") (r "^2.0.2") (k 0)) (d (n "tetsy-util-mem") (r "^0.9.0") (f (quote ("tetsy-primitive-types"))) (k 2)) (d (n "tp-api") (r "^2.0.2") (k 2)) (d (n "tp-inherents") (r "^2.0.2") (k 0)) (d (n "tp-runtime") (r "^2.0.2") (k 0)) (d (n "tp-state-machine") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "18axkzqs6jfhxby9bfahm63n5n2pp3ws4lgsy4dizvg2fim6abb4") (f (quote (("strict") ("std" "once_cell" "serde" "tet-io/std" "codec/std" "tetcore-std/std" "tp-runtime/std" "tetcore-tracing/std" "arithmetic/std" "fabric-metadata/std" "tp-inherents/std" "tp-state-machine" "fabric-support-procedural/std") ("runtime-benchmarks") ("nightly") ("default" "std"))))))

