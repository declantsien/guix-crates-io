(define-module (crates-io fa ha fahapi) #:use-module (crates-io))

(define-public crate-fahapi-0.1.0 (c (n "fahapi") (v "0.1.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "parse_duration") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "01yw8lij0kc3qg3z24ydyis898277lghv47z74jac2fp37l0x3nb") (f (quote (("all-tests"))))))

(define-public crate-fahapi-0.1.1 (c (n "fahapi") (v "0.1.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "parse_duration") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0vn0jdnavsyrpish37zfppk6w2a35zmmk1a21jzjwvaab8n3v7f8") (f (quote (("all-tests"))))))

(define-public crate-fahapi-0.1.2 (c (n "fahapi") (v "0.1.2") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.2") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0y1k7i45zff6xlhq7kawn6r5pgkbbgk7i1h0ak7kdwd2x3q41h62") (f (quote (("all-tests"))))))

(define-public crate-fahapi-0.1.3 (c (n "fahapi") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "humantime") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "08z9bi4sji6p0kpqgz2irhxyc12cz720ahdjnkl6vzmxjn3fgbyl") (f (quote (("all-tests"))))))

