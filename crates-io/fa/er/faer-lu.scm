(define-module (crates-io fa er faer-lu) #:use-module (crates-io))

(define-public crate-faer-lu-0.0.0 (c (n "faer-lu") (v "0.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.1") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1c7m23hb97glsf2rp5yxaxfgic1pa7wnk2lf1dg4na07wvissdm9") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.2.0 (c (n "faer-lu") (v "0.2.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.2") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0pp4lyy11nh67f9s12p1bsydacm70fwzkqm76wyglqkxsvix4b3b") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.3.0 (c (n "faer-lu") (v "0.3.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "02kb24qi47bwhprxq90fnsf1g7b36ani7mwvpn182jx46y7kgj4d") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.4.0 (c (n "faer-lu") (v "0.4.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.4") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0z2rwllbgdasvql1qk3vjwjfyn94f2lchiyw61amg1ycn7jf764q") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.5.0 (c (n "faer-lu") (v "0.5.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.32.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "12f38wkn972gpc3hs20hf171y5xbri4s018wl99mdd7nhqi8341j") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.6.0 (c (n "faer-lu") (v "0.6.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0r95s2y5q6i6ss3h5g3425bykr6cj571g3cjzqwg5lkxm565pfr2") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.7.0 (c (n "faer-lu") (v "0.7.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.7.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.12") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0cpjq9pqi4y1wiyzh5h377wwkm5i8vkqiqjrkw6f06al99wjzwq6") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.8.0 (c (n "faer-lu") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0gyk3g9cgi75pbkaj87sw5d0z2mpsaq8d3jmr81rac62zry20y9s") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.9.0 (c (n "faer-lu") (v "0.9.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0v8fys5qsp2rja21iphh6nfc5gq0hswx7gv57yvmlsx9gkhxwipx") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.9.1 (c (n "faer-lu") (v "0.9.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1ljzxvf32jzw3b19l762akl8zbgx2fk4rw6n9558bhjfw3avjb7c") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.10.0 (c (n "faer-lu") (v "0.10.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.10.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "03kn6xk966z52gip9m8l89q3dlzf11v0xyg2sxw61iyd23j9wkbr") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.11.0 (c (n "faer-lu") (v "0.11.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1i6y4h71bwjkilm20mkzbl8n1qjssjigh7sdgfhi0678wfi5ijjs") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.12.0 (c (n "faer-lu") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.12.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0cbz04cbvqhqf7zihbzcrfwj3d6l77j4q0g6gk8g3v5ap9v27yrj") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-lu-0.13.0 (c (n "faer-lu") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0lxm1jv0in66n88wlrm9fpq5am89lv05wrdvyl1lw89xmlds5crh") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.13.3 (c (n "faer-lu") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1kdn75j6m3hxy1ci4rymshrarcxz4hf6x3k7fpfscwaac2g2rpxh") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.13.4 (c (n "faer-lu") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.4") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "06brca0b9v7m80pmq8wxphrqxdpmbn8y20bvn9a2hh4fr4ij81jr") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.13.5 (c (n "faer-lu") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.5") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "03yf0pw1lj19ayhsksqh2vlqkjzn2m71x9j0x8j0pyi5jcrjcpda") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.14.0 (c (n "faer-lu") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.0") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1b548z409a29avyi66lj0lg28nfw7s2vw82qf551bd9h1sz8r108") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.14.1 (c (n "faer-lu") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.1") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1mj0smdsr8gg79hk2rjsp2fm0v44yhgf1kh4c80y41c3jy1d79ql") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-lu-0.15.0 (c (n "faer-lu") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.15.0") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "hurdles") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1f2mnynvrsb80b2w9zjy45jks3fpwb9z71b1jsbs2bfjr19spvr5") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-lu-0.16.0 (c (n "faer-lu") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.16.0") (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "hurdles") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "003cdn1895xaqg36ly9skhpcxpj3jn1p36qa3h85xmf8igpwgwxb") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-lu-0.17.0 (c (n "faer-lu") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.0") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "hurdles") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1rb5lbzsdid71shzzdpzgngjxrm1gn63k0q6d2ya6ahjpndjh2f5") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-lu-0.17.1 (c (n "faer-lu") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "core_affinity") (r "^0.8") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.1") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "hurdles") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1cgvwswk3lkx19xfnzlwzz9qsiynpnnscgrnh6vbw5x63b48q8hy") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

