(define-module (crates-io fa er faer-cholesky) #:use-module (crates-io))

(define-public crate-faer-cholesky-0.0.0 (c (n "faer-cholesky") (v "0.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.1") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "190lp5xm1fb6jl5c1122b3qwy75zahjf7xh1whif4rdwk91i9l63") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.3.0 (c (n "faer-cholesky") (v "0.3.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.3") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "04sqd4xxapmdc7pcwarav8vrbxy1nafgd8d38990z3zqzd2hnrqq") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.4.0 (c (n "faer-cholesky") (v "0.4.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.4") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0zins41r5hv1y6zq44xzwrkjbd44b0p1dzxl94y0z1crmd41jnh5") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.5.0 (c (n "faer-cholesky") (v "0.5.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.32.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0hmmwk1ydbmklcy16v16ddghsa39ww08c0mswqnlwk9wh81wbzw3") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.6.0 (c (n "faer-cholesky") (v "0.6.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0r7bmq9mp21arz62wcc02ml68ygnv8il8bv9fyndwbip2hj71a9f") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.7.0 (c (n "faer-cholesky") (v "0.7.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.7.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.12") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0mxfw9hvirqjlxpj0qmszl5w33grbm85bxl3g2hjnpnxr53ljm8q") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.8.0 (c (n "faer-cholesky") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0gwrfp9vik2q1llcmw4c63p5c86x0ci3bphlckqqlcfnw967x2af") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.9.0 (c (n "faer-cholesky") (v "0.9.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1r5b5wxg71havzs4xpvpjqbnvr1bf3kz1058rnb9i6hnks4xvc4y") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.9.1 (c (n "faer-cholesky") (v "0.9.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1nl525wmjxxnmzwwzmb84c5acc2zcg64hgj8kizjm5vj26gbf484") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.10.0 (c (n "faer-cholesky") (v "0.10.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.10.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0ypcrlv0z20qyspx485d1xylk3qckic1mkn3cv8m12wjpywiqmxk") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.11.0 (c (n "faer-cholesky") (v "0.11.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "14z9j9an21nkhjbgd6k9n6ykb20m78nn2z7zn0f2vffjyj9g4mb9") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.12.0 (c (n "faer-cholesky") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.12.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1vd88b5mc9qhs6c95jqg8lrf03jkg18pab1nh080r9abjh7gga8q") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-cholesky-0.13.0 (c (n "faer-cholesky") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0dw861icfa8z5yrcq1b8a5xqlhz8and66m2kh7x09r7ljk9p6h0j") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (y #t) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.13.2 (c (n "faer-cholesky") (v "0.13.2") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1lzf9adjsq3g552g24ij8p6rfp6k3hk6s1vsl8r2278j2c534hrq") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.13.3 (c (n "faer-cholesky") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1j7wlzi7ap511fn7myn68agszk93v5chl01mmpss62bwyarsva72") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.13.4 (c (n "faer-cholesky") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.13.4") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "19z5h6ipn4q0ccdwb4kgc9924c7s8i7gzgc47ana3s7qqifj85zv") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.13.5 (c (n "faer-cholesky") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.13.5") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "00day85ab6w0sfnms8vb4k5k45mc6xla9023i6c6mf93qkfqdfhp") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.14.0 (c (n "faer-cholesky") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.14.0") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1p3psxqyyxin1m2a71hziyrr3zv5g3kfjznx7z4n704vfnp8yf2m") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.14.1 (c (n "faer-cholesky") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.14.1") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "16p90vqq3pvrcjlcgb3ip0y64drn0q16d4s069sgncbsnmigdd2i") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-cholesky-0.15.0 (c (n "faer-cholesky") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.15.0") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0a53gz2g1bf01hhp4dj2ss21hq4nn6xm4l14wc2wrwnbs3p19ijs") (f (quote (("std" "faer-core/std" "pulp/std") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-cholesky-0.16.0 (c (n "faer-cholesky") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.16.0") (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1a8mjar8flvlzcl14ldjvqfcpihhlyl7q65lx62n1ih38jacglf9") (f (quote (("std" "faer-core/std" "pulp/std") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-cholesky-0.17.0 (c (n "faer-cholesky") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.17.0") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "04idvwm54fsa5wzxk9fj6pp46c3mmnv96kpmnn1ckaq2s8g271lz") (f (quote (("std" "faer-core/std" "pulp/std") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-cholesky-0.17.1 (c (n "faer-cholesky") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "faer-core") (r "^0.17.1") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1lji4k43c22a77s4z6glbx3q5lrhz9q3rk311bk0vaxafm1hrzb6") (f (quote (("std" "faer-core/std" "pulp/std") ("rayon" "std" "faer-core/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

