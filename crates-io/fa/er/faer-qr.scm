(define-module (crates-io fa er faer-qr) #:use-module (crates-io))

(define-public crate-faer-qr-0.0.0 (c (n "faer-qr") (v "0.0.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.1") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1162v58sllbqsy2px2vmymsrrrz7vkihpb49zxqavva0h3rqqvn9") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.4.0 (c (n "faer-qr") (v "0.4.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "faer-core") (r "^0.4") (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0xmi2i50f4yn4pspdxknap27yg7zsshdsm236hq9m5xq7iivrwkd") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.5.0 (c (n "faer-qr") (v "0.5.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.32.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1cm2g85namdc9jg7vn7xwmb7jcvk8abhph5y33jsggzhrh0z6n78") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.6.0 (c (n "faer-qr") (v "0.6.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0kfq8ac9dw3fin2kh24zfq3hm4f28mmybgc034gg6v97185m9r7i") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.7.0 (c (n "faer-qr") (v "0.7.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.7.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.12") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0iipvvp2g13v9ixifbh90pkpzg77a130j38cbq2zv2x14cnlhbff") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.8.0 (c (n "faer-qr") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1j0gvlfivjq1c4pilgwr7la348an4wnd7yx7n53ay7mm32afl830") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.9.0 (c (n "faer-qr") (v "0.9.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0r4zcifcd2xr5jnfwlrrfwag8mc80bpqclb3bqk6clqy4qczaf15") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.9.1 (c (n "faer-qr") (v "0.9.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0xdjd2bp7m8izbr6lf59y409hg46k09f59awyw3d8jbc7vib2d26") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.10.0 (c (n "faer-qr") (v "0.10.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.10.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "029ls36xmmrf4rc0qd1nc3z12cjkjq2kmhaba7n4vcvakm1hjglg") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.11.0 (c (n "faer-qr") (v "0.11.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1qqgrrb4lxlkrdkil3hq4l2dr8qllhq4368kb97na9ff2swm5gmm") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.12.0 (c (n "faer-qr") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.12.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "10q2g73n6j7fch1chj164qvnhz08lyq38lj1i77fay7r21j05sq6") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-qr-0.13.0 (c (n "faer-qr") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0wvg4v92wl732jpral851hxmcr9d18jvxyb6zxvfb3w5b57qm3za") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.13.3 (c (n "faer-qr") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1zw64b8i17paznsxalsycjqhkdlmihha869wi7lwm3dpjnkgnd11") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.13.4 (c (n "faer-qr") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.4") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "16yf5h31ap0b7kzgjflyiqlydp8p3kh0xii4fnqa7yk70l6dc3bw") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.13.5 (c (n "faer-qr") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.5") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1iwymql2jxabc0zn65pqrna0ikjkdxc6f8iizya3227mfw3gzxng") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.14.0 (c (n "faer-qr") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.0") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1r80wlmqbpy42g30r6hc671p5hnrrj506z66n7ply71n0jgvky5x") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.14.1 (c (n "faer-qr") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.1") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0wvyw3shnsi7pf0i6yp8nq9xrk82gk2fk4jc2ay1gi6dqw8mw2z8") (f (quote (("std" "faer-core/std" "pulp/std" "assert2") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon") ("assert2" "dep:assert2"))))))

(define-public crate-faer-qr-0.15.0 (c (n "faer-qr") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.15.0") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1806h9d6bhxzvc891kihjdk0ig3q5sa5bi8xyva44b9zcap86km0") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-qr-0.16.0 (c (n "faer-qr") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.16.0") (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0q6hrm2nykq0y3a6dr75vihq0420ivj7w7a3l1kwzn5bnjimhrl1") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-qr-0.17.0 (c (n "faer-qr") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.0") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0fdma5vxkq2y1nhskhay8wpvf506hk5w2qz2x8131hl4wc6cgzdv") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

(define-public crate-faer-qr-0.17.1 (c (n "faer-qr") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.1") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0qw59gj39fyp05mg2ykqj982q2sn8m6k40qg5qs1ayg3nyq1z596") (f (quote (("std" "faer-core/std" "pulp/std") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "faer-core/rayon" "dep:rayon"))))))

