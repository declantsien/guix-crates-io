(define-module (crates-io fa er faer-core) #:use-module (crates-io))

(define-public crate-faer-core-0.1.0 (c (n "faer-core") (v "0.1.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "gemm") (r "^0.12") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1na2s9x20d3yx2aslvj7vmbdm7ypgdybhgypz9mwpsqm2hlzjivr") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.2.0 (c (n "faer-core") (v "0.2.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "gemm") (r "^0.12") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0fr7sqml8w6j6my6v51jfrvqh9grxdgfhqw9hpl2a6jjvpvbcjd2") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.2.1 (c (n "faer-core") (v "0.2.1") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "gemm") (r "^0.12") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "11zhk1259n01mimwnj34wzb1805lzcdchsa2r5rxlivnayvcaslr") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.3.0 (c (n "faer-core") (v "0.3.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "gemm") (r "^0.13") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0flmma3h2rr7g2p3fw1bpipzgw4wr7xisx8q3knz79kwi28mn4h4") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.4.0 (c (n "faer-core") (v "0.4.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.8") (d #t) (k 0)) (d (n "gemm") (r "^0.13") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.31.4") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.10") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0q4pj1fbyykgdxyl1fcgd11ybz9cq81pgay4cp09hvjrzwm1n9y7") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.5.0 (c (n "faer-core") (v "0.5.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.13") (f (quote ("rayon"))) (k 0)) (d (n "nalgebra") (r "^0.32.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "153a3ma3p7ymsshifmsr13ajpddfh7ibri756cpaqxh78zxp78vs") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.6.0 (c (n "faer-core") (v "0.6.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.14") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "14110p617hg49s4kih9n2sgzn2flxzn6kyl4xaymv1r5abynbf37") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.7.0 (c (n "faer-core") (v "0.7.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.14") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.12") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0z5h2mf050vczrj2abcyi91iml7znabirr28zac1f0rdqkwa19z0") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.8.0 (c (n "faer-core") (v "0.8.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.14") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0fl9686p4wkl88w85s07qfpww9pw1bacyyhcjlcpii19qn0wpff3") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.9.0 (c (n "faer-core") (v "0.9.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.15") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0mvsch74rai305l87jkhjgxijgqxv59vpsjbjhfs6iry3ddbahhh") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.9.1 (c (n "faer-core") (v "0.9.1") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.15") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1j5ys2njad7nrc1860g6hb63vf2nb68pmcmqhwn8r77q202k0diy") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.10.0 (c (n "faer-core") (v "0.10.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.15") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0fsqyycdx4jlg57nnm9ms1sblkddn3z1kg65h14s922qm0d540f0") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.11.0 (c (n "faer-core") (v "0.11.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "gemm") (r "^0.15") (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0xj5vhcbnx8dh1wp64hiv47y1n3hqkad0lgadl5zcsb43iwxvvyr") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.12.0 (c (n "faer-core") (v "0.12.0") (d (list (d (n "aligned-vec") (r "^0.5") (d #t) (k 0)) (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-entity") (r "^0.12.0") (k 0)) (d (n "gemm") (r "^0.15") (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1yifhawc79ab7dijc0by6jffqxjh6h6g44ca1wjxll5qz5lry9gr") (f (quote (("std" "gemm/std" "pulp/std") ("nightly" "gemm/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-core-0.13.0 (c (n "faer-core") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "gemm") (r "^0.16.7") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0nmjxyp6fm22ldnjrrqcnngpwzlvk2kz2i5psw50kjl6kjn9mcwb") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2"))))))

(define-public crate-faer-core-0.13.3 (c (n "faer-core") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "gemm") (r "^0.16.7") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0wfprrl7kl03bg0nascwrwsqi6szn4lnjq1l08v7b323z5n21kvp") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2"))))))

(define-public crate-faer-core-0.13.4 (c (n "faer-core") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "gemm") (r "^0.16.7") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "1q83bfa7hgh542rzj84i84s1zlvb5sra0fa83gbiyygyf0s2c0cp") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2"))))))

(define-public crate-faer-core-0.13.5 (c (n "faer-core") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "gemm") (r "^0.16.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0rbav679h7zkw2a0fmsfykg85867g3fk3ayym6h8qc0v42kf4a3x") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2")))) (r "1.67.0")))

(define-public crate-faer-core-0.14.0 (c (n "faer-core") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "gemm") (r "^0.16.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0y650h78zbhr0sy2mcbb95azz56fc2w3r7mgzc47v16lkwlgci62") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2")))) (r "1.67.0")))

(define-public crate-faer-core-0.14.1 (c (n "faer-core") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "gemm") (r "^0.16.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0rxjy80z130l1q4b966rrcnf59xnixmjgmyb274y1l6g596avs89") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon") ("matrixcompare-core" "dep:matrixcompare-core") ("assert2" "dep:assert2")))) (r "1.67.0")))

(define-public crate-faer-core-0.15.0 (c (n "faer-core") (v "0.15.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "gemm") (r "^0.16.15") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "13f7qf1rw7zzjy0bss8y5kdwysy3jj86z9xscisxzvrax3w5hsf0") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "assert2" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon")))) (r "1.67.0")))

(define-public crate-faer-core-0.16.0 (c (n "faer-core") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "equator") (r "^0.1.6") (d #t) (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "gemm") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)))) (h "0vpj97rnx55ahjh9961phkl312c3h34nwdg2bij9rq58v5qyh4bw") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "matrixcompare-core") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("rayon" "std" "gemm/rayon" "dep:rayon")))) (r "1.67.0")))

(define-public crate-faer-core-0.17.0 (c (n "faer-core") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "equator") (r "^0.1.9") (d #t) (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "gemm") (r "^0.17.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)))) (h "1wn95h4zxkrydcdhpjz6amxxpdm65iz9igabkk7f5xn5bgrdxlcm") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "matrixcompare-core" "num-traits/std" "num-complex/std") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon" "serde")))) (s 2) (e (quote (("serde" "dep:serde") ("rayon" "std" "gemm/rayon" "dep:rayon")))) (r "1.67.0")))

(define-public crate-faer-core-0.17.1 (c (n "faer-core") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "equator") (r "^0.1.10") (d #t) (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "gemm") (r "^0.17.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "matrixcompare-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)))) (h "0njpbd97z3nhnqdzyg6ckg4g3y7limagpg87ch862lj4c9i0znij") (f (quote (("std" "faer-entity/std" "gemm/std" "pulp/std" "matrixcompare-core" "num-traits/std" "num-complex/std") ("perf-warn" "log") ("nightly" "faer-entity/nightly" "gemm/nightly" "pulp/nightly") ("default" "std" "rayon" "serde")))) (s 2) (e (quote (("serde" "dep:serde") ("rayon" "std" "gemm/rayon" "dep:rayon")))) (r "1.67.0")))

