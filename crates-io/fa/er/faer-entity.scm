(define-module (crates-io fa er faer-entity) #:use-module (crates-io))

(define-public crate-faer-entity-0.12.0 (c (n "faer-entity") (v "0.12.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0ia38rjanr4z1jn82ijfwqb0an67kir5bdqxmbgyip6nlvja82aw") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-entity-0.13.0 (c (n "faer-entity") (v "0.13.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1dsmprw9pfkg6pivvxqz33w600k0zaakgvaw26s6vbi00p4s12ly") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-entity-0.13.3 (c (n "faer-entity") (v "0.13.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0rrlf452q06z2cxqq0bqyzwg9w8pb4vi3qwyg0k3kgx1gwbi837m") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-entity-0.13.4 (c (n "faer-entity") (v "0.13.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1x1kkzq1hysxdsm0cjq2kw9lqjjim9n2x9k78725ir8ybsbhskwn") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-entity-0.13.5 (c (n "faer-entity") (v "0.13.5") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0wshwy043c8385yg5bkp8xjiwa41zk2gk9hzcmh5myp34gv5iqsa") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.14.0 (c (n "faer-entity") (v "0.14.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "09rqyzvhh3yn1lx6qn5bp4kvk6nn92m9i0wrj5a9dzq8rh6827vl") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.14.1 (c (n "faer-entity") (v "0.14.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0rqr5bnj2c5n12rrgnqf6jr7aahmgr1b9v6qa7d8pzs3rq7il97m") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.15.0 (c (n "faer-entity") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0rclp85s82r3q1mdqcv258k62msc7aliqwccclz8yyr8p7f0kadm") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.16.0 (c (n "faer-entity") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "114v49i6w8sk553pqafp7a8cr2rlja485vmmgr4fmqzy2y7z89xb") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.17.0 (c (n "faer-entity") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1lqi6c0br8parripyjj4pz1d4nsxj0yk9iy0xwzjn5m3dpri5ywk") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.18.0 (c (n "faer-entity") (v "0.18.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0nfi3id7dhnrmd9q0b390ha9rqixpqxslijac4n3k4ri4c35rsi2") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

(define-public crate-faer-entity-0.19.0 (c (n "faer-entity") (v "0.19.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.21") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0wffq8cpzky9dhx5b6vadf3a0pw63f8azl0s1zg9bgi7pq18m5mb") (f (quote (("std" "pulp/std") ("nightly" "pulp/nightly") ("default" "std")))) (r "1.67.0")))

