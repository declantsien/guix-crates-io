(define-module (crates-io fa er faer-evd) #:use-module (crates-io))

(define-public crate-faer-evd-0.8.0 (c (n "faer-evd") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.8.0") (k 0)) (d (n "faer-qr") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0x7ncvyyz7ajaarr17kzkzwcjpnl9hhin0nzp9idldmgy2zqq9dv") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.9.0 (c (n "faer-evd") (v "0.9.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "faer-qr") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "103sgk4g3vkmp8b0vbi3zbvbda71kzl90mk4zsjs0biadfzwj2sm") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.9.1 (c (n "faer-evd") (v "0.9.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "faer-qr") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "13lsr5b2mxpcf5x0xsadpqzl5bszqza0z5hcg1i0fi41im7rdgas") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.10.0 (c (n "faer-evd") (v "0.10.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.10.0") (k 0)) (d (n "faer-qr") (r "^0.10.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "19dlg6l5c27agg6599s29jacbwdw4q5f3qrh3p8bwp2hd8dznp1r") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.11.0 (c (n "faer-evd") (v "0.11.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (k 0)) (d (n "faer-qr") (r "^0.11.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0fi13c93js2qwfsfxp16frf7qz2m1655sylz7k6b4cfy1ym11nwg") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.12.0 (c (n "faer-evd") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 0)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.12.0") (k 0)) (d (n "faer-qr") (r "^0.12.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1dcr8cv874im9gw41pb99wpavh13xgjxqhxr2crfzflnki6bdy6c") (f (quote (("std" "faer-core/std" "pulp/std") ("nightly" "faer-core/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-evd-0.13.0 (c (n "faer-evd") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "faer-qr") (r "^0.13.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0sfcgh4057akmbiyq7ssr5m5xfiixmdcgvjb345jgxbgldb7lx78") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.13.3 (c (n "faer-evd") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "faer-qr") (r "^0.13.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0m2mgfhkp3m9j5dkhzckmjj7cw1497gbkqh343c2x1p8miw52qxm") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.13.4 (c (n "faer-evd") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.4") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "faer-qr") (r "^0.13.4") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1jy8picd34q91bbn7f9zwagr9vpypj7x47k528wrrxpva8j36pzh") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.13.5 (c (n "faer-evd") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.5") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "faer-qr") (r "^0.13.5") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1gdzx4zld0v53m00wxgx2d4xnywj4nc40mk6lhpmb5lw5vy83ykh") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.14.0 (c (n "faer-evd") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.0") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "faer-qr") (r "^0.14.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "052p2q4slsql3v471z4bi8d89bczk8zn2779ia9np0665mh9rqzn") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.14.1 (c (n "faer-evd") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.1") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "faer-qr") (r "^0.14.1") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "07haxzhnvbbi4wvzy3qjr3gc36hcs20749i2x8amyij4xbi1hksy") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-evd-0.15.0 (c (n "faer-evd") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.15.0") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "faer-qr") (r "^0.15.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "055jas74rmplfxhr5y362g5v2ma0xsbgd8prilmfvcf4d0k8j7mf") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-evd-0.16.0 (c (n "faer-evd") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.16.0") (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "faer-qr") (r "^0.16.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1h22wdiyd2aaw8fdxpnzc5gcqglavhvlqjhi8x7fgxzw3my2d8pa") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-evd-0.17.0 (c (n "faer-evd") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.0") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "faer-qr") (r "^0.17.0") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0nnr8jj2bxrmmidrynnrpxqiwahydy1yzj7q1x8rirrbnrk5ajzh") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-evd-0.17.1 (c (n "faer-evd") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.1") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "faer-qr") (r "^0.17.1") (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "07y6dzbzyh4yqr44aa97jfs6xhhhmyj312dmksvqsg38q6kbpnl1") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

