(define-module (crates-io fa er faer-svd) #:use-module (crates-io))

(define-public crate-faer-svd-0.5.0 (c (n "faer-svd") (v "0.5.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.5") (k 0)) (d (n "faer-qr") (r "^0.5") (k 0)) (d (n "nalgebra") (r "^0.32.1") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "15zhd67mgvdvlkmh0wskfnscvam1i7jayk4sbjn3ix868l815aws") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.6.0 (c (n "faer-svd") (v "0.6.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.6") (k 0)) (d (n "faer-qr") (r "^0.6") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.11") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1bd4pvhila3psf17j8ay9ahay1aiwyxa9fi9dd647p5bq1x7clyv") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.7.0 (c (n "faer-svd") (v "0.7.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.7.0") (k 0)) (d (n "faer-qr") (r "^0.7.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.12") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0zl1fbkah9indsi56gxg291kbrvm2v5skphas42r9a63acic28li") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.8.0 (c (n "faer-svd") (v "0.8.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.8.0") (k 0)) (d (n "faer-qr") (r "^0.8.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1gg3gg6vmk5zsx7hfy9xs7sayd7mcygb7wisl4sa7dx52wkli4jw") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.9.0 (c (n "faer-svd") (v "0.9.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "faer-qr") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "00d3k0c2g68pxbgpl9d0rgzy2n5wdj7v4rzy36xjqrk8c979wx8q") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.9.1 (c (n "faer-svd") (v "0.9.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.9.0") (k 0)) (d (n "faer-qr") (r "^0.9.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1i46ragvg41s7iil17ghnp4mxsv38ayldchb6hn429z1qlrx0mb3") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.10.0 (c (n "faer-svd") (v "0.10.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.10.0") (k 0)) (d (n "faer-qr") (r "^0.10.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1xhl72yjh3z59fx01skh4yd5vqjiy378vda0k3dalhgr4nv61ajk") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.11.0 (c (n "faer-svd") (v "0.11.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.11.0") (k 0)) (d (n "faer-qr") (r "^0.11.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.13.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1iyp2njk1ys4j18135fnfwjkmgg8k4mml8sg8dfw5d8zs3w4kv9v") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.12.0 (c (n "faer-svd") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.9") (d #t) (k 0)) (d (n "faer-core") (r "^0.12.0") (k 0)) (d (n "faer-qr") (r "^0.12.0") (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 2)) (d (n "num-complex") (r "^0.4.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pulp") (r "^0.14") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "066d8pssfzr28hxdgxh95pxpjk0n10bgrs5gm98hb113n1jl0d1l") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std"))))))

(define-public crate-faer-svd-0.13.0 (c (n "faer-svd") (v "0.13.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "faer-qr") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "17v4z0l813rqqj8d1fyqahdb85wklbia9kayba4ysv64f8sfpq8y") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.13.3 (c (n "faer-svd") (v "0.13.3") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.0") (k 0)) (d (n "faer-entity") (r "^0.13.0") (k 0)) (d (n "faer-qr") (r "^0.13.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1s2fnvz9w16n9va1czlfdbs4mf3hz6v7ryn20fxi1737wngpcw5d") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.13.4 (c (n "faer-svd") (v "0.13.4") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.4") (k 0)) (d (n "faer-entity") (r "^0.13.4") (k 0)) (d (n "faer-qr") (r "^0.13.4") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "12y9ym79n5hq1a5nzqnc9xknqyg0y8x5g6363sa1jmdvagq98ny9") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.13.5 (c (n "faer-svd") (v "0.13.5") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.13.5") (k 0)) (d (n "faer-entity") (r "^0.13.5") (k 0)) (d (n "faer-qr") (r "^0.13.5") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.3") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "19smc9s3br7a5y5wv7668cblc5y9niv10z88j6fng9pig9bzbzjc") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.14.0 (c (n "faer-svd") (v "0.14.0") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.0") (k 0)) (d (n "faer-entity") (r "^0.14.0") (k 0)) (d (n "faer-qr") (r "^0.14.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.16.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1mavy5lkpmrak6i3fb07s1xv3f6q7y0yc7pjk7q42nss2is4vqh1") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.14.1 (c (n "faer-svd") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.14.1") (k 0)) (d (n "faer-entity") (r "^0.14.1") (k 0)) (d (n "faer-qr") (r "^0.14.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.17.1") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "041m7sdvfzs3la82rmzmsr0hf1k1ayk6gihidcrmbnlnmn1k0c21") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std" "assert2") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon")))) (s 2) (e (quote (("assert2" "dep:assert2"))))))

(define-public crate-faer-svd-0.15.0 (c (n "faer-svd") (v "0.15.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.0") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.15.0") (k 0)) (d (n "faer-entity") (r "^0.15.0") (k 0)) (d (n "faer-qr") (r "^0.15.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "0lc17h73qp04721bmxiyfc88d5zz9rkr53axhg5ahydxnx46dnmh") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-svd-0.16.0 (c (n "faer-svd") (v "0.16.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 2)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.16.0") (k 0)) (d (n "faer-entity") (r "^0.16.0") (k 0)) (d (n "faer-qr") (r "^0.16.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.4") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "14pdnspp5sp6r3ajbl344rll1z043cr33d2xxx7qq8jijjyyaaj0") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-svd-0.17.0 (c (n "faer-svd") (v "0.17.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.0") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "faer-qr") (r "^0.17.0") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1pqq5cngh5ipc0c2vazc2cvkaakn2wgwm6k7wx4idw0nbrxjf3mw") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

(define-public crate-faer-svd-0.17.1 (c (n "faer-svd") (v "0.17.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bytemuck") (r "^1") (k 0)) (d (n "coe-rs") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dbgf") (r "^0.1.1") (d #t) (k 0)) (d (n "dyn-stack") (r "^0.10") (k 0)) (d (n "faer-core") (r "^0.17.1") (k 0)) (d (n "faer-entity") (r "^0.17.0") (k 0)) (d (n "faer-qr") (r "^0.17.1") (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 2)) (d (n "num-complex") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pulp") (r "^0.18.8") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reborrow") (r "^0.5") (d #t) (k 0)))) (h "1j8ck7dnl0f26whrchx61v5qlwlapyhfmpq0b9my9rigv4srrya3") (f (quote (("std" "faer-core/std" "faer-qr/std" "pulp/std") ("rayon" "std" "faer-core/rayon" "faer-qr/rayon") ("perf-warn" "log" "faer-core/perf-warn") ("nightly" "faer-core/nightly" "faer-qr/nightly" "pulp/nightly") ("default" "std" "rayon"))))))

