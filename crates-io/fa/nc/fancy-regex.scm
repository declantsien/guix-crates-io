(define-module (crates-io fa nc fancy-regex) #:use-module (crates-io))

(define-public crate-fancy-regex-0.1.0 (c (n "fancy-regex") (v "0.1.0") (d (list (d (n "bit-set") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.2") (d #t) (k 0)) (d (n "memchr") (r "^1.0.1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 0)))) (h "1hl6il3bgfrmzzmaqqxlrppfr7dcipp0fcsl19zph0y12fpc3v0d")))

(define-public crate-fancy-regex-0.2.0 (c (n "fancy-regex") (v "0.2.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1lck86phqbq0qx2dipzashfd447cfph75l08mcar11s1rq7ijmg9")))

(define-public crate-fancy-regex-0.3.0 (c (n "fancy-regex") (v "0.3.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "0vvylwa2j5a5zqd51splhbyy5jdyq67163ivr5p6y5b9fn3273r5")))

(define-public crate-fancy-regex-0.3.1 (c (n "fancy-regex") (v "0.3.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1s9aala04j9h0brm7idnx3r622i0m7gy5xdb0npmqdchg09fs32z")))

(define-public crate-fancy-regex-0.3.2 (c (n "fancy-regex") (v "0.3.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "= 0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "18wq9n6z5bz2p0ap7zxq172kcwawh9apxwgrk7l8i3ni86i2c1jy")))

(define-public crate-fancy-regex-0.3.3 (c (n "fancy-regex") (v "0.3.3") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "= 0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1xdzfjg1hkfaivjnq9m2gyahbh7mfz8wbvvwdd9rsaddi4dxxqmh")))

(define-public crate-fancy-regex-0.3.4 (c (n "fancy-regex") (v "0.3.4") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "= 0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "02b5yzgpy7mxxz16wspbrfyf0byqabsny3flzp43hr28j80zrzv1")))

(define-public crate-fancy-regex-0.3.5 (c (n "fancy-regex") (v "0.3.5") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "= 0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "051bnj890xrvhslppdzw6n956xfjg0wr2ixvhy336d2japvap4df")))

(define-public crate-fancy-regex-0.4.0 (c (n "fancy-regex") (v "0.4.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "=0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rayon-core") (r "=1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1ib7q1z05sk2a7aybgm0xdnmz8xi2mnxr8i8z3q2b414ssk4im9x") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.4.1 (c (n "fancy-regex") (v "0.4.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "=0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "rayon-core") (r "=1.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1z0vjddi9driwfdsiw8shzgk42s5zaa50ckzjcdaab7kargnx69n") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.5.0 (c (n "fancy-regex") (v "0.5.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1k659k8i1msap53dpmi6v4984gl6zilkfk5j49gsfl8ks4mqf2gy") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.6.0 (c (n "fancy-regex") (v "0.6.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "0q7k7c2514wjy5ffifv7caslyqmv7yjqgx8crq4vc8aj2an72crs") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.7.0 (c (n "fancy-regex") (v "0.7.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "17qfzz9yqq9hvbh1yxmsz4akxb4qb6yb6pjcxf3anss287kd3rw7") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.7.1 (c (n "fancy-regex") (v "0.7.1") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.2") (d #t) (k 0)))) (h "1krwc8mbj8zv4ahvh3lqkmfxf38cg79ya02by19fn4jil1h8aswx") (f (quote (("track_caller"))))))

(define-public crate-fancy-regex-0.8.0 (c (n "fancy-regex") (v "0.8.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.8") (f (quote ("std"))) (k 0)))) (h "1nhdqdbr5hr0k0i7nwmy718qj6a3cn36x4d93154l479bgz4wnyr") (f (quote (("unicode" "regex/unicode") ("track_caller") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "unicode" "perf"))))))

(define-public crate-fancy-regex-0.9.0 (c (n "fancy-regex") (v "0.9.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.8") (f (quote ("std"))) (k 0)))) (h "19pn0byd7l2sbhjzvmxx33yvjz9lbfvfrrcbpz7g30prri1chz9n") (f (quote (("unicode" "regex/unicode") ("track_caller") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "unicode" "perf"))))))

(define-public crate-fancy-regex-0.10.0 (c (n "fancy-regex") (v "0.10.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "=1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.8") (f (quote ("std"))) (k 0)))) (h "0rn7wfihsk877h3kwzzm99ykflfkhg039l4synm9algs8qnsny06") (f (quote (("unicode" "regex/unicode") ("track_caller") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "unicode" "perf"))))))

(define-public crate-fancy-regex-0.11.0 (c (n "fancy-regex") (v "0.11.0") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.3.8") (f (quote ("std"))) (k 0)))) (h "18j0mmzfycibhxhhhfja00dxd1vf8x5c28lbry224574h037qpxr") (f (quote (("unicode" "regex/unicode") ("track_caller") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf" "regex/perf") ("default" "unicode" "perf"))))))

(define-public crate-fancy-regex-0.12.0 (c (n "fancy-regex") (v "0.12.0") (d (list (d (n "bit-set") (r "^0.5.3") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "matches") (r "^0.1.10") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.9.1") (k 0)))) (h "01ccs5hjwldnnvij4fl700l1d2ibdcd3g5yjb8r897ysb72d94vl") (f (quote (("unicode" "regex/unicode") ("track_caller") ("std" "regex/std") ("perf-onepass" "regex/perf-onepass") ("perf-literal" "regex/perf-literal") ("perf-inline" "regex/perf-inline") ("perf-dfa" "regex/perf-dfa") ("perf-cache" "regex/perf-cache") ("perf-backtrack" "regex/perf-backtrack") ("perf" "regex/perf") ("default" "unicode" "perf" "std"))))))

(define-public crate-fancy-regex-0.13.0 (c (n "fancy-regex") (v "0.13.0") (d (list (d (n "bit-set") (r "^0.5") (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "matches") (r "^0.1.10") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "regex-automata") (r "^0.4") (f (quote ("alloc" "syntax" "meta" "nfa" "dfa" "hybrid"))) (k 0)) (d (n "regex-syntax") (r "^0.8") (k 0)))) (h "1wjbqjsdj8fkq6z2i9llq25iaqzd9f208vxnwg8mdbr2ba1lc7jk") (f (quote (("unicode" "regex-automata/unicode" "regex-syntax/unicode") ("track_caller") ("std" "regex-automata/std" "regex-syntax/std" "bit-set/std") ("perf" "regex-automata/perf") ("default" "unicode" "perf" "std")))) (r "1.66")))

