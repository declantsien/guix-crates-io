(define-module (crates-io fa st fast-rustc-ap-rustc_parse) #:use-module (crates-io))

(define-public crate-fast-rustc-ap-rustc_parse-1.0.0 (c (n "fast-rustc-ap-rustc_parse") (v "1.0.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rustc_ast") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_ast")) (d (n "rustc_ast_pretty") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_ast_pretty")) (d (n "rustc_attr") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_attr")) (d (n "rustc_data_structures") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_data_structures")) (d (n "rustc_errors") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_errors")) (d (n "rustc_feature") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_feature")) (d (n "rustc_lexer") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_lexer")) (d (n "rustc_session") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_session")) (d (n "rustc_span") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_span")) (d (n "smallvec") (r "^1.0") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.11") (d #t) (k 0)))) (h "1vinchdmas1dxjx1nv96r3qgizzzswqrlqdmni4vdvcik8nl9xzm")))

