(define-module (crates-io fa st fast-rustc-ap-rustc_data_structures) #:use-module (crates-io))

(define-public crate-fast-rustc-ap-rustc_data_structures-1.0.0 (c (n "fast-rustc-ap-rustc_data_structures") (v "1.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.5") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "ena") (r "^0.13.1") (d #t) (k 0)) (d (n "graphviz") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-graphviz")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "jobserver_crate") (r "^0.1.13") (d #t) (k 0) (p "jobserver")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "measureme") (r "^0.7.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rayon") (r "^0.3.0") (d #t) (k 0) (p "rustc-rayon")) (d (n "rayon-core") (r "^0.3.0") (d #t) (k 0) (p "rustc-rayon-core")) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "rustc_index") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_index")) (d (n "rustc_serialize") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-serialize")) (d (n "smallvec") (r "^1.0") (f (quote ("union" "may_dangle"))) (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("fileapi" "psapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1xl4slxm6hzdlb4nkcsqpcirlbbxqnlxp346sb5nm4bqbi3xyn9c")))

