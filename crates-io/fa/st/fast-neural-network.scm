(define-module (crates-io fa st fast-neural-network) #:use-module (crates-io))

(define-public crate-fast-neural-network-0.2.0 (c (n "fast-neural-network") (v "0.2.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "0j9pq47r1bnlpcl2xrjynlpkq5mal68g9533i7h1q15gbspymr5b") (y #t)))

(define-public crate-fast-neural-network-0.2.1 (c (n "fast-neural-network") (v "0.2.1") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "1hf2q50xzd0gj2yy9dj4pcvy61pjl9sviyvsv1s2y2gx022hmd2i") (y #t)))

(define-public crate-fast-neural-network-0.2.2 (c (n "fast-neural-network") (v "0.2.2") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "0bz2f9dxwhw9qas77vdil9q5fds2q2my79lsy06vpycq8g8br2ji") (y #t)))

(define-public crate-fast-neural-network-0.2.7 (c (n "fast-neural-network") (v "0.2.7") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "05s7jq6qzg3fzdfp99814hw65cy2bvdvs0mcvg49k6djil7cnh10") (y #t)))

(define-public crate-fast-neural-network-0.4.9 (c (n "fast-neural-network") (v "0.4.9") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde" "rayon" "matrixmultiply-threading"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "0xsazdcml6ccfq5adfabigbdpvixj227vqbhr71jjm43prvjrlfq") (y #t)))

(define-public crate-fast-neural-network-0.5.0 (c (n "fast-neural-network") (v "0.5.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde" "rayon" "matrixmultiply-threading"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "01w1aba9zlgcsanf2wd72nj2xnalcqqd1f3c11qhpwyfz0gd3aa1") (y #t)))

(define-public crate-fast-neural-network-0.6.0 (c (n "fast-neural-network") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde" "rayon" "matrixmultiply-threading"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rust-mnist") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "0z7kszxb5si0yp041cpd8w4pg072hpqxg8ya96ia3qpb2vg9ivma")))

(define-public crate-fast-neural-network-0.6.1 (c (n "fast-neural-network") (v "0.6.1") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde" "rayon" "matrixmultiply-threading"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "0ja1iia89i6hq6anp485wg3jid5gb7apww32a0a1wz6pbrinvbnv")))

(define-public crate-fast-neural-network-0.6.2 (c (n "fast-neural-network") (v "0.6.2") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "indicatif") (r "^0.17.7") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde" "rayon" "matrixmultiply-threading"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)))) (h "00d0bxqvjxvn477irl0ck7r20pv6hp98lzapmcf1y200ii5c62r1")))

