(define-module (crates-io fa st fast-rustc-ap-rustc_session) #:use-module (crates-io))

(define-public crate-fast-rustc-ap-rustc_session-1.0.0 (c (n "fast-rustc-ap-rustc_session") (v "1.0.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "rustc_ast") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_ast")) (d (n "rustc_data_structures") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_data_structures")) (d (n "rustc_errors") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_errors")) (d (n "rustc_feature") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_feature")) (d (n "rustc_fs_util") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_fs_util")) (d (n "rustc_index") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_index")) (d (n "rustc_serialize") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-serialize")) (d (n "rustc_span") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_span")) (d (n "rustc_target") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_target")))) (h "03fidhzjwdrc75bwy2a6gy6byj3ybxm9iw4qlbdmizs0i5h39kcq")))

