(define-module (crates-io fa st fastcrypto) #:use-module (crates-io))

(define-public crate-fastcrypto-0.1.0 (c (n "fastcrypto") (v "0.1.0") (d (list (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.4") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 2)) (d (n "signature") (r "^1.6.0") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0f05fp92s82xvk917v5gd3v8p9hcdfvv8w4d9g6z4vs4b024wwqv") (f (quote (("default") ("copy_key"))))))

(define-public crate-fastcrypto-0.1.1 (c (n "fastcrypto") (v "0.1.1") (d (list (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.4") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 2)) (d (n "signature") (r "^1.6.0") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0dxm5yx07griasgh9a7qbg1ggzc2z3jnc86kb0n4n8b2g81s1cc7") (f (quote (("default") ("copy_key"))))))

(define-public crate-fastcrypto-0.1.2 (c (n "fastcrypto") (v "0.1.2") (d (list (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.3") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.4") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 2)) (d (n "signature") (r "^1.6.0") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1bvanghp3kl2zcqmmjqz1v8g555j3png1qapgc446r4d0yjns0my") (f (quote (("default") ("copy_key"))))))

(define-public crate-fastcrypto-1.0.0 (c (n "fastcrypto") (v "1.0.0") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.5") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "sha3") (r "^0.10.2") (d #t) (k 2)) (d (n "signature") (r "^1.6.1") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "04bahnf6jx7490i5s6ij88v5bhiwrwisj48j877qbwam1fn0cdi8") (f (quote (("default") ("copy_key")))) (y #t)))

(define-public crate-fastcrypto-2.0.0 (c (n "fastcrypto") (v "2.0.0") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.5") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.5") (d #t) (k 0)) (d (n "signature") (r "^1.6.1") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1xarnnnvjj0243br6drpgjknd309xzd4bj2bcbd9bswwbqqarfck") (f (quote (("default") ("copy_key")))) (y #t)))

(define-public crate-fastcrypto-0.1.3 (c (n "fastcrypto") (v "0.1.3") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-serialize") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "base64ct") (r "^1.5.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust_secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.86") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.5") (d #t) (k 0)) (d (n "signature") (r "^1.6.4") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "14784kg2r8722c7n85dn6rqcmwyjws3x1ar80p11iva514k2lqb4") (f (quote (("secure") ("default" "secure") ("copy_key")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash"))))))

(define-public crate-fastcrypto-0.1.4 (c (n "fastcrypto") (v "0.1.4") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "base58") (r "^0.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.1") (d #t) (k 2)) (d (n "base64ct") (r "^1.5.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "blake2") (r "^0.10.5") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "radix64") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.2") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (d #t) (k 2)) (d (n "rust_secp256k1") (r "^0.24.1") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "serde_with") (r "^2.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "signature") (r "^1.6.4") (f (quote ("rand-preview"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.15.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.4.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0w6pah5hwfs3231z2ayrbbbxvbwl73vkm38601dlpvq93x2pyzr7") (f (quote (("secure") ("no-threads-blst" "blst/no-threads") ("experimental") ("default" "secure") ("copy_key")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash" "dep:serde-big-array"))))))

(define-public crate-fastcrypto-0.1.5 (c (n "fastcrypto") (v "0.1.5") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-serialize") (r "^0.4.1") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "base58") (r "^0.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "base64ct") (r "^1.5.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (f (quote ("no-threads"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "digest") (r "^0.10.6") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.6") (f (quote ("rfc6979" "verifying"))) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "radix64") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.3") (d #t) (k 0)) (d (n "rfc6979") (r "^0.4.0") (d #t) (k 0)) (d (n "rsa") (r "^0.8.2") (f (quote ("sha2"))) (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (d #t) (k 2)) (d (n "rust_secp256k1") (r "^0.27.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "signature") (r "^2.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.16.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.5.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0b6m56knrjpk91hxlgn5l2x8kdyz0slw5ypkr29l0dhmz7zmcmv3") (f (quote (("experimental") ("default") ("copy_key")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash" "dep:serde-big-array"))))))

(define-public crate-fastcrypto-0.1.6 (c (n "fastcrypto") (v "0.1.6") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-serialize") (r "^0.4.1") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "base58") (r "^0.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "base64ct") (r "^1.5.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (f (quote ("no-threads"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "digest") (r "^0.10.6") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.6") (f (quote ("rfc6979" "verifying"))) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "radix64") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.3") (d #t) (k 0)) (d (n "rfc6979") (r "^0.4.0") (d #t) (k 0)) (d (n "rsa") (r "^0.8.2") (f (quote ("sha2"))) (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (d #t) (k 2)) (d (n "rust_secp256k1") (r "^0.27.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 2)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "signature") (r "^2.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.16.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.5.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0nrza71n9flffhyj9l4d01r9zfl71n3kf5lmr95f0sn3pp2vw43z") (f (quote (("experimental") ("default") ("copy_key")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash" "dep:serde-big-array"))))))

(define-public crate-fastcrypto-0.1.7 (c (n "fastcrypto") (v "0.1.7") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-serialize") (r "^0.4.1") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "base58") (r "^0.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "base64ct") (r "^1.5.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (f (quote ("no-threads"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "digest") (r "^0.10.6") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.6") (f (quote ("rfc6979" "verifying"))) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "merlin") (r "^3.0.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "radix64") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.3") (d #t) (k 0)) (d (n "rfc6979") (r "^0.4.0") (d #t) (k 0)) (d (n "rsa") (r "^0.8.2") (f (quote ("sha2"))) (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (d #t) (k 2)) (d (n "rust_secp256k1") (r "^0.27.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "signature") (r "^2.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.16.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.5.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1zfjbn6jfqkhcxfxhcdgfm9kfm039iyzq9nlaba716zqhhmixjib") (f (quote (("experimental") ("default") ("copy_key") ("beacon-dkg")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash" "dep:serde-big-array"))))))

(define-public crate-fastcrypto-0.1.8 (c (n "fastcrypto") (v "0.1.8") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "ark-ec") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.1") (d #t) (k 0)) (d (n "ark-secp256r1") (r "^0.4.0") (d #t) (k 0)) (d (n "ark-serialize") (r "^0.4.1") (d #t) (k 0)) (d (n "auto_ops") (r "^0.3.0") (d #t) (k 0)) (d (n "base58") (r "^0.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "base64ct") (r "^1.5.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 2)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (d #t) (k 0)) (d (n "blst") (r "^0.3.10") (f (quote ("no-threads"))) (d #t) (k 0)) (d (n "bs58") (r "^0.4.0") (d #t) (k 0)) (d (n "bulletproofs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek-ng") (r "^4.1.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "digest") (r "^0.10.6") (d #t) (k 0)) (d (n "ecdsa") (r "^0.16.6") (f (quote ("rfc6979" "verifying"))) (d #t) (k 0)) (d (n "ed25519-consensus") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "fastcrypto-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "faster-hex") (r "^0.6.1") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "sha256" "keccak256"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "merlin") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "radix64") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "readonly") (r "^0.2.3") (d #t) (k 0)) (d (n "rfc6979") (r "^0.4.0") (d #t) (k 0)) (d (n "rsa") (r "^0.8.2") (f (quote ("sha2"))) (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (d #t) (k 2)) (d (n "rust_secp256k1") (r "^0.27.0") (f (quote ("recovery" "rand-std" "bitcoin_hashes" "global-context"))) (d #t) (k 0) (p "secp256k1")) (d (n "rustc-hex") (r "^2.1.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "signature") (r "^2.0.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)) (d (n "typenum") (r "^1.16.0") (d #t) (k 0)) (d (n "wycheproof") (r "^0.5.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1ij9f500y8nk11669caqb0j5qbgxp1vpffw02gby95makw9s57jg") (f (quote (("default") ("copy_key")))) (s 2) (e (quote (("unsecure_schemes" "dep:twox-hash" "dep:serde-big-array") ("experimental" "dep:bulletproofs" "dep:merlin") ("aes" "dep:aes" "dep:cbc" "dep:aes-gcm" "dep:ctr"))))))

