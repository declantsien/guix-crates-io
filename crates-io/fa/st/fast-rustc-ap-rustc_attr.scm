(define-module (crates-io fa st fast-rustc-ap-rustc_attr) #:use-module (crates-io))

(define-public crate-fast-rustc-ap-rustc_attr-1.0.0 (c (n "fast-rustc-ap-rustc_attr") (v "1.0.0") (d (list (d (n "rustc_ast") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_ast")) (d (n "rustc_ast_pretty") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_ast_pretty")) (d (n "rustc_data_structures") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_data_structures")) (d (n "rustc_errors") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_errors")) (d (n "rustc_feature") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_feature")) (d (n "rustc_macros") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_macros")) (d (n "rustc_serialize") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-serialize")) (d (n "rustc_session") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_session")) (d (n "rustc_span") (r "^1.0.0") (d #t) (k 0) (p "fast-rustc-ap-rustc_span")) (d (n "smallvec") (r "^1.0") (f (quote ("union" "may_dangle"))) (d #t) (k 0)))) (h "0y4g8nywb25y7wh477kl7qshaf5g9rsazshkhnw2g3ispsrgx43m")))

