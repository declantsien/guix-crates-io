(define-module (crates-io fa st fast-tlsh) #:use-module (crates-io))

(define-public crate-fast-tlsh-0.1.0 (c (n "fast-tlsh") (v "0.1.0") (d (list (d (n "bitfield-struct") (r "^0.6.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-simd") (r "^0.8.0") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0v99nbzqysbdwyqjrvs0gc1avmfsags8riaiwn6znhy4xidjffwx") (f (quote (("unsafe") ("tests-slow") ("strict-parser") ("simd-portable" "unstable") ("simd-per-arch") ("simd" "opt-simd" "simd-per-arch") ("serde-buffered") ("opt-simd-bucket-aggregation") ("opt-simd-body-comparison") ("opt-simd" "opt-simd-body-comparison" "opt-simd-bucket-aggregation" "opt-simd-parse-hex" "opt-simd-convert-hex") ("opt-pearson-table-double") ("opt-low-memory-hex-str-encode-min-table" "opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-decode-quarter-table" "opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-hex-str-decode-min-table" "opt-low-memory-hex-str-decode-quarter-table") ("opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-buckets") ("opt-embedded-default" "opt-dist-length-table" "opt-dist-qratios-table" "opt-low-memory-hex-str-encode-half-table") ("opt-dist-qratios-table-double" "opt-dist-qratios-table") ("opt-dist-qratios-table") ("opt-dist-length-table") ("opt-default" "opt-dist-length-table" "opt-dist-qratios-table-double" "opt-pearson-table-double") ("maint-lints") ("maint-code") ("experiment-pearson") ("easy-functions") ("default" "std" "easy-functions" "opt-default" "simd" "detect-features")))) (s 2) (e (quote (("unstable" "serde?/unstable") ("std" "alloc" "hex-simd?/std" "serde?/std") ("serde" "dep:serde") ("opt-simd-parse-hex" "dep:hex-simd") ("opt-simd-convert-hex" "dep:hex-simd") ("detect-features" "std" "hex-simd?/detect") ("alloc" "hex-simd?/alloc" "serde?/alloc")))) (r "1.70")))

(define-public crate-fast-tlsh-0.1.1 (c (n "fast-tlsh") (v "0.1.1") (d (list (d (n "bitfield-struct") (r "^0.6.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-simd") (r "^0.8.0") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "13y9q5f38k57gnzc3fl59zqy4rnffs37qr1b36c6fhp66q09idvg") (f (quote (("unsafe") ("tests-slow") ("strict-parser") ("simd-portable" "unstable") ("simd-per-arch") ("simd" "opt-simd" "simd-per-arch") ("serde-buffered") ("opt-simd-bucket-aggregation") ("opt-simd-body-comparison") ("opt-simd" "opt-simd-body-comparison" "opt-simd-bucket-aggregation" "opt-simd-parse-hex" "opt-simd-convert-hex") ("opt-pearson-table-double") ("opt-low-memory-hex-str-encode-min-table" "opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-decode-quarter-table" "opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-hex-str-decode-min-table" "opt-low-memory-hex-str-decode-quarter-table") ("opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-buckets") ("opt-embedded-default" "opt-dist-length-table" "opt-dist-qratios-table" "opt-low-memory-hex-str-encode-half-table") ("opt-dist-qratios-table-double" "opt-dist-qratios-table") ("opt-dist-qratios-table") ("opt-dist-length-table") ("opt-default" "opt-dist-length-table" "opt-dist-qratios-table-double" "opt-pearson-table-double") ("maint-lints") ("maint-code") ("experiment-pearson") ("easy-functions") ("default" "std" "easy-functions" "opt-default" "simd" "detect-features")))) (s 2) (e (quote (("unstable" "serde?/unstable") ("std" "alloc" "hex-simd?/std" "serde?/std") ("serde" "dep:serde") ("opt-simd-parse-hex" "dep:hex-simd") ("opt-simd-convert-hex" "dep:hex-simd") ("detect-features" "std" "hex-simd?/detect") ("alloc" "hex-simd?/alloc" "serde?/alloc")))) (r "1.70")))

(define-public crate-fast-tlsh-0.1.2 (c (n "fast-tlsh") (v "0.1.2") (d (list (d (n "bitfield-struct") (r "^0.6.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-simd") (r "^0.8.0") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "11y1g6i12vggnyhzwpz1n3byws80p3bf8ilnr6bmvqyff0sf4frx") (f (quote (("unsafe") ("tests-slow") ("strict-parser") ("simd-portable" "unstable") ("simd-per-arch") ("simd" "opt-simd" "simd-per-arch") ("serde-buffered") ("opt-simd-bucket-aggregation") ("opt-simd-body-comparison") ("opt-simd" "opt-simd-body-comparison" "opt-simd-bucket-aggregation" "opt-simd-parse-hex" "opt-simd-convert-hex") ("opt-pearson-table-double") ("opt-low-memory-hex-str-encode-min-table" "opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-decode-quarter-table" "opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-hex-str-decode-min-table" "opt-low-memory-hex-str-decode-quarter-table") ("opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-buckets") ("opt-embedded-default" "opt-dist-length-table" "opt-dist-qratios-table" "opt-low-memory-hex-str-encode-half-table") ("opt-dist-qratios-table-double" "opt-dist-qratios-table") ("opt-dist-qratios-table") ("opt-dist-length-table") ("opt-default" "opt-dist-length-table" "opt-dist-qratios-table-double" "opt-pearson-table-double") ("maint-lints") ("maint-code") ("experiment-pearson") ("easy-functions") ("default" "std" "easy-functions" "opt-default" "simd" "detect-features")))) (s 2) (e (quote (("unstable" "serde?/unstable") ("std" "alloc" "hex-simd?/std" "serde?/std") ("serde" "dep:serde") ("opt-simd-parse-hex" "dep:hex-simd") ("opt-simd-convert-hex" "dep:hex-simd") ("detect-features" "std" "hex-simd?/detect") ("alloc" "hex-simd?/alloc" "serde?/alloc")))) (r "1.70")))

(define-public crate-fast-tlsh-0.1.3 (c (n "fast-tlsh") (v "0.1.3") (d (list (d (n "bitfield-struct") (r "^0.6.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "hex-simd") (r "^0.8.0") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.202") (o #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1anq9jghilnbwzm85p5739by7vr366vd5gvpb1qf0di4n9p6gang") (f (quote (("unsafe") ("tests-slow") ("strict-parser") ("simd-portable" "unstable") ("simd-per-arch") ("simd" "opt-simd" "simd-per-arch") ("serde-buffered") ("opt-simd-bucket-aggregation") ("opt-simd-body-comparison") ("opt-simd" "opt-simd-body-comparison" "opt-simd-bucket-aggregation" "opt-simd-parse-hex" "opt-simd-convert-hex") ("opt-pearson-table-double") ("opt-low-memory-hex-str-encode-min-table" "opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-encode-half-table") ("opt-low-memory-hex-str-decode-quarter-table" "opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-hex-str-decode-min-table" "opt-low-memory-hex-str-decode-quarter-table") ("opt-low-memory-hex-str-decode-half-table") ("opt-low-memory-buckets") ("opt-embedded-default" "opt-dist-length-table" "opt-dist-qratios-table" "opt-low-memory-hex-str-encode-half-table") ("opt-dist-qratios-table-double" "opt-dist-qratios-table") ("opt-dist-qratios-table") ("opt-dist-length-table") ("opt-default" "opt-dist-length-table" "opt-dist-qratios-table-double" "opt-pearson-table-double") ("maint-lints") ("maint-code") ("experiment-pearson") ("easy-functions") ("default" "std" "easy-functions" "opt-default" "simd" "detect-features")))) (s 2) (e (quote (("unstable" "serde?/unstable") ("std" "alloc" "hex-simd?/std" "serde?/std") ("serde" "dep:serde") ("opt-simd-parse-hex" "dep:hex-simd") ("opt-simd-convert-hex" "dep:hex-simd") ("detect-features" "std" "hex-simd?/detect") ("alloc" "hex-simd?/alloc" "serde?/alloc")))) (r "1.70")))

