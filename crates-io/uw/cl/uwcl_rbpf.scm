(define-module (crates-io uw cl uwcl_rbpf) #:use-module (crates-io))

(define-public crate-uwcl_rbpf-0.0.1 (c (n "uwcl_rbpf") (v "0.0.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "combine") (r "^3.8.1") (d #t) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "elf") (r "^0.0.10") (d #t) (k 2)) (d (n "json") (r "^0.11") (d #t) (k 2)))) (h "0c1diq09s4cb35p6l9wpwjddrb9ndpk04a2fkhncd61afq4yracp") (y #t)))

(define-public crate-uwcl_rbpf-0.0.2 (c (n "uwcl_rbpf") (v "0.0.2") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "combine") (r "^3.8.1") (d #t) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "hash32") (r "^0.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "elf") (r "^0.0.10") (d #t) (k 2)) (d (n "json") (r "^0.11") (d #t) (k 2)))) (h "01y614gxn84q87rdylmyacipz22r5bnk3f3cs4ynzak32vinca2r")))

