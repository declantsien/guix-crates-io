(define-module (crates-io ok x- okx-rs) #:use-module (crates-io))

(define-public crate-okx-rs-0.1.0 (c (n "okx-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.68") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.27.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_qs") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "time" "sync" "tracing"))) (d #t) (k 2)))) (h "1y1ykv7f7pc82xqjqg21isnd9ndzckb6932qkmvwdkygwfspwxxl")))

(define-public crate-okx-rs-0.1.1 (c (n "okx-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("dev"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_qs") (r "^0.10.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.7.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "simd-json") (r "^0.13.4") (f (quote ("runtime-detection" "known-key"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (o #t) (d #t) (k 0)) (d (n "tungstenite") (r "^0.20.1") (f (quote ("native-tls"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0ip67p9vx0szwj37bwgji11g51hkj4avmfqj27yrb17nizygds7s") (f (quote (("vip")))) (s 2) (e (quote (("websocket" "dep:tungstenite") ("simd" "dep:simd-json") ("orderbook" "dep:rust_decimal") ("example" "dep:env_logger" "dep:tokio" "websocket") ("default" "dep:log"))))))

