(define-module (crates-io pc w_ pcw_regrs) #:use-module (crates-io))

(define-public crate-pcw_regrs-1.9.0 (c (n "pcw_regrs") (v "1.9.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "indoc") (r "^2.0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 0)) (d (n "maybe-debug") (r "^0.1.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "ordered-float") (r "^4.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pcw_fn") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "polyfit-residuals") (r "^0.6.1") (f (quote ("parallel_rayon"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "rtrb") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)))) (h "0xda47lh6pqjs6vxnaf7y1dglxgvl6qzmliy747bbg7qgczi6klq") (f (quote (("nightly-only" "polyfit-residuals/nightly-only") ("dofs-sub-one") ("default" "serde" "dofs-sub-one" "parallel_rayon")))) (s 2) (e (quote (("serde" "dep:serde") ("parallel_rayon" "dep:rayon" "polyfit-residuals/parallel_rayon"))))))

