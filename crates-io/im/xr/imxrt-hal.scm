(define-module (crates-io im xr imxrt-hal) #:use-module (crates-io))

(define-public crate-imxrt-hal-0.1.0 (c (n "imxrt-hal") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "062ngfn1xrzv9w1c2v7gkx3qvswpy3ilxy8wvkx34vn3d1sbbxa3") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1064" "imxrt-ral/imxrt1064") ("imxrt1062" "imxrt-ral/imxrt1062") ("imxrt1061" "imxrt-ral/imxrt1061") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.2.0 (c (n "imxrt-hal") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1a5nwxl1w6rdq1jpf2yzd4mj4czaqb6zmnrvd2gav0bcch275hqq") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062") ("default" "embedded-hal/unproven")))) (y #t)))

(define-public crate-imxrt-hal-0.2.1-alpha (c (n "imxrt-hal") (v "0.2.1-alpha") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.2.1-alpha") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "05gw35mkll375s22c4njlmh5idvqfvg784lw97ch65va0nrfcaly") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.2.1 (c (n "imxrt-hal") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1sdq23b38z2ks56dzmpj2y4iwbd9adlbc8mlqi8nn9y7l3mc0h81") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.3.0 (c (n "imxrt-hal") (v "0.3.0") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0c69ssjqhfhyq825krsi7hqj14lwy7fjry759p180jb25dw5mvmj") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.3.1 (c (n "imxrt-hal") (v "0.3.1") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1rgsaaqyr5874k9rj7sarsf9lh8a3kmkr6xhisijbk4abk6zq31p") (f (quote (("rtfm" "imxrt-ral/rtfm") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.0 (c (n "imxrt-hal") (v "0.4.0") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.1.0") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1cpiw4v5nc99s5nr6lhgs8gj4i4pgz9hah57zq5z1qixh45yvd6n") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.1 (c (n "imxrt-hal") (v "0.4.1") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.1.0") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1n6dbc4z88m9gm6b928ppf0ik96hcg5q202f8p6p6i7abv6dzbzb") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.2 (c (n "imxrt-hal") (v "0.4.2") (d (list (d (n "as-slice") (r ">=0.1.3, <0.2.0") (d #t) (k 0)) (d (n "bitflags") (r ">=1.2.1, <2.0.0") (d #t) (k 0)) (d (n "cortex-m") (r ">=0.6.0, <0.7.0") (d #t) (k 0)) (d (n "embedded-hal") (r ">=0.2.3, <0.3.0") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r ">=0.1.2, <0.2.0") (d #t) (k 0)) (d (n "imxrt-ral") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "nb") (r ">=0.1.2, <0.2.0") (d #t) (k 0)) (d (n "rand_core") (r ">=0.5.0, <0.6.0") (o #t) (k 0)) (d (n "void") (r ">=1.0.2, <2.0.0") (k 0)))) (h "1x4hk7bjk9r5rd0ny8vldfwxxwahp2z8461qgl70a6s7w4ccz6x7") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.3 (c (n "imxrt-hal") (v "0.4.3") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.1.2") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1br05r940ay57adnma57qikq8cj6xrq7fywz4hv81rpg5ibdjn5r") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1064" "imxrt-ral/imxrt1064" "imxrt-iomuxc/imxrt106x") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("imxrt1061" "imxrt-ral/imxrt1061" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.4 (c (n "imxrt-hal") (v "0.4.4") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.1.2") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1j2w61grcbpn8ndh29zs6bdmh1y2r4hfcpi5svj3nnsq18cf4hvs") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1064" "imxrt-ral/imxrt1064" "imxrt-iomuxc/imxrt106x") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("imxrt1061" "imxrt-ral/imxrt1061" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.4.5 (c (n "imxrt-hal") (v "0.4.5") (d (list (d (n "as-slice") (r "^0.1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6") (f (quote ("device"))) (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.1.2") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1q3w6wf7a9x6hgpsq0mz873v3yh50wgrg77dhw4v0mmwwpgpv2kb") (f (quote (("rtic" "imxrt-ral/rtic") ("rt" "imxrt-ral/rt") ("nosync" "imxrt-ral/nosync") ("imxrt1064" "imxrt-ral/imxrt1064" "imxrt-iomuxc/imxrt106x") ("imxrt1062" "imxrt-ral/imxrt1062" "imxrt-iomuxc/imxrt106x") ("imxrt1061" "imxrt-ral/imxrt1061" "imxrt-iomuxc/imxrt106x") ("default" "embedded-hal/unproven"))))))

(define-public crate-imxrt-hal-0.5.0 (c (n "imxrt-hal") (v "0.5.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "185dc5v2vhjrizw1fc6wg7i92bvifa3fr9rasz9wdl3y7b5bwkl2") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

(define-public crate-imxrt-hal-0.5.1 (c (n "imxrt-hal") (v "0.5.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2.1") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "0hk0f73nckqvz8j4ypw9fc3ypkbi79bafa3ndaxwmnwn3qfdmpbg") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1020" "imxrt-iomuxc/imxrt1020") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

(define-public crate-imxrt-hal-0.5.2 (c (n "imxrt-hal") (v "0.5.2") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2.1") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "void") (r "^1") (k 0)))) (h "11lfvjmp3949lz929jl84n9rslqhrp62finqyfknwhkybxf48kdm") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1020" "imxrt-iomuxc/imxrt1020") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

(define-public crate-imxrt-hal-0.5.3 (c (n "imxrt-hal") (v "0.5.3") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2.1") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "usb-device") (r "^0.2") (f (quote ("test-class-high-speed"))) (d #t) (k 2)) (d (n "usbd-hid") (r "^0.6") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1") (k 0)))) (h "10gxzy4fg8rn7nh3j3ckslsyyd5vr6yw698yidq90wa4rnqhd3ml") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1020" "imxrt-iomuxc/imxrt1020") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

(define-public crate-imxrt-hal-0.5.4 (c (n "imxrt-hal") (v "0.5.4") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2.1") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "usb-device") (r "^0.2") (f (quote ("test-class-high-speed"))) (d #t) (k 2)) (d (n "usbd-hid") (r "^0.6") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1") (k 0)))) (h "0a2i4hqjgnmi3cbrvqy4cxp7fdl6xlra1216v58z450zy14wsyjf") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1020" "imxrt-iomuxc/imxrt1020") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

(define-public crate-imxrt-hal-0.5.5 (c (n "imxrt-hal") (v "0.5.5") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (d #t) (k 2)) (d (n "eh02") (r "^0.2") (d #t) (k 0) (p "embedded-hal")) (d (n "eh1") (r "^1.0.0") (d #t) (k 0) (p "embedded-hal")) (d (n "eio06") (r "^0.6.1") (d #t) (k 0) (p "embedded-io")) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("async-await"))) (k 0)) (d (n "imxrt-dma") (r "^0.1") (d #t) (k 0)) (d (n "imxrt-iomuxc") (r "^0.2.1") (d #t) (k 0)) (d (n "imxrt-ral") (r "^0.5") (d #t) (k 0)) (d (n "imxrt-rt") (r "^0.1") (d #t) (k 2)) (d (n "imxrt-usbd") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "menu") (r "^0.3.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "pin-utils") (r "^0.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5") (o #t) (k 0)) (d (n "usb-device") (r "^0.2") (f (quote ("test-class-high-speed"))) (d #t) (k 2)) (d (n "usbd-hid") (r "^0.6") (d #t) (k 2)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)) (d (n "void") (r "^1") (k 0)))) (h "12m9mvaay3zam5fv5mlgx9pbydgl49bzvw8nh91y5814ka0bb3k7") (f (quote (("imxrt1170" "imxrt-iomuxc/imxrt1170") ("imxrt1064" "imxrt-iomuxc/imxrt1060") ("imxrt1060" "imxrt-iomuxc/imxrt1060") ("imxrt1020" "imxrt-iomuxc/imxrt1020") ("imxrt1010" "imxrt-iomuxc/imxrt1010") ("eh02-unproven") ("default" "imxrt-usbd"))))))

