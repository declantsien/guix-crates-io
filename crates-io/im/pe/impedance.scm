(define-module (crates-io im pe impedance) #:use-module (crates-io))

(define-public crate-impedance-0.1.0 (c (n "impedance") (v "0.1.0") (h "0zx04d7ypy6ffgl45ij2zmipwbgv8mai2sry2j91z7a89z3p2rx4")))

(define-public crate-impedance-0.1.1 (c (n "impedance") (v "0.1.1") (d (list (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "macros" "sync"))) (d #t) (k 0)))) (h "1z96rq46rx269npwgxqc8ahkvflqv18p13difvx95636ral01i3y")))

(define-public crate-impedance-0.1.2 (c (n "impedance") (v "0.1.2") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "167g3zsr5gm8iqmz6y7xahsh0yrnn1w59jllgd4fgxp1hmkzwixa") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.1.3 (c (n "impedance") (v "0.1.3") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "1g8plq7m15j3fb4v1gp7yagsbq5hk3znmxhyq4lqi80a1fymzpq8") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.2.0 (c (n "impedance") (v "0.2.0") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "06sjdi1shcjlza8bdy1v7wsyplfwrs8rxbarhg8743hzbyavhg01") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.2.1 (c (n "impedance") (v "0.2.1") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "06mjl9cp8mj64f4n93ds7pncdx741qg9amcx1j8j911z1g9j45qh") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.2.2 (c (n "impedance") (v "0.2.2") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "1gbifp7xcwpb489abbl65npb4sflg7wa18lcbgl4rm8iw9mz9pyr") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.2.3 (c (n "impedance") (v "0.2.3") (d (list (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "0s6bc87g6anjavxy9y8mvlshy7vfb82x2m6adi3bipdcph28w810") (f (quote (("default" "tokio"))))))

(define-public crate-impedance-0.2.4 (c (n "impedance") (v "0.2.4") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.14") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "0syiikw8gblqnqjlsdn56v68mglxwm3ll3sj5yj3w0aimafrvhxk") (f (quote (("default" "tokio") ("async-std-futures" "async-std" "futures"))))))

(define-public crate-impedance-0.2.5 (c (n "impedance") (v "0.2.5") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "sync"))) (d #t) (k 2)))) (h "1lic8xmrrq0bsm7p079zhzin4rpc6zbjyb7jzf506wbapilja6j8") (f (quote (("default" "tokio") ("async-std-experimental" "async-std" "futures"))))))

(define-public crate-impedance-0.3.0 (c (n "impedance") (v "0.3.0") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.25") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "sync" "time"))) (d #t) (k 2)))) (h "0d3viq5wzi73qjh7brbd1fqwxd8b4jn7yirvk59kskbq9c4bz3v6") (f (quote (("default" "tokio") ("async-std-experimental" "async-std" "futures"))))))

