(define-module (crates-io im ap imap-codec) #:use-module (crates-io))

(define-public crate-imap-codec-0.2.0 (c (n "imap-codec") (v "0.2.0") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0yg58jq42njc4rprf0fxdsfffmqir2194sdhx5hvqarnz9r0s0qv") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.2.1 (c (n "imap-codec") (v "0.2.1") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1sf2iavqrxyrl61gdj58a201in1b4xb5kd6sr6kdgba0f0j8vh0d") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.2.2 (c (n "imap-codec") (v "0.2.2") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1ndnnd5w20amb2c6gzvyjraqvrcfhkqvrvcyx1a2r61iznpidmd6") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.3.0 (c (n "imap-codec") (v "0.3.0") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0zjsv1c1vd3pbr52bc577l7nfc5d7i2b387djn09v426v1zh93vk") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.4.0 (c (n "imap-codec") (v "0.4.0") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1igzj56lysv7x8j8lc6q5gsj043vwcyp3ir2i2nzj4sxsbgrsz8f") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.5.0 (c (n "imap-codec") (v "0.5.0") (d (list (d (n "abnf-core") (r "^0.4") (d #t) (k 0)) (d (n "arbitrary") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.4") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0r1k3zvaj8dy4dcrlhwvfdlfbxa2ffxkzras3668ya7jspmyvcfa") (f (quote (("serdex" "serde" "chrono/serde") ("default"))))))

(define-public crate-imap-codec-0.6.0 (c (n "imap-codec") (v "0.6.0") (d (list (d (n "abnf-core") (r "^0.5") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "imap-types") (r "^0.6") (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (k 0)))) (h "04n94mvv1kimiph3668xvikc4w3yd54r57qdm53m09lxv5iv9gjx") (f (quote (("starttls" "imap-types/starttls") ("nom") ("ext_idle" "imap-types/ext_idle") ("ext_enable" "imap-types/ext_enable") ("ext_compress" "imap-types/ext_compress") ("default") ("bounded-static" "imap-types/bounded-static") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("tokio_util_codec" "dep:bytes" "dep:tokio-util" "bounded-static") ("serde" "dep:serde" "chrono/serde" "imap-types/serde"))))))

(define-public crate-imap-codec-0.7.0 (c (n "imap-codec") (v "0.7.0") (d (list (d (n "abnf-core") (r "^0.5") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r ">=0.4.20") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "imap-types") (r "^0.7") (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (k 0)))) (h "004v54q0zqvmrrsliz3rb1qw09f6pa7h2f3jr6cmcqlcad2vg6g8") (f (quote (("starttls" "imap-types/starttls") ("ext_idle" "imap-types/ext_idle") ("ext_enable" "imap-types/ext_enable") ("ext_compress" "imap-types/ext_compress") ("default") ("bounded-static" "imap-types/bounded-static") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("tokio_util_codec" "dep:bytes" "dep:tokio-util" "bounded-static") ("serde" "dep:serde" "chrono/serde" "imap-types/serde"))))))

(define-public crate-imap-codec-0.8.0 (c (n "imap-codec") (v "0.8.0") (d (list (d (n "abnf-core") (r "^0.5") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "imap-types") (r "^0.8.0") (f (quote ("unchecked"))) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (o #t) (k 0)))) (h "10nrrxnwns7wnagvlaafqwd4rlp9k8rsw8wrz6nybnw429fkfybw") (f (quote (("starttls" "imap-types/starttls") ("ext_sasl_ir" "imap-types/ext_sasl_ir") ("ext_quota" "imap-types/ext_quota") ("ext_mailbox_referrals" "imap-types/ext_mailbox_referrals") ("ext_login_referrals" "imap-types/ext_login_referrals") ("ext_literal" "imap-types/ext_literal") ("ext_idle" "imap-types/ext_idle") ("ext_enable" "imap-types/ext_enable") ("ext_compress" "imap-types/ext_compress") ("default") ("bounded-static" "imap-types/bounded-static") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("tokio" "dep:bytes" "dep:tokio-util" "bounded-static") ("serde" "dep:serde" "chrono/serde" "imap-types/serde"))))))

(define-public crate-imap-codec-0.9.0 (c (n "imap-codec") (v "0.9.0") (d (list (d (n "abnf-core") (r "^0.5") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 2)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "imap-types") (r "^0.9.0") (f (quote ("unchecked"))) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (k 0)))) (h "0ldcvbh4r6llcxg0nq9k7h72r6583xpcr5fklnf5yk6ryq8sndmw") (f (quote (("starttls" "imap-types/starttls") ("ext_unselect" "imap-types/ext_unselect") ("ext_sasl_ir" "imap-types/ext_sasl_ir") ("ext_quota" "imap-types/ext_quota") ("ext_move" "imap-types/ext_move") ("ext_mailbox_referrals" "imap-types/ext_mailbox_referrals") ("ext_login_referrals" "imap-types/ext_login_referrals") ("ext_literal" "imap-types/ext_literal") ("ext_idle" "imap-types/ext_idle") ("ext_enable" "imap-types/ext_enable") ("ext_condstore_qresync" "imap-types/ext_condstore_qresync") ("ext_compress" "imap-types/ext_compress") ("default") ("bounded-static" "imap-types/bounded-static") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("tokio" "dep:bytes" "dep:tokio-util" "bounded-static") ("serde" "dep:serde" "chrono/serde" "imap-types/serde"))))))

(define-public crate-imap-codec-0.10.0 (c (n "imap-codec") (v "0.10.0") (d (list (d (n "abnf-core") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bounded-static") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "imap-types") (r "^0.10.0") (f (quote ("unvalidated"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("codec"))) (o #t) (k 0)))) (h "0l1nfzinpdvvwki8qxc78hy5d8xy4qqyhb241f9vrsgh6yf483qw") (f (quote (("starttls" "imap-types/starttls") ("quirk_rectify_numbers") ("quirk_missing_text") ("quirk_crlf_relaxed") ("ext_unselect" "imap-types/ext_unselect") ("ext_sasl_ir" "imap-types/ext_sasl_ir") ("ext_quota" "imap-types/ext_quota") ("ext_move" "imap-types/ext_move") ("ext_mailbox_referrals" "imap-types/ext_mailbox_referrals") ("ext_login_referrals" "imap-types/ext_login_referrals") ("ext_literal" "imap-types/ext_literal") ("ext_idle" "imap-types/ext_idle") ("ext_enable" "imap-types/ext_enable") ("ext_condstore_qresync" "imap-types/ext_condstore_qresync") ("ext_compress" "imap-types/ext_compress") ("default" "quirk_rectify_numbers") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("tokio" "dep:bytes" "dep:tokio-util" "bounded-static") ("serde" "dep:serde" "chrono/serde" "imap-types/serde") ("bounded-static" "dep:bounded-static" "imap-types/bounded-static"))))))

(define-public crate-imap-codec-1.0.0-beta (c (n "imap-codec") (v "1.0.0-beta") (d (list (d (n "abnf-core") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bounded-static") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "imap-types") (r "^1.0.0-beta") (f (quote ("unvalidated"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "10hh4yxalpm0mxmhy33k9yszjqk5wcqd6rnjc4mdv2y1xkk6dshi") (f (quote (("starttls" "imap-types/starttls") ("quirk_rectify_numbers") ("quirk_missing_text") ("quirk_crlf_relaxed") ("ext_mailbox_referrals" "imap-types/ext_mailbox_referrals") ("ext_login_referrals" "imap-types/ext_login_referrals") ("ext_condstore_qresync" "imap-types/ext_condstore_qresync") ("default" "quirk_rectify_numbers" "quirk_missing_text") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("serde" "dep:serde" "chrono/serde" "imap-types/serde") ("bounded-static" "dep:bounded-static" "imap-types/bounded-static"))))))

(define-public crate-imap-codec-1.0.0 (c (n "imap-codec") (v "1.0.0") (d (list (d (n "abnf-core") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bounded-static") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "imap-types") (r "^1.0.0") (f (quote ("unvalidated"))) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "regex") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "0cb8ylmby3m91jxc38s9ldx98ayaqd468110ss749cxv2x22s8p6") (f (quote (("starttls" "imap-types/starttls") ("quirk_rectify_numbers") ("quirk_missing_text") ("quirk_crlf_relaxed") ("ext_mailbox_referrals" "imap-types/ext_mailbox_referrals") ("ext_login_referrals" "imap-types/ext_login_referrals") ("ext_condstore_qresync" "imap-types/ext_condstore_qresync") ("default" "quirk_rectify_numbers" "quirk_missing_text") ("arbitrary" "imap-types/arbitrary")))) (s 2) (e (quote (("serde" "dep:serde" "chrono/serde" "imap-types/serde") ("bounded-static" "dep:bounded-static" "imap-types/bounded-static"))))))

