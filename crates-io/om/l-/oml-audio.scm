(define-module (crates-io om l- oml-audio) #:use-module (crates-io))

(define-public crate-oml-audio-0.1.1-alpha (c (n "oml-audio") (v "0.1.1-alpha") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "0b3kcdp6i3dybmp1f73yn6f43qgip1fag34sdjp2ldwhs9nqvvfv")))

(define-public crate-oml-audio-0.1.2 (c (n "oml-audio") (v "0.1.2") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "08xpq4942pz86df8h8idmx4gbnpckii21iwhmxqbw1jlrsgapld1")))

(define-public crate-oml-audio-0.1.3 (c (n "oml-audio") (v "0.1.3") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "1p8pq2j2ycnwrfxvf5zgr2k5rkpi3v0s6z2ppxlyxzsdc381rdr7")))

(define-public crate-oml-audio-0.2.0 (c (n "oml-audio") (v "0.2.0") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "1p283a4783jylfm6gbqba90nw03hhh42wq1fpvxdqnbm8fd7zl4c")))

(define-public crate-oml-audio-0.2.1 (c (n "oml-audio") (v "0.2.1") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "15df04hqjp9k23yc3md0bxz5sb32ks7d1k6z827dijhcd7i6hv7h")))

(define-public crate-oml-audio-0.2.2 (c (n "oml-audio") (v "0.2.2") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "159fyb0ly0wk4iy3zfk4bknxws05abpdgb8dafs2qxivw3hp5h26")))

(define-public crate-oml-audio-0.2.3 (c (n "oml-audio") (v "0.2.3") (d (list (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "1s2hv0cjir3l1m8zb0z547ipp3bkgwf378n4b0ly6fh9fzg7lbbx")))

(define-public crate-oml-audio-0.3.0 (c (n "oml-audio") (v "0.3.0") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1x634gq72jhv7xbwlwwah5ywlc14n764ajyjknymri223d5dm7kb") (f (quote (("default" "apple") ("apple"))))))

(define-public crate-oml-audio-0.4.0 (c (n "oml-audio") (v "0.4.0") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "05pnz79c5gbqa7fb1rl59241gr9ind5p8a1kpsbqr8wczlxxjihj") (f (quote (("default" "apple") ("apple"))))))

(define-public crate-oml-audio-0.4.1 (c (n "oml-audio") (v "0.4.1") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "08c6f795dfirbwrkdwf0j0cx4smz4il300bvcrzxw39ws17b308n") (f (quote (("default" "apple") ("apple"))))))

(define-public crate-oml-audio-0.4.2 (c (n "oml-audio") (v "0.4.2") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1mrw5fag984m88g60faxcf256mv501q92a4c8hjwm1jwbcwd25fz") (f (quote (("default" "apple") ("apple"))))))

(define-public crate-oml-audio-0.5.0 (c (n "oml-audio") (v "0.5.0") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "0bisnmij1fqm35x0hmq9jsww7f2j2r8c6rv0xdc36ilaypiljln2") (f (quote (("default") ("apple"))))))

(define-public crate-oml-audio-0.5.1 (c (n "oml-audio") (v "0.5.1") (d (list (d (n "miniaudio") (r "^0.10.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1zvyicblc28y49lmgyz8fjhjh814pk2qsiwj08hzpzp7ajz9bs06") (f (quote (("default") ("apple"))))))

(define-public crate-oml-audio-0.6.5-alpha (c (n "oml-audio") (v "0.6.5-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.11.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1i8a7dr109k6wrb3h61f6jv2qwg6hn79vaj16lgrs8wi1ag7r7hn") (f (quote (("use_stub") ("use_apple") ("default")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.6.7-alpha (c (n "oml-audio") (v "0.6.7-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "08vcrm4fn6wdfjalmw96i16blvdq4yd6ls6kdgy9i6m3x7ff8zzr") (f (quote (("use_stub") ("use_apple") ("default")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.6.8-alpha (c (n "oml-audio") (v "0.6.8-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1321jn05q2a40ylrrzlh24m745h5kikvp9rqmy1f818f0j7k8li6") (f (quote (("use_stub") ("use_apple") ("default")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.6.9-alpha (c (n "oml-audio") (v "0.6.9-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "0lib3fscrppxxyr7l1vdsb8fxncx2357x7wvivzpa96z635wa159") (f (quote (("use_stub") ("use_apple") ("default")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.2-alpha (c (n "oml-audio") (v "0.8.2-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1n763rx9z4a4w2gcacn23v5k1lc53hlh1aq143drlmhkl0azdkc8") (f (quote (("use_stub") ("use_apple") ("default" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.3-alpha (c (n "oml-audio") (v "0.8.3-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "0r34fmqwfzsv8j0nhk0jdnmznbiy0z694al0j70q9pbxxwgbggw5") (f (quote (("use_stub") ("use_apple") ("default" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.4-alpha (c (n "oml-audio") (v "0.8.4-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1zfjabmnph6r4aqsrmszl7g8lfb4pa3fgznbvcs1m5v0k4z6qwkq") (f (quote (("use_stub") ("use_apple") ("default" "use_apple" "use_miniaudio" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.5-alpha (c (n "oml-audio") (v "0.8.5-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "07kr2mnv6gs7a11cbjzd5krsk5zvaan5skx1xbc1pzzvfx1llbmd") (f (quote (("use_stub") ("use_apple") ("default" "use_apple" "use_miniaudio" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.6-alpha (c (n "oml-audio") (v "0.8.6-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.0") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.0") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "1gbdg047b54vcv372yhzifiz5pggqz44nkpjhl65gz3bziyzwd1p") (f (quote (("use_stub") ("use_apple") ("default" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

(define-public crate-oml-audio-0.8.8-alpha (c (n "oml-audio") (v "0.8.8-alpha") (d (list (d (n "cfg_aliases") (r "^0.1.1") (d #t) (k 1)) (d (n "lewton") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "om-fork-ep-miniaudio-sys") (r "^2.6.1") (o #t) (d #t) (k 0)) (d (n "om-fork-miniaudio") (r "^0.12.1") (f (quote ("ma-no-decoding" "ma-log-level-verbose"))) (o #t) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2.6") (d #t) (k 0)))) (h "0aw21ikvakw7mk9nx6v7jk4fwchwhlqnpskxsdsykijamsy3xwxg") (f (quote (("use_stub") ("use_apple") ("default" "use_stub")))) (s 2) (e (quote (("use_miniaudio" "dep:om-fork-miniaudio" "dep:om-fork-ep-miniaudio-sys" "dep:lewton"))))))

