(define-module (crates-io om a- oma-contents) #:use-module (crates-io))

(define-public crate-oma-contents-0.1.0 (c (n "oma-contents") (v "0.1.0") (d (list (d (n "grep") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "oma-console") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1d438jx9qixp5wpppzi7v2qjjk55skmpw3cr11xmfmgnwdl5831q")))

(define-public crate-oma-contents-0.1.1 (c (n "oma-contents") (v "0.1.1") (d (list (d (n "grep") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "oma-console") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1k5wvgz89iqqlasa4r83j7pibww9k1b5y5aq8gv9iij3v1bgy5z6")))

(define-public crate-oma-contents-0.2.0 (c (n "oma-contents") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "grep") (r "^0.2") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "oma-utils") (r "^0.1.6") (f (quote ("dpkg"))) (d #t) (k 2)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "07bkri7s9cyqq5b7mgwmm75wqjpd6mddx6cshrl45kbwlb2c9vvk") (f (quote (("default" "aosc") ("aosc"))))))

(define-public crate-oma-contents-0.3.0 (c (n "oma-contents") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "which") (r "^4.4") (o #t) (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "0g48dinb2mvs5nx2qzw4i1hxj345gj9h1yxdcc74fdk4q1pavl9i") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex" "dep:which"))))))

(define-public crate-oma-contents-0.3.1 (c (n "oma-contents") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "which") (r "^4.4") (o #t) (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "1da20zhgb9xwb6c9z4s7a4dbz991bmjyy5h3dnlc88wmpfxz8f34") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex" "dep:which"))))))

(define-public crate-oma-contents-0.4.0 (c (n "oma-contents") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "0kbqhmbrrmw1ww2fkfrsv5gb4dci0520fr3vnh5rvw69bimz71qi") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.5.0 (c (n "oma-contents") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "0hvwi15svknhbpxnyajzvyf1xym9zxjwvmnvww0jvhvjvnfc4d84") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.6.0 (c (n "oma-contents") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.17") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "17wnif1gzimrwmwcwnh05cmshk5f2pbpdgh823ki0pnc7vyh7qrl") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.6.1 (c (n "oma-contents") (v "0.6.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "065x0dw4lr8jp06yb3166krn8wsab7cx9hvr053rnlgalw0l5m2i") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.7.0 (c (n "oma-contents") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "0wr6rpmz83930k1m8l8dr5px6mbj3yn19ddf8ninsy4wrxp31lkb") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.7.1 (c (n "oma-contents") (v "0.7.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winnow") (r "^0.5") (d #t) (k 0)))) (h "1cq96w1ism2m0jf5kah4p3r89sdvbaw8qrrry52w916bbm3fhavi") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

(define-public crate-oma-contents-0.7.2 (c (n "oma-contents") (v "0.7.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("zlib"))) (o #t) (k 0)) (d (n "indicatif") (r "^0.17") (d #t) (k 2)) (d (n "lzzzz") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "strsim") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)))) (h "0dlwfkdzgx1jjnqnlc0sa2rm5n4cy1dw5w18kf6a3c357654z2j6") (f (quote (("aosc")))) (s 2) (e (quote (("no-rg-binary" "dep:flate2" "dep:rayon" "dep:lzzzz") ("default" "aosc" "dep:regex"))))))

