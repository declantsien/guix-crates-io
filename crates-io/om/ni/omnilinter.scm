(define-module (crates-io om ni omnilinter) #:use-module (crates-io))

(define-public crate-omnilinter-0.5.0 (c (n "omnilinter") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (f (quote ("grammar-extras"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.5.0") (d #t) (k 0)))) (h "0gq9ygcnhd4d1gy9fhmfpyrvxvip436glcqm833nr6fvnp0pr10h") (f (quote (("matching-cache") ("default" "matching-cache" "multithreading") ("coverage")))) (s 2) (e (quote (("multithreading" "dep:rayon"))))))

(define-public crate-omnilinter-0.6.0 (c (n "omnilinter") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (f (quote ("grammar-extras"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.5.0") (d #t) (k 0)))) (h "1cwvjl2kw7w8njfxhhbmkgnqnlr2pnrwcyl11i50x0bkf1nrs1z0") (f (quote (("matching-cache") ("default" "matching-cache" "multithreading") ("coverage")))) (s 2) (e (quote (("multithreading" "dep:rayon"))))))

(define-public crate-omnilinter-0.7.0 (c (n "omnilinter") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.14") (d #t) (k 2)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (f (quote ("grammar-extras"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "walkdir") (r "^2.5.0") (d #t) (k 0)))) (h "0acvdr6lrw03kzy6w8x89m224hgi7j2p3mrr2xfwgy1pvzdkfv8a") (f (quote (("matching-cache") ("default" "matching-cache" "multithreading") ("coverage")))) (s 2) (e (quote (("multithreading" "dep:rayon"))))))

