(define-module (crates-io f6 #{4a}# f64ad_core) #:use-module (crates-io))

(define-public crate-f64ad_core-0.0.1 (c (n "f64ad_core") (v "0.0.1") (h "1fbv2azsbi0hanfvijp0p53x8qq0z93wg0fr7q9aizy7c7bdrx90")))

(define-public crate-f64ad_core-0.0.2 (c (n "f64ad_core") (v "0.0.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "simba") (r "^0.7.2") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)))) (h "17bz11xfd9qynm3wqs4il7p5bqmnr3i112ykfhd5579jjw3n5x9r")))

(define-public crate-f64ad_core-0.0.3 (c (n "f64ad_core") (v "0.0.3") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "simba") (r "^0.7.2") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)))) (h "18q5jgr1q7xs6y1c5y91zalwp3f5j05d3alkw0pnjmizk3abyk2w")))

(define-public crate-f64ad_core-0.0.4 (c (n "f64ad_core") (v "0.0.4") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "nalgebra") (r "^0.31.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "simba") (r "^0.7.2") (d #t) (k 0)) (d (n "timeit") (r "^0.1.2") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0n116izhabl3crlh5lbi7flcq0fg5ngi5xc090nza5v9kf1qvqw6")))

(define-public crate-f64ad_core-0.0.5 (c (n "f64ad_core") (v "0.0.5") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.32") (k 0)) (d (n "nalgebra") (r "^0.31.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "simba") (r "^0.7.2") (d #t) (k 0)) (d (n "timeit") (r "^0.1.2") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1hlj101fir8j8s7v4rg7ixd8gnr73mjppqzyxa01qw40xbdcbwsr")))

