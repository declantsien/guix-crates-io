(define-module (crates-io ax io axiom-query) #:use-module (crates-io))

(define-public crate-axiom-query-2.0.14 (c (n "axiom-query") (v "2.0.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "axiom-codec") (r "^0.2.0") (k 0)) (d (n "axiom-eth") (r "=0.4.0") (f (quote ("providers" "aggregation" "evm"))) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "clap") (r "=4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.10") (d #t) (k 0)) (d (n "ethers-providers") (r "^2.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros"))) (d #t) (k 2)))) (h "0k1l6y88ki2ky3z9qsj1pac13p3j7pzmnkh0lz8kh4akk9si1lba") (f (quote (("revm" "axiom-eth/revm") ("jemallocator" "axiom-eth/jemallocator") ("halo2-axiom" "axiom-eth/halo2-axiom") ("default" "halo2-axiom" "jemallocator" "display" "keygen") ("asm" "axiom-eth/asm")))) (s 2) (e (quote (("keygen" "axiom-eth/keygen" "dep:enum_dispatch" "dep:clap" "dep:serde_yaml") ("display" "axiom-eth/display" "dep:ark-std")))) (r "1.73.0")))

(define-public crate-axiom-query-2.0.15 (c (n "axiom-query") (v "2.0.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "axiom-codec") (r "^0.2.1") (k 0)) (d (n "axiom-eth") (r "=0.4.1") (f (quote ("providers" "aggregation" "evm"))) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "clap") (r "=4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.10") (d #t) (k 0)) (d (n "ethers-providers") (r "^2.0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros"))) (d #t) (k 2)))) (h "0lyi24z4738r10f9ygr9mz5pvfz1jzfdgmy39a6yxykwyz2zsi9c") (f (quote (("revm" "axiom-eth/revm") ("jemallocator" "axiom-eth/jemallocator") ("halo2-axiom" "axiom-eth/halo2-axiom") ("default" "halo2-axiom" "jemallocator" "display" "keygen") ("asm" "axiom-eth/asm")))) (s 2) (e (quote (("keygen" "axiom-eth/keygen" "dep:enum_dispatch" "dep:clap" "dep:serde_yaml") ("display" "axiom-eth/display" "dep:ark-std")))) (r "1.73.0")))

(define-public crate-axiom-query-2.0.16 (c (n "axiom-query") (v "2.0.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "axiom-codec") (r "^0.2.1") (k 0)) (d (n "axiom-eth") (r "=0.4.2") (f (quote ("providers" "aggregation" "evm"))) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "clap") (r "=4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.14") (f (quote ("optimism"))) (d #t) (k 0)) (d (n "ethers-providers") (r "^2.0.14") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros"))) (d #t) (k 2)))) (h "0n4vl7r0d0588y8w122qzdbkqgn89h7yax1g8af0bnphahlhdf9p") (f (quote (("revm" "axiom-eth/revm") ("jemallocator" "axiom-eth/jemallocator") ("halo2-axiom" "axiom-eth/halo2-axiom") ("default" "halo2-axiom" "jemallocator" "display" "keygen") ("asm" "axiom-eth/asm")))) (s 2) (e (quote (("keygen" "axiom-eth/keygen" "dep:enum_dispatch" "dep:clap" "dep:serde_yaml") ("display" "axiom-eth/display" "dep:ark-std")))) (r "1.73.0")))

(define-public crate-axiom-query-2.0.17 (c (n "axiom-query") (v "2.0.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "axiom-codec") (r "^0.2.1") (k 0)) (d (n "axiom-eth") (r "^0.4.3") (f (quote ("providers" "aggregation" "evm"))) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "clap") (r "=4.4.7") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.14") (f (quote ("optimism"))) (d #t) (k 0)) (d (n "ethers-providers") (r "^2.0.14") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros"))) (d #t) (k 2)))) (h "0vmz1ailnbn6m3145w17cqcnmx2ld9m0vn1sc6ml9fp3jb33z5ka") (f (quote (("revm" "axiom-eth/revm") ("jemallocator" "axiom-eth/jemallocator") ("halo2-axiom" "axiom-eth/halo2-axiom") ("default" "halo2-axiom" "jemallocator" "display" "keygen") ("asm" "axiom-eth/asm")))) (s 2) (e (quote (("keygen" "axiom-eth/keygen" "dep:enum_dispatch" "dep:clap" "dep:serde_yaml") ("display" "axiom-eth/display" "dep:ark-std")))) (r "1.73.0")))

