(define-module (crates-io ax io axiom-eth) #:use-module (crates-io))

(define-public crate-axiom-eth-0.4.0 (c (n "axiom-eth") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (o #t) (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "criterion-macro") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "^2.0.10") (d #t) (k 0)) (d (n "ethers-providers") (r "^2.0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "halo2-base") (r "=0.4.1") (f (quote ("test-utils"))) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (f (quote ("hash-keccak"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.11") (f (quote ("criterion" "flamegraph"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rlp") (r "=0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "snark-verifier") (r "=0.1.7") (k 0)) (d (n "snark-verifier-sdk") (r "=0.1.7") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "rt-multi-thread" "macros"))) (o #t) (k 0)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "zkevm-hashes") (r "=0.2.1") (k 0)))) (h "07q351j213zaf7p93s99l2vs1zjgzbcjnqa6kapcld95hxkbpyd1") (f (quote (("revm" "snark-verifier-sdk/revm") ("profile" "halo2-base/profile") ("jemallocator" "halo2-base/jemallocator") ("halo2-axiom" "zkevm-hashes/halo2-axiom" "snark-verifier-sdk/halo2-axiom") ("evm" "snark-verifier-sdk/loader_evm" "aggregation") ("default" "halo2-axiom" "jemallocator" "providers" "display" "aggregation" "keygen") ("asm" "halo2-base/asm")))) (s 2) (e (quote (("providers" "dep:ethers-providers" "dep:tokio" "dep:futures") ("keygen" "aggregation" "dep:blake3") ("display" "zkevm-hashes/display" "snark-verifier-sdk/display" "dep:ark-std") ("aggregation" "snark-verifier/loader_halo2" "snark-verifier-sdk/loader_halo2" "providers" "dep:serde_with")))) (r "1.73.0")))

(define-public crate-axiom-eth-0.4.1 (c (n "axiom-eth") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (o #t) (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "criterion-macro") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.10") (d #t) (k 0)) (d (n "ethers-providers") (r "=2.0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "halo2-base") (r "=0.4.1") (f (quote ("test-utils"))) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (f (quote ("hash-keccak"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.11") (f (quote ("criterion" "flamegraph"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rlp") (r "=0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "snark-verifier") (r "=0.1.7") (k 0)) (d (n "snark-verifier-sdk") (r "=0.1.7") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "rt-multi-thread" "macros"))) (o #t) (k 0)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "zkevm-hashes") (r "=0.2.1") (k 0)))) (h "1j6kc3h055nlx4cwip2xbl1qksk7haw0si58b2bxmsjcgs9c1jwr") (f (quote (("revm" "snark-verifier-sdk/revm") ("profile" "halo2-base/profile") ("jemallocator" "halo2-base/jemallocator") ("halo2-axiom" "zkevm-hashes/halo2-axiom" "snark-verifier-sdk/halo2-axiom") ("evm" "snark-verifier-sdk/loader_evm" "aggregation") ("default" "halo2-axiom" "jemallocator" "providers" "display" "aggregation" "keygen") ("asm" "halo2-base/asm")))) (s 2) (e (quote (("providers" "dep:ethers-providers" "dep:tokio" "dep:futures") ("keygen" "aggregation" "dep:blake3") ("display" "zkevm-hashes/display" "snark-verifier-sdk/display" "dep:ark-std") ("aggregation" "snark-verifier/loader_halo2" "snark-verifier-sdk/loader_halo2" "providers" "dep:serde_with")))) (r "1.73.0")))

(define-public crate-axiom-eth-0.4.2 (c (n "axiom-eth") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (o #t) (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "criterion-macro") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.14") (f (quote ("optimism"))) (d #t) (k 0)) (d (n "ethers-providers") (r "=2.0.14") (f (quote ("optimism"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "halo2-base") (r "=0.4.1") (f (quote ("test-utils"))) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (f (quote ("hash-keccak"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.11") (f (quote ("criterion" "flamegraph"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rlp") (r "=0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "snark-verifier") (r "=0.1.7") (k 0)) (d (n "snark-verifier-sdk") (r "=0.1.7") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "rt-multi-thread" "macros"))) (o #t) (k 0)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "zkevm-hashes") (r "=0.2.1") (k 0)))) (h "0qk67c9ysnvxqgxlj7h6ahq1gx65kns122gaad77zh8yh3x9af1b") (f (quote (("revm" "snark-verifier-sdk/revm") ("profile" "halo2-base/profile") ("jemallocator" "halo2-base/jemallocator") ("halo2-axiom" "zkevm-hashes/halo2-axiom" "snark-verifier-sdk/halo2-axiom") ("evm" "snark-verifier-sdk/loader_evm" "aggregation") ("default" "halo2-axiom" "jemallocator" "providers" "display" "aggregation" "keygen") ("asm" "halo2-base/asm")))) (s 2) (e (quote (("providers" "dep:ethers-providers" "dep:tokio" "dep:futures") ("keygen" "aggregation" "dep:blake3") ("display" "zkevm-hashes/display" "snark-verifier-sdk/display" "dep:ark-std") ("aggregation" "snark-verifier/loader_halo2" "snark-verifier-sdk/loader_halo2" "providers" "dep:serde_with")))) (r "1.73.0")))

(define-public crate-axiom-eth-0.4.3 (c (n "axiom-eth") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (o #t) (d #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (f (quote ("print-trace"))) (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "blake3") (r "=1.5") (o #t) (d #t) (k 0)) (d (n "cita_trie") (r "=5.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "criterion-macro") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "ethers-core") (r "=2.0.14") (f (quote ("optimism"))) (d #t) (k 0)) (d (n "ethers-providers") (r "=2.0.14") (f (quote ("optimism"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "halo2-base") (r "=0.4.1") (f (quote ("test-utils"))) (k 0)) (d (n "hasher") (r "=0.1") (f (quote ("hash-keccak"))) (d #t) (k 0)) (d (n "hasher") (r "^0.1") (f (quote ("hash-keccak"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "pprof") (r "^0.11") (f (quote ("criterion" "flamegraph"))) (d #t) (k 2)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rlp") (r "=0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "serde_with") (r "^3.3") (f (quote ("base64"))) (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "snark-verifier") (r "=0.1.7") (k 0)) (d (n "snark-verifier-sdk") (r "=0.1.7") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt" "rt-multi-thread" "macros"))) (o #t) (k 0)) (d (n "type-map") (r "^0.5.0") (d #t) (k 0)) (d (n "zkevm-hashes") (r "=0.2.1") (k 0)))) (h "0p7bzq7w16psgvbswfqvy8lyj4vz6m9n6sy63avz7w6ngil3rpa5") (f (quote (("revm" "snark-verifier-sdk/revm") ("profile" "halo2-base/profile") ("jemallocator" "halo2-base/jemallocator") ("halo2-axiom" "zkevm-hashes/halo2-axiom" "snark-verifier-sdk/halo2-axiom") ("evm" "snark-verifier-sdk/loader_evm" "aggregation") ("default" "halo2-axiom" "jemallocator" "providers" "display" "aggregation" "keygen") ("asm" "halo2-base/asm")))) (s 2) (e (quote (("providers" "dep:ethers-providers" "dep:tokio" "dep:futures") ("keygen" "aggregation" "dep:blake3") ("display" "zkevm-hashes/display" "snark-verifier-sdk/display" "dep:ark-std") ("aggregation" "snark-verifier/loader_halo2" "snark-verifier-sdk/loader_halo2" "providers" "dep:serde_with")))) (r "1.73.0")))

