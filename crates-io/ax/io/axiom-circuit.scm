(define-module (crates-io ax io axiom-circuit) #:use-module (crates-io))

(define-public crate-axiom-circuit-0.0.1 (c (n "axiom-circuit") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axiom-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "axiom-query") (r "^2.0.14") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (d #t) (k 0)))) (h "19lkiirx0lh4k56pwh3g9c2bklnbwz3l0bfy5521n2qgjym9wb9g") (y #t)))

(define-public crate-axiom-circuit-0.1.0 (c (n "axiom-circuit") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axiom-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "axiom-query") (r "^2.0.14") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (d #t) (k 0)))) (h "0cc6wyy7yqxk94qyk7vng18hyisplv78raw8am6zrp2vc440cx81")))

(define-public crate-axiom-circuit-0.1.1 (c (n "axiom-circuit") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axiom-codec") (r "^0.2.0") (d #t) (k 0)) (d (n "axiom-query") (r "^2.0.14") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (f (quote ("optimism"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (d #t) (k 0)))) (h "1qsmn2ax5818fnbipsnsr0wrq11rbrb9bai4m4cyv5kffyx8xblp")))

