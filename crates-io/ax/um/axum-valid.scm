(define-module (crates-io ax um axum-valid) #:use-module (crates-io))

(define-public crate-axum-valid-0.1.0 (c (n "axum-valid") (v "0.1.0") (d (list (d (n "axum") (r "^0.6.18") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "017g3wavgzsdgkgmclpsq1wirvf4nsga1fs90b1gf6y960zyfa9z") (y #t)))

(define-public crate-axum-valid-0.2.0 (c (n "axum-valid") (v "0.2.0") (d (list (d (n "axum") (r "^0.6.18") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "0rfwxfd5ayawx0s7q0yawqln4slnxfdxv1x4v4yk9s04xra5mrjb") (y #t)))

(define-public crate-axum-valid-0.2.1 (c (n "axum-valid") (v "0.2.1") (d (list (d (n "axum") (r "^0.6.18") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "09cv83yg5ra098pihfqw8w3a3pd7hkyr8m6i1vvz9y1i2212gqr4") (y #t)))

(define-public crate-axum-valid-0.2.2 (c (n "axum-valid") (v "0.2.2") (d (list (d (n "axum") (r "^0.6.18") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "135z5q3xz4j1k6fih1an02lwbi9khhbzz99p86imhckmy0wmflg9")))

(define-public crate-axum-valid-0.3.0 (c (n "axum-valid") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (k 2)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "0cq6mrb4fcyavhvh994p0qafj2n8yjw7a3vjz2mym3y7syxpbh61") (f (quote (("query" "axum/query") ("json" "axum/json") ("form" "axum/form") ("default" "json" "form" "query"))))))

(define-public crate-axum-valid-0.4.0 (c (n "axum-valid") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (k 2)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.103") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1wxaf6f36727vjy9hysx8wcvl2lx4dzy4pb6s6n2bza28la9476i") (f (quote (("query" "axum/query") ("json" "axum/json") ("into_json" "serde_json") ("form" "axum/form") ("default" "json" "form" "query") ("422")))) (y #t)))

(define-public crate-axum-valid-0.4.1 (c (n "axum-valid") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (k 2)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.103") (o #t) (d #t) (k 0) (p "serde_json")) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1xzn8zydcs0m05sfjy8114k90a4bm5py4sfkxkgcy767ma07cszg") (f (quote (("query" "axum/query") ("json" "axum/json") ("into_json" "serde_json") ("form" "axum/form") ("default" "json" "form" "query") ("422")))) (y #t)))

(define-public crate-axum-valid-0.4.2 (c (n "axum-valid") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (k 2)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "04sqb0irdsry10ndla7xmq5803prwaw4f619vq8lwj11kssinva6") (f (quote (("query" "axum/query") ("json" "axum/json") ("into_json" "json") ("form" "axum/form") ("default" "json" "form" "query") ("422"))))))

(define-public crate-axum-valid-0.5.0 (c (n "axum-valid") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (k 2)) (d (n "axum-extra") (r "^0.7.6") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.11.9") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "04w45npgv9fw87iprrxlrvzm27cf3kz0xldcz6c7q8xc9in7dhxy") (f (quote (("yaml" "axum-yaml") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.5.1 (c (n "axum-valid") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.19") (d #t) (k 2)) (d (n "axum-extra") (r "^0.7.6") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.11.9") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "05v5n3p765l7p3c43ngjkjps9hywfgqz6dc276ha1ribmqxlikk5") (f (quote (("yaml" "axum-yaml") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.6.0 (c (n "axum-valid") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.20") (d #t) (k 2)) (d (n "axum-extra") (r "^0.7.6") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.9.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.11.9") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1b4553yzlf64jvnf5f8hhb0599k3zfx2hb09l78a5x9m438y17hx") (f (quote (("yaml" "axum-yaml") ("typed_multipart" "axum_typed_multipart") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.7.0 (c (n "axum-valid") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.18") (k 0)) (d (n "axum") (r "^0.6.20") (d #t) (k 2)) (d (n "axum-extra") (r "^0.7.6") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.9.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.11.9") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1adhy5b84dp3awfiis9n0jrnas0hnl2yk3n6rgx3pdjvlw8km3l1") (f (quote (("yaml" "axum-yaml") ("typed_multipart" "axum_typed_multipart") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_typed_path" "axum-extra/typed-routing") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.8.0 (c (n "axum-valid") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (k 0)) (d (n "axum") (r "^0.6.20") (d #t) (k 2)) (d (n "axum-extra") (r "^0.8.0") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.9.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "13xrfqsgks343dgbj6sc3kymrwqa1f91skihhcxilw4m2lgxjzc7") (f (quote (("yaml" "axum-yaml") ("typed_multipart" "axum_typed_multipart") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_typed_path" "axum-extra/typed-routing") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.9.0 (c (n "axum-valid") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.8.0") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.10.0") (o #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1x02w9ngqvbikc0y85xshr4z192m8p4j69xqi4wi263jlbgyri0f") (f (quote (("yaml" "axum-yaml") ("typed_multipart" "axum_typed_multipart") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json") ("full" "all_types" "422" "into_json") ("form" "axum/form") ("extra_typed_path" "axum-extra/typed-routing") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422"))))))

(define-public crate-axum-valid-0.10.0 (c (n "axum-valid") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.8.0") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.10.0") (o #t) (k 0)) (d (n "garde") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "1xq68fk7lgrmqryq1pp4hd49z9cv46dyzw4xk1c68b8i2fmvkcax") (f (quote (("yaml" "axum-yaml") ("typed_multipart" "axum_typed_multipart") ("typed_header" "axum/headers") ("query" "axum/query") ("msgpack" "axum-msgpack") ("json" "axum/json") ("into_json" "json" "serde") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "validator" "all_types" "422" "into_json") ("form" "axum/form") ("extra_typed_path" "axum-extra/typed-routing") ("extra_query" "axum-extra/query") ("extra_protobuf" "axum-extra/protobuf") ("extra_form" "axum-extra/form") ("extra" "axum-extra") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("validator" "dep:validator") ("garde" "dep:garde"))))))

(define-public crate-axum-valid-0.10.1 (c (n "axum-valid") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.8.0") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.10.0") (o #t) (k 0)) (d (n "garde") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (f (quote ("derive"))) (d #t) (k 2)))) (h "0msaymsn6m891nag9bp3agjz5x1ds7pswh6fpi85jqgww9f45n2w") (f (quote (("typed_header" "axum/headers") ("query" "axum/query") ("json" "axum/json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "validator" "all_types" "422" "into_json") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-yaml") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("msgpack" "dep:axum-msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra"))))))

(define-public crate-axum-valid-0.11.0 (c (n "axum-valid") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (k 0)) (d (n "axum") (r "^0.6.20") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.8.0") (o #t) (k 0)) (d (n "axum-msgpack") (r "^0.3.0") (o #t) (k 0)) (d (n "axum-yaml") (r "^0.3.0") (o #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.10.0") (o #t) (k 0)) (d (n "garde") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.0.12") (o #t) (d #t) (k 0)))) (h "175lph8w2d8wiar4rsvi581swm5w613x61977ii1kx17ivw053ay") (f (quote (("typed_header" "axum/headers") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "typed_header" "typed_multipart" "msgpack" "yaml" "all_extra_types") ("all_extra_types" "extra" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-yaml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("msgpack" "dep:axum-msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra"))))))

(define-public crate-axum-valid-0.12.0-alpha (c (n "axum-valid") (v "0.12.0-alpha") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.7.1") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "garde") (r "^0.16.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 2)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.0.12") (o #t) (d #t) (k 0)))) (h "01dg9dgyzwdl97h9733h2b0591mqhz8an5mqjaly0vk713rcyvra") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "all_extra_types") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("validify" "dep:validify") ("validator" "dep:validator") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra"))))))

(define-public crate-axum-valid-0.12.0 (c (n "axum-valid") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.7.1") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.16.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.0.12") (o #t) (d #t) (k 0)))) (h "1mqvj77sffw5rvpydn2b1mk4c244jly59ly16cnna4vhv4zf9ppl") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra"))))))

(define-public crate-axum-valid-0.13.0 (c (n "axum-valid") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "axum") (r "^0.7.1") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.16.3") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.0.12") (o #t) (d #t) (k 0)))) (h "1hv1mv127gcw8n5acqx56bb139rhc4lp1wgkmmwl0i96104n29pn") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra"))))))

(define-public crate-axum-valid-0.14.0 (c (n "axum-valid") (v "0.14.0") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "0wil52v3h45023ls10wbdja3r9dskf5bqiijv9y9m68pi9r5b0gj") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("aide" "dep:aide"))))))

(define-public crate-axum-valid-0.15.0 (c (n "axum-valid") (v "0.15.0") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (f (quote ("serde" "derive"))) (d #t) (k 2)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "11zmiwv1nza1ix6bf7rz7akwdsafg5wk73bd7q24kf4yjf9wlanv") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("aide" "dep:aide"))))))

(define-public crate-axum-valid-0.15.1 (c (n "axum-valid") (v "0.15.1") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (f (quote ("serde" "derive"))) (d #t) (k 2)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "1q2ng5qabng6dvi6hya6kvrbx7126d43jhkf1gkcb1s4an4izmdv") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde" "garde?/serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("aide" "dep:aide"))))))

(define-public crate-axum-valid-0.16.0 (c (n "axum-valid") (v "0.16.0") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (f (quote ("serde" "derive"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.16.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "1p8ik6isns12nvan3b2py3d8zn5lcq9ll44g4wiinmpi78pnzrhq") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "sonic" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("sonic" "dep:axum-serde" "axum-serde/sonic") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde" "garde?/serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("aide" "dep:aide"))))))

(define-public crate-axum-valid-0.17.0 (c (n "axum-valid") (v "0.17.0") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (f (quote ("serde" "derive"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.17.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.3.0") (o #t) (d #t) (k 0)))) (h "1c64bi1z3fp9x1rsiapcfgii5rj975wg5wy0i77a6j70ddm5djg1") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "sonic" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("sonic" "dep:axum-serde" "axum-serde/sonic") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde" "garde?/serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("aide" "dep:aide"))))))

(define-public crate-axum-valid-0.18.0 (c (n "axum-valid") (v "0.18.0") (d (list (d (n "aide") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.7.3") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "axum-extra") (r "^0.9.0") (o #t) (k 0)) (d (n "axum-serde") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "axum_typed_multipart") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.2") (d #t) (k 2)) (d (n "garde") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "garde") (r "^0.18.0") (f (quote ("serde" "derive"))) (d #t) (k 2)) (d (n "mime") (r "^0.3.17") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.12.3") (f (quote ("json" "multipart"))) (d #t) (k 2)) (d (n "rmp-serde") (r "^1.1.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9.27") (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 2)) (d (n "validator") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "validator") (r "^0.18.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "validify") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "0lpy8ryylv31q7faw40wspxq7czxzhainwrxgj0a87mn08b6598j") (f (quote (("typed_header" "extra" "axum-extra/typed-header") ("query" "axum/query") ("json" "axum/json") ("full_validify" "validify" "all_types" "422" "into_json") ("full_validator" "validator" "all_types" "422" "into_json") ("full_garde" "garde" "all_types" "422" "into_json") ("full" "full_validator" "full_garde" "full_validify") ("form" "axum/form") ("extra_typed_path" "extra" "axum-extra/typed-routing") ("extra_query" "extra" "axum-extra/query") ("extra_protobuf" "extra" "axum-extra/protobuf") ("extra_form" "extra" "axum-extra/form") ("default" "basic" "validator") ("basic" "json" "form" "query") ("all_types" "json" "form" "query" "msgpack" "yaml" "xml" "toml" "sonic" "cbor" "all_extra_types" "typed_multipart") ("all_extra_types" "extra" "typed_header" "extra_typed_path" "extra_query" "extra_form" "extra_protobuf") ("422")))) (s 2) (e (quote (("yaml" "dep:axum-serde" "axum-serde/yaml") ("xml" "dep:axum-serde" "axum-serde/xml") ("validify" "dep:validify") ("validator" "dep:validator") ("typed_multipart" "dep:axum_typed_multipart") ("toml" "dep:axum-serde" "axum-serde/toml") ("sonic" "dep:axum-serde" "axum-serde/sonic") ("msgpack" "dep:axum-serde" "axum-serde/msgpack") ("into_json" "json" "dep:serde" "garde?/serde") ("garde" "dep:garde") ("extra" "dep:axum-extra") ("cbor" "dep:axum-serde" "axum-serde/cbor") ("aide" "dep:aide"))))))

