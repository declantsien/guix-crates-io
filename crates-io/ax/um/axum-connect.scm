(define-module (crates-io ax um axum-connect) #:use-module (crates-io))

(define-public crate-axum-connect-0.1.0 (c (n "axum-connect") (v "0.1.0") (d (list (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "protobuf") (r "^3.2.0") (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0rxv59bss4jydws01mz1j9jpqm6jhhwzz5f608xj12j3pc208hwr")))

(define-public crate-axum-connect-0.1.1 (c (n "axum-connect") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "protobuf") (r "^3.2.0") (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1vwshxzgw0r2m6zpl8nzclzfcf2mwwfnn9q6pxg39pa7vzkc2q7k")))

(define-public crate-axum-connect-0.1.2 (c (n "axum-connect") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "protobuf") (r "^3.2.0") (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1b8s7l860ydh6nxyph4pih9jpsq9if39rv1z566qn2hyyjcn3735")))

(define-public crate-axum-connect-0.1.3 (c (n "axum-connect") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "protobuf") (r "^3.2.0") (d #t) (k 0)) (d (n "protobuf-json-mapping") (r "^3.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0cy8r6dzhrzxhbqr3lgjhvn3iw14frzdzq27cy1ag9jy9cw9a2vg")))

(define-public crate-axum-connect-0.1.4 (c (n "axum-connect") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0q4mjwymgmh8vibrwarpkdqp70d0wxfm92bz1kzmah1rjsvg8pqd")))

(define-public crate-axum-connect-0.1.5 (c (n "axum-connect") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.5.1") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1mb20h9xlpbsszvdm4c7ma028aksp0mc064q1lwj1vn5d7g814lc")))

(define-public crate-axum-connect-0.1.6 (c (n "axum-connect") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.5.1") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.5.1") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1nyls2zy6yrndxs0w086zhmn6vyb4flkmjggq30lszs04xgs5qjl")))

(define-public crate-axum-connect-0.1.7 (c (n "axum-connect") (v "0.1.7") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.5.1") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.5.1") (d #t) (k 0)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1gy3w8xidh12w6ci1zfm47f3sjy2swa99yphikz55djccg3lw32g")))

(define-public crate-axum-connect-0.2.0 (c (n "axum-connect") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.6.9") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.6.0") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.6.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "17b6pxiszqa5nxjw3fngd5arn1pifj51fwacs5whbqfrmjah10sg")))

(define-public crate-axum-connect-0.3.0 (c (n "axum-connect") (v "0.3.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.6.0") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.6.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0zxn425kwxsaw9rk3wgz4rdh8h8hr3nyzzqqvl3hnjg4qn51mzhz")))

(define-public crate-axum-connect-0.3.1 (c (n "axum-connect") (v "0.3.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.6.0") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.6.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12.0") (d #t) (k 0)))) (h "10mdp6qj84rfb21z7dz0r930yg7qr8wam3crl1ll9qqrafd7176n")))

(define-public crate-axum-connect-0.3.2 (c (n "axum-connect") (v "0.3.2") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("multipart"))) (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "pbjson") (r "^0.6.0") (d #t) (k 0)) (d (n "pbjson-types") (r "^0.6.0") (d #t) (k 0)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.12.0") (d #t) (k 0)))) (h "01pmpy76y4fhr430xlz7y38kzr2666jp8s6b9n7l3v6l39xg9kgf")))

