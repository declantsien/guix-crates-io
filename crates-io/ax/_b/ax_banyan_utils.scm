(define-module (crates-io ax _b ax_banyan_utils) #:use-module (crates-io))

(define-public crate-ax_banyan_utils-0.11.1 (c (n "ax_banyan_utils") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "banyan") (r "^0.18.0") (d #t) (k 0) (p "ax_banyan")) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "cbor-data") (r "^0.8") (d #t) (k 0)) (d (n "chacha20") (r "^0.8.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.13.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.14.0") (d #t) (k 0)) (d (n "lru") (r "^0.7.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.16.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.8") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.5") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.9.2") (d #t) (k 0)))) (h "1rpz8wryd25ywadryn945kj5q1x45dqz040jjsb4svlmqys9c35v")))

