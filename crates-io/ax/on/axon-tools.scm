(define-module (crates-io ax on axon-tools) #:use-module (crates-io))

(define-public crate-axon-tools-0.0.1 (c (n "axon-tools") (v "0.0.1") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (k 0)))) (h "1lwkmmb4sj1bas8n8wg4x92z44ghy8nq9dwxanskd8kfryqcx5id") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default"))))))

(define-public crate-axon-tools-0.0.2 (c (n "axon-tools") (v "0.0.2") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (k 0)))) (h "1zssykxyk31f7bqclxapj2srnlllq7rryi0hfgqwnw2ip2xljds3") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default"))))))

(define-public crate-axon-tools-0.0.3 (c (n "axon-tools") (v "0.0.3") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (k 0)))) (h "02959qilm0g6d2m0p0wl48bi4rg843xyxzx03rc2abk3jdxhybh3") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default"))))))

(define-public crate-axon-tools-0.0.4 (c (n "axon-tools") (v "0.0.4") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "keccak-hasher") (r "^0.16") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "trie-db") (r "^0.27") (o #t) (k 0)))) (h "1r675zpaa5f9h1nakisy4nrcczqdcjayi74k3h1g67vkh4gbnw9l") (f (quote (("trie" "hash" "memory-db" "trie-db") ("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "keccak-hasher") ("default"))))))

(define-public crate-axon-tools-0.0.5 (c (n "axon-tools") (v "0.0.5") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "keccak-hasher") (r "^0.16") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "trie-db") (r "^0.27") (o #t) (k 0)))) (h "168rmna2491390p810680dhpmjh61jxsb4ig4dkfib84p8akzhq8") (f (quote (("trie" "hash" "memory-db" "trie-db") ("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "keccak-hasher") ("default"))))))

(define-public crate-axon-tools-0.0.6 (c (n "axon-tools") (v "0.0.6") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "keccak-hasher") (r "^0.16") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "trie-db") (r "^0.27") (o #t) (k 0)))) (h "0ixy1yym3r6qawap3jspp1pys6wl1psvpd4vwb6agz7sksv408mf") (f (quote (("trie" "hash" "memory-db" "trie-db") ("proof" "blst" "bit-vec" "hash" "impl-rlp") ("metadata" "hash") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "keccak-hasher") ("default"))))))

(define-public crate-axon-tools-0.0.7 (c (n "axon-tools") (v "0.0.7") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "keccak-hasher") (r "^0.16") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "trie-db") (r "^0.27") (o #t) (k 0)))) (h "08nk9mj8kdik8vqyjls41qqiwkb41jlci4q41nhlvpkmpi4i8js2") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("metadata" "hash") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "keccak-hasher") ("default") ("abi" "metadata" "ethers"))))))

(define-public crate-axon-tools-0.0.8 (c (n "axon-tools") (v "0.0.8") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "0z5f52smg5dqrsvc69svvbx983vqd0q1yk3n1f8350idbs4min7l") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("metadata" "hash") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default") ("abi" "metadata" "ethers"))))))

(define-public crate-axon-tools-0.0.9 (c (n "axon-tools") (v "0.0.9") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "1b9jl6n13b7878jy1ybqc9mia2kym4m7snnwh8jkcvh9rz4mi7ci") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("metadata" "hash") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default") ("abi" "metadata" "ethers"))))))

(define-public crate-axon-tools-0.0.10 (c (n "axon-tools") (v "0.0.10") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "0w6cv0dcd3a3l29jvd5bmwlbnplh2pg3dpr3awp5b2als50b4hs7") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("metadata" "hash") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default") ("ckb-light-client" "ethers") ("abi" "metadata" "ethers"))))))

(define-public crate-axon-tools-0.0.11 (c (n "axon-tools") (v "0.0.11") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0) (p "ckb-blst")) (d (n "bytes") (r "^1.4") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (k 0)) (d (n "memory-db") (r "^0.32") (o #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "1fvxdigxmxns5z0dkjdxc9kpkmyqzj2q7xb821xflpaa634qjw05") (f (quote (("std" "abi") ("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default") ("abi" "ethers"))))))

(define-public crate-axon-tools-0.0.12 (c (n "axon-tools") (v "0.0.12") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.100") (o #t) (d #t) (k 0) (p "ckb-blst")) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "07ww652i8xvs95mc6ikbrzzx6hrqfjpzwwkg4bxz3r3kk8cw4hrb") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hash" "tiny-keccak") ("default"))))))

(define-public crate-axon-tools-0.1.0 (c (n "axon-tools") (v "0.1.0") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (k 0)) (d (n "cita_trie") (r "^4.0") (d #t) (k 2)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "faster-hex") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "0gknqk2j6h9734w69hnl5s57kc3w5fbygjc2j65kvwsa6wrk2z0b") (f (quote (("proof" "blst" "bit-vec" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize" "hex") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hex" "faster-hex") ("hash" "tiny-keccak") ("default"))))))

(define-public crate-axon-tools-0.1.1 (c (n "axon-tools") (v "0.1.1") (d (list (d (n "bit-vec") (r "^0.6") (o #t) (k 0)) (d (n "blst") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (k 0)) (d (n "cita_trie") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "ethereum") (r "^0.14") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("serialize"))) (k 0)) (d (n "faster-hex") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "overlord") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (o #t) (d #t) (k 0)))) (h "0gqdxxw3s9mnmrmsngpvmmw50g72nd7i4ramx2jyy3kci1vg2p4l") (f (quote (("proof" "blst" "bit-vec" "cita_trie" "hash" "impl-rlp") ("impl-serde" "serde" "ethereum-types/serialize" "hex") ("impl-rlp" "rlp" "rlp-derive" "ethereum-types/rlp") ("hex" "faster-hex") ("hash" "tiny-keccak") ("default"))))))

