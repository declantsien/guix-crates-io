(define-module (crates-io si nd sindit-senml) #:use-module (crates-io))

(define-public crate-sindit-senml-0.1.0 (c (n "sindit-senml") (v "0.1.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "struson") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1qy7dfmwmjn6srzqj79j85jvr0jr3jvclymrzmlwg2323qab96jj") (f (quote (("stream"))))))

(define-public crate-sindit-senml-0.2.0 (c (n "sindit-senml") (v "0.2.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "struson") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gygpvc0vd80hymgr967xxrfd4qch5gnbj0cv9p0vx66n7d7mz9n") (f (quote (("stream") ("float_roundtrip" "serde_json/float_roundtrip") ("default" "float_roundtrip"))))))

