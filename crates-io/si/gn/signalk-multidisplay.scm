(define-module (crates-io si gn signalk-multidisplay) #:use-module (crates-io))

(define-public crate-signalk-multidisplay-0.1.0 (c (n "signalk-multidisplay") (v "0.1.0") (d (list (d (n "eframe") (r "^0.22") (f (quote ("accesskit" "default_fonts" "glow" "persistence"))) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ewebsock") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signalk") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03cx9jghx7ml61g97pa77di4s71wbyn3m5dk47lfxy1b18892yhd") (r "1.65")))

(define-public crate-signalk-multidisplay-0.1.1 (c (n "signalk-multidisplay") (v "0.1.1") (d (list (d (n "eframe") (r "^0.22") (f (quote ("accesskit" "default_fonts" "glow" "persistence"))) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ewebsock") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signalk") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0gpr56abx5lkkwskssw09jb4mrk4ky8n8ly0xnpia7kzhg0z1qx2") (r "1.65")))

(define-public crate-signalk-multidisplay-0.1.2 (c (n "signalk-multidisplay") (v "0.1.2") (d (list (d (n "eframe") (r "^0.22") (f (quote ("default_fonts" "glow" "persistence"))) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ewebsock") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signalk") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "18h40cyja3ms6x6cqiy4cdqybqabf5g5kn20a2mivzzjyclhgcv7") (r "1.65")))

(define-public crate-signalk-multidisplay-0.1.3 (c (n "signalk-multidisplay") (v "0.1.3") (d (list (d (n "eframe") (r "^0.22") (f (quote ("default_fonts" "glow" "persistence"))) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ewebsock") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signalk") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04xn66fx665yradq3b3zq9x8z3zyqwyg67bmx4cfnw01vkf8i1gm") (r "1.65")))

(define-public crate-signalk-multidisplay-0.1.4 (c (n "signalk-multidisplay") (v "0.1.4") (d (list (d (n "eframe") (r "^0.22") (f (quote ("default_fonts" "glow" "persistence"))) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "ehttp") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ewebsock") (r "^0.2") (f (quote ("tls"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "signalk") (r "^0.3.2") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0a9sc3p0p3hrb8wk63d4n9hzggcg5lx7n8jd775748s1bi2qvqvd") (r "1.65")))

