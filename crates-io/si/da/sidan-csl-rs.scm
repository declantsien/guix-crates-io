(define-module (crates-io si da sidan-csl-rs) #:use-module (crates-io))

(define-public crate-sidan-csl-rs-0.1.0 (c (n "sidan-csl-rs") (v "0.1.0") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0id00wckaqkvnghxqsi00mw050ciggsq1l4lp62kagn71zr2dfl4")))

(define-public crate-sidan-csl-rs-0.1.1 (c (n "sidan-csl-rs") (v "0.1.1") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ppd1lh0g3n4czyykyldg1pz4plzf047m4s91jph9yalk1yiv7p9")))

(define-public crate-sidan-csl-rs-0.1.2 (c (n "sidan-csl-rs") (v "0.1.2") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0wz2grsk42p7x3akfpzz60swajshrcbd9p1xzrx1xf2vd9vgwp5f")))

(define-public crate-sidan-csl-rs-0.1.3 (c (n "sidan-csl-rs") (v "0.1.3") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0hbnkb2infxxn5brm56m2wkcflinaixn2xrdg6f112185jsimy80")))

(define-public crate-sidan-csl-rs-0.1.4 (c (n "sidan-csl-rs") (v "0.1.4") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1nrwpgjrlwaj3pwncflqwghic1qalh1wrqj3v3inj4llpcmfn3i2")))

(define-public crate-sidan-csl-rs-0.1.5 (c (n "sidan-csl-rs") (v "0.1.5") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "174bqycwg71cpkh46m52jhjaqyvk7llfg82g01i2p5g1g0pjjd14")))

(define-public crate-sidan-csl-rs-0.1.6 (c (n "sidan-csl-rs") (v "0.1.6") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1q3i0gm4yr3gx3igicn0rq6dp07b525s17lpwqj1vgfx3b6ffngm")))

(define-public crate-sidan-csl-rs-0.1.7 (c (n "sidan-csl-rs") (v "0.1.7") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "11fndq9bb3inh84ddl2pmc4c9b46pk0xqq0xryncmdyf298i2xqj")))

(define-public crate-sidan-csl-rs-0.1.8 (c (n "sidan-csl-rs") (v "0.1.8") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1jd7pn49rk0bszcmj7n0gya30hx1qmff5y6x52k0ps43f30nl6ss")))

(define-public crate-sidan-csl-rs-0.1.9 (c (n "sidan-csl-rs") (v "0.1.9") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1i10qjzvmgbbps4szwicnlzj66l9f7k0dgrp3xqjl273gw63giqx")))

(define-public crate-sidan-csl-rs-0.1.10 (c (n "sidan-csl-rs") (v "0.1.10") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1kw94pp9r602q0x7235r0jx6jg8i46ywg96vlmi0fli2bdc7bid7")))

(define-public crate-sidan-csl-rs-0.1.11 (c (n "sidan-csl-rs") (v "0.1.11") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1lpdis6wfl0xrcs3q5zv71b5pd3cm7hdh4sxl3grlmvahq8ih0v5")))

(define-public crate-sidan-csl-rs-0.1.12 (c (n "sidan-csl-rs") (v "0.1.12") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1k722f9p8zydf6n3xqzqm47f6naf6890psq1025p827kgh5l3rq4")))

(define-public crate-sidan-csl-rs-0.2.0 (c (n "sidan-csl-rs") (v "0.2.0") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0xxszjb59bv65bjhrgyh7n3cnhs9xfqzyfi44907q02cqmwfhyc1")))

(define-public crate-sidan-csl-rs-0.2.1 (c (n "sidan-csl-rs") (v "0.2.1") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0122gyxc810s9shvkdgdf0zcz12igifgprqm7bs5z363z7fz4qkg")))

(define-public crate-sidan-csl-rs-0.2.2 (c (n "sidan-csl-rs") (v "0.2.2") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0bh90d7gggp57df84hcqdfwnvqb5206l5xmwx5nwvkiwai44y88n")))

(define-public crate-sidan-csl-rs-0.2.3 (c (n "sidan-csl-rs") (v "0.2.3") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0kcippxjpz88zax737qi6c4jzsl2gfwhpgbanm0z3yl33a9afpls")))

(define-public crate-sidan-csl-rs-0.2.4 (c (n "sidan-csl-rs") (v "0.2.4") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0jgyvkk8bgip4mm2220yjz8x22ias40pikga6l9lv3bfm5nlnasl")))

(define-public crate-sidan-csl-rs-0.2.6-beta1 (c (n "sidan-csl-rs") (v "0.2.6-beta1") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "11xvc8ph7461wa8d8hqfdykcczwqkxvcnhq6kmp4m7p2f52f2kfj")))

(define-public crate-sidan-csl-rs-0.2.6-beta2 (c (n "sidan-csl-rs") (v "0.2.6-beta2") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0c9gawgla7va50gh5hdvf6s1nsv27z79xv4m4vn4b7rjn5hzihwb")))

(define-public crate-sidan-csl-rs-0.2.6-beta4 (c (n "sidan-csl-rs") (v "0.2.6-beta4") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0aary211pplqvwgxsqx56ksgvc1sxp1n1x1q3c86drr7zf06ch5w")))

(define-public crate-sidan-csl-rs-0.2.6-beta5 (c (n "sidan-csl-rs") (v "0.2.6-beta5") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0z07vxdjpy05nahxd4sznfzxn9dcm7wwj56jhz0yij0n47hhvdds")))

(define-public crate-sidan-csl-rs-0.2.6-beta6 (c (n "sidan-csl-rs") (v "0.2.6-beta6") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0hbyarvify8qdvclrm32zafdvsimkliin8g2ri1y4a1zk28q8nsh")))

(define-public crate-sidan-csl-rs-0.2.6-beta7.rc1 (c (n "sidan-csl-rs") (v "0.2.6-beta7.rc1") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0m1sxbcvfpzsqx6bddd82v85g9cjx8332kmvidj0cyb414ix45b6")))

(define-public crate-sidan-csl-rs-0.2.6-beta7.rc2 (c (n "sidan-csl-rs") (v "0.2.6-beta7.rc2") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ascl2ndksga0ih9286ww2i3qifnjvrvvkz0dxhsvc04kxz60mkf")))

(define-public crate-sidan-csl-rs-0.2.6-beta7.rc3 (c (n "sidan-csl-rs") (v "0.2.6-beta7.rc3") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0k56bkwc2yk8abfvxxgr56k3i82mgqj6jvxixn99nylyy3xv1lhl")))

(define-public crate-sidan-csl-rs-0.2.6-beta7.rc4 (c (n "sidan-csl-rs") (v "0.2.6-beta7.rc4") (d (list (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "12cy594i6bxm4s9wn4ba9rln8kf1v0aw4sgsfzzr1fw7pqwfg3mm")))

(define-public crate-sidan-csl-rs-0.3.0 (c (n "sidan-csl-rs") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1nk52vs80rmjj7wwxay8bzpd87ick0sa491qsicll27zx2blf2ya")))

(define-public crate-sidan-csl-rs-0.3.1 (c (n "sidan-csl-rs") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0470kj96bb588plnwb6xlal21vmcs1vnasw0v2z6saq57byh9gbv")))

(define-public crate-sidan-csl-rs-0.3.2 (c (n "sidan-csl-rs") (v "0.3.2") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0scax7330wbx20ab5nmmbwikvh1zbyqd519wc7i3jagkyxj2drka")))

(define-public crate-sidan-csl-rs-0.3.3 (c (n "sidan-csl-rs") (v "0.3.3") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1v9ibhpf9x7a6vqbgpw9gdgw21drdypbxhwfw4s1dm3m78dkfyxw")))

(define-public crate-sidan-csl-rs-0.3.4 (c (n "sidan-csl-rs") (v "0.3.4") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "031b68vm72182xp1rabjv46ym965cvk5178rgwjyr9060fss5a3j")))

(define-public crate-sidan-csl-rs-0.3.5 (c (n "sidan-csl-rs") (v "0.3.5") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1cd9wl7id0dr4crrc8bi6filb1ryhl5zxajikmqzfjapbsavzzmx")))

(define-public crate-sidan-csl-rs-0.3.5-beta1 (c (n "sidan-csl-rs") (v "0.3.5-beta1") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1y09m5imjq6wyqysqzphps30p1d7m70713pfj4fywqjj113d2i2g")))

(define-public crate-sidan-csl-rs-0.3.6 (c (n "sidan-csl-rs") (v "0.3.6") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "012v53n7pb6cxsils1l4mj21pnkwvfrn3cnb0giavspapvgqi08i")))

(define-public crate-sidan-csl-rs-0.3.7 (c (n "sidan-csl-rs") (v "0.3.7") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1m0akxc0219zjnzqvn3dmqhksdi5mhvbl1gcffpps47aj74bn1aq")))

(define-public crate-sidan-csl-rs-0.3.8 (c (n "sidan-csl-rs") (v "0.3.8") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "14fxj1a7nx2f31wn72hjb8n2kygw6rcswvm8jkyp9w1fxp84lplr")))

(define-public crate-sidan-csl-rs-0.3.9 (c (n "sidan-csl-rs") (v "0.3.9") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "03ap0pb50yik472pmd07v0s3vd0b11vi446g389rcvmrq3d3n3jk")))

(define-public crate-sidan-csl-rs-0.3.10 (c (n "sidan-csl-rs") (v "0.3.10") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1macfgzad5hcl6pf8a7pn417m64mw5arabn3sx1ybclfpzqhcrvm")))

(define-public crate-sidan-csl-rs-0.3.11 (c (n "sidan-csl-rs") (v "0.3.11") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1jrd10njr0h1a769x5kqpms0d6v2pgahnxpn9s2fvrhg7xfvqrw6")))

(define-public crate-sidan-csl-rs-0.3.12 (c (n "sidan-csl-rs") (v "0.3.12") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^11.5.0") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0m0bzs7020z3f6d4s16gsj2jai18jkcapk870ii306a0i96pj35q")))

(define-public crate-sidan-csl-rs-0.4.0 (c (n "sidan-csl-rs") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1v5h02k5fa275fbslxs799f87mr58hpzy79abcvqp9hzdcb7sbyx")))

(define-public crate-sidan-csl-rs-0.4.1 (c (n "sidan-csl-rs") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "=1.0.26-alpha") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1sbbz2wxc0da1476ndkidkr5vw5vzzpr1f4bnj90sxj6lmdv5jcz")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.1 (c (n "sidan-csl-rs") (v "0.5.0-alpha.1") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0g02qrgdm2ni5a90j3v0z3hf87iricyjc9g5pmqhph0rrjfnc3qj")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.2 (c (n "sidan-csl-rs") (v "0.5.0-alpha.2") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1z739ci3flqlxz2q6rd3bqrz3wk64sdw2hyk65m6mdv7k9abmfgk")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.3 (c (n "sidan-csl-rs") (v "0.5.0-alpha.3") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ccblnvssymd92aca87dapmp2jwc6b5yb3xxqw9r37li7cbivc3l")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.5 (c (n "sidan-csl-rs") (v "0.5.0-alpha.5") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0hrp5xz1q173l0kj8n4vmnmadv9h23wnchmh7kml8i1w8j4zwx38")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.6 (c (n "sidan-csl-rs") (v "0.5.0-alpha.6") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1fhzn8ip2nd50gcjivnfivkxlr8iqvh0giky2paiz2i34h2ybxpg")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.7 (c (n "sidan-csl-rs") (v "0.5.0-alpha.7") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ykph38zl3zgpvh9s0pm8wz0afy2dd7z9i339dcz07s9nq3yip1j")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.8 (c (n "sidan-csl-rs") (v "0.5.0-alpha.8") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "191m1h4x76pz0hs2y3wck516jxzbhxrdgp434d0hp9cjk7vq0pgi")))

(define-public crate-sidan-csl-rs-0.5.0-alpha.9 (c (n "sidan-csl-rs") (v "0.5.0-alpha.9") (d (list (d (n "cardano-serialization-lib") (r "^12.0.0-alpha.30") (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.4") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.61") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-codec") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-primitives") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "pallas-traverse") (r "^0.22.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "uplc") (r "^0.0.29") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (f (quote ("serde-serialize"))) (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.34") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "00k0m154dhpd4057nxkhngcki6416wj30ashfc5kjmvpx0qlj4bm")))

