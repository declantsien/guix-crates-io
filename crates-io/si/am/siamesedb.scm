(define-module (crates-io si am siamesedb) #:use-module (crates-io))

(define-public crate-siamesedb-0.1.1 (c (n "siamesedb") (v "0.1.1") (h "1ysv9gqjc2aipzb6zcmh8d2wb4zr2yqp5vcqpvyk6bpwi92zhbm4") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("default" "vf_vu64") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.2 (c (n "siamesedb") (v "0.1.2") (h "1avzf6j6wg8cag449fisqsg3ygi28r2igvd1rg38znq1ywsikk5l") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.3 (c (n "siamesedb") (v "0.1.3") (h "0g4s0wgzpql0zblw8zgh6hwz1q6568yd18c4hbjkvqhqzwmnciaq") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.4 (c (n "siamesedb") (v "0.1.4") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1j2jdkgqhy2y1y2s527a6nwb85i3dwv7hz279v5xiwdb3siggm9k") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.5 (c (n "siamesedb") (v "0.1.5") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1dr2hqm2231awhwqp40qyf2bsidgcx4i3w922cmbzimk68szs9vd") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.6 (c (n "siamesedb") (v "0.1.6") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1c0896gbs5rd1vjz94s0bbc5cam77iv26hygpgysgn4a059q49pm") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.7 (c (n "siamesedb") (v "0.1.7") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1pq3hirxjfk3827rkmj2bnbvb4r21zbca1xdrmqkhfidvwi1jid5") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats") ("buf_lru"))))))

(define-public crate-siamesedb-0.1.8 (c (n "siamesedb") (v "0.1.8") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1lsxc6i3zvs8f8r2a6f0k9mrghi5wigjwixm2fpndgna4yi2lwn7") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("node_cache") ("default" "vf_vu64" "node_cache") ("buf_stats" "rabuf/buf_stats") ("buf_lru" "rabuf/buf_lru"))))))

(define-public crate-siamesedb-0.1.9 (c (n "siamesedb") (v "0.1.9") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1csgmb4v3rh1afcg1x5ji79af0b7lwf3x4y6jy3aj0zhgxcp97x4") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("record_cache") ("node_cache") ("key_cache") ("default" "vf_vu64" "key_cache" "node_cache" "record_cache") ("buf_stats" "rabuf/buf_stats") ("buf_lru" "rabuf/buf_lru"))))))

(define-public crate-siamesedb-0.1.10 (c (n "siamesedb") (v "0.1.10") (d (list (d (n "rabuf") (r "^0.1") (d #t) (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0r21xzljrvjfm4yibhjr4s7dglyimyg0vkxbbg6zr2hj4h7i0684") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("small_node_slots") ("record_cache") ("node_cache") ("nc_lru") ("key_cache") ("kc_lru") ("kc_lfu") ("default" "vf_vu64" "key_cache" "node_cache" "record_cache" "buf_overf_rem_all") ("buf_stats" "rabuf/buf_stats") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru"))))))

(define-public crate-siamesedb-0.1.11 (c (n "siamesedb") (v "0.1.11") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0a4b3888crqv6z7jr3x4fdv9iha8vgz00knpvjw855yn94i86j69") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("small_node_slots") ("record_cache") ("offidx_btreemap") ("node_cache") ("nc_lru") ("nc_lfu") ("key_cache") ("kc_lru") ("kc_lfu") ("kc_hash") ("default" "vf_vu64" "key_cache" "node_cache" "buf_overf_rem_all" "buf_auto_buf_size" "buf_pin_zero") ("buf_stats" "rabuf/buf_stats") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_idx_btreemap" "rabuf/buf_idx_btreemap") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.12 (c (n "siamesedb") (v "0.1.12") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0gmr8rpp5vvqkspvd9ndccpc5bs4favg1lvdd7bch9v9n2jkmm2z") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("small_node_slots") ("record_cache") ("offidx_btreemap") ("node_dm32") ("node_cache") ("nc_lru") ("nc_lfu") ("key_cache") ("kc_lru") ("kc_lfu") ("kc_hash") ("default" "vf_vu64" "key_cache" "node_cache" "buf_overf_rem_all" "buf_auto_buf_size" "buf_pin_zero") ("buf_stats" "rabuf/buf_stats") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_idx_btreemap" "rabuf/buf_idx_btreemap") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.13 (c (n "siamesedb") (v "0.1.13") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0di1b0m10hvzvga9hiijs2c2dkcsrj2jl73lrgdbj6j5s6yka74i") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("small_node_slots") ("record_cache") ("node_cache") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("key_cache") ("kc_print_hits") ("kc_lru") ("kc_lfu") ("default" "vf_vu64" "key_cache" "node_cache" "buf_default") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.14 (c (n "siamesedb") (v "0.1.14") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "17079yl9hld1r1h0bvrwcjs0sbfs5y0iaqd7c4m8b68wbg5qry7x") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("test_large_data") ("small_node_slots") ("record_cache") ("node_cache") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("key_cache") ("kc_print_hits") ("kc_lru") ("kc_lfu") ("default" "vf_vu64" "key_cache" "node_cache" "buf_default") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.15 (c (n "siamesedb") (v "0.1.15") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1www8mvyp3kwixbrfr5my9rg9ssdv6x2nk4g9kv6g0l2ra4z7n1c") (f (quote (("vf_vu64" "vf_node_u64") ("vf_u64u64" "vf_node_u64") ("vf_u32u32" "vf_node_u32") ("vf_node_u64") ("vf_node_u32") ("test_large_data") ("small_node_slots") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("node_cache") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("htx_print_hits") ("htx") ("default" "vf_vu64" "node_cache" "buf_default" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.16 (c (n "siamesedb") (v "0.1.16") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0qhq26p9a6i961znj7yvczqpi8d8p3a9a4xzs2ss13yrp34hywcp") (f (quote (("vf_vu64" "vf_node_u64") ("vf_u64u64" "vf_node_u64") ("vf_u32u32" "vf_node_u32") ("vf_node_u64") ("vf_node_u32") ("tr_dirty") ("test_large_data") ("small_node_slots") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("myhasher") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_vu64" "node_cache" "buf_default" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.17 (c (n "siamesedb") (v "0.1.17") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "0cjdb9yn60lk2wif0a7yix5ipqydqrh026jazgz4wirfhraz0sd6") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("vf_node_u64") ("vf_node_u32") ("tr_has_short_key") ("test_large_data") ("small_node_slots") ("siamese_debug") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("nc_large") ("myhasher") ("idx_straight") ("idx_find_uu") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_u64u64" "node_cache" "buf_default" "vf_node_u64" "idx_straight" "idx_find_uu" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_debug" "rabuf/buf_debug") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.18 (c (n "siamesedb") (v "0.1.18") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1wihymw242h3vl4zpbfwq2pla7pypwpa06vaj88n4ziwick2k5mb") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("vf_node_u64") ("vf_node_u32") ("tr_has_short_key") ("test_large_data") ("small_node_slots") ("siamese_debug") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("nc_large") ("myhasher") ("idx_straight") ("idx_find_uu") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_u64u64" "node_cache" "buf_default" "vf_node_u64" "idx_straight" "idx_find_uu" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_debug" "rabuf/buf_debug") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.19 (c (n "siamesedb") (v "0.1.19") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1jgycjb2fr79870bcjm2hc8k896ac9jhx4i6va0hrbncqlq5vf64") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("vf_node_u64") ("vf_node_u32") ("tr_has_short_key") ("test_large_data") ("small_node_slots") ("siamese_debug") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("nc_large") ("myhasher") ("idx_straight") ("idx_find_uu") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_u64u64" "node_cache" "buf_default" "vf_node_u64" "idx_straight" "idx_find_uu" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_debug" "rabuf/buf_debug") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size"))))))

(define-public crate-siamesedb-0.1.20 (c (n "siamesedb") (v "0.1.20") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "1kah4xpj3lg93xgwnzf5w0wnmyqhhg56l2kr2b38gnhlb8gjcpf7") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("vf_node_u64") ("vf_node_u32") ("tr_has_short_key") ("test_large_data") ("small_node_slots") ("siamese_debug") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("nc_large") ("myhasher") ("idx_straight") ("idx_find_uu") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_u64u64" "node_cache" "buf_default" "vf_node_u64" "idx_straight" "idx_find_uu" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_debug" "rabuf/buf_debug") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size")))) (r "1.56.0")))

(define-public crate-siamesedb-0.1.21 (c (n "siamesedb") (v "0.1.21") (d (list (d (n "rabuf") (r "^0.1") (k 0)) (d (n "vu64") (r "^0.1") (d #t) (k 0)))) (h "00jpvb2n3bkq25f7bckkb4mvavk3ifkjyjrxhapjabdznrj3c352") (f (quote (("vf_vu64") ("vf_u64u64") ("vf_u32u32") ("vf_node_u64") ("vf_node_u32") ("tr_has_short_key") ("test_large_data") ("small_node_slots") ("siamese_debug") ("print_hits" "nc_print_hits" "htx_print_hits" "buf_print_hits") ("oi_myhash") ("oi_hash_turbo" "oi_myhash") ("node_cache" "oi_hash_turbo") ("nc_print_hits") ("nc_lru") ("nc_lfu") ("nc_large") ("myhasher") ("idx_straight") ("idx_find_uu") ("htx_print_hits") ("htx" "myhasher") ("default" "vf_u64u64" "node_cache" "buf_default" "vf_node_u64" "idx_straight" "idx_find_uu" "htx") ("buf_stats" "rabuf/buf_stats") ("buf_print_hits" "rabuf/buf_print_hits") ("buf_pin_zero" "rabuf/buf_pin_zero") ("buf_overf_rem_half" "rabuf/buf_overf_rem_half") ("buf_overf_rem_all" "rabuf/buf_overf_rem_all") ("buf_lru" "rabuf/buf_lru") ("buf_hash_turbo" "rabuf/buf_hash_turbo") ("buf_default" "buf_auto_buf_size" "buf_overf_rem_all" "buf_pin_zero" "buf_hash_turbo") ("buf_debug" "rabuf/buf_debug") ("buf_auto_buf_size" "rabuf/buf_auto_buf_size")))) (r "1.58.0")))

