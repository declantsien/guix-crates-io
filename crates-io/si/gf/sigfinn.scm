(define-module (crates-io si gf sigfinn) #:use-module (crates-io))

(define-public crate-sigfinn-0.1.0 (c (n "sigfinn") (v "0.1.0") (d (list (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("std" "futures"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "signal" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "00kmj7rdjxf3325vm1bbaqaya4w4ds26r6ldja4x7g6ipizq5ibh")))

(define-public crate-sigfinn-0.1.1 (c (n "sigfinn") (v "0.1.1") (d (list (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("std" "futures"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "signal" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1k7v99jmkzv8jarlkq8cbmfdymnkyd96nialqrrn9mmgilkw7k0r")))

(define-public crate-sigfinn-0.2.0 (c (n "sigfinn") (v "0.2.0") (d (list (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("std" "futures"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "signal" "sync" "time"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0r5lk4jy857hq282k2lq3c8b8parvssbr2z9575a7lxgwp9dhmjb")))

