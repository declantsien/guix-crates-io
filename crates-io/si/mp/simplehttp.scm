(define-module (crates-io si mp simplehttp) #:use-module (crates-io))

(define-public crate-simplehttp-0.0.1 (c (n "simplehttp") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.41.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.46.0") (f (quote ("experimental"))) (o #t) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "spin-sdk") (r "^0.0.0") (o #t) (d #t) (k 0)))) (h "1rzh9f2gnw2k1ylw4573sdq6441r38sq1kkw9iyaadjwaxq84zmi") (s 2) (e (quote (("spin" "dep:anyhow" "dep:bytes" "dep:http" "dep:spin-sdk") ("reqwest" "dep:reqwest") ("esp32" "dep:esp-idf-svc" "dep:esp-idf-hal" "dep:esp-idf-sys" "dep:embedded-svc" "dep:embedded-hal"))))))

(define-public crate-simplehttp-0.0.3 (c (n "simplehttp") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.41.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.46.0") (f (quote ("experimental"))) (o #t) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "spin-sdk") (r "^0.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "0mjv00a0h2ba94cccmnv54hx3vjpbv82s34j0yjmpwb524q0kk9g") (s 2) (e (quote (("spin" "dep:anyhow" "dep:bytes" "dep:http" "dep:spin-sdk") ("reqwest" "dep:reqwest") ("esp32" "dep:esp-idf-svc" "dep:esp-idf-hal" "dep:esp-idf-sys" "dep:embedded-svc" "dep:embedded-hal"))))))

(define-public crate-simplehttp-0.0.4 (c (n "simplehttp") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.41.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.46.0") (f (quote ("experimental"))) (o #t) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "spin-sdk") (r "^0.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "01wpwmgz5kp42cpcsk0z4zlj5irf6vp5j53bghqm30k8qlpjx64q") (s 2) (e (quote (("spin" "dep:anyhow" "dep:bytes" "dep:http" "dep:spin-sdk") ("reqwest" "dep:reqwest") ("esp32" "dep:esp-idf-svc" "dep:esp-idf-hal" "dep:esp-idf-sys" "dep:embedded-svc" "dep:embedded-hal"))))))

(define-public crate-simplehttp-0.0.5 (c (n "simplehttp") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-alpha.10") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.41.1") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.46.0") (f (quote ("experimental"))) (o #t) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33.1") (o #t) (d #t) (k 0)) (d (n "fastly") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "spin-sdk") (r "^0.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "19j1csd91ylf496p0vxhqg4wdzjph7b2pczhim92p2nk6zqr1bls") (s 2) (e (quote (("spin" "dep:anyhow" "dep:bytes" "dep:http" "dep:spin-sdk") ("reqwest" "dep:reqwest") ("fastly" "dep:fastly") ("esp32" "dep:esp-idf-svc" "dep:esp-idf-hal" "dep:esp-idf-sys" "dep:embedded-svc" "dep:embedded-hal"))))))

(define-public crate-simplehttp-0.0.6 (c (n "simplehttp") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26.4") (o #t) (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.42.5") (o #t) (d #t) (k 0)) (d (n "esp-idf-svc") (r "^0.47.3") (f (quote ("experimental"))) (o #t) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33.7") (o #t) (d #t) (k 0)) (d (n "fastly") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "spin-sdk") (r "^0.0.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "0gx2df0lnd3z1f7i56xf9z3l3dwfpnplwh0pmxmgfj1i7m11z7f9") (s 2) (e (quote (("spin" "dep:anyhow" "dep:bytes" "dep:http" "dep:spin-sdk") ("reqwest" "dep:reqwest") ("fastly" "dep:fastly") ("esp32" "dep:esp-idf-svc" "dep:esp-idf-hal" "dep:esp-idf-sys" "dep:embedded-svc" "dep:embedded-hal"))))))

