(define-module (crates-io si mp simperby-core) #:use-module (crates-io))

(define-public crate-simperby-core-0.1.0 (c (n "simperby-core") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("recovery" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1s8497f2z4sd0xfqrgvky58siw69r8gy51q430xsp3ws4n781p36") (f (quote (("full"))))))

(define-public crate-simperby-core-0.1.1 (c (n "simperby-core") (v "0.1.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("recovery" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "06asra2z9255p4i46rjhmfds0xgix9450pmj11pk0xcvvywczczb") (f (quote (("full"))))))

(define-public crate-simperby-core-0.2.0 (c (n "simperby-core") (v "0.2.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.2") (f (quote ("recovery" "rand-std"))) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0x2la6dvkdvyzkw6rwfrk6wxk80k704sxmb9wmvkncy7kb8ynyzf") (f (quote (("full"))))))

