(define-module (crates-io si mp simperby-consensus) #:use-module (crates-io))

(define-public crate-simperby-consensus-0.1.1 (c (n "simperby-consensus") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simperby-core") (r "^0.1.0") (d #t) (k 0)) (d (n "simperby-network") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "vetomint") (r "^0.1.0") (d #t) (k 0)))) (h "1vbpmyvs6ab7qmsjn31bah0hs9ax01x44wm10482wysmry6l1dfw")))

(define-public crate-simperby-consensus-0.2.0 (c (n "simperby-consensus") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simperby-core") (r "^0.2.0") (d #t) (k 0)) (d (n "simperby-network") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "vetomint") (r "^0.2.0") (d #t) (k 0)))) (h "1vlz679n9q9kmwb3ddl5yn2wsj2zfmjg3bdgvzvhxhkkk66qbbpx")))

