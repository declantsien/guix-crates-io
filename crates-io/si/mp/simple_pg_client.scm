(define-module (crates-io si mp simple_pg_client) #:use-module (crates-io))

(define-public crate-simple_pg_client-0.1.0 (c (n "simple_pg_client") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "1faw7618byrqsw2f8jm3wqq8cgja3lay9g7vdndnmkv3r7i6v5c7") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.2.0 (c (n "simple_pg_client") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "0i278d1xsir55k6ahqhssgk6jfp2z2zd6dm1xjdqc8730gkv5n4g") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.2.1 (c (n "simple_pg_client") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "1hf9g9yjgm9dmbby6gizdhlxhixwvn18kbbca684ld0yjqpi619j") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.3.0 (c (n "simple_pg_client") (v "0.3.0") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "0difcz54m4k9q2x7k1lm8x6ym4cn48v665b2z9cwk3hx5y1mj3ay") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.3.1 (c (n "simple_pg_client") (v "0.3.1") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "13fhw79ld3n7hjqm1hzhhsk7ii2d4rvq48xj1zglsgji0h3yr0z3") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.4.0 (c (n "simple_pg_client") (v "0.4.0") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "0d790f6sdqax4a40ydqk8x9ssypy13g1yhz5js72mglfc8g9jzwg") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.4.1 (c (n "simple_pg_client") (v "0.4.1") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "1zvyvcspki1yyzabv90gjmbiy1h05c82cjwpy0iwpigg15pkw2jk") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.4.2 (c (n "simple_pg_client") (v "0.4.2") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "0cvjqh8g0dy6lax4gziwqk22p6izg89wk9ckrj2a1jas7pjw52ib") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.4.3 (c (n "simple_pg_client") (v "0.4.3") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "00aqh3ga7wjns3x3wm6s8jah34ri6jgrvymgymh1jm4xvkpn4j5i") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.4.4 (c (n "simple_pg_client") (v "0.4.4") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "1nmryjavpgn051sd6qylkky1hgsxx5lfb959xyg8vwass78i054g") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

(define-public crate-simple_pg_client-0.5.0 (c (n "simple_pg_client") (v "0.5.0") (d (list (d (n "atomic_fn") (r "^0.2.1") (d #t) (k 0)) (d (n "bit-vec-06") (r "^0.6") (d #t) (k 2) (p "bit-vec")) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "chrono-04") (r "^0.4") (k 2) (p "chrono")) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "eui48-1") (r "^1.0") (k 2) (p "eui48")) (d (n "fallible-iterator") (r "^0.2") (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 2)) (d (n "futures-sink") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "geo-types-06") (r "^0.6") (d #t) (k 2) (p "geo-types")) (d (n "geo-types-07") (r "^0.7") (d #t) (k 2) (p "geo-types")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "postgres-protocol") (r "^0.6.6") (d #t) (k 0)) (d (n "postgres-types") (r "^0.2.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde-1") (r "^1.0") (d #t) (k 2) (p "serde")) (d (n "serde_json-1") (r "^1.0") (d #t) (k 2) (p "serde_json")) (d (n "smol_str-01") (r "^0.1") (d #t) (k 2) (p "smol_str")) (d (n "socket2") (r "^0.5") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time-02") (r "^0.2") (d #t) (k 2) (p "time")) (d (n "time-03") (r "^0.3") (f (quote ("parsing"))) (d #t) (k 2) (p "time")) (d (n "tokio") (r "^1.27") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "net" "rt" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (d #t) (k 0)) (d (n "uuid-08") (r "^0.8") (d #t) (k 2) (p "uuid")) (d (n "uuid-1") (r "^1.0") (d #t) (k 2) (p "uuid")) (d (n "whoami") (r "^1.4.1") (d #t) (k 0)))) (h "0cn027lbapy9lqi79fbv7mfvvmvn5mbma6zdcprjlbsrdi8iwj9w") (f (quote (("with-uuid-1" "postgres-types/with-uuid-1") ("with-uuid-0_8" "postgres-types/with-uuid-0_8") ("with-time-0_3" "postgres-types/with-time-0_3") ("with-time-0_2" "postgres-types/with-time-0_2") ("with-smol_str-01" "postgres-types/with-smol_str-01") ("with-serde_json-1" "postgres-types/with-serde_json-1") ("with-geo-types-0_7" "postgres-types/with-geo-types-0_7") ("with-geo-types-0_6" "postgres-types/with-geo-types-0_6") ("with-eui48-1" "postgres-types/with-eui48-1") ("with-eui48-0_4" "postgres-types/with-eui48-0_4") ("with-chrono-0_4" "postgres-types/with-chrono-0_4") ("with-bit-vec-0_6" "postgres-types/with-bit-vec-0_6") ("runtime" "tokio/net" "tokio/time") ("js" "postgres-protocol/js") ("default" "runtime") ("array-impls" "postgres-types/array-impls"))))))

