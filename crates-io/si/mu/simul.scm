(define-module (crates-io si mu simul) #:use-module (crates-io))

(define-public crate-simul-0.1.0 (c (n "simul") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1syhb28hmssr5ask6ynp0ydxv33r65hvaqwk7j5knim35yxlqpy7") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.1 (c (n "simul") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1x74hvir8026c5lnva4qhs4p773jjm6c03nnn249dnj8wjan0cwj") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.2 (c (n "simul") (v "0.1.2") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "0fzschs8pis9bwd7qw30lqhdys3m536za264z005yak2zxv1r622") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.3 (c (n "simul") (v "0.1.3") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1xwc1s3m9p8srb0fhcppxbckpqdhpbj5pcz2y8bpwpam9qdj7lcm") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.4 (c (n "simul") (v "0.1.4") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "0jjk8v0ncx93146dza4x5j02r6ph86im3abwrnq9cww3hii1aqak") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.5 (c (n "simul") (v "0.1.5") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1nhciwb7iyqjvddqhi5x2ikj22rhcf99dsa4v8y55s48fs72lv93") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.6 (c (n "simul") (v "0.1.6") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1ikg764byx9v43xray81jl9h28vs7r19ric07855h03w119dmwpz") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.1.7 (c (n "simul") (v "0.1.7") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "01cn7hslmbvbks2hnvwzx91n5gsrblyylivyx751w2jia7c65b6f") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.2.0 (c (n "simul") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "0brbvmzm16c4hwi8jciy537irzz1y2blc89frlyb1x24xxlsc52c") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.2.1 (c (n "simul") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "143zw292qkbllrvz45iiassk14z3q5ar4l3k6kgsp1zmbyvikpwn") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.2.2 (c (n "simul") (v "0.2.2") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "02aqii9g05aclvwzcfnr29ryynqwyawsa0adxr69s3xfsrjsqymi") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters"))))))

(define-public crate-simul-0.2.3 (c (n "simul") (v "0.2.3") (d (list (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "plotters") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "ringbuffer") (r "^0.14") (d #t) (k 0)))) (h "1fag7zkhl86g72kmhi0zxcnvn8c23kznxndjdm47g2qypqvfjpgz") (f (quote (("default") ("build-binary" "plotters")))) (s 2) (e (quote (("plotters" "dep:plotters")))) (r "1.70")))

(define-public crate-simul-0.3.0 (c (n "simul") (v "0.3.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)))) (h "1jmk4cpiqcdps6g7hl7bk1ddid1il2av7hhq94jz3gbcmzdjzrqx") (r "1.77")))

(define-public crate-simul-0.3.1 (c (n "simul") (v "0.3.1") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)))) (h "0r8sk0qdr0hahmllpr0m6sk87fxf023gabkm0advlh888af9l2l0") (r "1.77")))

(define-public crate-simul-0.3.2 (c (n "simul") (v "0.3.2") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)))) (h "0mdspvhnk58x5kd899ddc248xwwbxjv775wcag0vqssvz0f6vi9r") (r "1.77")))

(define-public crate-simul-0.3.3 (c (n "simul") (v "0.3.3") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)))) (h "1qfjr7vjc7wl3qkcm62k2d3pxb6rj9ajg6grg4qyvzdpsvw431db") (r "1.56")))

(define-public crate-simul-0.4.0 (c (n "simul") (v "0.4.0") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "simul-macro") (r "^0.1.0") (d #t) (k 0)))) (h "1hzw5gb6zyldh3366kff5mi0d6rzsbnsd4n37243kpr7lnx2sgs5") (r "1.56")))

(define-public crate-simul-0.4.1 (c (n "simul") (v "0.4.1") (d (list (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "simul-macro") (r "^0.1.0") (d #t) (k 0)))) (h "0zycn63032ijxim867237hf8qjqswqwn4fal2xfcygbq9n5cnga5") (r "1.71")))

