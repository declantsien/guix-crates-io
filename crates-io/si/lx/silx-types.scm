(define-module (crates-io si lx silx-types) #:use-module (crates-io))

(define-public crate-silx-types-0.0.0 (c (n "silx-types") (v "0.0.0") (h "0ln80rahvprmswpck1g503949bv05dgswf6zh4m2lz0ka6qiwxh2") (y #t)))

(define-public crate-silx-types-0.1.0 (c (n "silx-types") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "hashed-type-def") (r "^0.1.0") (f (quote ("derive" "impl_rend"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rend") (r "^0.4.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "silx-core") (r "^0.1.0") (d #t) (k 0)) (d (n "simba") (r "^0.8.1") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0ax656zccqyal27xcb0qy2f06fb2fcs1zl5sj9lrnipi167m8g90") (f (quote (("verbose4" "verbose3") ("verbose3" "verbose2") ("verbose2" "verbose1") ("verbose1") ("use_nalgebra" "nalgebra" "hashed-type-def/impl_nalgebra") ("le_silx") ("default" "le_silx" "use_nalgebra" "verbose4") ("be_silx"))))))

(define-public crate-silx-types-0.1.1 (c (n "silx-types") (v "0.1.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "hashed-type-def") (r "^0.1.1") (f (quote ("derive" "impl_rend"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rend") (r "^0.4.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "silx-core") (r "^0.1.1") (d #t) (k 0)) (d (n "simba") (r "^0.8.1") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1kd8bjri55r6s1g57w8bk5pfc4b48sinfgmaqqdwgz0hd7fjnprn") (f (quote (("verbose4" "verbose3") ("verbose3" "verbose2") ("verbose2" "verbose1") ("verbose1") ("use_nalgebra" "nalgebra" "hashed-type-def/impl_nalgebra") ("default" "use_nalgebra" "verbose4") ("be_silx"))))))

(define-public crate-silx-types-0.1.2 (c (n "silx-types") (v "0.1.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "hashed-type-def") (r "^0.1.2") (f (quote ("derive" "impl_rend"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rend") (r "^0.4.2") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.44") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "silx-core") (r "^0.1.2") (d #t) (k 0)) (d (n "simba") (r "^0.8.1") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1lb8yzqzxkgqjwpk3gp6fclcjsb7l4x5qdp29inxalc5rxzk4zcm") (f (quote (("verbose4" "verbose3") ("verbose3" "verbose2") ("verbose2" "verbose1") ("verbose1") ("use_nalgebra" "nalgebra" "hashed-type-def/impl_nalgebra") ("default" "use_nalgebra" "verbose4") ("be_silx"))))))

