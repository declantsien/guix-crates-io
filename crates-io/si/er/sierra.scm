(define-module (crates-io si er sierra) #:use-module (crates-io))

(define-public crate-sierra-0.1.0 (c (n "sierra") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4") (f (quote ("collections" "boxed"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "erupt") (r "^0.17") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.1.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "05msdrjd5jjg475q882kl958zqb6fq26igh8m04hl1dpm1jvbmr7") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("default" "vulkan"))))))

(define-public crate-sierra-0.2.0 (c (n "sierra") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4") (f (quote ("collections" "boxed"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "erupt") (r "^0.18") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.4.4") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.1") (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "naga") (r "^0.5") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.2.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "13agx4h4dw2xfkf7gf44rjyy0ifn29c9lzyz86q2h9nnhcj6ckc7") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.2.1 (c (n "sierra") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4") (f (quote ("collections" "boxed"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "erupt") (r "^0.18") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.4.4") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.1") (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "naga") (r "^0.5") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.2.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0pcgkq2wvblsp3dx55k5kl7an8k6z59p53l8227akly9mvrdim0x") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.3.0 (c (n "sierra") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.19") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "mtl") (r "^0.23.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.6") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.2.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1glqpzsbr79bvl0z2rvsw9mrf3schxj45z3yd2l319hqg62nlgvs") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan")))) (y #t)))

(define-public crate-sierra-0.3.1 (c (n "sierra") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.19") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "mtl") (r "^0.23.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.6") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1l00yxmczwwq5hcj9s4dlw8lf8q6klh7chfl0547b0qb5jlqmd1z") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.3.2 (c (n "sierra") (v "0.3.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.19") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "mtl") (r "^0.23.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.6") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0ifrwl1rwghsxwdx8hnr894wsyla6gd15j85q6mgwxljda8s8qir") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.3.3 (c (n "sierra") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.19") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "mtl") (r "^0.23.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.6") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0zsh1bc69paqdl7ay066brd3xwz6zhalknhmz8wp9yp3xccasgg2") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.3.4 (c (n "sierra") (v "0.3.4") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.19") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "moltenvk-sys") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mtl") (r "^0.23.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.6") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0pygjz3qxrhz2x9h54ixx5ra9rq54nv2ps782hwfy4d9s0hcqjfh") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.4.0 (c (n "sierra") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.22") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.3") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "moltenvk-sys") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mtl") (r "^0.23.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.8") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "^0.3.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (f (quote ("const_new"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1rdlvfsqrwzrs07hbfpyz0visc0kxnqhbz1lk3li7fllyyli8gsc") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt" "mtl" "objc" "core-graphics-types" "moltenvk-sys") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan")))) (y #t)))

(define-public crate-sierra-0.4.1 (c (n "sierra") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.22") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.3") (f (quote ("tracing"))) (o #t) (d #t) (k 0)) (d (n "layered-bitset") (r "^0.1.0") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (k 0)) (d (n "moltenvk-sys") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mtl") (r "^0.23.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.8") (f (quote ("glsl-in" "wgsl-in" "spv-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "=0.4.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (f (quote ("const_new"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0wq4qpapjrmr0glp7r7pq8sxgf1390vf6cqykhs9d2czf75jx8mr") (f (quote (("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt" "mtl" "objc" "core-graphics-types" "moltenvk-sys") ("serde-1" "serde" "serde_bytes" "smallvec/serde" "ordered-float/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("default" "vulkan"))))))

(define-public crate-sierra-0.6.0 (c (n "sierra") (v "0.6.0") (d (list (d (n "array-fu") (r "^0.0.1-alpha") (d #t) (k 0)) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bitsetium") (r "^0.0.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive" "min_const_generics"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "erupt") (r "^0.23") (f (quote ("loading"))) (o #t) (d #t) (k 0)) (d (n "gpu-alloc") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "gpu-alloc-erupt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "gpu-descriptor-erupt") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "moltenvk-sys") (r "^0.1") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "mtl") (r "^0.24") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "metal")) (d (n "naga") (r "^0.10") (f (quote ("spv-out"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "scoped-arena") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "sierra-proc") (r "=0.6.0") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.5") (f (quote ("const_new"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1l8rq7zsslmqdq6mydkgyzaabfhbs4splcsrxa8z19n1ab5iyjvh") (f (quote (("wgsl" "naga/wgsl-in" "codespan-reporting") ("vulkan" "erupt" "gpu-alloc" "gpu-alloc-erupt" "gpu-descriptor" "gpu-descriptor-erupt" "mtl" "objc" "core-graphics-types" "moltenvk-sys") ("serde-1" "serde" "serde_bytes" "smallvec/serde") ("proc-verbose-docs" "sierra-proc/verbose-docs") ("glsl" "naga/glsl-in" "codespan-reporting") ("default" "vulkan"))))))

