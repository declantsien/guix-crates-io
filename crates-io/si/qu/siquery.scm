(define-module (crates-io si qu siquery) #:use-module (crates-io))

(define-public crate-siquery-1.2.0 (c (n "siquery") (v "1.2.0") (d (list (d (n "byteorder") (r "^1.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "horrorshow") (r "^0.6.5") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "objc") (r "~0.2.5") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "plist") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "prettytable-rs") (r "^0.6") (d #t) (k 0)) (d (n "proxy_cfg") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.14") (f (quote ("vtab" "bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sysconf") (r "^0.3.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "treexml") (r "^0.7.0") (d #t) (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "walkdir") (r "^2.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "~0.3.6") (f (quote ("sddl" "handleapi" "winnt" "minwindef" "ws2def" "errhandlingapi" "winbase" "objidlbase" "tlhelp32" "shlobj" "memoryapi" "psapi" "winerror" "lmaccess" "ntddscsi" "securitybaseapi" "lmapibuf" "ntlsa"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.5.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1a530kj5qvl7zqzk6xhlclv0x2sqxb8mx2bh5cxna92s0zvjcs44")))

(define-public crate-siquery-1.2.5 (c (n "siquery") (v "1.2.5") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "horrorshow") (r "^0.6.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.10") (d #t) (k 0)) (d (n "proxy_cfg") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (f (quote ("vtab" "bundled"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "treexml") (r "^0.7.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "sysconf") (r "^0.3.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "glob") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc") (r "~0.2.5") (f (quote ("exception"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "plist") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "walkdir") (r "^2.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "~0.3.6") (f (quote ("sddl" "handleapi" "winnt" "minwindef" "ws2def" "errhandlingapi" "winbase" "objidlbase" "tlhelp32" "shlobj" "memoryapi" "psapi" "winerror" "lmaccess" "ntddscsi" "securitybaseapi" "lmapibuf" "ntlsa"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.5.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05bl3r5chxqy9l2jpi97b09p3flvsxrhadvmd3smgdhma2a0ghyf")))

