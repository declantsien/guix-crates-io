(define-module (crates-io to ki tokio-native-tls) #:use-module (crates-io))

(define-public crate-tokio-native-tls-0.1.0 (c (n "tokio-native-tls") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(windows), not(target_os = \"ios\")))") (k 2)) (d (n "schannel") (r "^0.1") (d #t) (t "cfg(windows)") (k 2)) (d (n "security-framework") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 2)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "tokio") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.0") (f (quote ("macros" "stream" "rt-core" "io-util" "net"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.2.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("lmcons" "basetsd" "minwinbase" "minwindef" "ntdef" "sysinfoapi" "timezoneapi" "wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 2)))) (h "0sd0xmj7kwizybpsg8vh7a6sixj0bs4dzihzgmdf1a0rm69qaq6d")))

(define-public crate-tokio-native-tls-0.2.0 (c (n "tokio-native-tls") (v "0.2.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(windows), not(target_os = \"ios\")))") (k 2)) (d (n "schannel") (r "^0.1") (d #t) (t "cfg(windows)") (k 2)) (d (n "security-framework") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 2)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "tokio") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.3.0") (f (quote ("macros" "stream" "rt" "rt-multi-thread" "io-util" "net"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.4.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("lmcons" "basetsd" "minwinbase" "minwindef" "ntdef" "sysinfoapi" "timezoneapi" "wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 2)))) (h "06qgwv71bxdg1fgc4ipaqqdzya967i9225dfm9wi7l1vnx98472h")))

(define-public crate-tokio-native-tls-0.3.0 (c (n "tokio-native-tls") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(windows), not(target_os = \"ios\")))") (k 2)) (d (n "schannel") (r "^0.1") (d #t) (t "cfg(windows)") (k 2)) (d (n "security-framework") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 2)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "net"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("lmcons" "basetsd" "minwinbase" "minwindef" "ntdef" "sysinfoapi" "timezoneapi" "wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 2)))) (h "0yvikgmph2qjq0ni2h2wfaxkzhbnc09c2544av0zidyj1dk9bngp")))

(define-public crate-tokio-native-tls-0.3.1 (c (n "tokio-native-tls") (v "0.3.1") (d (list (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.6") (k 2)) (d (n "futures") (r "^0.3.0") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "rt-multi-thread" "io-util" "net"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "openssl") (r "^0.10") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(windows), not(target_os = \"ios\")))") (k 2)) (d (n "security-framework") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 2)) (d (n "schannel") (r "^0.1") (d #t) (t "cfg(windows)") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("lmcons" "basetsd" "minwinbase" "minwindef" "ntdef" "sysinfoapi" "timezoneapi" "wincrypt" "winerror"))) (d #t) (t "cfg(windows)") (k 2)))) (h "1wkfg6zn85zckmv4im7mv20ca6b1vmlib5xwz9p7g19wjfmpdbmv") (f (quote (("vendored" "native-tls/vendored"))))))

