(define-module (crates-io to rc torch-build) #:use-module (crates-io))

(define-public crate-torch-build-0.1.0 (c (n "torch-build") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.45") (d #t) (k 1)) (d (n "cc") (r "^1.0.72") (d #t) (k 0)) (d (n "cc") (r "^1.0.72") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "os_info") (r "^3.0.7") (d #t) (k 0)) (d (n "python-config") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rustacuda") (r "^0.1.3") (d #t) (k 0)) (d (n "ureq") (r "^2.3.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.13") (d #t) (k 0)))) (h "08bvkzs5m0qjzqd56jpshfvmy7qlqa95491gm83zadczbg10hgcn") (f (quote (("parallel-build" "cc/parallel") ("download-libtorch" "ureq") ("default" "download-libtorch"))))))

