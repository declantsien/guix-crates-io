(define-module (crates-io to y- toy-apcb) #:use-module (crates-io))

(define-public crate-toy-apcb-0.1.0 (c (n "toy-apcb") (v "0.1.0") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1vn858nil01in01ziywag36nij0h6kwqwj1i9sr3123q94kjmaff") (y #t)))

(define-public crate-toy-apcb-0.1.1 (c (n "toy-apcb") (v "0.1.1") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "15b6jrkbmhj9sl2a2f7nyxw3s0v1xi58lcpqdg4qwc3mmynjw81l") (y #t)))

(define-public crate-toy-apcb-0.1.2 (c (n "toy-apcb") (v "0.1.2") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1b7091a3krz7yyysm09laicz1gc0q8iv8fxwnxbmpy45pakmbm54") (y #t)))

(define-public crate-toy-apcb-0.1.3 (c (n "toy-apcb") (v "0.1.3") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "0c2a4l6phi2kidvppz7989dk4vamr4z3136aj4664yn2fsqc8p44") (y #t)))

(define-public crate-toy-apcb-0.1.4 (c (n "toy-apcb") (v "0.1.4") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "076hnlkwjkdsnwmwlagxrgvdy5szjc845kqnpks080pgd0dn6m4z") (y #t)))

(define-public crate-toy-apcb-0.1.5 (c (n "toy-apcb") (v "0.1.5") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1fnm9d2hx89z84rp7rk76zn97h6vrz8y6x9v4mw2kyr5mqjjqv5n") (y #t)))

(define-public crate-toy-apcb-0.1.6 (c (n "toy-apcb") (v "0.1.6") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1cdxglabkr1xj9m1ydjxwifvmxn91y4ra6zg7lp1wsylrikkh83r") (y #t)))

(define-public crate-toy-apcb-0.1.7 (c (n "toy-apcb") (v "0.1.7") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1xhn9c59pz8l92gi34r1jrpfgjqy2y45nmnlmjzl3x9d6jyp0nm6") (y #t)))

(define-public crate-toy-apcb-0.1.8 (c (n "toy-apcb") (v "0.1.8") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "1xpbhpa65bc9a9a04hbgygymj3icn1x479748nmlll9dvinkwv6s") (y #t)))

(define-public crate-toy-apcb-0.2.0 (c (n "toy-apcb") (v "0.2.0") (d (list (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (f (quote ("full-syntax"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.1") (d #t) (k 0)))) (h "0lwpj402zkxic5a7d82yrp4hnj6hrqlrazjjv8x351nxcxsz80ay")))

