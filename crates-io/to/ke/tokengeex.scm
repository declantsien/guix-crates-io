(define-module (crates-io to ke tokengeex) #:use-module (crates-io))

(define-public crate-tokengeex-0.1.0 (c (n "tokengeex") (v "0.1.0") (h "04q2mh7vcs3lwwsyqqzxd537h3lq8zhmaps5aqbxccd6bm6y8i1d")))

(define-public crate-tokengeex-0.4.0 (c (n "tokengeex") (v "0.4.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "1dan6qvp08a9rpqg4765v6mgzgqsd7ly1ddam1aak8bdr5jy4wl2") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.4.1 (c (n "tokengeex") (v "0.4.1") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "1dsrd4knwpqinfxlccp4kwiyb6624dhnhsh47zp8j0a5q0b88grp") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.5.0 (c (n "tokengeex") (v "0.5.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "0bjvph3j408n7ic946w0cqyimvfnn0gmyiwfy5gwrng1qdscaxlj") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.6.0 (c (n "tokengeex") (v "0.6.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "1lmbjjxm4zfz7hdp6ak8bl8zn7rpx3idgw05xqdyn2qgzamq4c0z") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.6.2 (c (n "tokengeex") (v "0.6.2") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "0xsw1dz37n5kcpfqbn2yk87rvvz6da25kahjqs8981nj8iy994k5") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.7.0 (c (n "tokengeex") (v "0.7.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "16p81xfdrzmjb4wqi5rnql8wq672czgv4yqjxhp24x6938b2nql3") (f (quote (("cli"))))))

(define-public crate-tokengeex-0.7.1 (c (n "tokengeex") (v "0.7.1") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "19kym9qm89dnq6g7ickx58j3233h1y6wzbg9lfsypzkg1xnkx230") (f (quote (("cli"))))))

(define-public crate-tokengeex-1.0.0 (c (n "tokengeex") (v "1.0.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "0f24zak91cw21p62h4cbb7635lhrmc9kpqhifcygvl8sj8byd62w")))

(define-public crate-tokengeex-1.0.1 (c (n "tokengeex") (v "1.0.1") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.23") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1.1") (d #t) (k 0)) (d (n "xflags") (r "^0.3.2") (d #t) (k 0)))) (h "1rhxraa4wpc4qbyhwa5gmmc6mzqfyqa5glfs0x56vjv6138nwi1g")))

