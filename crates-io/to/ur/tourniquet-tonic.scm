(define-module (crates-io to ur tourniquet-tonic) #:use-module (crates-io))

(define-public crate-tourniquet-tonic-0.1.0 (c (n "tourniquet-tonic") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "celery") (r "^0.4.0-rc8") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 2)) (d (n "prost-types") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.5") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.5") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0jv948bh7n8pxnz58a64jw20lz4zs7lz8cii0j8libp4d0q5aja6") (f (quote (("trace" "tracing"))))))

(define-public crate-tourniquet-tonic-0.1.1 (c (n "tourniquet-tonic") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "celery") (r "^0.4.0-rc8") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 2)) (d (n "prost-types") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.5") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.5") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1d0ri11rpbkhk25lfrlyyrhbir58i9ciabdq92pflw7bda4vaqp4") (f (quote (("trace" "tracing"))))))

(define-public crate-tourniquet-tonic-0.1.2 (c (n "tourniquet-tonic") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 2)) (d (n "prost-types") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.5") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.5") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1qcjjfa5ny3y91jg3dsmr0p3wi25r8nvv5sgb6nbz5jaah33llxf") (f (quote (("trace" "tracing"))))))

(define-public crate-tourniquet-tonic-0.2.0 (c (n "tourniquet-tonic") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.10") (d #t) (k 2)) (d (n "prost-types") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.7") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.7") (f (quote ("compression"))) (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "12glvwghrzgzwdbr8v933l7wdm2gxcljp8nrzrhfl4pmfw5lhz6a") (f (quote (("trace" "tracing" "tourniquet/trace"))))))

(define-public crate-tourniquet-tonic-0.3.0 (c (n "tourniquet-tonic") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "prost-types") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.8") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.8") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1bqiijfxh9wg6rffrnn8xxl1bspkd8apcf3zn94w5ss6w72gpydw") (f (quote (("trace" "tracing" "tourniquet/trace"))))))

(define-public crate-tourniquet-tonic-0.4.0 (c (n "tourniquet-tonic") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "prost-types") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1dnxkz0fssc9gjdp6hj9m4m447xay9fdxs25nnq7xz3wgjydg1jd") (f (quote (("trace" "tracing" "tourniquet/trace"))))))

(define-public crate-tourniquet-tonic-0.5.0 (c (n "tourniquet-tonic") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 2)) (d (n "prost-types") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "net" "io-util"))) (d #t) (k 2)) (d (n "tonic") (r "^0.10") (f (quote ("transport"))) (k 0)) (d (n "tonic") (r "^0.10") (d #t) (k 2)) (d (n "tourniquet") (r "^0.4") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "07x7xhyqa9kfvkf50vkvrdqmlyz2p4bdw49vb55j5axk99sflv5x") (f (quote (("trace" "tracing" "tourniquet/trace"))))))

