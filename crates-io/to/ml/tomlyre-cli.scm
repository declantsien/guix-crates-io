(define-module (crates-io to ml tomlyre-cli) #:use-module (crates-io))

(define-public crate-tomlyre-cli-0.0.1-beta.1 (c (n "tomlyre-cli") (v "0.0.1-beta.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("unicode" "derive" "color"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (f (quote ("regex"))) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "glossa") (r "^0.0.1-alpha.9") (d #t) (k 0)) (d (n "glossa-codegen") (r "^0.0.1-alpha.4") (f (quote ("toml" "yaml" "highlight"))) (k 1)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "phf") (r "^0.11.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("local-offset"))) (k 0)) (d (n "tomlyre") (r "^0.0.1-beta.1") (k 0)))) (h "18x6ai3pq08760dy25z0na45rvjg8nzigjlba47q7lmw1qcwzj7y") (f (quote (("yaml" "tomlyre/yaml") ("xml" "tomlyre/xml") ("ron" "tomlyre/ron") ("lexpr" "tomlyre/lexpr") ("json5" "tomlyre/json5") ("json" "tomlyre/json") ("default" "json" "yaml" "ron" "json5" "lexpr") ("bson" "tomlyre/bson"))))))

