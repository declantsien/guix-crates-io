(define-module (crates-io to r- tor-error) #:use-module (crates-io))

(define-public crate-tor-error-0.1.0 (c (n "tor-error") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "14sn7vfym8rrdgp3caffqbsbwcmfc091b8n8mhs7vsmffhcq1cqw") (f (quote (("default" "backtrace"))))))

(define-public crate-tor-error-0.2.0 (c (n "tor-error") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "12ixs65r095kdvdyffwszjnwandxgvklas0hr1hz7lgbrwzxamga") (f (quote (("default" "backtrace"))))))

(define-public crate-tor-error-0.3.0 (c (n "tor-error") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "136yk449bl6jxmrnipybzg2424vykrl307p3jlhd9b82j9qs3ign") (f (quote (("default" "backtrace")))) (r "1.56")))

(define-public crate-tor-error-0.3.1 (c (n "tor-error") (v "0.3.1") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "04xczww5vp1hq21zv2f8204c19gmgly9xzm2pn7b6jdn01rm5syx") (f (quote (("default" "backtrace")))) (r "1.56")))

(define-public crate-tor-error-0.3.2 (c (n "tor-error") (v "0.3.2") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0fdp2yhws126n0766231isag0347vd8qx02fm83kd1a88i6g99fc") (f (quote (("default" "backtrace")))) (r "1.56")))

(define-public crate-tor-error-0.3.3 (c (n "tor-error") (v "0.3.3") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1pjal8xgkbyagx90rkh56bkbgvl0s3fk65fx7mbk41f9n6kq63aw") (f (quote (("default" "backtrace")))) (r "1.56")))

(define-public crate-tor-error-0.3.4 (c (n "tor-error") (v "0.3.4") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "10m266f8jdfkhna7fnmwp9yhgn3bwf6zrmvaala9zh6sdmykyw7i") (f (quote (("default" "backtrace")))) (r "1.56")))

(define-public crate-tor-error-0.4.0 (c (n "tor-error") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1k8w3qislxpyik551fpri4va0fzbm6xmy08hx7qgrp90fxswkvaj") (f (quote (("default" "backtrace")))) (r "1.60")))

(define-public crate-tor-error-0.4.1 (c (n "tor-error") (v "0.4.1") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1m9ylcfgvgzsmpbjxrdrliafgb3hs1xc8w5kf002xb8dzp7kc63y") (f (quote (("default" "backtrace")))) (r "1.60")))

(define-public crate-tor-error-0.5.0 (c (n "tor-error") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0yhqq8wcmkzyf40q1dp43nbl1xf31isa57a4x2l5f6li3igaprai") (f (quote (("rpc") ("experimental-api" "rpc") ("default" "backtrace")))) (r "1.65")))

(define-public crate-tor-error-0.5.1 (c (n "tor-error") (v "0.5.1") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0bmg171ah3rrg64gfw45dzw3b354hxx1g2hmk2xv6p5jdzmglfi9") (f (quote (("rpc" "__is_experimental") ("full" "backtrace") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (r "1.65")))

(define-public crate-tor-error-0.5.2 (c (n "tor-error") (v "0.5.2") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0zfr13x2vvrxl7g6hlni6knvl37dj6h6w26a83klvahkjl3ns6ya") (f (quote (("rpc" "__is_experimental") ("full" "backtrace") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (r "1.65")))

(define-public crate-tor-error-0.5.3 (c (n "tor-error") (v "0.5.3") (d (list (d (n "backtrace") (r "^0.3.39") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "1zkd07d5ppk1qxnf19fygwfmdv7as8458hvcshc5dp0y2vg6npbc") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.65")))

(define-public crate-tor-error-0.5.4 (c (n "tor-error") (v "0.5.4") (d (list (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "12d8943s63qkqbnig6dcj833sdcviv83cbwg6fhv4x5wnfx83z4k") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.65")))

(define-public crate-tor-error-0.5.5 (c (n "tor-error") (v "0.5.5") (d (list (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "01p18ran0f2h4pjwg7z94s6a3b7azi7fh0y8c3kzvbwipf1fqkgw") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.70")))

(define-public crate-tor-error-0.6.0 (c (n "tor-error") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2") (d #t) (k 2)))) (h "0l03skd8xv2wnaj4v855lqfc6p59fn502nl6qjw5n5ajwcnfj1m6") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.70")))

(define-public crate-tor-error-0.6.1 (c (n "tor-error") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1lwxhz1wdla668ynwlq1cn2yr52315vf30rg8b3dsbprb8jml6d2") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.70")))

(define-public crate-tor-error-0.17.0 (c (n "tor-error") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0d32cpjy4gy4kkam65mx8mk6rm4s6kizdscfdkqwax86v81kdmqs") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.70")))

(define-public crate-tor-error-0.18.0 (c (n "tor-error") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "backtrace") (r "^0.3.68") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "retry-error") (r "^0.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (o #t) (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1vwyjs015gkf2vdn3m3llb4cx2kwh49znjrp61p4wdhqijh2f6rj") (f (quote (("rpc" "__is_experimental") ("full" "backtrace" "tracing" "retry-error/full") ("experimental-api" "rpc" "__is_experimental") ("experimental" "experimental-api" "rpc") ("default" "backtrace") ("__is_experimental")))) (s 2) (e (quote (("tracing" "dep:tracing" "static_assertions")))) (r "1.70")))

