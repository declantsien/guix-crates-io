(define-module (crates-io to sh toshi) #:use-module (crates-io))

(define-public crate-toshi-0.1.0 (c (n "toshi") (v "0.1.0") (d (list (d (n "capnp") (r "^0.9") (d #t) (k 0)) (d (n "capnpc") (r "^0.9.0") (d #t) (k 1)) (d (n "config") (r "^0.9.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "gotham") (r "^0.2") (d #t) (k 0)) (d (n "gotham_derive") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tantivy") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1cndzy7qz1pw7h993xly17jva6kwkd67wrdx1l4ccj0z5wc7jwr5")))

