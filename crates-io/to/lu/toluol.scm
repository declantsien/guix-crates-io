(define-module (crates-io to lu toluol) #:use-module (crates-io))

(define-public crate-toluol-0.1.0 (c (n "toluol") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "strum") (r "^0.19") (d #t) (k 0)) (d (n "strum_macros") (r "^0.19") (d #t) (k 0)))) (h "017rhvzhbwmmws92qj0j31qjijkbsl7x8csca7aw0xg6cdhfd8vn")))

(define-public crate-toluol-0.2.0 (c (n "toluol") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.21") (d #t) (k 0)))) (h "0y6raim7ijskkmgb1pdiyqa5x66z4sbfpzgczsw833hz10l97sdy")))

(define-public crate-toluol-0.2.1 (c (n "toluol") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.21") (d #t) (k 0)))) (h "1jgqxvy4r8918bhp4i1lqbdr16lh3nrrln68w46svkq428swqw3x")))

(define-public crate-toluol-0.2.2 (c (n "toluol") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.21") (d #t) (k 0)))) (h "1i1wz5y5grbslayn6v3sjf0mxqmkv3vvmz0ii4wbnnx304igarfa")))

(define-public crate-toluol-1.0.0 (c (n "toluol") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.21") (d #t) (k 0)))) (h "1r80gn73jlbdnadqynn3g6qjsf5bp0dk1b2jrqm3xpaljijclfim")))

(define-public crate-toluol-1.0.1 (c (n "toluol") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.19") (d #t) (k 0)) (d (n "strum") (r "^0.20") (d #t) (k 0)) (d (n "strum_macros") (r "^0.20") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.21") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.21") (d #t) (k 0)))) (h "0rlzvfklvgygbah6znb507pbx52yqsf89m6c7rgfj3nzr2nf14p1")))

(define-public crate-toluol-1.1.0 (c (n "toluol") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.22") (d #t) (k 0)) (d (n "strum_macros") (r "^0.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "1hkv0y3m2vj6ymniddp9ljxp5x18zxanr84b320hi1zmpmvz6mqs") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("default" "tls"))))))

(define-public crate-toluol-1.2.0 (c (n "toluol") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.22") (d #t) (k 0)) (d (n "strum_macros") (r "^0.22") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "0r14cfz3z52lqkp06i6vs5c4sakf1msx030gygm66in27i3jjx35") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("default" "tls"))))))

(define-public crate-toluol-1.2.1 (c (n "toluol") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "0q3f3pahg362jr7z0nw83i6ywmkbym1h70s4dciwnil7s374bjw7") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("json" "serde" "serde_json") ("default" "json" "tls"))))))

(define-public crate-toluol-1.2.2 (c (n "toluol") (v "1.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "0dz5z7978ih175cp236azlh1ixjhbcr9k11ymidblrjd7h3gk7iw") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("json" "serde" "serde_json") ("default" "json" "tls"))))))

(define-public crate-toluol-1.2.3 (c (n "toluol") (v "1.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "0sc2rdv2wfp27mh5gy0j3wccp6ii20ji38l90jgadj7biiyychs2") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("json" "serde" "serde_json") ("default" "json" "tls"))))))

(define-public crate-toluol-1.3.0 (c (n "toluol") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ureq") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "webpki") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "0c5fv5zazjrx3a9179nwygi0x59a8syvynpjkr79az53ghfsdvrw") (f (quote (("tls" "rustls" "webpki" "webpki-roots") ("json" "serde" "serde_json") ("http" "ureq") ("default" "http" "json" "tls"))))))

(define-public crate-toluol-2.0.0 (c (n "toluol") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustls") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toluol-proto") (r "^2.0") (d #t) (k 0)) (d (n "ureq") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "webpki") (r "^0.22") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.22") (o #t) (d #t) (k 0)))) (h "15yl9c9ifh15sjsrrf935lzfl8gb50ralwq7fsrshdh7s0f3dsnj") (f (quote (("tls" "rustls" "webpki-roots") ("json" "serde_json" "toluol-proto/serde") ("http" "ureq") ("default" "http" "json" "tls"))))))

