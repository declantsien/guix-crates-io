(define-module (crates-io to lu toluol-proto) #:use-module (crates-io))

(define-public crate-toluol-proto-2.0.0 (c (n "toluol-proto") (v "2.0.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3") (d #t) (k 0)) (d (n "ecdsa") (r "^0.13") (d #t) (k 0)) (d (n "owo-colors") (r "^3.2") (f (quote ("supports-colors"))) (d #t) (k 0)) (d (n "p256") (r "^0.10") (f (quote ("ecdsa"))) (d #t) (k 0)) (d (n "permutation") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "repr-with-fallback") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smartstring") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0s5zvlz0m3hjf5v7f015sc5jxqxw8pk2qk1mk7iynghab5ssl8ks")))

