(define-module (crates-io s2 n- s2n-quic-dc) #:use-module (crates-io))

(define-public crate-s2n-quic-dc-0.37.0 (c (n "s2n-quic-dc") (v "0.37.0") (d (list (d (n "atomic-waker") (r "^1") (d #t) (k 0)) (d (n "aws-lc-rs") (r "^1") (d #t) (k 0)) (d (n "bolero") (r "^0.10") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "s2n-codec") (r "=0.37.0") (k 0)) (d (n "s2n-quic-core") (r "=0.37.0") (k 0)) (d (n "s2n-quic-platform") (r "=0.37.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zerocopy") (r "^0.7") (f (quote ("derive"))) (d #t) (k 0)))) (h "0y4lvnjabjib0rha3wrfr514kmhrc8niqa2x8gscymhmd769pv0h") (f (quote (("testing")))) (r "1.71")))

