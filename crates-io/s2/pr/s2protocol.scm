(define-module (crates-io s2 pr s2protocol) #:use-module (crates-io))

(define-public crate-s2protocol-0.1.0 (c (n "s2protocol") (v "0.1.0") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "16wfwdlbayg86shx04k3zq8b0vcjkmhpswhiagqq20dlwkzvsjkm")))

(define-public crate-s2protocol-0.1.1 (c (n "s2protocol") (v "0.1.1") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0l26mcpyvlvn0kja0qmfb5d7ii87fnnzzjhm86zhggcjnad3p92h")))

(define-public crate-s2protocol-1.0.0 (c (n "s2protocol") (v "1.0.0") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0hxvxvacf3yc8gv2400imx56p2smjvkjmb3ip723g6sgrzkks5vq")))

(define-public crate-s2protocol-1.0.2 (c (n "s2protocol") (v "1.0.2") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "16k1zfjvcl32dyjgqdln2jlcslca98pw8asacpy8izb3xl75pwzf")))

(define-public crate-s2protocol-1.1.0 (c (n "s2protocol") (v "1.1.0") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0bh4y48qg7axfcj60ip1arbbr3pi7dsgq26gqfsgdf5nifkyiqks")))

(define-public crate-s2protocol-1.1.1 (c (n "s2protocol") (v "1.1.1") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1mi2dynpj6dng34pc4z6fjqry8kx8ra6fc359cjgsjvpsl4j2rv9")))

(define-public crate-s2protocol-1.1.2 (c (n "s2protocol") (v "1.1.2") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "17ihdpyg71pi6yx5s82j86g9g9szj1kq2by4a7g763p3m68137zv")))

(define-public crate-s2protocol-1.1.3 (c (n "s2protocol") (v "1.1.3") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1mbcgljydv7y2hs2g18g6p3vi2h23p0k9wv8bkhszg451cpkj05g")))

(define-public crate-s2protocol-1.1.4 (c (n "s2protocol") (v "1.1.4") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "04viga6567l3cwncf9swk42han039aydkb3p6b7d3gx45p0yjqgl")))

(define-public crate-s2protocol-1.1.5 (c (n "s2protocol") (v "1.1.5") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "16rzr93kq0pjbr30k5yrlpmijz88p7wnv7xakbnbvxpblfi1pki7")))

(define-public crate-s2protocol-1.1.6 (c (n "s2protocol") (v "1.1.6") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "08kvmhmb3sl1lk75irpdpp6qrnzl3rfw5cs47iys88jwhvlmizcw")))

(define-public crate-s2protocol-1.1.7 (c (n "s2protocol") (v "1.1.7") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0921r3w8kwhk8x1k2ll6x916j2d14qdk6vbfxqy7vrz8yhkwj0p6")))

(define-public crate-s2protocol-1.1.8 (c (n "s2protocol") (v "1.1.8") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1dcgciw5n1xi2pwvkp9x8qqilivlzzrnx687cxnxp6j3pa4syw3v")))

(define-public crate-s2protocol-1.1.9 (c (n "s2protocol") (v "1.1.9") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "12hc8j4pv5ds61hc33y4kzr04ha3gnphg7kdzf2p90q4zrrhr34k")))

(define-public crate-s2protocol-2.0.0 (c (n "s2protocol") (v "2.0.0") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "02bcx36bln19ipfykmrqq9mqn6s12wv1q1risyppc1l0s450hgr5") (f (quote (("no_tracing" "tracing/max_level_off" "tracing/release_max_level_off"))))))

(define-public crate-s2protocol-3.0.0 (c (n "s2protocol") (v "3.0.0") (d (list (d (n "arrow2") (r "^0.17.0") (f (quote ("io_print" "io_ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow2_convert") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "17lbba6j5fy96683ywmlvlwkb0smpd6p5w5ggmcrraqkid8amsmc") (f (quote (("tracing_trace_level" "tracing/max_level_trace" "tracing/release_max_level_trace") ("tracing_off" "tracing/max_level_off" "tracing/release_max_level_off") ("tracing_info_level" "tracing/max_level_info" "tracing/release_max_level_info") ("default" "tracing_info_level" "arrow") ("arrow" "arrow2" "arrow2_convert" "sha256" "rayon"))))))

(define-public crate-s2protocol-3.0.1 (c (n "s2protocol") (v "3.0.1") (d (list (d (n "arrow2") (r "^0.17.0") (f (quote ("io_print" "io_ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow2_convert") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1vxsm6gx8mkam1dmyavw35f25cbh4b6qcddlyf370kgaa7f1y79f") (f (quote (("tracing_trace_level" "tracing/max_level_trace" "tracing/release_max_level_trace") ("tracing_off" "tracing/max_level_off" "tracing/release_max_level_off") ("tracing_info_level" "tracing/max_level_info" "tracing/release_max_level_info") ("default" "tracing_info_level" "arrow") ("arrow" "arrow2" "arrow2_convert" "sha256" "rayon"))))))

(define-public crate-s2protocol-3.0.2 (c (n "s2protocol") (v "3.0.2") (d (list (d (n "arrow2") (r "^0.17.0") (f (quote ("io_print" "io_ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow2_convert") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0r3h5672sb8l1bwr6wdpbplxxjmijpkz30jhfplzad0vaj3jv9h9") (f (quote (("tracing_trace_level" "tracing/max_level_trace" "tracing/release_max_level_trace") ("tracing_off" "tracing/max_level_off" "tracing/release_max_level_off") ("tracing_info_level" "tracing/max_level_info" "tracing/release_max_level_info") ("default" "tracing_info_level" "arrow") ("arrow" "arrow2" "arrow2_convert" "sha256" "rayon"))))))

(define-public crate-s2protocol-3.0.3 (c (n "s2protocol") (v "3.0.3") (d (list (d (n "arrow2") (r "^0.17.0") (f (quote ("io_print" "io_ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow2_convert") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.1") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1vdgbn4zfp6rqr1larrak09cyfi7rch0qqpmpxhndw1gmf2as3m7") (f (quote (("tracing_trace_level" "tracing/max_level_trace" "tracing/release_max_level_trace") ("tracing_off" "tracing/max_level_off" "tracing/release_max_level_off") ("tracing_info_level" "tracing/max_level_info" "tracing/release_max_level_info") ("default" "tracing_info_level" "arrow") ("arrow" "arrow2" "arrow2_convert" "sha256" "rayon"))))))

(define-public crate-s2protocol-3.0.4 (c (n "s2protocol") (v "3.0.4") (d (list (d (n "arrow2") (r "^0.17.0") (f (quote ("io_print" "io_ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow2_convert") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-mpq") (r "^2.0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "sha256") (r "^1.4.0") (o #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0cnl45l4l6gqh1xyslisl6p0rqpy16x5mz5sdcln9hn7l9hp09br") (f (quote (("tracing_trace_level" "tracing/max_level_trace" "tracing/release_max_level_trace") ("tracing_off" "tracing/max_level_off" "tracing/release_max_level_off") ("tracing_info_level" "tracing/max_level_info" "tracing/release_max_level_info") ("default" "tracing_info_level" "arrow") ("arrow" "arrow2" "arrow2_convert" "sha256" "rayon"))))))

