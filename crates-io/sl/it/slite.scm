(define-module (crates-io sl it slite) #:use-module (crates-io))

(define-public crate-slite-0.0.1-dev (c (n "slite") (v "0.0.1-dev") (d (list (d (n "ansi-to-tui") (r "^2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "confique") (r "^0.2.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "imara-diff") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "notify") (r "^5.1.0") (f (quote ("macos_fsevent"))) (o #t) (k 0)) (d (n "notify-debouncer-mini") (r "^0.2.1") (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28") (f (quote ("bundled"))) (d #t) (k 0)) (d (n "syntect") (r "^5") (f (quote ("regex-fancy" "parsing"))) (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-tree2") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tui") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)))) (h "03b0grr8jdc6b93mvfzqnzh7d1nwzscx4fgzqgwrgk8wx8wpkzvr") (f (quote (("read-files" "ignore") ("pretty-print" "owo-colors" "syntect") ("diff" "imara-diff") ("default" "application") ("crossterm-events" "crossterm") ("application" "clap" "crossterm-events" "crossterm/event-stream" "diff" "pretty-print" "read-files" "tui" "color-eyre" "tracing-tree2" "notify" "notify-debouncer-mini" "futures" "tokio/macros")))) (s 2) (e (quote (("tui" "dep:tui" "tokio" "tracing-subscriber" "crossterm" "read-files"))))))

