(define-module (crates-io sl ed sled) #:use-module (crates-io))

(define-public crate-sled-0.12.1 (c (n "sled") (v "0.12.1") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "chan-signal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.26") (o #t) (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "coco") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "historian") (r "^3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0ch9d406h4q0d6g5vwrxr4il254vxgfdhv99zqakaqpqxf67w5r0") (f (quote (("stress" "docopt" "chan-signal" "rayon" "rand" "zstd") ("default") ("bench" "clap" "num_cpus" "log" "rand" "rayon" "zstd" "env_logger"))))))

(define-public crate-sled-0.13.0 (c (n "sled") (v "0.13.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "chan-signal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.26") (o #t) (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "coco") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "historian") (r "^3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (o #t) (d #t) (k 0)))) (h "10gfs162j91vf5y3j5yq8vgx5awyc0v9idwp4fmz9sf24pk4n91k") (f (quote (("stress" "docopt" "chan-signal" "rayon" "rand" "zstd") ("default") ("bench" "clap" "num_cpus" "log" "rand" "rayon" "zstd" "env_logger"))))))

(define-public crate-sled-0.14.1 (c (n "sled") (v "0.14.1") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "chan-signal") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.26") (o #t) (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "coco") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3") (d #t) (k 0)) (d (n "docopt") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "historian") (r "^3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1rnxmbvljygrvd82zddpn6znqjvfhx8ic74gdmx0lzpri5yv30r8") (f (quote (("stress" "docopt" "chan-signal" "rayon" "rand" "zstd") ("o_direct_writer") ("default") ("bench" "clap" "num_cpus" "log" "rand" "rayon" "zstd" "env_logger"))))))

(define-public crate-sled-0.15.0 (c (n "sled") (v "0.15.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "10kpdwc0vy2d343apqvgmrsgyis01mbj4n42qgdgmnkw0w6wcq1q") (f (quote (("lock_free_delays") ("default"))))))

(define-public crate-sled-0.15.1 (c (n "sled") (v "0.15.1") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "04n9h4h702hnf4v75dl01zp8cak4lw3aarv6yclfqfzlm3pfa26k") (f (quote (("lock_free_delays") ("default"))))))

(define-public crate-sled-0.15.2 (c (n "sled") (v "0.15.2") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0mw8xjzsyzx3lxz34pk4p2qm98qj2js9hd20gzsj0g7r50qa7q7q") (f (quote (("lock_free_delays") ("default"))))))

(define-public crate-sled-0.15.3 (c (n "sled") (v "0.15.3") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1xbcqd3yd1z7nk92jgr5lhx7gx9hrx3g5qpd748w0vx7mwhkrrai") (f (quote (("lock_free_delays") ("default"))))))

(define-public crate-sled-0.15.4 (c (n "sled") (v "0.15.4") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "14xav9yf5vpghms6dyak4fhpf5b8wlmwbv6c2l04wyrm7wma6l8k") (f (quote (("lock_free_delays") ("default"))))))

(define-public crate-sled-0.15.5 (c (n "sled") (v "0.15.5") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "12327nb7y181np60n0v95qdn1xw84dnmgww1kps2wgkhak4cvlpi") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.6 (c (n "sled") (v "0.15.6") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1qhxigyzbhdrxxhvylaghd536gw5c6njzcvhhcr1hs17w5ygh15l") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.7 (c (n "sled") (v "0.15.7") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0sasrd1vvbdq75jnldxkx1l2ggv765pi9jqv9l8gizzqamvn4idi") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.8 (c (n "sled") (v "0.15.8") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0klf1fkxhb2w1ga4mv5mqpdklsh9vl4183z7llnci6ki0qsgvfn9") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.9 (c (n "sled") (v "0.15.9") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.2.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1mvbsmj76dzb588n4wbpa25x9bvcjrgm7pj99yzmm7nip8nsj7v1") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.11 (c (n "sled") (v "0.15.11") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0lj2s7w1iwm4gmcvbkzhz1q37rsp67qcldc0qmjykvga5rwmgy0f") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.12 (c (n "sled") (v "0.15.12") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "13g8nhk9l4qblmbmlmwmzb7dq2a1dw096gh420qr5pxcx0mf0qmw") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.13 (c (n "sled") (v "0.15.13") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0lipxxnla39vvgakb0wp313j38zmx5jpvzw9pd7q3sfcjgbcqihm") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.14 (c (n "sled") (v "0.15.14") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0zwab72yq3q51czr011winwpfm9jz451s1dgipxk9fnxk3q8rd3d") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.15 (c (n "sled") (v "0.15.15") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1f12vgw4gnzb0qryj3xircjl5z21j2k3fm3d37jz3nx9fqx94l5m") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.16 (c (n "sled") (v "0.15.16") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1hgaivycs3iik4z37lamdkwgxfqpn0gm1bcpnf1w0id0zdqryjdw") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.17 (c (n "sled") (v "0.15.17") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1hj8qlca89bmd8ydd8aimly3jbn17dalb67vnfnb42wg8gzqq26v") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.19 (c (n "sled") (v "0.15.19") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0ambkk4iksb0jcq57i5w1k07hc3s7pfjv1gx50mv6z8253as7rnc") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.20 (c (n "sled") (v "0.15.20") (d (list (d (n "bincode") (r "^1.0") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "15fhxgp33i8gbxsjz9985523p0avx0j2ma9cqgsmy1lg2n290aaa") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.15.21 (c (n "sled") (v "0.15.21") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1gr8k1g15mncq608vzpjd7q2d896xgncwmgmsisqn364nb22db1n") (f (quote (("zstd" "pagecache/zstd") ("rayon" "pagecache/rayon") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.0 (c (n "sled") (v "0.16.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0ap539mk2zca7bgdbav4kl4ipp0cx8lkwh88f0ka3w325ybk67b2") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.1 (c (n "sled") (v "0.16.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1y16l9cn69vg7g27qdbsmi449m9aznvf51hc1v0qbgb0x5wd6j6d") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.2 (c (n "sled") (v "0.16.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1ilxlaywf54vfz0y40ghcmdbqc9zqims0hbaqj0mvwjd8282pjr1") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.3 (c (n "sled") (v "0.16.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.1") (d #t) (k 0)))) (h "0jblf0276cbdi08f3lgad8ii9bhjyi415jlxbw3gk29db907mvmd") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.4 (c (n "sled") (v "0.16.4") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.1") (d #t) (k 0)))) (h "01lkg3kfzvzanm2k1vw9mm4xqn2fi9qw10p0kf1xdfqnmbf7m1p7") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.5 (c (n "sled") (v "0.16.5") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.1") (d #t) (k 0)))) (h "0m83l21dphwj8ccjlbr7yphcv265dmzvvx86plwzdvn9mfhh2bza") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.6 (c (n "sled") (v "0.16.6") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.7.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.1") (d #t) (k 0)))) (h "0qplj8la57asn6qbhf1yy3wbr2mfr4fjnxr9nznsm4rqxjpjgqz7") (f (quote (("zstd" "pagecache/zstd") ("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.7 (c (n "sled") (v "0.16.7") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.2") (d #t) (k 0)))) (h "10av39w1p79ghj2gm3ymiqjh3jknbz5q39z71cisyfs32kl70wwv") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.8 (c (n "sled") (v "0.16.8") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.2") (d #t) (k 0)))) (h "02n7l2xmw927fwshcqlfbjwm2h8ab0hfabc58liqz2khgvwj35as") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.9 (c (n "sled") (v "0.16.9") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "sled_sync") (r "^0.2") (d #t) (k 0)))) (h "1jq8a6vs32ndr353ymwr2wwl2d5dvkkk4g5hbr9064xylgrgnwl1") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.10 (c (n "sled") (v "0.16.10") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2") (d #t) (k 0)))) (h "1sj1yd5xg89vk4zzwfr51danr5qv5djlyi00m02w6fsgkhk683i9") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.16.11 (c (n "sled") (v "0.16.11") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2") (d #t) (k 0)))) (h "0fkbvmkdl685h3ljrq59djzpxc9vn8a5z4a5amv12ldxvyx9vjs9") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.17.1 (c (n "sled") (v "0.17.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2.2") (d #t) (k 0)))) (h "0yn6sbp9dzxwlq2bs8fwpkg85yxm7j68547cjahgxngivb9mv240") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.17.2 (c (n "sled") (v "0.17.2") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2.2") (d #t) (k 0)))) (h "0kwniabjckfx06qmrd3mvzvvbqhs8pw28sbjw75bb6qdyzrp2l0m") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.17.3 (c (n "sled") (v "0.17.3") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2.2") (d #t) (k 0)))) (h "0dfg3cxr4c02kcbzmnib5fy50fivgdqawlm2dp1ykhg75ynkpm6z") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.17.4 (c (n "sled") (v "0.17.4") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.9.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2.2") (d #t) (k 0)))) (h "16bawk6nl549idmajgl9zi9pz81y2klr0zpr9scsmbb829y118yk") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.17.9 (c (n "sled") (v "0.17.9") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.9.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.2.2") (d #t) (k 0)))) (h "1lwyd2wn6baa27hrbb9vnvgc7q5664nhgrn7zkaxar8ywyz2m1pj") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.18.0 (c (n "sled") (v "0.18.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.3") (d #t) (k 0)))) (h "00mbqn0gmskry2pzp103fmdmnyknbvlap2wdsy9xn3xz7xq6sdwj") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.18.1 (c (n "sled") (v "0.18.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.3") (d #t) (k 0)))) (h "08zwad0hk58y8m2xafdqb6p4phd5y903ih0i094c258ksvpmp58l") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.19.0 (c (n "sled") (v "0.19.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled_sync") (r "^0.3") (d #t) (k 0)))) (h "1jccnpk2im5wlc37fh5j9vv0grvwx9zpdqfqm50vv2awq9r5i2pl") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays" "sled_sync/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.20.0 (c (n "sled") (v "0.20.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "0wg79lsdv3sxh2by3jzb475p40hpam0y3cwnb5iy1qb3y466r7f9") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.20.1 (c (n "sled") (v "0.20.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "14i7r7r4xsq7a9gbrh3ii9lixkjfai9vh20al8ps0vkk0fk057a2") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.21.0 (c (n "sled") (v "0.21.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "0l4njxi3vf8kzh7ifikpay3951m2ncgdgvfbd0njilkqgg7s0lk7") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.21.1 (c (n "sled") (v "0.21.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "0g25k1kamjgx0jbbcdv6j7bg0jd89iydply3nl938srvk2nmwijp") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.21.2 (c (n "sled") (v "0.21.2") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "070hvykj9fj2l83d269fqg035zr0l631xh18s33f8jgx1090zcpg") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.21.3 (c (n "sled") (v "0.21.3") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.14.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "1z9h2nh50rvc6w23ixhw18mi9yixwb9mw6ch2g474g9lacxglg0f") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity")))) (y #t)))

(define-public crate-sled-0.21.4 (c (n "sled") (v "0.21.4") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "01kif6giqdap4l6d3zq736arh2n6kd7c0bjfjx9kw2sqfr9pwiqm") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.22.0 (c (n "sled") (v "0.22.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "0gq3gb479a1wdng2w4si18g6pgrnjx6438hkcl3j1xli81zcrp2v") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.22.1 (c (n "sled") (v "0.22.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)))) (h "1lxya63gzs10cfnca95w5xipmsyk7shk0ywdcdibx1jcgry4kan3") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("nightly" "pagecache/nightly") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.23.0 (c (n "sled") (v "0.23.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0wliw3m0m06chpx6vg3z5qaj6fdgvci5g7z3jhxv8dgislj5r8kk") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.24.0 (c (n "sled") (v "0.24.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0591vgkvhhkvbknnp39j4f4ws45b374mn5gjjlm5hxvwwb7s3wwz") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity")))) (y #t)))

(define-public crate-sled-0.24.1 (c (n "sled") (v "0.24.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1ai3plx054lpxd98xa9swd96vz7c3bhi005b5kjp1qj1s9k04y0a") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.25.0 (c (n "sled") (v "0.25.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0m8lzixhy5j35aihi7grxqb405hvg1xilq3svm68pwcgv9569kkr") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity"))))))

(define-public crate-sled-0.26.0 (c (n "sled") (v "0.26.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.19") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0wkgg9y17yigk574h33xcq3g6kc80kj52pvv8lwd3bif47magvd9") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity"))))))

(define-public crate-sled-0.26.2 (c (n "sled") (v "0.26.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r ">= 0.19.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "180n2zn0pfzbyy1kh2d2i4s6nbg6a4dsq980m6mm37fks0bwrlsn") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity")))) (y #t)))

(define-public crate-sled-0.26.3 (c (n "sled") (v "0.26.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pagecache") (r "^0.19.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0z9dacxhisgir2ky1920qy3f3pp74xgi9r5y5am5g3cq09alqmfg") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity"))))))

(define-public crate-sled-0.27.0 (c (n "sled") (v "0.27.0") (d (list (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pagecache") (r "^0.19.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)))) (h "0vys4rv4pb8yn1kx882kd54wzwdcmg6yawsxsj05bml3m03vxjlr") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity"))))))

(define-public crate-sled-0.28.0 (c (n "sled") (v "0.28.0") (d (list (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pagecache") (r "^0.19.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)))) (h "17c036y05sg67bs9s501n10rbn05n8acahbna41h5lc0rgyhygcw") (f (quote (("no_metrics" "pagecache/no_metrics") ("no_logs" "log/max_level_off" "pagecache/no_logs") ("no_inline" "pagecache/no_inline") ("measure_allocs" "pagecache/measure_allocs") ("lock_free_delays" "pagecache/lock_free_delays") ("failpoints" "pagecache/failpoints") ("event_log" "pagecache/event_log") ("default") ("compression" "pagecache/compression") ("check_snapshot_integrity" "pagecache/check_snapshot_integrity"))))))

(define-public crate-sled-0.29.0 (c (n "sled") (v "0.29.0") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crdts") (r "^1.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.7.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "zstd") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "0av9rnkpmvx9a064sqci391q86n7wrigc8likvgj208hfpz1za3i") (f (quote (("testing" "lock_free_delays" "check_snapshot_integrity" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr" "parking_lot/deadlock_detection") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.29.1 (c (n "sled") (v "0.29.1") (d (list (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crdts") (r "^1.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.7.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.0") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "zstd") (r "^0.4.28") (o #t) (d #t) (k 0)))) (h "1k8kspmds1w4d0rj160jpn2jdvqmylha1ian7x6h2agk23biz7sl") (f (quote (("testing" "lock_free_delays" "check_snapshot_integrity" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr" "parking_lot/deadlock_detection") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd") ("check_snapshot_integrity"))))))

(define-public crate-sled-0.29.2 (c (n "sled") (v "0.29.2") (d (list (d (n "bincode") (r "^1.2.0") (d #t) (k 0)) (d (n "color-backtrace") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crdts") (r "^1.3.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.7.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.6.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.2") (d #t) (k 0)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0vi8bfdgm1ig609jn1cb12yll8ahcs6zdjbws6ypm9znw0ylbhyp") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.30.0 (c (n "sled") (v "0.30.0") (d (list (d (n "color-backtrace") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "liburing") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "10zb8d1w3hsdkrbqay0ad7ydhajqy8lhanji5mzipd7dkq90gvfi") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("io_uring" "liburing") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.30.1 (c (n "sled") (v "0.30.1") (d (list (d (n "color-backtrace") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "liburing") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "1cfg781ri07a699jfnrm5fzziigyn6b1cgq1grpd2pjxx5ssyscf") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("io_uring" "liburing") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.30.2 (c (n "sled") (v "0.30.2") (d (list (d (n "color-backtrace") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "liburing") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0a97rmn8v5pxkb4pwdmldk9x2ms9kj7k30lp7g7diymnwg0hhv6k") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("io_uring" "liburing") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.30.3 (c (n "sled") (v "0.30.3") (d (list (d (n "color-backtrace") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "liburing") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "0wbd6d4lhg3g2fh8hc47zizwrl1m8rzsgqgsfjnnfkp3n0nc7f1f") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("io_uring" "liburing") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.31.0 (c (n "sled") (v "0.31.0") (d (list (d (n "color-backtrace") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fail") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.3.0") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.65") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.5.0") (o #t) (d #t) (k 0)))) (h "18qg0vjxmxx21shjkhf3ify73f42bdplgs6642zk7bb6vr6q5dlg") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays" "rand" "rand_chacha" "rand_distr") ("io_uring" "rio") ("failpoints" "fail" "rand" "fail/failpoints") ("event_log") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.32.0-rc1 (c (n "sled") (v "0.32.0-rc1") (d (list (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.2") (o #t) (d #t) (k 0)))) (h "0zpx59lsr1n44mmysnz4szcl6vm7jsw0ina48smkb4f12slavl29") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.32.0 (c (n "sled") (v "0.32.0") (d (list (d (n "backtrace") (r "^0.3.49") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1i4q308kdi7ldm7wlfndnq0jg8nq4bgzym4rpp9md048bp43vbfd") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.32.1 (c (n "sled") (v "0.32.1") (d (list (d (n "array-init") (r "^0.1.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.49") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1n1s8fwwi722aizfvq7pcn1vzjwwb4kpqxi0s38inq8hxswbngby") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.33.0 (c (n "sled") (v "0.33.0") (d (list (d (n "array-init") (r "^0.1.1") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.49") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "0ar6bq05i1p1302raav03y45w4gwc849jkkmdzzyr8vmfghdc7vh") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.0 (c (n "sled") (v "0.34.0") (d (list (d (n "backtrace") (r "^0.3.50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1kmh1w7i9km2gmwc0p7wvy3z9351171vdg76xwlcil5n68wfsaib") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.1 (c (n "sled") (v "0.34.1") (d (list (d (n "backtrace") (r "^0.3.50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1himbwxxj9s3y9a10qanfg0krc3zz419dklsyfahsyip9fg0kld2") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.2 (c (n "sled") (v "0.34.2") (d (list (d (n "backtrace") (r "^0.3.50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1bqdzrklxrylx0b70b4p09zivccdc202y796g9rfpmqi41cinsly") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.3 (c (n "sled") (v "0.34.3") (d (list (d (n "backtrace") (r "^0.3.50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "0igvryp6knxqy2yqajhs7iyi60xwqd2mxczs1319ngqcbg1mdgzw") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.4 (c (n "sled") (v "0.34.4") (d (list (d (n "backtrace") (r "^0.3.50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.7.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.72") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rio") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1rzxc1zbhikdzbf617x9yf21cgq9b265iwq7mlw33jpvcd70cb7p") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.5 (c (n "sled") (v "0.34.5") (d (list (d (n "backtrace") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rio") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "0p61p1i3gj5ir2qvzfz8kgpmwsg8srpb6zbpcbsqhfx1y8d9ia9l") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.6 (c (n "sled") (v "0.34.6") (d (list (d (n "backtrace") (r "^0.3.54") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9.0") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rio") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.5.3") (o #t) (d #t) (k 0)))) (h "1p1c6vv6jay0jmziv8mppi84bkwqjiv4bfv01hwvgg4kwgrk408x") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-0.34.7 (c (n "sled") (v "0.34.7") (d (list (d (n "backtrace") (r "^0.3.61") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 2)) (d (n "color-backtrace") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.9.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"windows\"))") (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.101") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 2)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "rio") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "zerocopy") (r "^0.3.0") (d #t) (k 2)) (d (n "zstd") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0dcr2s7cylj5mb33ci3kpx7fz797jwvysnl5airrir9cgirv95kz") (f (quote (("testing" "event_log" "lock_free_delays" "compression" "failpoints" "backtrace") ("pretty_backtrace" "color-backtrace") ("no_metrics") ("no_logs" "log/max_level_off") ("no_inline") ("mutex") ("miri_optimizations") ("measure_allocs") ("lock_free_delays") ("io_uring" "rio") ("failpoints") ("event_log") ("docs") ("default" "no_metrics") ("compression" "zstd"))))))

(define-public crate-sled-1.0.0-alpha.1 (c (n "sled") (v "1.0.0-alpha.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "heed") (r "^0.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marble") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "old_sled") (r "^0.34") (d #t) (k 2) (p "sled")) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "13b67h9cls9yhawx2ibg6rd5qzzdw2aisd908v24lc76c37xxq1s")))

(define-public crate-sled-1.0.0-alpha.101 (c (n "sled") (v "1.0.0-alpha.101") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "heed") (r "^0.11.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marble") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "old_sled") (r "^0.34") (d #t) (k 2) (p "sled")) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1gid6ngcy0n2m9m8mmggb0f6fjwhqdwfj16cz2m92awcpv6fsvwn")))

(define-public crate-sled-1.0.0-alpha.102 (c (n "sled") (v "1.0.0-alpha.102") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heed") (r "^0.11.0") (d #t) (k 2)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "old_sled") (r "^0.34") (d #t) (k 2) (p "sled")) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "0a401n45fha39vs78jp5da4w90l4a050gdicy7ywl7chxyzg5asa")))

(define-public crate-sled-1.0.0-alpha.103 (c (n "sled") (v "1.0.0-alpha.103") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heed") (r "^0.11.0") (d #t) (k 2)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "old_sled") (r "^0.34") (d #t) (k 2) (p "sled")) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "0igvsffcl316qi873b4yjvkwzjsfgspdd5zkx4nil7c76gprww3d")))

(define-public crate-sled-1.0.0-alpha.104 (c (n "sled") (v "1.0.0-alpha.104") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1ygb3swdz0f10jvmy87gryiiy3hxmjz8i7i0m695531dfvka975h") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.105 (c (n "sled") (v "1.0.0-alpha.105") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "13n7m4jaqmx8cbw7cafpfiazi4r97kdkgf5dkw7qxv6yflv6sg1r") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.106 (c (n "sled") (v "1.0.0-alpha.106") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "127qfdgx0d107imh4bl1gg1zcryjaq378mm4b1jg41dd46j4wkpr") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.107 (c (n "sled") (v "1.0.0-alpha.107") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "0apx0r0ayhznm7cmix20ksjnx8xn8afdamvbvyc8yzf3mxsgxnak") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.108 (c (n "sled") (v "1.0.0-alpha.108") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1gpqkq0ysmnzy39pjw5b12s3mp0afg74fqiqpg29wpgxvbn0c2l5") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.109 (c (n "sled") (v "1.0.0-alpha.109") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.12") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.11") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "13z2wkfv2608ipyri32b7m1vnwnvpbsbwnrnb525jkqfr26dgq6p") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.110 (c (n "sled") (v "1.0.0-alpha.110") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "10vwj8z1l1gwswbm85dak4hmr3dv8vbxljw9g2wa4rczjzvx2y85") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.111 (c (n "sled") (v "1.0.0-alpha.111") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "0fmsi2y7zh9bbhxncljq4dbq5h86ss7b4cm1hwz1kajav7anfgjq") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.112 (c (n "sled") (v "1.0.0-alpha.112") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "064b8vdb26crgwn34a8sgnafzyra9plrxc5kqivk6g2d8ck658ys") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.113 (c (n "sled") (v "1.0.0-alpha.113") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1xf2ck6pzjpvw1aayanl7zqza202mn92ic2cl4l9mlfmsnm43wcp") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.114 (c (n "sled") (v "1.0.0-alpha.114") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1p78wvm5r70j3v3h7byfk8h7vjc3r1fb528318zrig2dzxjghr65") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.115 (c (n "sled") (v "1.0.0-alpha.115") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "07drzyvlaf4c984a42mmc97qcdaap9khk6s68p4cvg0nln5v3jc0") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.116 (c (n "sled") (v "1.0.0-alpha.116") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1ylsp3j3rrj6f36dxvfh7ws4j54ag1cgkdppgrhrn6cq7c003js0") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.117 (c (n "sled") (v "1.0.0-alpha.117") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "0zbracwg7c8n4fpmfsmv9dg65w45hpscmgv2vbc1wy34p2ibxdxj") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.118 (c (n "sled") (v "1.0.0-alpha.118") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1dzy5n23spm00spgcy01h2c7y2rxjzwqsbnf91v6sx7c9dmkbnhb") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.119 (c (n "sled") (v "1.0.0-alpha.119") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "171jznc9q5v50rhmlqis5dbv06jli4cbwcylcijkpdxrylclh1cp") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.120 (c (n "sled") (v "1.0.0-alpha.120") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1lmsq6h3vgsaskipljrqc8kv0fcfc4rbv3cpkwjkz6fvjighbybl") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

(define-public crate-sled-1.0.0-alpha.121 (c (n "sled") (v "1.0.0-alpha.121") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "cache-advisor") (r "^1.0.16") (d #t) (k 0)) (d (n "concurrent-map") (r "^5.0.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (d #t) (k 0)) (d (n "ebr") (r "^0.2.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fault-injection") (r "^1.0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "inline-array") (r "^0.1.12") (f (quote ("serde" "concurrent_map_minimum"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "num-format") (r "^0.4.4") (d #t) (k 2)) (d (n "pagetable") (r "^0.4.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "stack-map") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 0)) (d (n "zstd") (r "^0.12.4") (d #t) (k 0)))) (h "1znhjszzi7kyvhmgfp3qr47155lrzs21a9x068gdixjm4cmya4sc") (f (quote (("testing-shred-allocator") ("testing-count-allocator") ("for-internal-testing-only"))))))

