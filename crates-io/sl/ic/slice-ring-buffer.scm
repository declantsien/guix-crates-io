(define-module (crates-io sl ic slice-ring-buffer) #:use-module (crates-io))

(define-public crate-slice-ring-buffer-0.3.1 (c (n "slice-ring-buffer") (v "0.3.1") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(unix, target_os = \"dragonfly\"))") (k 0)) (d (n "mach") (r "^0.3") (t "cfg(all(any(target_os = \"macos\", target_os = \"ios\"), not(feature = \"unix_sysv\")))") (k 0)) (d (n "winapi") (r "0.3.*") (f (quote ("memoryapi" "handleapi" "sysinfoapi" "winbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ciwk9qrxk6spfha58377y0q8gj9xcb0vzgdx8m3mqga02nhgrl8") (f (quote (("use_std" "libc/use_std") ("unix_sysv") ("default" "use_std")))) (y #t)))

(define-public crate-slice-ring-buffer-0.3.2 (c (n "slice-ring-buffer") (v "0.3.2") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(unix, target_os = \"dragonfly\"))") (k 0)) (d (n "mach") (r "^0.3") (t "cfg(all(any(target_os = \"macos\", target_os = \"ios\"), not(feature = \"unix_sysv\")))") (k 0)) (d (n "winapi") (r "0.3.*") (f (quote ("memoryapi" "handleapi" "sysinfoapi" "winbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "14yq42d844dr90whhm7cm9jki90icf2cd6d9f9k7mz82jd2fpj7w") (f (quote (("use_std" "libc/use_std") ("unix_sysv") ("default" "use_std"))))))

(define-public crate-slice-ring-buffer-0.3.3 (c (n "slice-ring-buffer") (v "0.3.3") (d (list (d (n "libc") (r "^0.2") (t "cfg(any(unix, target_os = \"dragonfly\"))") (k 0)) (d (n "mach2") (r "^0.4.1") (t "cfg(all(any(target_os = \"macos\", target_os = \"ios\"), not(feature = \"unix_sysv\")))") (k 0)) (d (n "winapi") (r "0.3.*") (f (quote ("memoryapi" "handleapi" "sysinfoapi" "winbase"))) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0xvb2ssx68wap25xy189x4ivpgciack4xp9fqgqgaqnbabjcg0bh") (f (quote (("use_std" "libc/use_std") ("unix_sysv") ("default" "use_std"))))))

