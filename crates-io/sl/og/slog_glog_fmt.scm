(define-module (crates-io sl og slog_glog_fmt) #:use-module (crates-io))

(define-public crate-slog_glog_fmt-0.1.0 (c (n "slog_glog_fmt") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fb_failure_ext") (r "^0.1.0") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 2)) (d (n "slog") (r "^2.5") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "0bg3bc17pi5z3qf6l0wrbxjaracks3gmm1iqqxggqg0ivrpgklyx")))

(define-public crate-slog_glog_fmt-0.1.1 (c (n "slog_glog_fmt") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fb_failure_ext") (r "^0.1.0") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 2)) (d (n "slog") (r "^2.5") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "0hv1ymha7dr5h0kfkyzi2cfrq75if8016k9rggfdwqjq0lyaw71s")))

(define-public crate-slog_glog_fmt-0.1.2 (c (n "slog_glog_fmt") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fb_failure_ext") (r "^0.1") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 2)) (d (n "slog") (r "^2.5") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "1fx6y2d5gav2p1bi242vvdk195vqx5ilk1iy9yal9gdr6fxvqpm6")))

(define-public crate-slog_glog_fmt-0.1.3 (c (n "slog_glog_fmt") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "fb_failure_ext") (r "^0.1") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "nix") (r "^0.17") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 2)) (d (n "slog") (r "^2.5") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 2)))) (h "1wjr342v5axf6277v0zxhqc5jfyrk1rnx5m3mrh0m0c78k20ckg9")))

(define-public crate-slog_glog_fmt-0.1.4 (c (n "slog_glog_fmt") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde" "std"))) (k 0)) (d (n "fb_failure_ext") (r "^0.1.0") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "nix") (r "^0.25") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "nix") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.2") (d #t) (k 2)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 2)))) (h "1jzkx31qp1kn3gb5i42gfyilac2m62b0id56zi3lx4hypcjl4wn1")))

(define-public crate-slog_glog_fmt-0.1.5 (c (n "slog_glog_fmt") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde" "std"))) (k 0)) (d (n "fb_failure_ext") (r "^0.2") (d #t) (k 0)) (d (n "hostname") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "nix") (r "^0.25") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "nix") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.9.2") (d #t) (k 2)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 2)))) (h "0fs8gw1lk9jajs6nqi2ksmmldafm5ndp2w1dvnzm47xvwb068ckx")))

