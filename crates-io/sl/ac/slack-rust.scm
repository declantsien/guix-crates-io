(define-module (crates-io sl ac slack-rust) #:use-module (crates-io))

(define-public crate-slack-rust-0.0.1-alpha (c (n "slack-rust") (v "0.0.1-alpha") (d (list (d (n "async-std") (r "^1.10.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-tls") (r "^0.11.0") (f (quote ("client"))) (k 0)) (d (n "async-tls") (r "^0.11.0") (f (quote ("server"))) (k 2)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "mockall") (r "^0.11.0") (d #t) (k 2)) (d (n "rustls") (r "^0.19.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (f (quote ("serde_with_macros"))) (d #t) (k 0)) (d (n "surf") (r "^2.3.1") (f (quote ("curl-client" "encoding"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1wb32dhv2n8hlspgb282b0ypj3vgpyd8vg8i2g5x519yay2rbxbp")))

