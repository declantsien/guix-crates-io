(define-module (crates-io sl in slint-lsp) #:use-module (crates-io))

(define-public crate-slint-lsp-0.2.0 (c (n "slint-lsp") (v "0.2.0") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.0") (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.0") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5") (d #t) (k 0)) (d (n "lsp-types") (r "^0.92.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.0") (f (quote ("compat-0-2-0"))) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 0)))) (h "09a985z26am3ggs1655xygqm0s5j8xd23jxv2kpbqflf8g0sb2fv") (f (quote (("default" "backend-qt" "backend-gl-all") ("backend-qt" "slint-interpreter/backend-qt") ("backend-gl-x11" "slint-interpreter/backend-gl-x11") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland") ("backend-gl-all" "slint-interpreter/backend-gl-all"))))))

(define-public crate-slint-lsp-0.2.1 (c (n "slint-lsp") (v "0.2.1") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.1") (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.1") (d #t) (k 0)) (d (n "lsp-server") (r "^0.5") (d #t) (k 0)) (d (n "lsp-types") (r "^0.92.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.1") (f (quote ("compat-0-2-0"))) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 0)))) (h "1sjm24kg71nhvybws4ddn7gj9mfjp8r1xlqs88wm0nr16pgnwvh1") (f (quote (("default" "backend-qt" "backend-gl-all") ("backend-qt" "slint-interpreter/backend-qt") ("backend-gl-x11" "slint-interpreter/backend-gl-x11") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland") ("backend-gl-all" "slint-interpreter/backend-gl-all"))))))

(define-public crate-slint-lsp-0.2.2 (c (n "slint-lsp") (v "0.2.2") (d (list (d (n "clap") (r "^3.1") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.2") (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.2") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.2") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.2") (f (quote ("compat-0-2-0"))) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 0)))) (h "16gkf5a6x14a75yn5kdvw4shcdnij9f0zwmihnndc16f7xbh3jqk") (f (quote (("default" "backend-qt" "backend-gl-all") ("backend-qt" "slint-interpreter/backend-qt") ("backend-gl-x11" "slint-interpreter/backend-gl-x11") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland") ("backend-gl-all" "slint-interpreter/backend-gl-all"))))))

(define-public crate-slint-lsp-0.2.3 (c (n "slint-lsp") (v "0.2.3") (d (list (d (n "clap") (r "^3.1") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.3") (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.3") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.3") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.3") (f (quote ("compat-0-2-0"))) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 0)))) (h "08va66ki76gfg70sx3gvapa46vazcvc7sn5bvd12y70x798hc717") (f (quote (("default" "backend-qt" "backend-gl-all") ("backend-qt" "slint-interpreter/backend-qt") ("backend-gl-x11" "slint-interpreter/backend-gl-x11") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland") ("backend-gl-all" "slint-interpreter/backend-gl-all"))))))

(define-public crate-slint-lsp-0.2.4 (c (n "slint-lsp") (v "0.2.4") (d (list (d (n "clap") (r "^3.1") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.4") (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.4") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.4") (d #t) (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (k 0)) (d (n "lsp-types") (r "^0.93.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.4") (f (quote ("compat-0-2-0"))) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 0)))) (h "1jj9spklg4nj1m2ixggwrpkvka53h5gdjkydra06cr25nprw8bin") (f (quote (("default" "backend-qt" "backend-gl-all") ("backend-qt" "slint-interpreter/backend-qt") ("backend-gl-x11" "slint-interpreter/backend-gl-x11") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland") ("backend-gl-all" "slint-interpreter/backend-gl-all"))))))

(define-public crate-slint-lsp-0.2.5 (c (n "slint-lsp") (v "0.2.5") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.2.5") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.2.5") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.2.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.2.5") (f (quote ("compat-0-2-0"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wbipgmdjidzvvcqfq3ysbp030alclkjgylkh5ckji5jlai1fk1p") (f (quote (("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector") ("default" "backend-qt" "backend-gl-all" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "slint-interpreter/backend-gl-x11" "preview") ("backend-gl-wayland" "slint-interpreter/backend-gl-wayland" "preview") ("backend-gl-all" "slint-interpreter/backend-gl-all" "preview")))) (r "1.59")))

(define-public crate-slint-lsp-0.3.0 (c (n "slint-lsp") (v "0.3.0") (d (list (d (n "clap") (r "^3.2") (f (quote ("derive" "wrap_help"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.0") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.0") (f (quote ("compat-0-3-0"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03b4hhyr0sl8k5cayara6prqy7a77fwslr0wyiar32iv6mbw2d62") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.60")))

(define-public crate-slint-lsp-0.3.1 (c (n "slint-lsp") (v "0.3.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.1") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.1") (f (quote ("compat-0-3-0"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.80") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yxjrhy1haswlb4iaw1pbx0kgxmfhlgcdd9js8xi653vbl6h60pb") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.60")))

(define-public crate-slint-lsp-0.3.2 (c (n "slint-lsp") (v "0.3.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.2") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.2") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.2") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.2") (f (quote ("compat-0-3-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1afa0h7xjrk5vzjcz2gzl7npfgbznriyz5py78nbhczqdk3kmqqp") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector" "preview-lense") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.60")))

(define-public crate-slint-lsp-0.3.3 (c (n "slint-lsp") (v "0.3.3") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.3") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.3") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.3") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.3") (f (quote ("compat-0-3-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1qilhy09qr5kja3csszjnk3jq70q0b2kl11an97cwpi8wc3x0gxs") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector" "preview-lense") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.64")))

(define-public crate-slint-lsp-0.3.4 (c (n "slint-lsp") (v "0.3.4") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.4") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.4") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.4") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.93.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.4") (f (quote ("compat-0-3-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "004wjgazdh9iifd9hn96nd9aa8zqyf6vg1wy2hayyfd4adj2ixzl") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector" "preview-lense" "preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.64")))

(define-public crate-slint-lsp-0.3.5 (c (n "slint-lsp") (v "0.3.5") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=0.3.5") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=0.3.5") (d #t) (k 0)) (d (n "i-slint-core") (r "=0.3.5") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=0.3.5") (f (quote ("compat-0-3-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0233f09p4yrh0m0kldf5z6wc6sj3bcnpgx3256cyjxqdl7670j7f") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector" "preview-lense" "preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.64")))

(define-public crate-slint-lsp-1.0.0 (c (n "slint-lsp") (v "1.0.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.0.0") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.0.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.0.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.0.0") (f (quote ("compat-1-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0x85ydwdqifqanawvav4bwiq6zxz5qfd97qp07kx69adgg2lnpjj") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("preview" "slint-interpreter" "i-slint-core" "i-slint-backend-selector" "image" "preview-lense" "preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (r "1.66")))

(define-public crate-slint-lsp-1.0.1 (c (n "slint-lsp") (v "1.0.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.0.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.0.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.0.1") (f (quote ("compat-1-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1sj10am03cq8vs7qfszcmqgz0ps0ln1pw07nw9clv3akqqj222c0") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.0.2 (c (n "slint-lsp") (v "1.0.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.0.2") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.0.2") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.0.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.0.2") (f (quote ("compat-1-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04gcqcvww5la1vnbdbl4kihd81iwqc15054gf1daxnjv8ccxgrq3") (f (quote (("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.1.0 (c (n "slint-lsp") (v "1.1.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.1.0") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.1.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.1.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.1.0") (f (quote ("compat-1-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1q35iin5gmn41b6xbgl3yblja9x6rwjcz7r79wyajg83401yknif") (f (quote (("renderer-winit-skia-vulkan" "slint-interpreter/renderer-winit-skia-vulkan" "preview") ("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.1.1 (c (n "slint-lsp") (v "1.1.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.1.1") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.1.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.1.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.1.1") (f (quote ("compat-1-0" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0346km4cg95ky83in2bxgh2mrqdkmap99n6wsshs72pycjc193xp") (f (quote (("renderer-winit-skia-vulkan" "slint-interpreter/renderer-winit-skia-vulkan" "preview") ("renderer-winit-skia-opengl" "slint-interpreter/renderer-winit-skia-opengl" "preview") ("renderer-winit-skia" "slint-interpreter/renderer-winit-skia" "preview") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "slint-interpreter/renderer-winit-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-winit-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-winit-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-winit-femtovg") ("backend-gl-all" "backend-winit" "renderer-winit-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.2.0 (c (n "slint-lsp") (v "1.2.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.2.0") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.2.0") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.2.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.2.0") (f (quote ("compat-1-2" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1k0fpvz58m6icirvb6nzgslvg85x0r3g7xi9rqarlhy55a4nhz81") (f (quote (("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint-interpreter/renderer-software" "preview") ("renderer-skia-vulkan" "slint-interpreter/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint-interpreter/renderer-skia-opengl" "preview") ("renderer-skia" "slint-interpreter/renderer-skia" "preview") ("renderer-femtovg" "slint-interpreter/renderer-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-linuxkms" "slint-interpreter/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.2.1 (c (n "slint-lsp") (v "1.2.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.2.1") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.2.1") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.2.1") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.2.1") (f (quote ("compat-1-2" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1h6gh13znf6cd7ksgwcbaara0dgq4gwwnba5nvmkvcyx1nl2805n") (f (quote (("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint-interpreter/renderer-software" "preview") ("renderer-skia-vulkan" "slint-interpreter/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint-interpreter/renderer-skia-opengl" "preview") ("renderer-skia" "slint-interpreter/renderer-skia" "preview") ("renderer-femtovg" "slint-interpreter/renderer-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-linuxkms" "slint-interpreter/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.2.2 (c (n "slint-lsp") (v "1.2.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dunce") (r "^1.0.1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.2.2") (o #t) (d #t) (k 0)) (d (n "i-slint-compiler") (r "=1.2.2") (d #t) (k 0)) (d (n "i-slint-core") (r "=1.2.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint-interpreter") (r "=1.2.2") (f (quote ("compat-1-2" "highlight"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "065fq6rdj9ppcaqxvplir51d9rfx9i18vwb332b35wr27lmmp5hr") (f (quote (("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint-interpreter/renderer-software" "preview") ("renderer-skia-vulkan" "slint-interpreter/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint-interpreter/renderer-skia-opengl" "preview") ("renderer-skia" "slint-interpreter/renderer-skia" "preview") ("renderer-femtovg" "slint-interpreter/renderer-femtovg" "preview") ("preview-lense") ("preview-api") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint-interpreter/backend-winit-x11" "preview") ("backend-winit-wayland" "slint-interpreter/backend-winit-wayland" "preview") ("backend-winit" "slint-interpreter/backend-winit" "preview") ("backend-qt" "slint-interpreter/backend-qt" "preview") ("backend-linuxkms" "slint-interpreter/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview" "slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "preview-lense" "preview-api")))) (r "1.66")))

(define-public crate-slint-lsp-1.3.0 (c (n "slint-lsp") (v "1.3.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.3.0") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-common") (r "=1.3.0") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.3.0") (f (quote ("default"))) (k 0)) (d (n "i-slint-core") (r "=1.3.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.3.0") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.3.0") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.3.0") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0qiychqj6v2saqx93hfw52hr0za6fxqh3zbgl5w1331nvc7vd1ss") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.3.1 (c (n "slint-lsp") (v "1.3.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.3.1") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-common") (r "=1.3.1") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.3.1") (f (quote ("default"))) (k 0)) (d (n "i-slint-core") (r "=1.3.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.3.1") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.3.1") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.3.1") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wjhsxhz46law7yy9hrg6kj2nzwv4zv4pijq7ls7znqhxjl69w4p") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.3.2 (c (n "slint-lsp") (v "1.3.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.3.2") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-common") (r "=1.3.2") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.3.2") (f (quote ("default"))) (k 0)) (d (n "i-slint-core") (r "=1.3.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.94.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.3.2") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.3.2") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.3.2") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gbm2flspah8ksw1ykxkcmvpnbvbqwv5di0qk2rayyky1w6qbgh6") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.4.0 (c (n "slint-lsp") (v "1.4.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.4.0") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-common") (r "=1.4.0") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.4.0") (f (quote ("default"))) (k 0)) (d (n "i-slint-core") (r "=1.4.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.95.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.4.0") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.4.0") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.4.0") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yxb9nxhibmnlj1yhmabayx573h2b2ij3bjs8nlkx51yqa6yirnl") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("experimental") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms-noseat" "slint/backend-linuxkms-noseat" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.4.1 (c (n "slint-lsp") (v "1.4.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.4.1") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-common") (r "=1.4.1") (f (quote ("default"))) (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.4.1") (f (quote ("default"))) (k 0)) (d (n "i-slint-core") (r "=1.4.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.95.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.4.1") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.4.1") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.4.1") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11m645vq0qxkiq7zb3cx4d2hl3l1b27l42in4n9f4z019i9jd0z0") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("experimental") ("eventloop-qt" "backend-qt") ("default" "backend-qt" "backend-winit" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms-noseat" "slint/backend-linuxkms-noseat" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.5.0 (c (n "slint-lsp") (v "1.5.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dissimilar") (r "^1.0.7") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.5.0") (o #t) (k 0)) (d (n "i-slint-common") (r "=1.5.0") (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.5.0") (f (quote ("display-diagnostics"))) (k 0)) (d (n "i-slint-core") (r "=1.5.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.95.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.5.0") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.5.0") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.5.0") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1v5c0v44qdywlbv13ynzkyspfgsswpdwpll4gbhqw5inpnk78axf") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-default" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms-noseat" "slint/backend-linuxkms-noseat" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg") ("backend-default" "slint/backend-default" "preview")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.5.1 (c (n "slint-lsp") (v "1.5.1") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dissimilar") (r "^1.0.7") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.5.1") (o #t) (k 0)) (d (n "i-slint-common") (r "=1.5.1") (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.5.1") (f (quote ("display-diagnostics"))) (k 0)) (d (n "i-slint-core") (r "=1.5.1") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.95.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.5.1") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.5.1") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.5.1") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0rr1w2yccvgh8biqqyzvkicc9q6f1hs24b9s212izb38knznj87i") (f (quote (("slint") ("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-default" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms-noseat" "slint/backend-linuxkms-noseat" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg") ("backend-default" "slint/backend-default" "preview")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.70")))

(define-public crate-slint-lsp-1.6.0 (c (n "slint-lsp") (v "1.6.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive" "wrap_help"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dissimilar") (r "^1.0.7") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "i-slint-backend-selector") (r "=1.6.0") (o #t) (k 0)) (d (n "i-slint-common") (r "=1.6.0") (o #t) (k 0)) (d (n "i-slint-compiler") (r "=1.6.0") (f (quote ("display-diagnostics"))) (k 0)) (d (n "i-slint-core") (r "=1.6.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg" "default"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.57") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lsp-server") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lsp-types") (r "^0.95.0") (f (quote ("proposed"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rowan") (r "^0.15.5") (d #t) (k 0)) (d (n "send_wrapper") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.60") (d #t) (k 0)) (d (n "slint") (r "=1.6.0") (f (quote ("compat-1-2"))) (o #t) (k 0)) (d (n "slint-build") (r "=1.6.0") (f (quote ("default"))) (o #t) (k 1)) (d (n "slint-interpreter") (r "=1.6.0") (f (quote ("compat-1-2" "highlight" "internal"))) (o #t) (k 0)) (d (n "spin_on") (r "^0.1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.80") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08vahh4d1jldrp65gyqpsjamhcwcb1rrk5kjiqnlvbr912yi20w0") (f (quote (("renderer-winit-software" "renderer-software") ("renderer-winit-skia-vulkan" "renderer-skia-vulkan") ("renderer-winit-skia-opengl" "renderer-skia-opengl") ("renderer-winit-skia" "renderer-skia") ("renderer-winit-qt" "backend-qt") ("renderer-winit-femtovg" "renderer-femtovg") ("renderer-software" "slint/renderer-software" "preview") ("renderer-skia-vulkan" "slint/renderer-skia-vulkan" "preview") ("renderer-skia-opengl" "slint/renderer-skia-opengl" "preview") ("renderer-skia" "slint/renderer-skia" "preview") ("renderer-femtovg" "slint/renderer-femtovg" "preview") ("preview-lense") ("preview-external") ("preview-builtin" "preview-engine") ("preview-api" "preview-external") ("preview" "preview-builtin" "preview-external" "preview-engine") ("eventloop-qt" "backend-qt") ("default" "backend-default" "renderer-femtovg" "preview") ("backend-winit-x11" "slint/backend-winit-x11" "preview") ("backend-winit-wayland" "slint/backend-winit-wayland" "preview") ("backend-winit" "slint/backend-winit" "preview") ("backend-qt" "slint/backend-qt" "preview") ("backend-linuxkms-noseat" "slint/backend-linuxkms-noseat" "preview") ("backend-linuxkms" "slint/backend-linuxkms" "preview") ("backend-gl-x11" "backend-winit-x11" "renderer-femtovg") ("backend-gl-wayland" "backend-winit-wayland" "renderer-femtovg") ("backend-gl-all" "backend-winit" "renderer-femtovg") ("backend-default" "slint/backend-default" "preview")))) (s 2) (e (quote (("preview-engine" "dep:slint" "dep:slint-interpreter" "dep:i-slint-core" "dep:i-slint-backend-selector" "dep:image" "dep:slint-build" "dep:i-slint-common")))) (r "1.73")))

