(define-module (crates-io nn v- nnv-rs) #:use-module (crates-io))

(define-public crate-nnv-rs-0.3.0 (c (n "nnv-rs") (v "0.3.0") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.1.3") (f (quote ("highs"))) (d #t) (k 0)) (d (n "highs") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (f (quote ("openblas-system"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.3.2") (d #t) (k 0)))) (h "08ck3l0bfzq458jjzcjv14galrhzmqridg474lvq78gmzsxl7yd3")))

(define-public crate-nnv-rs-0.4.0 (c (n "nnv-rs") (v "0.4.0") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (f (quote ("openblas-system"))) (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.3.3") (d #t) (k 0)))) (h "0g6n58jpxx7lpdda59alk388pipqq3xvxxw4pjwryv8jnkaf8akn")))

(define-public crate-nnv-rs-0.4.1 (c (n "nnv-rs") (v "0.4.1") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.3.4") (d #t) (k 0)))) (h "1kw27zvglpk2nwm3vpvmzp671a75cs5r14pr71gz832skdmsq02y") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon") ("openblas-system" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.4.2 (c (n "nnv-rs") (v "0.4.2") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.3.4") (d #t) (k 0)))) (h "0c4jxas8y4n6kpwyqr5xxsgcqvaps26zb3zwckkys56rlzzhi41v") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon") ("openblas-system" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.5.0 (c (n "nnv-rs") (v "0.5.0") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.4.0") (d #t) (k 0)))) (h "16v37hf1a61p06ilbgnwd7nln7j6i338ln44643jcdyadwbzh5nh") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon") ("openblas-system" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.5.1 (c (n "nnv-rs") (v "0.5.1") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.4.0") (d #t) (k 0)))) (h "1qssn26hzw618mjlj9h72zrvfvc1yd7s4vh21fbqncqf21rpaf6m") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon") ("openblas-system" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.5.2 (c (n "nnv-rs") (v "0.5.2") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("cblas" "system"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.4.1") (d #t) (k 0)))) (h "0a1sfm147g8rb18i7dbk732qpiwsks06v6rhq4ilmiqn7y1f0m0q") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon" "good_lp/minilp") ("openblas-system" "ndarray/blas" "blas-src" "openblas-src" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.5.3 (c (n "nnv-rs") (v "0.5.3") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.2.0") (f (quote ("coin_cbc"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.2") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (f (quote ("cblas" "system"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.4.1") (d #t) (k 0)))) (h "0nshqrb52hxk6jg07jg89nwyccfgfpxvmlzg79rsdzpiibvcmrsx") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon" "good_lp/minilp") ("openblas-system" "ndarray/blas" "blas-src" "openblas-src" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl") ("default" "openblas-system"))))))

(define-public crate-nnv-rs-0.5.4 (c (n "nnv-rs") (v "0.5.4") (d (list (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("run-for-all" "precommit-hook" "run-cargo-check" "run-cargo-fmt"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas" "system"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.4.3") (d #t) (k 0)))) (h "0x3qggqc2ix54wi39nn0x1ad4lipi057m7firj8rv5bxlfzvnm4d") (f (quote (("rayon" "ndarray/rayon" "truncnorm/rayon") ("lp_gurobi" "grb") ("lp_coincbc" "good_lp/coin_cbc") ("blas_openblas-system" "ndarray/blas" "blas-src" "openblas-src" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("blas_intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.6.0 (c (n "nnv-rs") (v "0.6.0") (d (list (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas" "system"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "pprof") (r "^0.5") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.131") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.5.0") (d #t) (k 0)))) (h "1rk8fq7gkfysl5qbq7gsvzhy58rxyxibhcrrqllvzk8v3ypv7jly") (f (quote (("lp_gurobi" "grb") ("lp_coincbc" "good_lp/coin_cbc") ("blas_openblas-system" "ndarray/blas" "blas-src" "openblas-src" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("blas_intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

(define-public crate-nnv-rs-0.6.1 (c (n "nnv-rs") (v "0.6.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "coin_cbc") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.5") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "good_lp") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "grb") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "log4rs") (r "^1.0.0") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14.1") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10.4") (f (quote ("cblas" "system"))) (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "pprof") (r "^0.7.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "shh") (r "^1.0.1") (d #t) (k 0)) (d (n "truncnorm") (r "^0.5.1") (d #t) (k 0)) (d (n "typetag") (r "^0.1.8") (d #t) (k 0)))) (h "1yhsk4qf3rq0dpk3xqgiiqcb4ms8s7ny928qxniq0f9315gpwpx4") (f (quote (("lp_gurobi" "grb") ("lp_coincbc" "good_lp/coin_cbc" "coin_cbc") ("blas_openblas-system" "ndarray/blas" "blas-src" "openblas-src" "ndarray-linalg/openblas-system" "truncnorm/openblas-system") ("blas_intel-mkl" "ndarray-linalg/intel-mkl" "truncnorm/intel-mkl"))))))

