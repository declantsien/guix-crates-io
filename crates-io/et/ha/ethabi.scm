(define-module (crates-io et ha ethabi) #:use-module (crates-io))

(define-public crate-ethabi-0.2.0 (c (n "ethabi") (v "0.2.0") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.7.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.7") (d #t) (k 0)) (d (n "serde_macros") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "syntex") (r "^0.32.0") (d #t) (k 1)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "1bbxcdkz41ris2zai6vbhxlq3rxp514crg5pnm05xxsxxgiszx2s") (f (quote (("nightly" "serde_macros") ("default" "serde_codegen" "cli") ("cli" "docopt"))))))

(define-public crate-ethabi-0.2.1 (c (n "ethabi") (v "0.2.1") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.7") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.7.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.7") (d #t) (k 0)) (d (n "serde_macros") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "16qag218h8gfl5ifnkwks2llfk985596m0h62v3a1fwaa78qjxxw") (f (quote (("nightly" "serde_macros") ("default" "serde_codegen" "cli") ("cli" "docopt"))))))

(define-public crate-ethabi-0.2.2 (c (n "ethabi") (v "0.2.2") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.8.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "serde_macros") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "0bxychl1i0cycpy0q89f5zjnl9r9ncyr8ldy8w464zsiacscbc7p") (f (quote (("nightly" "serde_macros") ("default" "serde_codegen" "cli") ("cli" "docopt"))))))

(define-public crate-ethabi-0.2.3 (c (n "ethabi") (v "0.2.3") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_codegen") (r "^0.8.0") (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)) (d (n "serde_macros") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "137vkl4b9nbsv15arbhsrrxbi35x9gdpbz6nl84cm5njcqc657dy") (f (quote (("nightly" "serde_macros") ("default" "serde_codegen" "cli") ("cli" "docopt"))))))

(define-public crate-ethabi-1.0.0 (c (n "ethabi") (v "1.0.0") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "1kcip9pna3lsy7xk3czfdvxwinhs8rmb05qxivs0bl5cq726r3sx") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.0.1 (c (n "ethabi") (v "1.0.1") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "11vmhyjvylpr8si3m3h57cli4q34ida5aw0aqwvwqm5lp3ky8sig") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.0.2 (c (n "ethabi") (v "1.0.2") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "14dn9y4d4c0kkd17w74gcgqlwq430nhnbzif1kvy8hihg265hlvb") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.0.3 (c (n "ethabi") (v "1.0.3") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "11pn6p9v0wwcghkq58in0g8f8bp224d51llw72xmlr26x26z61gi") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.0.4 (c (n "ethabi") (v "1.0.4") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.0") (d #t) (k 0)))) (h "0ib3lsrmw7wa8rw5z3qdgpcbxzxs01p1mjk7nq3bjg2ymz86gpv3") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.0.5 (c (n "ethabi") (v "1.0.5") (d (list (d (n "clippy") (r "^0.0.63") (o #t) (d #t) (k 0)) (d (n "docopt") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "0pj77m6b2wky19fifj0imws17in2yyngbnrj1liydy5hq2d1pxv5") (f (quote (("cli" "docopt"))))))

(define-public crate-ethabi-1.1.0 (c (n "ethabi") (v "1.1.0") (d (list (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "05mdrk5gcbd2ifgp87clw0pxrmx7c6br2mfl32kmp3dj6a2ihj52")))

(define-public crate-ethabi-1.1.1 (c (n "ethabi") (v "1.1.1") (d (list (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "0rnkc8nf6v0gvjavk135dr2y1mq9fwr9f3srfnbwz66vaqhdgk02")))

(define-public crate-ethabi-1.2.0 (c (n "ethabi") (v "1.2.0") (d (list (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "1xyn6jy1kqq6j2invz7pyqn6vyhpg2lzsswj579ri8fi1fk1p217") (y #t)))

(define-public crate-ethabi-2.0.0 (c (n "ethabi") (v "2.0.0") (d (list (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "0qkwvaw9zvidpd3n8d0l4s8rb0b6safqbs5g42zmmwz0kqqn4g8c")))

(define-public crate-ethabi-3.0.0 (c (n "ethabi") (v "3.0.0") (d (list (d (n "error-chain") (r "^0.11.0-rc.2") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "0bzs5sj3jbhcz80n0jxg81lh6m3cis3f4gicafk4q2c4swz237vg") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-4.0.0 (c (n "ethabi") (v "4.0.0") (d (list (d (n "error-chain") (r "^0.11.0-rc.2") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "1zcaw2gkqx7z23s4pa04jsc49269a0yaa7i6gdxww8zb9lqqshan") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-2.0.1 (c (n "ethabi") (v "2.0.1") (d (list (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.2") (d #t) (k 0)))) (h "11p3h79wqq5cwbhyal0w4vpmh86a8c0ggmzaqvpnk49gc95ghsla")))

(define-public crate-ethabi-4.0.1 (c (n "ethabi") (v "4.0.1") (d (list (d (n "error-chain") (r "^0.11.0") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "0px9xn3sm94apbm5nw0h05x0rhnibniik6mxki8s44q4xyns66f8") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-4.1.0 (c (n "ethabi") (v "4.1.0") (d (list (d (n "error-chain") (r "^0.11.0") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "1789s5ya1883x8fwngdhrlywnkkg4yb6b8vyhg0splfgsl1gr6ka") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-4.2.0 (c (n "ethabi") (v "4.2.0") (d (list (d (n "error-chain") (r "^0.11") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "0xyhfcjpfcphqjahg03qp5d8bdsmgig02zc4pls4fgiyxr1dwj8c") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-5.0.0 (c (n "ethabi") (v "5.0.0") (d (list (d (n "error-chain") (r "^0.11") (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "1y871qlyc0j2b8z6cr655jxipn4x5vi8bwk8z0qjbwfl5h03dfhl") (f (quote (("backtrace" "error-chain/backtrace")))) (y #t)))

(define-public crate-ethabi-5.0.1 (c (n "ethabi") (v "5.0.1") (d (list (d (n "error-chain") (r "^0.11") (k 0)) (d (n "ethereum-types") (r "^0.1.4") (d #t) (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "0sngb81023xrkb2agqs45jm0lgyrq2xa1x6df9ssh41s2bpgzcvg") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-5.1.0 (c (n "ethabi") (v "5.1.0") (d (list (d (n "error-chain") (r "^0.11") (k 0)) (d (n "ethereum-types") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "17lrmb7v1n873aj37msfl68s2qp11py7x8ncimvq9ncfijj8b0vx") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-5.1.1 (c (n "ethabi") (v "5.1.1") (d (list (d (n "error-chain") (r "^0.11") (k 0)) (d (n "ethereum-types") (r "^0.3") (d #t) (k 0)) (d (n "rustc-hex") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.3") (d #t) (k 0)))) (h "07z2677w5lxkjnrddxvfy1ima2awr7jy8cr3m7q67dwl9f8kmqq5") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-5.1.2 (c (n "ethabi") (v "5.1.2") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1.1") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4.2") (d #t) (k 0)))) (h "0nwvjv2mcigvqiv4jlmd21006nf426s3w8xjlhhsya92m2jgfa6g") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-6.0.1 (c (n "ethabi") (v "6.0.1") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1.1") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "16bdp08sx27mvm7p0q3hp2my602kz6h7d8hjqlxjrw3zpmkbzirn") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-6.1.0 (c (n "ethabi") (v "6.1.0") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1.1") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0cfa94f2bygajmi51scdkz9czp5kf8mwgc4b4l5vbl1ywkyn5cwf") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-7.0.0 (c (n "ethabi") (v "7.0.0") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.5.2") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1.1") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "02k7981bd1scic5ip4br2zc0y7f9mikd37ymffdmsj9xizzh76my") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-8.0.0 (c (n "ethabi") (v "8.0.0") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.6.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1.1") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0z6psgg6gjbwpf5z4c2m947bg5vp5xssi0dy3r4nj0vf1msfa4mk") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-8.0.1 (c (n "ethabi") (v "8.0.1") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.6.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "0v0aw3fgbfjn6x1mq5hl87h4gh43wbbhcac6rjgpn8bdbalfxppb") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-9.0.0 (c (n "ethabi") (v "9.0.0") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "141jcxjvhxap0pxljkpy1lm7ynia1kw0b1rg5ig6ip145lxv15qs") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-9.0.1 (c (n "ethabi") (v "9.0.1") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "1xyf6zbj1kggbbryg57s8y75a2v3fwsqjj57yn8jk0v28v32clcn") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-10.0.0 (c (n "ethabi") (v "10.0.0") (d (list (d (n "error-chain") (r "^0.12") (k 0)) (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)))) (h "07301a6j6hj7j156i3rpdig5nqsp26i58hpgbsvr04nrarjsdz5a") (f (quote (("backtrace" "error-chain/backtrace"))))))

(define-public crate-ethabi-11.0.0 (c (n "ethabi") (v "11.0.0") (d (list (d (n "ethereum-types") (r "^0.8.0") (d #t) (k 0)) (d (n "hex") (r "^2.0") (d #t) (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "paste") (r "^0.1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "uint") (r "^0.8.2") (d #t) (k 0)))) (h "06i30r4bd3rdfkxx74s00p9mpvyc0qm28zn8hp4dc1153xyjlrcp")))

(define-public crate-ethabi-12.0.0 (c (n "ethabi") (v "12.0.0") (d (list (d (n "ethereum-types") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^2.0") (d #t) (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "paste") (r "^0.1.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.4") (d #t) (k 0)) (d (n "uint") (r "^0.8.2") (d #t) (k 0)))) (h "1ik3d8gr030885qwlwmpfqjbjsvyd5js843dgm948ag87mg5cah5")))

(define-public crate-ethabi-13.0.0 (c (n "ethabi") (v "13.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (d #t) (k 0)))) (h "168kss26w2j401fb60bpkp6l2mr49q2czdgy21ic4jw6srwydm2k")))

(define-public crate-ethabi-14.0.0 (c (n "ethabi") (v "14.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (d #t) (k 0)))) (h "09451n4c5kwpr5snxfl2bb1mjglqad6wdwrdzq5wkbvr6dj92af5")))

(define-public crate-ethabi-14.1.0 (c (n "ethabi") (v "14.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (d #t) (k 0)))) (h "16p6j3kl03sicavsnlc281jl2hczg7hx542z5nnknfsnbmrif4x0")))

(define-public crate-ethabi-15.0.0 (c (n "ethabi") (v "15.0.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.0") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0jqd58h61j1p03vjcp2b2nx3yk4qpgmsqcl8s2rl92iyns9g2vpp") (f (quote (("std" "anyhow/std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint/std") ("rlp" "ethereum-types/rlp") ("full-serde" "std" "anyhow" "serde" "serde_json" "uint" "ethereum-types/serialize") ("default" "std" "full-serde" "rlp"))))))

(define-public crate-ethabi-16.0.0 (c (n "ethabi") (v "16.0.0") (d (list (d (n "ethereum-types") (r "^0.12.0") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "19gmzrfzv38x3jc6hl0i19yphswksc96x00fp5q414sx0m3qijd4") (f (quote (("std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint/std") ("rlp" "ethereum-types/rlp") ("full-serde" "std" "serde" "serde_json" "uint" "ethereum-types/serialize") ("default" "std" "full-serde" "rlp"))))))

(define-public crate-ethabi-17.0.0 (c (n "ethabi") (v "17.0.0") (d (list (d (n "ethereum-types") (r "^0.13.1") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0gi16al25x3jdl0jpwn67hf9axz2v17p43607298xf7sdla1g5dn") (f (quote (("std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint/std") ("rlp" "ethereum-types/rlp") ("parity-codec" "ethereum-types/codec") ("full-serde" "std" "serde" "serde_json" "uint" "ethereum-types/serialize" "regex" "once_cell") ("default" "std" "full-serde" "rlp"))))))

(define-public crate-ethabi-17.1.0 (c (n "ethabi") (v "17.1.0") (d (list (d (n "ethereum-types") (r "^0.13.1") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0dymg4fw21ick6v5wjsgc2g24anw5ssx369wszkbhxrydc3xx1pi") (f (quote (("std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint/std") ("rlp" "ethereum-types/rlp") ("parity-codec" "ethereum-types/codec") ("full-serde" "std" "serde" "serde_json" "uint" "ethereum-types/serialize" "regex" "once_cell") ("default" "std" "full-serde" "rlp"))))))

(define-public crate-ethabi-17.2.0 (c (n "ethabi") (v "17.2.0") (d (list (d (n "ethereum-types") (r "^0.13.1") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "06sx1ikmln0fc26np1qgry5dkk1y2iqyw5xqncnzjvrrg2x6z5p4") (f (quote (("std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint/std") ("rlp" "ethereum-types/rlp") ("parity-codec" "ethereum-types/codec") ("full-serde" "std" "serde" "serde_json" "uint" "ethereum-types/serialize" "regex" "once_cell") ("default" "std" "full-serde" "rlp"))))))

(define-public crate-ethabi-18.0.0 (c (n "ethabi") (v "18.0.0") (d (list (d (n "ethereum-types") (r "^0.14.0") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10") (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (o #t) (k 0)))) (h "1668rcninb2lrvg2z1khs95k7syb6slnb2ba70vyl0y99kvwa4vl") (f (quote (("rlp" "ethereum-types/rlp") ("parity-codec" "ethereum-types/codec") ("full-serde" "std" "serde" "serde_json" "regex" "once_cell") ("default" "std" "full-serde" "rlp")))) (s 2) (e (quote (("std" "hex/std" "sha3/std" "ethereum-types/std" "thiserror" "uint?/std" "serde?/std") ("serde" "dep:serde" "ethereum-types/serialize" "uint"))))))

