(define-module (crates-io et h- eth-state-server-lib) #:use-module (crates-io))

(define-public crate-eth-state-server-lib-0.7.1 (c (n "eth-state-server-lib") (v "0.7.1") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "eth-block-history") (r "^0.7") (d #t) (k 0)) (d (n "eth-state-fold") (r "^0.7") (d #t) (k 0)) (d (n "eth-state-fold-types") (r "^0.7") (d #t) (k 0)) (d (n "eth-state-server-common") (r "^0.7") (f (quote ("server"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-health") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1411mmz0k0alv0hywixqa6wrnj65q6rivbpjxdv3k5i55p1ad7w1")))

(define-public crate-eth-state-server-lib-0.8.0 (c (n "eth-state-server-lib") (v "0.8.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "eth-block-history") (r "^0.8") (d #t) (k 0)) (d (n "eth-state-fold") (r "^0.8") (d #t) (k 0)) (d (n "eth-state-fold-types") (r "^0.8") (d #t) (k 0)) (d (n "eth-state-server-common") (r "^0.8") (f (quote ("server"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-health") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0si7x8aixfjqffpvhh2ln9gcmra2wdhfdz6s8rs35jkv84kkcglb")))

(define-public crate-eth-state-server-lib-0.9.0 (c (n "eth-state-server-lib") (v "0.9.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "eth-block-history") (r "^0.9") (d #t) (k 0)) (d (n "eth-state-fold") (r "^0.9") (d #t) (k 0)) (d (n "eth-state-fold-types") (r "^0.9") (d #t) (k 0)) (d (n "eth-state-server-common") (r "^0.9") (f (quote ("server"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "signal"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tonic") (r "^0.9") (d #t) (k 0)) (d (n "tonic-health") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1wc82h0bghxz4zx2cz0fpnqclyd6axbs8yn2rqw1aij69ssl20ag")))

