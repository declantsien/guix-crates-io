(define-module (crates-io et h- eth-utils) #:use-module (crates-io))

(define-public crate-eth-utils-0.0.1 (c (n "eth-utils") (v "0.0.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "0wlgm6dwyf3bpv9ypqbwlyd3gzins1zjxswxnlcl4sxhxbq73yab") (y #t)))

(define-public crate-eth-utils-0.1.1 (c (n "eth-utils") (v "0.1.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "evm-precompiles") (r "^0.2.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "1kjldksqsyv7plrki5n9bhc9s0y144a6ldrdlhvxrykyvh2vilfn") (y #t)))

(define-public crate-eth-utils-0.2.0 (c (n "eth-utils") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "evm-precompiles") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "104p7c70hackc72x761q0hi91dniyhcwryw7lvhk47b3k3cqpb7y") (f (quote (("with_evm_precompiles" "evm-precompiles"))))))

(define-public crate-eth-utils-0.3.0 (c (n "eth-utils") (v "0.3.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "evm-precompile-utils") (r "^0.2.1") (o #t) (d #t) (k 0) (p "evm-precompiles")) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "ovr-evm-precompile-blake2") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-bn128") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-curve25519") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-ed25519") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-modexp") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-sha3fips") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-simple") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-test-vector-support") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-fp-evm") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "1dn4abap3b0av38rklfv1bgbnlpmcbqrapmabrh46dwrbn6yw7ss") (f (quote (("with_precompile_utils" "evm-precompile-utils") ("with_common_precompiles" "ovr-evm-precompile-simple" "ovr-evm-precompile-sha3fips" "ovr-evm-precompile-modexp" "ovr-evm-precompile-ed25519" "ovr-evm-precompile-curve25519" "ovr-evm-precompile-bn128" "ovr-evm-precompile-blake2" "ovr-evm-test-vector-support" "ovr-fp-evm") ("default")))) (y #t)))

(define-public crate-eth-utils-0.3.1 (c (n "eth-utils") (v "0.3.1") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "ovr-evm-precompile-blake2") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-bn128") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-curve25519") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-ed25519") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-modexp") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-sha3fips") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-simple") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-test-vector-support") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-fp-evm") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "precompile-utils") (r "^0.2.1") (o #t) (d #t) (k 0) (p "evm-precompiles")) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "1j6bg3m4na85pyb9d2iy9cm1xnrbrhbridnnbvh8d6kj09cz0mq4") (f (quote (("with_precompile_utils" "precompile-utils") ("with_common_precompiles" "ovr-evm-precompile-simple" "ovr-evm-precompile-sha3fips" "ovr-evm-precompile-modexp" "ovr-evm-precompile-ed25519" "ovr-evm-precompile-curve25519" "ovr-evm-precompile-bn128" "ovr-evm-precompile-blake2" "ovr-evm-test-vector-support" "ovr-fp-evm") ("default")))) (y #t)))

(define-public crate-eth-utils-0.3.2 (c (n "eth-utils") (v "0.3.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "ovr-evm-precompile-blake2") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-bn128") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-curve25519") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-ed25519") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-modexp") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-sha3fips") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-simple") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-test-vector-support") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-fp-evm") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "precompile-utils") (r "^0.2.1") (o #t) (d #t) (k 0) (p "evm-precompiles")) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "0yrfp8hcfbinb0r9zjas1ip935bjps2s8sn9iqqrafh2lz4aas0k") (f (quote (("with_precompile_utils" "precompile-utils") ("with_common_precompiles" "ovr-evm-precompile-simple" "ovr-evm-precompile-sha3fips" "ovr-evm-precompile-modexp" "ovr-evm-precompile-ed25519" "ovr-evm-precompile-curve25519" "ovr-evm-precompile-bn128" "ovr-evm-precompile-blake2" "ovr-evm-test-vector-support" "ovr-fp-evm") ("default")))) (y #t)))

(define-public crate-eth-utils-0.3.3 (c (n "eth-utils") (v "0.3.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bip0039") (r "^0.10.1") (d #t) (k 0)) (d (n "bip32") (r "^0.3.0") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "libsecp256k1") (r "^0.7.0") (f (quote ("static-context" "hmac"))) (d #t) (k 0)) (d (n "ovr-evm-precompile-blake2") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-bn128") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-curve25519") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-ed25519") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-modexp") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-sha3fips") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-precompile-simple") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-evm-test-vector-support") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "ovr-fp-evm") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "precompile-utils") (r "^0.2.1") (o #t) (d #t) (k 0) (p "evm-precompiles")) (d (n "primitive-types") (r "^0.10.1") (f (quote ("rlp" "byteorder" "serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ruc") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0") (f (quote ("keccak"))) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.0") (d #t) (k 0)))) (h "1ra1ddjklcs8qya4xryvbgz4vnjxkhwpj8iph25751w214rg3c9d") (f (quote (("with_precompile_utils" "precompile-utils") ("with_common_precompiles" "ovr-evm-precompile-simple" "ovr-evm-precompile-sha3fips" "ovr-evm-precompile-modexp" "ovr-evm-precompile-ed25519" "ovr-evm-precompile-curve25519" "ovr-evm-precompile-bn128" "ovr-evm-precompile-blake2" "ovr-evm-test-vector-support" "ovr-fp-evm") ("default"))))))

