(define-module (crates-io et h_ eth_pairings) #:use-module (crates-io))

(define-public crate-eth_pairings-0.1.0 (c (n "eth_pairings") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "eth_pairings_repr_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0d6b1nzscxfxwaix7h0v5fndn2jnlbgknwyg9m8iv3hdf5rz7ayy") (f (quote (("gas_metering") ("benchmarks"))))))

(define-public crate-eth_pairings-0.1.1 (c (n "eth_pairings") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "eth_pairings_repr_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1my77k3xdmb7vq9gr7hphwpilh7a72sv00a6vrkary4cv3yff6fp") (f (quote (("gas_metering") ("benchmarks"))))))

(define-public crate-eth_pairings-0.2.0 (c (n "eth_pairings") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "eth_pairings_repr_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.1.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0sxsrs3bqiald6abm3af2vwrkzk80zfc359m3isw6w0kd1bshibs") (f (quote (("gas_metering") ("benchmarks"))))))

