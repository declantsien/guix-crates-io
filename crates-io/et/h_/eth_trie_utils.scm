(define-module (crates-io et h_ eth_trie_utils) #:use-module (crates-io))

(define-public crate-eth_trie_utils-0.1.0 (c (n "eth_trie_utils") (v "0.1.0") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.1") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "1i7xfjmk2izcnzjdq4khamxh5xlfcvg4j58sar8kxzgyb70lhq2q")))

(define-public crate-eth_trie_utils-0.2.0 (c (n "eth_trie_utils") (v "0.2.0") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.1") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "0878vcykhqsis1w1h103h98vngp0kqxfl6zmyi11awfnvxkbh5pp")))

(define-public crate-eth_trie_utils-0.2.1 (c (n "eth_trie_utils") (v "0.2.1") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.1") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "1prsaaax02lpq83w8bpd09y9dq6156djdhb30g0p7jlhbpj70hx8")))

(define-public crate-eth_trie_utils-0.3.0 (c (n "eth_trie_utils") (v "0.3.0") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.1") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "1bjl0lk80v4lslvah0s91sv7fn1jdsa55n8li3ba4l1jxygby8vs")))

(define-public crate-eth_trie_utils-0.3.1 (c (n "eth_trie_utils") (v "0.3.1") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.1") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "19z4nqv2waly4i1h9pxyz6hqlh5vfvh6vrk1j5gcfp2qphfrmwmw")))

(define-public crate-eth_trie_utils-0.4.0 (c (n "eth_trie_utils") (v "0.4.0") (d (list (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "uint") (r "^0.9.4") (d #t) (k 0)))) (h "00b9rpz00nfa6pv3akgd2lmxlyq8g2agkqg46780m4q5q9ng784l")))

(define-public crate-eth_trie_utils-0.4.1 (c (n "eth_trie_utils") (v "0.4.1") (d (list (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.151") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "1h0hk34ns0bxpxhld279l2011y5l30hissyj6vldx38931vkb44z")))

(define-public crate-eth_trie_utils-0.5.0 (c (n "eth_trie_utils") (v "0.5.0") (d (list (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 2)))) (h "11l6y8nvmda2ar4vkkk1g7vgmdg2gly3qijk4ym1h56mk73qy62m")))

(define-public crate-eth_trie_utils-0.6.0 (c (n "eth_trie_utils") (v "0.6.0") (d (list (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.5.1") (d #t) (k 0)) (d (n "eth_trie") (r "^0.1.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "14i4c2b1svpgxc2zkjs0qyfn0rciff6zz4rykp12sh7grgixng5c")))

