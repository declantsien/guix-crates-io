(define-module (crates-io et hs ethsign) #:use-module (crates-io))

(define-public crate-ethsign-0.1.0 (c (n "ethsign") (v "0.1.0") (d (list (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1aj119k0lwjidgfyxzn19kmx4kpwipb4phsmp7cvd8vhwq5zf0cm")))

(define-public crate-ethsign-0.1.1 (c (n "ethsign") (v "0.1.1") (d (list (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0cbwjdg0i4pii80y28y3cmm420gagfy5gi7g138hd3f1rm5v4b8d")))

(define-public crate-ethsign-0.1.2 (c (n "ethsign") (v "0.1.2") (d (list (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1k5ddg76ll3gxn1y208ax73zyqfnxbngf5c074xfg4xbvc85wlk3")))

(define-public crate-ethsign-0.1.3 (c (n "ethsign") (v "0.1.3") (d (list (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1n6pi0bvgzxkbcz3r4c308bsnp3r3pnfyq4cgbzb5qpqnsszzk8m")))

(define-public crate-ethsign-0.2.0 (c (n "ethsign") (v "0.2.0") (d (list (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "13cplcjbz725c7rgynhb75pfhz0alffixbbvmcd4fdv4lrw0i9l4") (f (quote (("secp256k1-rs" "libsecp256k1") ("secp256k1-c" "secp256k1") ("default" "secp256k1-c"))))))

(define-public crate-ethsign-0.3.0 (c (n "ethsign") (v "0.3.0") (d (list (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "memzero") (r "^0.1") (d #t) (k 0)) (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "15znvffgm9n1p939j9mcc95mg6rv39xffp4hfflxwyfwqvrfjbi0") (f (quote (("secp256k1-rs" "libsecp256k1") ("secp256k1-c" "secp256k1") ("default" "secp256k1-c"))))))

(define-public crate-ethsign-0.4.0 (c (n "ethsign") (v "0.4.0") (d (list (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "memzero") (r "^0.1") (d #t) (k 0)) (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0lddv496dhvik6fb17d2p7205jkm0y69ym7rpbhy5gbzr1a21j0x") (f (quote (("secp256k1-rs" "libsecp256k1") ("secp256k1-c" "secp256k1") ("default" "secp256k1-c"))))))

(define-public crate-ethsign-0.5.0 (c (n "ethsign") (v "0.5.0") (d (list (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "memzero") (r "^0.1") (d #t) (k 0)) (d (n "parity-crypto") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1mi0gpcw6p1mp37am08f1wdvfmv2b37yv4xw8biq798pii8rnz9s") (f (quote (("secp256k1-rs" "libsecp256k1") ("secp256k1-c" "secp256k1") ("default" "secp256k1-c"))))))

(define-public crate-ethsign-0.6.0 (c (n "ethsign") (v "0.6.0") (d (list (d (n "ethsign-crypto") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "memzero") (r "^0.1") (d #t) (k 0)) (d (n "parity-crypto") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0vj0vp6inwz6p40pfssha0bwf40r2rhwkx3a333l4g6zy4qqm1jb") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.6.1 (c (n "ethsign") (v "0.6.1") (d (list (d (n "ethsign-crypto") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "memzero") (r "^0.1") (d #t) (k 0)) (d (n "parity-crypto") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qz5l3llabhv1w0y3wcxnkn91qq0qa5anfbib3g4m8ivf53rdlln") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.7.0 (c (n "ethsign") (v "0.7.0") (d (list (d (n "ethsign-crypto") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^0.10.0") (d #t) (k 0)))) (h "1gl74qq46pgagfaph2pspn2vblwy7hk8g8gsz07b2cbn978yv72z") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.7.1 (c (n "ethsign") (v "0.7.1") (d (list (d (n "ethsign-crypto") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^0.10.0") (d #t) (k 0)))) (h "1rn65pc36pcfa49ydj9qzw3ilhly1wvmya0490zifp1gbd9cp6al") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.7.2 (c (n "ethsign") (v "0.7.2") (d (list (d (n "ethsign-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.2.2") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^0.10.0") (d #t) (k 0)))) (h "1dsgjs8i99fc609jrsq98ka6qhlqyggwm5hlh73d4wypm8v1w0lm") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.7.3 (c (n "ethsign") (v "0.7.3") (d (list (d (n "ethsign-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.0.0") (d #t) (k 0)))) (h "0prnqd5771hmry6811h1hpqw09z9b69wcch500wipx2r1gxgwmmn") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.8.0 (c (n "ethsign") (v "0.8.0") (d (list (d (n "ethsign-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3.1") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "parity-crypto") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.0.0") (d #t) (k 0)))) (h "1d26h01z12v3kq6k96i14zwi3382i55qyc87h9svcymxqbkxbysd") (f (quote (("pure-rust" "libsecp256k1" "ethsign-crypto") ("default" "secp256k1" "parity-crypto"))))))

(define-public crate-ethsign-0.9.0 (c (n "ethsign") (v "0.9.0") (d (list (d (n "ethsign-crypto") (r "^0.3") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (o #t) (d #t) (k 0) (p "libsecp256k1")) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.0.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("recovery"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.0.0") (d #t) (k 0)))) (h "15lrz78zi283sc3ynbqc74swrw937cgm4k155r7wikn2kxc9p4yi") (f (quote (("pure-rust" "libsecp256k1") ("default" "secp256k1"))))))

