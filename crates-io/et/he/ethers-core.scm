(define-module (crates-io et he ethers-core) #:use-module (crates-io))

(define-public crate-ethers-core-0.1.0 (c (n "ethers-core") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.5.1") (o #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "ethabi") (r "^12.0.0") (o #t) (k 0)) (d (n "ethereum-types") (r "^0.9.2") (f (quote ("serialize"))) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "secp256k1") (r "^0.3.5") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (k 2)) (d (n "thiserror") (r "^1.0.15") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "0z3zgcg14kq9i6alwn0qh1dr4wx8kah7pj6pkkz7ldca2rhw3r27") (f (quote (("default" "abi") ("celo") ("abi" "ethabi" "arrayvec"))))))

(define-public crate-ethers-core-0.1.1 (c (n "ethers-core") (v "0.1.1") (d (list (d (n "arrayvec") (r "^0.5.1") (o #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "ethabi") (r "^12.0.0") (o #t) (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.9.2") (f (quote ("serialize"))) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "secp256k1") (r "^0.3.5") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (k 2)) (d (n "thiserror") (r "^1.0.15") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "06aswmg8ss4ph16mkc6zfrrw8806lg6vf119kmk1p730bqgj7y8n") (f (quote (("default" "abi") ("celo") ("abi" "ethabi" "arrayvec"))))))

(define-public crate-ethers-core-0.1.2 (c (n "ethers-core") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "ethabi") (r "^12.0.0") (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.9.2") (f (quote ("serialize"))) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "secp256k1") (r "^0.3.5") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (k 2)) (d (n "thiserror") (r "^1.0.15") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "1lanynfylmyj4hx3y0zvdxybf00nhqn2745d8icfjm1xf1h5dqvh") (f (quote (("celo"))))))

(define-public crate-ethers-core-0.1.3 (c (n "ethers-core") (v "0.1.3") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 2)) (d (n "ethabi") (r "^12.0.0") (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.9.2") (f (quote ("serialize"))) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rlp") (r "^0.4.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "secp256k1") (r "^0.3.5") (d #t) (k 0) (p "libsecp256k1")) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.53") (k 2)) (d (n "thiserror") (r "^1.0.15") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "1h8iyb0l2fdh10bar3mk3syp4q8y305zfnxz4ysa7rwidn0m8iwg") (f (quote (("celo"))))))

(define-public crate-ethers-core-0.2.0 (c (n "ethers-core") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.1") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.10.2") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.8.4") (k 0)) (d (n "ethabi") (r "^13.0.0") (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.10.0") (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.7.1") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "rand") (r "^0.7.1") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.61") (k 0)) (d (n "serde_json") (r "^1.0.53") (k 2)) (d (n "thiserror") (r "^1.0.23") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "13ffzgkxbmm1z2amqnpkakzxh72806czz50mfm738pcw452w54wh") (f (quote (("celo"))))))

(define-public crate-ethers-core-0.2.1 (c (n "ethers-core") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.1") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.10.2") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.9.4") (k 0)) (d (n "ethabi") (r "^13.1.0") (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.11.0") (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.1") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.62") (k 0)) (d (n "serde_json") (r "^1.0.62") (k 2)) (d (n "thiserror") (r "^1.0.24") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "06p6fxngxxiw2x4d51aqbfkm3aazblzb9dv7zxpkqpcg4gjmbflr") (f (quote (("celo"))))))

(define-public crate-ethers-core-0.2.2 (c (n "ethers-core") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.10.2") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.9.4") (k 0)) (d (n "ethabi") (r "^13.1.0") (k 0) (p "ethabi-next")) (d (n "ethereum-types") (r "^0.11.0") (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "rand") (r "^0.7.1") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "thiserror") (r "^1.0.24") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)))) (h "1znn6jnm01557rc2fgpgyn1gbvrbl6cj0gr8x7lmkj6whqak4v58") (f (quote (("celo"))))))

(define-public crate-ethers-core-0.4.0 (c (n "ethers-core") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.2") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.0") (k 0)) (d (n "ethabi") (r "^14.0.0") (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.15") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.9.4") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "0bzjzmx78c9dcrgvs6p7qriqyakgkyl7dc96rqccz81ny3mkvj1j") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.1 (c (n "ethers-core") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (k 0)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "0w224waw4nw8v32pcrldi1r1fyhc3863a14xpkh5jsq1iyvfhl0c") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.2 (c (n "ethers-core") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "0aj9ldv728v1h4af53x0y62csix1gp2yag9lv5yn85z268cbqnfp") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.3 (c (n "ethers-core") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (f (quote ("async-await-macro"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "07wbii8fz3vli97ffmgryg9mgxml1i9jr11vfl15bvak31618n35") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.4 (c (n "ethers-core") (v "0.4.4") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (f (quote ("async-await-macro"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "0xfld2337450jpljhbqa44daznsjc1dkr1d09fgsd8gmsqs9p9xz") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.5 (c (n "ethers-core") (v "0.4.5") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (f (quote ("async-await-macro"))) (o #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "07i2wqa3wvx7x10zbrimjxrwp6rj7dxiq5pcj6mfn5m9x4fal1s0") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.6 (c (n "ethers-core") (v "0.4.6") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.5") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.16") (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (k 0)))) (h "1hw8ph7ah5h0pc6y47s87p68ca9d7nlh0lpvx1v2zw9cv8gv3iwz") (f (quote (("setup" "tokio" "futures-util") ("celo"))))))

(define-public crate-ethers-core-0.4.8 (c (n "ethers-core") (v "0.4.8") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.16") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "147ayxy2fr79sd166c2wc7jrkh5fh1gc20781h58cfg8n9bwwkn0") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.4.9 (c (n "ethers-core") (v "0.4.9") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.16") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "152hrbn80cvggq9631ddxnd5g8bx0q0897dqp6sm3dkzdbp8yig7") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.0 (c (n "ethers-core") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.16") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0r19767xczcs7s1lspdfbq470v621l9xbhsadhgi92wy8vh9ywyc") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.1 (c (n "ethers-core") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.16") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.16") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ab2lcnsqn3cg7wnbrks5yv1a5s2cwzlharbbdbqlfp6kc7rqfqz") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.2 (c (n "ethers-core") (v "0.5.2") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.26") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ffwcdhrvbq9637wqrqw990aq7hivgjs9lg7s94hx3p22pgqcxkp") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.3 (c (n "ethers-core") (v "0.5.3") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^14.1.0") (k 0)) (d (n "futures-util") (r "^0.3.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.28") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0i60lxn476sp8a5ha9caprqb851f9a2z09h578wa0n6lkjfa05pb") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.4 (c (n "ethers-core") (v "0.5.4") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "thiserror") (r "^1.0.29") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "01bb2jvvzi6lhqsbjd92habg182vbqjy4r20rhd60yn3zyqgg5py") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.5 (c (n "ethers-core") (v "0.5.5") (d (list (d (n "arrayvec") (r "^0.7.1") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "glob") (r "^0.3.0") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.30") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mnqm4iap7bmsq1wmg1qf7g6y2xqca01wgdhcbzz1x26dlfzmwqw") (f (quote (("setup" "tokio" "futures-util") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.5.6 (c (n "ethers-core") (v "0.5.6") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.10.6") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.17") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.17") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.32") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0wff1p2hczd6ifipdysl0nmqrd8lybvgb5nbnxw3a3j2kff1j4hc") (f (quote (("setup" "tokio" "futures-util") ("macros" "syn" "cargo_metadata") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.6.0 (c (n "ethers-core") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.11.1") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.18") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa" "zeroize"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.32") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qbbri0j979sj4s1l23bq5q57l3xvz5sfdwf6m88msc8v3hm72hp") (f (quote (("setup" "tokio" "futures-util") ("macros" "syn" "cargo_metadata") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.6.1 (c (n "ethers-core") (v "0.6.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.11.1") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.18") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa" "zeroize"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.32") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0s2b2s04b7k5czbgb486dhxkkgyypyhnjfy5rmp4jrjk6xx5a0g1") (f (quote (("setup" "tokio" "futures-util") ("macros" "syn" "cargo_metadata") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.6.2 (c (n "ethers-core") (v "0.6.2") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.11.1") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3.18") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa" "zeroize"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.32") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0cpc9z3ad4nibiz53qy5qyhyrn2q2nsjqadva6dh3ihazjy7q1ni") (f (quote (("setup" "tokio" "futures-util") ("macros" "syn" "cargo_metadata") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.6.3 (c (n "ethers-core") (v "0.6.3") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ecdsa") (r "^0.12.3") (f (quote ("std"))) (k 0)) (d (n "elliptic-curve") (r "^0.11.5") (k 0)) (d (n "ethabi") (r "^15.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "generic-array") (r "^0.14.4") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.9.5") (f (quote ("keccak256" "ecdsa" "zeroize"))) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.33") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1.0.9") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.5") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1b1rcwh0ma7xzq3axkfa5wrghr226yxszbwlxbwc6sxwahm1lppi") (f (quote (("setup" "tokio" "futures-util") ("macros" "syn" "cargo_metadata") ("legacy") ("eip712" "convert_case" "syn" "quote" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.7.0 (c (n "ethers-core") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "0c549ds7rd9yyqlxch3kf1hadanl3v1m5vk0lzxnfjk5v2mqjmjz") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.7.1 (c (n "ethers-core") (v "0.7.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1vbxsb6srb8c0hyrw1cyq66g71yv6bf18cvr2v39c6hzwciiafg3") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.9.0 (c (n "ethers-core") (v "0.9.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "0fywarliw4fhnghafdqkzsv24gpkk461ilaz81x03p463bhrvmj0") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.10.0 (c (n "ethers-core") (v "0.10.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "0bxhmnr5c7r5z3a029f20642rdrddmr6xjnjlaznfz0fbplkvl68") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.6.4-alpha.1 (c (n "ethers-core") (v "0.6.4-alpha.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "syn") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "081b7141wnwhsyv7s71bsd0rrpjra6qkw7j4g8fi5h2j5ykxqfap") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.11.0 (c (n "ethers-core") (v "0.11.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.95") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "00m4i6rpflkm9d89fwqi3xm95122smnqfwhkl4l9gqlkd7494dcf") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.12.0 (c (n "ethers-core") (v "0.12.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.11.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.11.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.95") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1w17rvsmzwk201cbnz5whdxzh862jlc7ay8wlsf3vlqgns32ckwj") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.13.0 (c (n "ethers-core") (v "0.13.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1rzl2ips6wvbwadnf7fgm7g6j6csk8rz2892mirin8xfxq7yfdj5") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.13.1-alpha.1 (c (n "ethers-core") (v "0.13.1-alpha.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.11.12") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.10.4") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "08dmwl7h3sl7ibx30q824z1drs3dpip7p91mq7nmhx2ybglnzbp1") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.14.0 (c (n "ethers-core") (v "0.14.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bytes") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.2") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "fastrlp") (r "^0.1.2") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.98") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1pdfb0xg8d8bs5hzkqcmv3c25a06pypg05l2942qmlj2ycv88bd7") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.15.0 (c (n "ethers-core") (v "0.15.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bytes") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.2") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "fastrlp") (r "^0.1.2") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.98") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "03b2319vvqvnj4zyjx6k1ds18fjbih52b6jzb5pcpw1wpxnmradk") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.16.0 (c (n "ethers-core") (v "0.16.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.2") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "fastrlp") (r "^0.1.3") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.98") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1mwv45690pflk01kslfwp38zdw560r0l7icad68zhcgwln82j72c") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.17.0 (c (n "ethers-core") (v "0.17.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bytes") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.2") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "fastrlp") (r "^0.1.3") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.98") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1s7l3ydhr3l5wahv6i01z6qly4ayxb5svya0gw3aln4gh8yddg8f") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-0.17.1-alpha.1 (c (n "ethers-core") (v "0.17.1-alpha.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.2") (k 0)) (d (n "ethabi") (r "^17.1.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "fastrlp") (r "^0.1.3") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.25.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.98") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.3") (d #t) (k 0)))) (h "1qix39zzry9ic64cqkkszr96a8ih2mymzyrj0hn4317a37qmv4in") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy"))))))

(define-public crate-ethers-core-1.0.0 (c (n "ethers-core") (v "1.0.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.3") (k 0)) (d (n "ethabi") (r "^17.2.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.15.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 2)) (d (n "open-fastrlp") (r "=0.1.2") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "rust_decimal") (r "^1.26.1") (f (quote ("maths"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.103") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.4") (d #t) (k 0)))) (h "0vahi8s1g38v0i79nhm3ma8d6zk21l7zpl3p9387w2ka3hqqqcq6") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.62")))

(define-public crate-ethers-core-1.0.1 (c (n "ethers-core") (v "1.0.1") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.3") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.103") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.4") (d #t) (k 0)))) (h "13053khf8khhhd2ycrqnpd7fbzw92d72yfgrcqcnh2smrwnpmsdn") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.62")))

(define-public crate-ethers-core-1.0.2 (c (n "ethers-core") (v "1.0.2") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.3") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "once_cell") (r "^1.16.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.103") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.4") (d #t) (k 0)))) (h "05ag3ljv2mkx09kjqba7wcp2s50imgys9bffw623jd17fz4ykqxd") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.62")))

(define-public crate-ethers-core-1.5.0 (c (n "ethers-core") (v "1.5.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.3") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.5.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("arbitrary_precision"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.109") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.4") (d #t) (k 0)))) (h "0zqmbf3ddiiag6sc3s2sf7ypxhbfv106bgn2zwvh0hnvmpxkwmwl") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (y #t) (r "1.64")))

(define-public crate-ethers-core-2.0.0 (c (n "ethers-core") (v "2.0.0") (d (list (d (n "arrayvec") (r "^0.7.2") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.12.3") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("std"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "k256") (r "^0.11") (f (quote ("keccak256" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.5.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (f (quote ("std"))) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("arbitrary_precision"))) (k 0)) (d (n "serde_json") (r "^1.0.64") (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0.109") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2.4") (d #t) (k 0)))) (h "02qhbjrs2r2335jaw26b2q4y0fn3kh3gdpcqqysqxhasa6x5r4nm") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.64")))

(define-public crate-ethers-core-2.0.1-alpha.1 (c (n "ethers-core") (v "2.0.1-alpha.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1yrrc859j4ix2ikdqia787sism8zpq559j006hijmykbkdgyz3y7") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.1 (c (n "ethers-core") (v "2.0.1") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "05vkkxaxfycyc2kcs373y23wr6krv1lflx6abmfgs6afplmvywss") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.2 (c (n "ethers-core") (v "2.0.2") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.3") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.2") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1q0x6ndrgnj31k51r2c8gpzapqf5q9cjyrgi4bvf1b0p217i3gs0") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712" "convert_case" "syn" "proc-macro2") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.3 (c (n "ethers-core") (v "2.0.3") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.3") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1x92mkyhy83cfbh1p7xrh4crp5yh2lifv0j7kamqwscnpa2qyprs") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.4 (c (n "ethers-core") (v "2.0.4") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.4") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0201rzgxjy2qdyzf8vrw0lyy3b0xc2ql27fkffgsc3s8m3psk3hr") (f (quote (("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.5 (c (n "ethers-core") (v "2.0.5") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.4") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "11ahznv9hrv6933lwdm6svwgv7zyqp3crm5hfcrcn5vpc8sm79zs") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.6 (c (n "ethers-core") (v "2.0.6") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.4") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1acjr7gaxk7jpwsff335zmwxaf98wr4gg2pm28gkc8ywbdng17cl") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.7 (c (n "ethers-core") (v "2.0.7") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.4") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "018v1wkm327c7dwiwhm8177942srv4mxz4liq4hbxlzhi8czm9bd") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.8 (c (n "ethers-core") (v "2.0.8") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.4") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "08v6hrdixycl89fxrck1pxz2dwi97jcf3rqxlfh1i2drzqa2bjk0") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.9 (c (n "ethers-core") (v "2.0.9") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1wdn9i8hpmzvdiy5z8c0q123wkf827ffbil1awb569y1fczm4acc") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.10 (c (n "ethers-core") (v "2.0.10") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1bc0la5kdar5h6pgalsrfk90fdhn41x1vcsnk7dj8839103pz8f0") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.11 (c (n "ethers-core") (v "2.0.11") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "13c7lx7f634qx5d7py9ilsnbhnvcxw8gc35rapivkvhnqayy00rg") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.12 (c (n "ethers-core") (v "2.0.12") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "0dwpfvapzscsibvci954sbv1kfi9gkrg5pj74q163sl5lndim2wi") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.13 (c (n "ethers-core") (v "2.0.13") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "1jdzpl8n6i5a4qayyy1qdawz5vsj62nq2g04hzvxg7qwrkvcxcxa") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

(define-public crate-ethers-core-2.0.14 (c (n "ethers-core") (v "2.0.14") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bincode") (r "^1.3.3") (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "elliptic-curve") (r "^0.13.5") (k 0)) (d (n "ethabi") (r "^18.0.0") (f (quote ("full-serde" "rlp"))) (k 0)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "ecdsa" "std"))) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "open-fastrlp") (r "^0.1.4") (f (quote ("std" "derive" "ethereum-types"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rlp") (r "^0.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("extra-traits"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)))) (h "07zv33picj1japynmh1zcal2hzxk6fpj6rbqmd44mc9hmp30rn42") (f (quote (("optimism") ("macros" "syn" "cargo_metadata" "once_cell") ("legacy") ("eip712") ("celo" "legacy")))) (r "1.65")))

