(define-module (crates-io et he ethereum-types) #:use-module (crates-io))

(define-public crate-ethereum-types-0.1.0 (c (n "ethereum-types") (v "0.1.0") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "04nbf6jkbpyga82vdk2i2ajc8nmmdcy6d730japykjpypl9i345r") (f (quote (("std" "uint/std" "fixed-hash/std") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof"))))))

(define-public crate-ethereum-types-0.1.1 (c (n "ethereum-types") (v "0.1.1") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "0q6yh6fhj5a6d679kcxskdgifhp81jh2dg7pvk4k5fxsvv92c7a5") (f (quote (("std" "uint/std" "fixed-hash/std") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof"))))))

(define-public crate-ethereum-types-0.1.2 (c (n "ethereum-types") (v "0.1.2") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "07fc136ln7yphyip1wymrhrsainlk5sswcwccnd8p1wylkpnnxni") (f (quote (("std" "uint/std" "fixed-hash/std") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof"))))))

(define-public crate-ethereum-types-0.1.3 (c (n "ethereum-types") (v "0.1.3") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "10k1jc7ybzjqnv3ka7jwn93iisfhzwywf5sv64jlhvhb98n2ksg3") (f (quote (("std" "uint/std" "fixed-hash/std") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof") ("default" "std" "heapsizeof"))))))

(define-public crate-ethereum-types-0.1.4 (c (n "ethereum-types") (v "0.1.4") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.3") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "1cwjn1lvbpdf12q6w2npjz65habhlmn13vv87ayf1k5grswabnia") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof"))))))

(define-public crate-ethereum-types-0.2.0 (c (n "ethereum-types") (v "0.2.0") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.4") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.1") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "0353zz5v5pcgg6az4mfb1a79b7hsq8flqpk0qjkha2wv79rzl33g") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.2.2 (c (n "ethereum-types") (v "0.2.2") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.4.2") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.3") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.1") (d #t) (k 0)))) (h "1pqrni656xj6vawf32xphnq0bs7r8w638k1iv3cg8j5n987gpmms") (f (quote (("use_asm" "uint/use_asm") ("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.2.3 (c (n "ethereum-types") (v "0.2.3") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.4.2") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.1.3") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.1.2") (d #t) (k 0)))) (h "0ylinv5d06f5g581dldb2n0x1kf35nid3ji9nxas3a7dkl979zsw") (f (quote (("use_asm" "uint/use_asm") ("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.3.0 (c (n "ethereum-types") (v "0.3.0") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5.0") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.2") (d #t) (k 0)))) (h "04v0f7gv5s85rdz4r69gq0qwp4lvsxqd17smnqh8whsfa2nvpsjk") (f (quote (("use_asm" "uint/use_asm") ("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("impl_quickcheck_arbitrary" "uint/impl_quickcheck_arbitrary" "fixed-hash/impl_quickcheck_arbitrary") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.3.1 (c (n "ethereum-types") (v "0.3.1") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5.0") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.2") (d #t) (k 0)))) (h "0an9zvhckcijk229qskv8lc4m7spwn614qry8ddx5rbclf8ycfis") (f (quote (("use_asm" "uint/use_asm") ("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("impl_quickcheck_arbitrary" "uint/impl_quickcheck_arbitrary" "fixed-hash/impl_quickcheck_arbitrary") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.3.2 (c (n "ethereum-types") (v "0.3.2") (d (list (d (n "crunchy") (r "^0.1.5") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5.0") (d #t) (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.2.1") (d #t) (k 0)))) (h "1djkxxw5glgbxr3rxa54vpidz7s3xxf2xjzl5jqyv2paiadp4j4w") (f (quote (("use_asm" "uint/use_asm") ("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("impl_quickcheck_arbitrary" "uint/impl_quickcheck_arbitrary" "fixed-hash/impl_quickcheck_arbitrary") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.4.0 (c (n "ethereum-types") (v "0.4.0") (d (list (d (n "crunchy") (r "^0.1") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5.0") (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.4") (k 0)))) (h "12ip17ai6q8ashc327dpsfybn0jbq0z79b0hl4r3mry5ifhwbcrm") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.5.1 (c (n "ethereum-types") (v "0.5.1") (d (list (d (n "crunchy") (r "^0.2.1") (k 0)) (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.5") (k 0)))) (h "1hppn83ydbpv6n4yf1gxg1rm20c1ma85005d1n49saqmc01y20sz") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "crunchy/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize" "fixed-hash/byteorder" "fixed-hash/rustc-hex")))) (y #t)))

(define-public crate-ethereum-types-0.4.1 (c (n "ethereum-types") (v "0.4.1") (d (list (d (n "crunchy") (r "^0.1") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5.0") (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.4") (k 0)))) (h "1h53rir7rlzm1vppgdyrmgmihzx9bc7mvysvsax4095n7jrbiway") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize")))) (y #t)))

(define-public crate-ethereum-types-0.5.2 (c (n "ethereum-types") (v "0.5.2") (d (list (d (n "crunchy") (r "^0.2.1") (k 0)) (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.5") (k 0)))) (h "18b5c77yxp6hk4k9ipjbh813r0j2bchq29j2x8vkh99zwm8xym5h") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "crunchy/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize" "fixed-hash/byteorder" "fixed-hash/rustc-hex"))))))

(define-public crate-ethereum-types-0.4.2 (c (n "ethereum-types") (v "0.4.2") (d (list (d (n "crunchy") (r "^0.1") (d #t) (k 0)) (d (n "ethbloom") (r "^0.5") (k 0)) (d (n "ethereum-types-serialize") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "fixed-hash") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.4") (k 0)))) (h "15icipk0ap7r6yi0i6cl6zsl0z52zbw6jwv3l271r833vj222x3f") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std") ("serialize" "std" "ethereum-types-serialize" "serde" "ethbloom/serialize") ("heapsizeof" "uint/heapsizeof" "fixed-hash/heapsizeof" "ethbloom/heapsizeof") ("default" "std" "heapsizeof" "serialize"))))))

(define-public crate-ethereum-types-0.5.3-beta.1 (c (n "ethereum-types") (v "0.5.3-beta.1") (d (list (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "fixed-hash") (r "^0.3") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.1") (k 0)) (d (n "impl-serde") (r "^0.1") (o #t) (k 0)) (d (n "primitive-types") (r "^0.2") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.7") (k 0)))) (h "0nw4kc7gk3v5pb7nvl5mqp991r8ipk3cg7mppfwvqa1vkpgxjvc9") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "primitive-types/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize"))))))

(define-public crate-ethereum-types-0.5.3-beta.2 (c (n "ethereum-types") (v "0.5.3-beta.2") (d (list (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "fixed-hash") (r "^0.3") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.1") (k 0)) (d (n "impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.2") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.7") (k 0)))) (h "044ckfpacl3wz8xqh8vl9wz6k88267533gapszy8w11rka5vwv5s") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "primitive-types/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize"))))))

(define-public crate-ethereum-types-0.6.0-beta.1 (c (n "ethereum-types") (v "0.6.0-beta.1") (d (list (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "fixed-hash") (r "^0.3") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.3") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.7") (k 0)))) (h "0njbq6538i9jraz8jswvl50d1lfg2cwyw2rw9p78nj8gh7kpb693") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "primitive-types/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize"))))))

(define-public crate-ethereum-types-0.6.0 (c (n "ethereum-types") (v "0.6.0") (d (list (d (n "ethbloom") (r "^0.6") (k 0)) (d (n "fixed-hash") (r "^0.3") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.3") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.7") (k 0)))) (h "0pvcqzvq0llfx6lk6s941mfvvd6j9mkm624kk3ncbqip4dlbrlb2") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("heapsize" "uint/heapsize" "primitive-types/heapsize" "fixed-hash/heapsize" "ethbloom/heapsize") ("default" "std" "heapsize" "serialize"))))))

(define-public crate-ethereum-types-0.7.0 (c (n "ethereum-types") (v "0.7.0") (d (list (d (n "ethbloom") (r "^0.7") (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.5") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (k 0)))) (h "1ccjhnhwyyhmkmz246pq5q6ygr742m5n6lipilmyxnbmrdvpfnja") (f (quote (("std" "uint/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("default" "std" "serialize"))))))

(define-public crate-ethereum-types-0.8.0 (c (n "ethereum-types") (v "0.8.0") (d (list (d (n "ethbloom") (r "^0.8") (k 0)) (d (n "fixed-hash") (r "^0.5") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.6") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint-crate") (r "^0.8") (k 0) (p "uint")))) (h "133jxmzzwpszaf19c9iaqb04wfpw764vdsym8cqkjfjmwd444x5s") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("default" "std" "serialize"))))))

(define-public crate-ethereum-types-0.9.0 (c (n "ethereum-types") (v "0.9.0") (d (list (d (n "ethbloom") (r "^0.9") (k 0)) (d (n "fixed-hash") (r "^0.6") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.8") (k 0) (p "uint")))) (h "0kgxwi3vcbdwimnw3a2lwm6178hibinv8a56w9dpv80cxv6j6k4n") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("default" "std" "serialize"))))))

(define-public crate-ethereum-types-0.9.1 (c (n "ethereum-types") (v "0.9.1") (d (list (d (n "ethbloom") (r "^0.9") (k 0)) (d (n "fixed-hash") (r "^0.6") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.8") (k 0) (p "uint")))) (h "1y7cvxafmf5hp0997syxsisjjn73kqlkamj2lsw1mn67gdmdq5l6") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("default" "std" "serialize") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.9.2 (c (n "ethereum-types") (v "0.9.2") (d (list (d (n "ethbloom") (r "^0.9") (k 0)) (d (n "fixed-hash") (r "^0.6") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.4.1") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.2") (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.7") (f (quote ("rlp" "byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.8") (k 0) (p "uint")))) (h "1c1l2sg6li301izl4nzkkfrpc8snafxwnr81vfwygn3bd3zyqfj7") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("default" "std" "serialize") ("codec" "impl-codec" "ethbloom/codec") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.10.0 (c (n "ethereum-types") (v "0.10.0") (d (list (d (n "ethbloom") (r "^0.10") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.4.1") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.8") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "03i83fxyflsi95lm88vlkjasiangdqvahxgryzgscpwiyh6mzp05") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "std" "impl-serde" "primitive-types/serde" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.11.0 (c (n "ethereum-types") (v "0.11.0") (d (list (d (n "ethbloom") (r "^0.11") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.5.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.9") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "1zdbm9bj60scijc8b2pyiy4i00rvlim6qpbyn7j8b392dbv5sjzn") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.12.0 (c (n "ethereum-types") (v "0.12.0") (d (list (d (n "ethbloom") (r "^0.11") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.5.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "04f2af0wa7i6ldjz64azi3pr7f386capxm7807k8k40rf7kbvmhd") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.12.1 (c (n "ethereum-types") (v "0.12.1") (d (list (d (n "ethbloom") (r "^0.11") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.5.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.10") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "1bxxacsmb9majw7vd4sndv4dhw3g9srhf7flwq39yy7yaxq6y4q5") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary"))))))

(define-public crate-ethereum-types-0.13.0 (c (n "ethereum-types") (v "0.13.0") (d (list (d (n "ethbloom") (r "^0.12") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.6.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.11") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "1xpcsbncar8wxz6b0mpfmqcxkj1mb566asry6b76618hzaihfqvf") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary")))) (r "1.56.1")))

(define-public crate-ethereum-types-0.13.1 (c (n "ethereum-types") (v "0.13.1") (d (list (d (n "ethbloom") (r "^0.12") (k 0)) (d (n "fixed-hash") (r "^0.7") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.6.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.3.2") (o #t) (k 0)) (d (n "primitive-types") (r "^0.11") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "1ihdbbdvzibj1vi3z205m0whrgvsdfl4r0yfzi35852nqna7p0mj") (f (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std") ("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary")))) (r "1.56.1")))

(define-public crate-ethereum-types-0.14.0 (c (n "ethereum-types") (v "0.14.0") (d (list (d (n "ethbloom") (r "^0.13") (o #t) (k 0)) (d (n "fixed-hash") (r "^0.8") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.6.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "0g28np0fhlig4zkw9wf527zr67gfs13rk37jl3sp8rb0c734s8l1") (f (quote (("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "ethbloom" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary")))) (s 2) (e (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom?/std" "primitive-types/std")))) (r "1.60.0")))

(define-public crate-ethereum-types-0.14.1 (c (n "ethereum-types") (v "0.14.1") (d (list (d (n "ethbloom") (r "^0.13") (o #t) (k 0)) (d (n "fixed-hash") (r "^0.8") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "impl-codec") (r "^0.6.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "scale-info") (r ">=1.0, <3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.41") (d #t) (k 2)) (d (n "uint-crate") (r "^0.9") (k 0) (p "uint")))) (h "1vnqxmrz1l7wg4mh284f4q09vaw0zrr878wrpvy2wma0y35iblh2") (f (quote (("serialize" "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize") ("rlp" "impl-rlp" "ethbloom/rlp" "primitive-types/rlp") ("num-traits" "primitive-types/num-traits") ("default" "std" "ethbloom" "rlp" "serialize") ("codec" "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info") ("arbitrary" "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary")))) (s 2) (e (quote (("std" "uint-crate/std" "fixed-hash/std" "ethbloom?/std" "primitive-types/std")))) (r "1.60.0")))

