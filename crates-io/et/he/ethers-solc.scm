(define-module (crates-io et he ethers-solc) #:use-module (crates-io))

(define-public crate-ethers-solc-0.1.0 (c (n "ethers-solc") (v "0.1.0") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ethers-core") (r "^0.6.0") (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.9.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "svm") (r "^0.1.2") (o #t) (d #t) (k 0) (p "svm-rs")) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("process" "io-util" "fs"))) (o #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0qxhj5sgpcvv9ra3m574gx3p62amjdqls5bqd71gmpdgvr7313ks") (f (quote (("tests") ("full" "async" "svm") ("async" "tokio" "futures-util"))))))

(define-public crate-ethers-solc-0.1.1 (c (n "ethers-solc") (v "0.1.1") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ethers-core") (r "^0.6.0") (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.9.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (f (quote ("asm"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "svm") (r "^0.2.0") (o #t) (d #t) (k 0) (p "svm-rs")) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("process" "io-util" "fs"))) (o #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0j13vh2fnpf1vm1dpl39ihkdhvbv5wkckc77aajln6fjfmccr0fa") (f (quote (("tests") ("full" "async" "svm") ("async" "tokio" "futures-util"))))))

(define-public crate-ethers-solc-0.1.2 (c (n "ethers-solc") (v "0.1.2") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ethers-core") (r "^0.6.0") (k 0)) (d (n "futures-util") (r "^0.3.18") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.9.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (f (quote ("asm"))) (t "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))") (k 0)) (d (n "sha2") (r "^0.9.8") (t "cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))") (k 0)) (d (n "svm") (r "^0.2.0") (o #t) (d #t) (k 0) (p "svm-rs")) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("process" "io-util" "fs"))) (o #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "00sgpmh2ai4wz879a4zna40d42g4lz7arlsg1b4nbaf8hs1kvdqn") (f (quote (("tests") ("full" "async" "svm") ("async" "tokio" "futures-util"))))))

(define-public crate-ethers-solc-0.12.0 (c (n "ethers-solc") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "ethers-core") (r "^0.12.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.11.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.1.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.13") (k 0)) (d (n "svm") (r "^0.2.10") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0a5lxxd21ywjcxz6zbp47p1xi8gq82xdzmdwwxqx5rk2mmmi77md") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm"))))))

(define-public crate-ethers-solc-0.13.0 (c (n "ethers-solc") (v "0.13.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "ethers-core") (r "^0.13.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.1.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "semver") (r "^1.0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.14") (k 0)) (d (n "svm") (r "^0.2.10") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1azzd9hf4rcp17bhwcck705rfb56jmz101zvwa194djbs5icn99g") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm"))))))

(define-public crate-ethers-solc-0.14.0 (c (n "ethers-solc") (v "0.14.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "ethers-core") (r "^0.14.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.16") (k 0)) (d (n "svm") (r "^0.2.13") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0s2ljf5dbphvh16n38sk34b9fizab6n0k3lrz4wxhxgl82akp900") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm"))))))

(define-public crate-ethers-solc-0.15.0 (c (n "ethers-solc") (v "0.15.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "ethers-core") (r "^0.15.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.16") (k 0)) (d (n "svm") (r "^0.2.13") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1m7ldqq0lrcj20phqcfsczwazvhgvf6sphjaq9bvp3q7wfadibw6") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm"))))))

(define-public crate-ethers-solc-0.17.0 (c (n "ethers-solc") (v "0.17.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.2") (d #t) (k 0)) (d (n "ethers-core") (r "^0.17.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.16") (k 0)) (d (n "svm") (r "^0.2.13") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "154jlziynmxqyvci3zc8wp50a8qgp7mzym71val4ln0fbm0dprgb") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm"))))))

(define-public crate-ethers-solc-1.0.0 (c (n "ethers-solc") (v "1.0.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "ethers-core") (r "^1.0.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.18") (k 0)) (d (n "svm") (r "^0.2.18") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "122949zyb8a0in3nmzvfffv4a2yi1vfy6mwiqzxhyynhw3imdn0y") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm")))) (r "1.62")))

(define-public crate-ethers-solc-1.0.1 (c (n "ethers-solc") (v "1.0.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "ethers-core") (r "^1.0.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.18") (k 0)) (d (n "svm") (r "^0.2.18") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0k1s9bavi5pkvfjxyyz9nrf52d1m4rpd4h390s60s7l0l70a6w96") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm")))) (r "1.62")))

(define-public crate-ethers-solc-1.0.2 (c (n "ethers-solc") (v "1.0.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^1.0.0") (k 0)) (d (n "fs_extra") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.1.18") (k 0)) (d (n "svm") (r "^0.2.18") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0xrxj3dj2z51g1hqv8pl50n825p8nnii79pqwn8p3icnsakc1sfb") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm")))) (r "1.62")))

(define-public crate-ethers-solc-1.5.0 (c (n "ethers-solc") (v "1.5.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^1.0.0") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "semver") (r "^1.0.16") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.2") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0j71y3d0njpzi32pzacp6pdfgdd8b3jsa7kax39y62cfbgkg10ll") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm")))) (y #t) (r "1.64")))

(define-public crate-ethers-solc-2.0.0 (c (n "ethers-solc") (v "2.0.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.0") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "semver") (r "^1.0.16") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.3") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("rt"))) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "10wx2z8kvql9vg748xwvyl7k1437sv3r0c0acqd7bz5bys4hjl75") (f (quote (("tests") ("svm-solc" "svm/blocking" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm" "sha2/asm" "svm/sha2-asm")))) (r "1.64")))

(define-public crate-ethers-solc-2.0.1-alpha.1 (c (n "ethers-solc") (v "2.0.1-alpha.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.1-alpha.1") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.27") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.10") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.3") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0n26lcyw7glyd3wg0r8xfrfsx04nimwy5l7qp7vbhvv0hf5fc380") (f (quote (("tests") ("svm-solc" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util" "criterion/async_tokio") ("asm")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.1 (c (n "ethers-solc") (v "2.0.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.1") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.27") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.10") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.3") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("rt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1mnjwdp4p382f17h6wmc3w8cqhg5hnb3pxl37mf4f2hjija5h7rw") (f (quote (("tests") ("svm-solc" "svm-builds" "sha2") ("rustls" "svm/rustls") ("project-util" "tempfile" "fs_extra" "rand") ("openssl" "svm/openssl") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util" "criterion/async_tokio") ("asm")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.2 (c (n "ethers-solc") (v "2.0.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.2") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.27") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.10") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.3") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1r2rf8c6fm9mfwbi5kyi8j3lx8a044ik8z79sw6msh2c3zsl558k") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util" "criterion/async_tokio") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.3 (c (n "ethers-solc") (v "2.0.3") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.3") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.4") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0ssx5m3ij44bn1dmm2mqhqzc89fnj8abvbm783b87z58pih7x5kf") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util" "criterion/async_tokio") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.4 (c (n "ethers-solc") (v "2.0.4") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.4") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.2.4") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "16cc2qyx55nh1zb9hdk8hn0jd83xp30yr4n73fnxhwyy0r1pi112") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util" "criterion/async_tokio") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.6 (c (n "ethers-solc") (v "2.0.6") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.6") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.0") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "14dn8wdfywhcp004p67d91x3s4mzi4xlsllrh4yh316cpf5gv8wa") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.7 (c (n "ethers-solc") (v "2.0.7") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.7") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.0") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0x7n2g12z6dplghn31aqfa6s79i5ifxlaq3lksazhp2r47qqj758") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.8 (c (n "ethers-solc") (v "2.0.8") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.8") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.11") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (k 0)) (d (n "svm") (r "^0.2") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0g4vcc7s4g4b2b1gfdvcg0swp8wj4368my15cva3kim24nb2nv3s") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.9 (c (n "ethers-solc") (v "2.0.9") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.9") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.1") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0cb7ls7bqnkdasm1lyann9320am5fmr0hzch7hqdy4j7fy7rqmb6") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.10 (c (n "ethers-solc") (v "2.0.10") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.10") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.2") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1fmkx09i4bmiv0af9q54fqv03yf7bmn3s0gxzfcsng5fwy2f8d6y") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.11 (c (n "ethers-solc") (v "2.0.11") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.11") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0psrbck3h1a3xrzq5vvkgprrz2sicinhlm36zx68ciyihq2p2kx6") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.12 (c (n "ethers-solc") (v "2.0.12") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.12") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1smx6hni2midpr39h7vhxvfc8p90cjcgl0ar2j3ckw4fxkilcbnc") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.13 (c (n "ethers-solc") (v "2.0.13") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.13") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "0pzms5blx12gwqdnamj0rzwzzib5nk4qr1ca042k1970ha2z07fj") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

(define-public crate-ethers-solc-2.0.14 (c (n "ethers-solc") (v "2.0.14") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 2)) (d (n "ethers-core") (r "^2.0.14") (k 0)) (d (n "fs_extra") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 0)) (d (n "hex") (r "^1.6") (f (quote ("hex"))) (d #t) (k 0) (p "const-hex")) (d (n "home") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "md-5") (r "^0.10.5") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "path-slash") (r "^0.2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (k 0)) (d (n "solang-parser") (r "=0.3.3") (k 0)) (d (n "svm") (r "^0.3") (f (quote ("blocking"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs")) (d (n "svm-builds") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "svm-rs-builds")) (d (n "tempfile") (r "^3.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)) (d (n "yansi") (r "^0.5.1") (d #t) (k 0)))) (h "1p8yn64n1b3qwr28cjdn8r0xlkfadq7gxvyv8qk2hqwi3mvll936") (f (quote (("tests") ("svm-solc" "svm" "svm-builds" "sha2") ("project-util" "tempfile" "fs_extra" "rand") ("full" "async" "svm-solc") ("default" "rustls") ("async" "tokio/process" "tokio/io-util" "tokio/fs" "tokio/time" "futures-util") ("asm")))) (s 2) (e (quote (("rustls" "svm?/rustls") ("openssl" "svm?/openssl")))) (r "1.65")))

