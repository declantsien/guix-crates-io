(define-module (crates-io et he ethers-types-rs) #:use-module (crates-io))

(define-public crate-ethers-types-rs-0.1.0 (c (n "ethers-types-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "ethabi") (r "^18.0.0") (d #t) (k 0) (p "ethers-abi")) (d (n "ethers-hash-rs") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jsonrpc-rs") (r "^0.1") (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "rlp") (r "^0.5.2") (f (quote ("std"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)))) (h "09wghw1qc8ra7gvmyjsx7fml85bg47rv3s4x3di2nms8pjcvl0kv") (f (quote (("rust_crypto" "k256") ("default" "rust_crypto"))))))

