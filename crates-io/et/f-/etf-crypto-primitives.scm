(define-module (crates-io et f- etf-crypto-primitives) #:use-module (crates-io))

(define-public crate-etf-crypto-primitives-0.2.0 (c (n "etf-crypto-primitives") (v "0.2.0") (d (list (d (n "aes-gcm") (r "^0.10.2") (f (quote ("alloc" "aes" "rand_core"))) (k 0)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-crypto-primitives") (r "^0.4.0") (f (quote ("signature"))) (k 0)) (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "scale") (r "^3") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.0") (k 0)))) (h "0g8f6ngqzasqkrh279zv84gp8g4vm5idxwmnvmmmdpjw9hqnww5q") (r "1.63")))

(define-public crate-etf-crypto-primitives-0.2.1 (c (n "etf-crypto-primitives") (v "0.2.1") (d (list (d (n "aes-gcm") (r "^0.10.2") (f (quote ("alloc" "aes" "rand_core"))) (k 0)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-crypto-primitives") (r "^0.4.0") (f (quote ("signature"))) (k 0)) (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "scale") (r "^3") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.0") (k 0)))) (h "0pf55v8j168r64s82xb4xim5pqr3mv6wh4i5f9dbi72ga65yshlq") (r "1.63")))

(define-public crate-etf-crypto-primitives-0.2.2 (c (n "etf-crypto-primitives") (v "0.2.2") (d (list (d (n "aes-gcm") (r "^0.10.2") (f (quote ("alloc" "aes" "rand_core"))) (k 0)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-crypto-primitives") (r "^0.4.0") (f (quote ("signature"))) (k 0)) (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "scale") (r "^3") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.0") (k 0)))) (h "1dvgzz9i4hcfvkcaxd6rym9506684cakr41l61c04yr2i9s5x4s1") (r "1.63")))

(define-public crate-etf-crypto-primitives-0.2.3 (c (n "etf-crypto-primitives") (v "0.2.3") (d (list (d (n "aes-gcm") (r "^0.10.2") (f (quote ("alloc" "aes" "rand_core"))) (k 0)) (d (n "ark-bls12-381") (r "^0.4.0") (f (quote ("curve"))) (k 0)) (d (n "ark-crypto-primitives") (r "^0.4.0") (f (quote ("signature"))) (k 0)) (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "array-bytes") (r "^6.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "scale") (r "^3") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (k 0)) (d (n "sha3") (r "^0.10.0") (k 0)))) (h "0vb7bik82h870wzasvya8y48pnr6x47zchnnh1gr23f0f1x6bsin") (r "1.63")))

