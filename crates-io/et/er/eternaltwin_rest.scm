(define-module (crates-io et er eternaltwin_rest) #:use-module (crates-io))

(define-public crate-eternaltwin_rest-0.13.0 (c (n "eternaltwin_rest") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "axum") (r "^0.6.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-extra") (r "^0.7.0") (f (quote ("cookie"))) (d #t) (k 0)) (d (n "cookie") (r "^0.17.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.19.0") (d #t) (k 2)) (d (n "eternaltwin_auth_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.13.0") (d #t) (k 2)) (d (n "eternaltwin_twinoid_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.13.0") (d #t) (k 0)) (d (n "headers") (r "^0.3.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (d #t) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "03ydwsq7qpr29pslicnkfjlm18dvpiicxvp3bhns29k0603gnmy5") (f (quote (("serde") ("default" "serde")))) (r "1.61.0")))

(define-public crate-eternaltwin_rest-0.14.0 (c (n "eternaltwin_rest") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "axum-extra") (r "^0.9.2") (f (quote ("cookie" "typed-header" "protobuf"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.19.0") (d #t) (k 2)) (d (n "eternaltwin_auth_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.0") (d #t) (k 2)) (d (n "eternaltwin_twinoid_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.0") (d #t) (k 0)) (d (n "headers") (r "^0.4.0") (d #t) (k 0)) (d (n "http02") (r "^0.2.11") (d #t) (k 0) (p "http")) (d (n "hyper") (r "^1.2.0") (d #t) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1m1p9v5p4j1ghy9w13g0h8jy7p70rmh8lbzafz2sjnxmss16g16h") (f (quote (("serde") ("default" "serde")))) (r "1.77.0")))

(define-public crate-eternaltwin_rest-0.14.2 (c (n "eternaltwin_rest") (v "0.14.2") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "axum-extra") (r "^0.9.2") (f (quote ("cookie" "typed-header" "protobuf"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.19.0") (d #t) (k 2)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.2") (d #t) (k 2)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "headers") (r "^0.4.0") (d #t) (k 0)) (d (n "http02") (r "^0.2.11") (d #t) (k 0) (p "http")) (d (n "hyper") (r "^1.2.0") (d #t) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "17sl73fi9brml0ddlamv49g5narnkf6ixgkf5n2lxlq1v5f9zrza") (f (quote (("serde") ("default" "serde")))) (r "1.77.0")))

(define-public crate-eternaltwin_rest-0.14.3 (c (n "eternaltwin_rest") (v "0.14.3") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "axum-extra") (r "^0.9.2") (f (quote ("cookie" "typed-header" "protobuf"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "cookie") (r "^0.18.0") (d #t) (k 0)) (d (n "cookie_store") (r "^0.19.0") (d #t) (k 2)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.3") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.2") (d #t) (k 2)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "headers") (r "^0.4.0") (d #t) (k 0)) (d (n "http02") (r "^0.2.11") (d #t) (k 0) (p "http")) (d (n "hyper") (r "^1.2.0") (d #t) (k 2)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "prost") (r "^0.12.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1wnxzb8h6s63dd4gfm4a3ryvdkzw3iimb32czj0swhfihqp0vd48") (f (quote (("serde") ("default" "serde")))) (r "1.77.0")))

