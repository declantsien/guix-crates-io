(define-module (crates-io et er eternaltwin_system) #:use-module (crates-io))

(define-public crate-eternaltwin_system-0.14.0 (c (n "eternaltwin_system") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "marktwin") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.4") (f (quote ("macros" "chrono" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0z821pgqs5f9ih5kdrrz5h4pfqpfbw6ljijagdjyziqb4m6cm6vh") (r "1.77.0")))

(define-public crate-eternaltwin_system-0.14.2 (c (n "eternaltwin_system") (v "0.14.2") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "marktwin") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.4") (f (quote ("macros" "chrono" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1v6z2pg780ka74kgjknwnq6rczvifarhnyf1zk43r9knfscf2m00") (r "1.77.0")))

(define-public crate-eternaltwin_system-0.14.3 (c (n "eternaltwin_system") (v "0.14.3") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_serde_tools") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.2.0") (d #t) (k 0)) (d (n "marktwin") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-proto") (r "^0.5.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.4") (f (quote ("macros" "chrono" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1z7xajmvbxa3v825nnib574ziylad6b52kcn3cdgxz5giak61pm4") (r "1.77.0")))

