(define-module (crates-io et er eternaltwin_cli) #:use-module (crates-io))

(define-public crate-eternaltwin_cli-0.13.0 (c (n "eternaltwin_cli") (v "0.13.0") (d (list (d (n "axum") (r "^0.6.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "eternaltwin_app") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.13.0") (f (quote ("mem"))) (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_mt_dns") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.13.0") (f (quote ("neon"))) (d #t) (k 0)) (d (n "eternaltwin_rest") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.13.0") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.13.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2.0") (f (quote ("trace" "logs"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0m0glfm620lxvgrlkjq90jspvsl216rr0i4gmfsnc6sy4r3f1qlf") (f (quote (("default" "start")))) (s 2) (e (quote (("start" "dep:eternaltwin_app")))) (r "1.61.0")))

(define-public crate-eternaltwin_cli-0.14.0 (c (n "eternaltwin_cli") (v "0.14.0") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "eternaltwin_app") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.0") (f (quote ("mem"))) (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_mt_dns") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.0") (f (quote ("neon"))) (d #t) (k 0)) (d (n "eternaltwin_rest") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.0") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("trace" "logs"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "07ab9jdwbr44iwlgj65z7z75lj8xy132llbiaijfx0akbkl5ncnk") (f (quote (("default" "start")))) (s 2) (e (quote (("start" "dep:eternaltwin_app")))) (r "1.77.0")))

(define-public crate-eternaltwin_cli-0.14.2 (c (n "eternaltwin_cli") (v "0.14.2") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "eternaltwin_app") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (f (quote ("mem"))) (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mt_dns") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (f (quote ("neon"))) (d #t) (k 0)) (d (n "eternaltwin_rest") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("trace" "logs"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0d503j47zrcvqmrivwysqwi8y2iq17svwxka5a00rlrjwaigjpyi") (f (quote (("default" "start")))) (s 2) (e (quote (("start" "dep:eternaltwin_app")))) (r "1.77.0")))

(define-public crate-eternaltwin_cli-0.14.3 (c (n "eternaltwin_cli") (v "0.14.3") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.3") (d #t) (k 0)) (d (n "eternaltwin_app") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "eternaltwin_auth_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_core") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_dinoparc_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_email_formatter") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_forum_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_hammerfest_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_job_store") (r "^0.14.2") (f (quote ("mem"))) (d #t) (k 0)) (d (n "eternaltwin_link_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_log") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mailer") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_mt_dns") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_client") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_oauth_provider_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_password") (r "^0.14.2") (f (quote ("neon"))) (d #t) (k 0)) (d (n "eternaltwin_rest") (r "^0.14.3") (d #t) (k 0)) (d (n "eternaltwin_services") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_system") (r "^0.14.3") (d #t) (k 0)) (d (n "eternaltwin_token_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_twinoid_store") (r "^0.14.2") (d #t) (k 0)) (d (n "eternaltwin_user_store") (r "^0.14.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("trace" "logs"))) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.155") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("postgres" "runtime-tokio-rustls"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0j36fy9kfd1llkv2wiwi7332jydsmq14fn81ywfvwqggcd7c22i8") (f (quote (("default" "start")))) (s 2) (e (quote (("start" "dep:eternaltwin_app")))) (r "1.77.0")))

