(define-module (crates-io et er eternaltwin_user_store) #:use-module (crates-io))

(define-public crate-eternaltwin_user_store-0.13.0 (c (n "eternaltwin_user_store") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.13.0") (d #t) (k 2)) (d (n "eternaltwin_core") (r "^0.13.0") (f (quote ("sqlx"))) (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.13.0") (d #t) (k 2)) (d (n "neon") (r "^0.10.1") (f (quote ("napi-6"))) (o #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.6.2") (f (quote ("macros" "offline" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (k 0)))) (h "1744695fmil77bqp65g0v8yb7mls0xjc5lv14fffp59g4yqrqh10") (r "1.61.0")))

(define-public crate-eternaltwin_user_store-0.14.0 (c (n "eternaltwin_user_store") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.0") (d #t) (k 2)) (d (n "eternaltwin_core") (r "^0.14.0") (f (quote ("sqlx"))) (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.4") (f (quote ("macros" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (k 0)))) (h "021rnmdz4ff65za42yqz9lvdhxbn3hlsrn63bq8bf8j5f5gyvw17") (r "1.77.0")))

(define-public crate-eternaltwin_user_store-0.14.2 (c (n "eternaltwin_user_store") (v "0.14.2") (d (list (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "eternaltwin_config") (r "^0.14.2") (d #t) (k 2)) (d (n "eternaltwin_core") (r "^0.14.2") (f (quote ("sqlx"))) (d #t) (k 0)) (d (n "eternaltwin_db_schema") (r "^0.14.2") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serial_test") (r "^1.0.0") (d #t) (k 2)) (d (n "sqlx") (r "^0.7.4") (f (quote ("macros" "postgres" "runtime-tokio-rustls" "uuid"))) (k 0)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4"))) (k 0)))) (h "1gz51pg5ym11pjnwrvy1rsj6h3dq5acc5acqd4snfbdrhhx0j2am") (r "1.77.0")))

