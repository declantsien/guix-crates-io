(define-module (crates-io pp ca ppca) #:use-module (crates-io))

(define-public crate-ppca-0.3.1 (c (n "ppca") (v "0.3.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)))) (h "1whny96admqg9wlqnz8dzm869dhh437fx9p8mdzl66ms5qvlmqms")))

(define-public crate-ppca-0.4.0 (c (n "ppca") (v "0.4.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)))) (h "1937n86vf05yzgnqns78xycqzawl3hmn56sagla3j6z05nnhj1g5")))

(define-public crate-ppca-0.4.1 (c (n "ppca") (v "0.4.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31.2") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)))) (h "079k4aqssfpgfmc39i797n802xhfpn5xqqclpjg7xyb2l9vwh15a")))

