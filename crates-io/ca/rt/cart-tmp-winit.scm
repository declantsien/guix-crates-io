(define-module (crates-io ca rt cart-tmp-winit) #:use-module (crates-io))

(define-public crate-cart-tmp-winit-0.22.2 (c (n "cart-tmp-winit") (v "0.22.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "console_log") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "core-foundation") (r "^0.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-video-sys") (r "^0.1.4") (f (quote ("display_link"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dispatch") (r "^0.2.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2.64") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "ndk") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-glue") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "ndk-sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "objc") (r "^0.2.3") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"windows\"))") (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 2)) (d (n "smithay-client-toolkit") (r "^0.6.6") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "std_web") (r "=0.4.20") (f (quote ("experimental_features_which_may_break_on_minor_version_bumps"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "stdweb")) (d (n "wasm-bindgen") (r "^0.2.45") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wayland-client") (r "^0.23.0") (f (quote ("dlopen" "egl" "cursor" "eventloop"))) (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)) (d (n "web_sys") (r "^0.3.22") (f (quote ("console" "CssStyleDeclaration" "BeforeUnloadEvent" "Document" "DomRect" "Element" "Event" "EventTarget" "FocusEvent" "HtmlCanvasElement" "HtmlElement" "KeyboardEvent" "MediaQueryList" "MediaQueryListEvent" "MouseEvent" "Node" "PointerEvent" "Window" "WheelEvent"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0) (p "web-sys")) (d (n "winapi") (r "^0.3.6") (f (quote ("combaseapi" "commctrl" "dwmapi" "errhandlingapi" "hidusage" "libloaderapi" "objbase" "ole2" "processthreadsapi" "shellapi" "shellscalingapi" "shobjidl_core" "unknwnbase" "winbase" "windowsx" "winerror" "wingdi" "winnt" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11-dl") (r "^2.18.5") (o #t) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))") (k 0)))) (h "1r9ybs43iqxg8cvkhan8qgdrj4naavhqbx5gkv67sn4wd90xw20f") (f (quote (("x11" "x11-dl") ("web-sys" "web_sys" "wasm-bindgen" "instant/wasm-bindgen") ("wayland" "wayland-client" "smithay-client-toolkit") ("stdweb" "std_web" "instant/stdweb") ("default" "x11" "wayland"))))))

