(define-module (crates-io ca rt cartes_rbpf) #:use-module (crates-io))

(define-public crate-cartes_rbpf-0.6.0 (c (n "cartes_rbpf") (v "0.6.0") (d (list (d (n "arbitrary") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "combine") (r "^3.8.1") (d #t) (k 0)) (d (n "elf") (r "^0.0.10") (d #t) (k 2)) (d (n "gdbstub") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.5.1") (d #t) (k 0)) (d (n "hash32") (r "^0.2.0") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("memoryapi" "sysinfoapi" "winnt" "errhandlingapi"))) (o #t) (d #t) (k 0)))) (h "1m9zwx3iy5kdcldq803sxnzwnk0l5hr45mafcq0739s920mg5piq") (f (quote (("jit" "libc" "winapi") ("fuzzer-not-safe-for-production" "arbitrary") ("default" "jit") ("debugger" "gdbstub"))))))

