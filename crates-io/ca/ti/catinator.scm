(define-module (crates-io ca ti catinator) #:use-module (crates-io))

(define-public crate-catinator-1.6.1 (c (n "catinator") (v "1.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "irc") (r "^0.15") (f (quote ("json" "tls-rust" "ctcp"))) (k 0)) (d (n "irc-proto") (r "^0.15") (d #t) (k 0)) (d (n "macros") (r "^0") (d #t) (k 0) (p "catinator_macros")) (d (n "mockito") (r "^0.30.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (k 0)) (d (n "sasl") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)) (d (n "urlparse") (r "^0.7") (d #t) (k 0)))) (h "1s3xnzcpyg3lf5b20h887akkq4lknj83lmswapslrh4scdmdc7wr") (f (quote (("default") ("bench"))))))

(define-public crate-catinator-1.6.3 (c (n "catinator") (v "1.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "irc") (r "^0.15") (f (quote ("json" "tls-rust" "ctcp"))) (k 0)) (d (n "irc-proto") (r "^0.15") (d #t) (k 0)) (d (n "macros") (r "^0") (d #t) (k 0) (p "catinator_macros")) (d (n "mockito") (r "^0.30.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (k 0)) (d (n "sasl") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)) (d (n "urlparse") (r "^0.7") (d #t) (k 0)))) (h "08z1971yflzal685mllbh9sp4m9wysjcf6xry618jdzfhv9d0y2j") (f (quote (("default") ("bench"))))))

(define-public crate-catinator-1.6.4 (c (n "catinator") (v "1.6.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "figment") (r "^0.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "irc") (r "^0.15") (f (quote ("json" "tls-rust" "ctcp"))) (k 0)) (d (n "irc-proto") (r "^0.15") (d #t) (k 0)) (d (n "macros") (r "^0") (d #t) (k 0) (p "catinator_macros")) (d (n "mockito") (r "^0.30.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (k 0)) (d (n "sasl") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)) (d (n "urlparse") (r "^0.7") (d #t) (k 0)))) (h "0q0jkwxnd3y82kp79hlkcg2cwhqac6602lmmf4s1709wabck7yj0") (f (quote (("default") ("bench"))))))

