(define-module (crates-io ca r- car-mirror) #:use-module (crates-io))

(define-public crate-car-mirror-0.1.0 (c (n "car-mirror") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.5.0") (d #t) (k 0)) (d (n "deterministic-bloom") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "iroh-car") (r "^0.4") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "quick_cache") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "roaring-graphs") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "roaring-graphs") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_ipld_dagcbor") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "testresult") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "json" "parking_lot" "registry"))) (d #t) (k 2)) (d (n "wnfs-common") (r "^0.2.0") (d #t) (k 0)) (d (n "wnfs-unixfs-file") (r "^0.2.0") (d #t) (k 2)))) (h "12k5ls8rw0ggcgr1wfc18jgxp7ri7yld4vvd9qbrh6kw5swn34fy") (f (quote (("test_utils" "proptest" "roaring-graphs") ("default")))) (s 2) (e (quote (("quick_cache" "dep:quick_cache")))) (r "1.75")))

