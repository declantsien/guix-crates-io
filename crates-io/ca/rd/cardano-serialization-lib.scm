(define-module (crates-io ca rd cardano-serialization-lib) #:use-module (crates-io))

(define-public crate-cardano-serialization-lib-5.0.0 (c (n "cardano-serialization-lib") (v "5.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.24") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.65") (d #t) (k 0)))) (h "0ymx3l2jz2v4vpmwg1l9md6dib2wmvrdziy7clhwgpc965nb2x6h")))

(define-public crate-cardano-serialization-lib-6.0.0 (c (n "cardano-serialization-lib") (v "6.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.24") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.65") (d #t) (k 0)))) (h "1501mn30yphik1xxkjg2ijak0ajsrq7gc7nrdq1ldxygvb6k3qz4")))

(define-public crate-cardano-serialization-lib-6.1.0 (c (n "cardano-serialization-lib") (v "6.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.24") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.65") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1rhd69c464w2wxkln64hfv7vqh85z82j06hpvld9iwb6na33jp5a")))

(define-public crate-cardano-serialization-lib-7.0.0 (c (n "cardano-serialization-lib") (v "7.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.2.0") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.24") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.65") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "11zwz54d8lc9lkqf0rfwp495mmgikwfxys58wr8q0n9g2wb046h5")))

(define-public crate-cardano-serialization-lib-7.1.0 (c (n "cardano-serialization-lib") (v "7.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1.0") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1knx11pxwsd973y2pv3bay723s7p25njylghjqi4lgpx0m5k4hsw")))

(define-public crate-cardano-serialization-lib-8.0.0 (c (n "cardano-serialization-lib") (v "8.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1ahwvs3i7k68c3yyjhd1kk3qp3g6n98wmsykbf9dbqys6gji7aqr")))

(define-public crate-cardano-serialization-lib-8.1.0 (c (n "cardano-serialization-lib") (v "8.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "= 0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "= 0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1rr8gv90czkm7sv5rx0h1qjs9wg6v6vcrdlj6z701gi00d0xip2p")))

(define-public crate-cardano-serialization-lib-9.0.0 (c (n "cardano-serialization-lib") (v "9.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "= 0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "= 0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0878kaan9b57x4arjh9n3y3c3fw5f63vl5kk0ji8gp4b4sg70ka0")))

(define-public crate-cardano-serialization-lib-9.1.0 (c (n "cardano-serialization-lib") (v "9.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "= 0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "= 0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1hgrhlcc5x0qv0mxls67ly58vwczhq8jxld07pjxkk2lwnp7132w")))

(define-public crate-cardano-serialization-lib-9.1.2 (c (n "cardano-serialization-lib") (v "9.1.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0mivdyzjidlh265c7n87dv3scx0p2xps496bdxadx5nb8wflr338")))

(define-public crate-cardano-serialization-lib-9.1.3 (c (n "cardano-serialization-lib") (v "9.1.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "17q6a54w7kc7xa5qssbm81yrpjq187dz0mivp4izah8jqyl08583")))

(define-public crate-cardano-serialization-lib-9.1.4 (c (n "cardano-serialization-lib") (v "9.1.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.74") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "09h8vixlydkbdgiv7ps3b5nfk4k8d40q054x4iximhc3jny4fkqs")))

(define-public crate-cardano-serialization-lib-10.0.0 (c (n "cardano-serialization-lib") (v "10.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.3.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.3.2") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1sfcmjjacbbvpr7m9jkxfwh94nvnnm6xkk2p9flzi935b83sg81a")))

(define-public crate-cardano-serialization-lib-10.0.1 (c (n "cardano-serialization-lib") (v "10.0.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0yzgrzcqzpkhbk2j99ncgs24l8xfmv8aisp2gh5z7jx1j1qlvmv2")))

(define-public crate-cardano-serialization-lib-10.0.2 (c (n "cardano-serialization-lib") (v "10.0.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "003vp25bqrs89n6qkwrzjlyf4ivsfl6q5i3wscfd8h1qwba10n2j")))

(define-public crate-cardano-serialization-lib-10.0.3-beta.1 (c (n "cardano-serialization-lib") (v "10.0.3-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1pnbi47mf361n65h5hk5bq8pdr1i1ml1f0j0gpa9cjmq10q5lskj")))

(define-public crate-cardano-serialization-lib-10.0.3 (c (n "cardano-serialization-lib") (v "10.0.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1c0my1nbxnrfrmm6al8sr9p37wzlid3fvzwmqpnr330b235irl1n")))

(define-public crate-cardano-serialization-lib-10.0.4-beta.1 (c (n "cardano-serialization-lib") (v "10.0.4-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0s6p05xbvcz4wk9ggfss4y4fydvyjwmy7v218xkacfqnlvin9jm2")))

(define-public crate-cardano-serialization-lib-10.0.4-beta.2 (c (n "cardano-serialization-lib") (v "10.0.4-beta.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "18i1j9pacgphs72by4jamjp16kfbyy00jb2anndxwh5yaniynjfr")))

(define-public crate-cardano-serialization-lib-10.0.4-beta.3 (c (n "cardano-serialization-lib") (v "10.0.4-beta.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "17c2dnqrzjllrdfq22agm481sw4qfpyxwh04r8i68028337rm8by")))

(define-public crate-cardano-serialization-lib-10.0.4-beta.4 (c (n "cardano-serialization-lib") (v "10.0.4-beta.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0rs06miclhxrq2b7xchlc08vhnjs8is3ij145hbgnivm1ihalrf7")))

(define-public crate-cardano-serialization-lib-10.0.4 (c (n "cardano-serialization-lib") (v "10.0.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1nb1rnzdc6k8fyajcdwsxd1k6xp5xfp7zf9l3q5nrz0wg9rihrgp")))

(define-public crate-cardano-serialization-lib-10.0.5-beta.1 (c (n "cardano-serialization-lib") (v "10.0.5-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1gnzzxfzxsbk7mbavapqqyy5yx9mrhr46p30jac447kdzzzaq3cy")))

(define-public crate-cardano-serialization-lib-10.1.0 (c (n "cardano-serialization-lib") (v "10.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1k86lqppzq0x03wvcrcixqvcc3kz5m8c4rmsrwglpl2rhknl69hs")))

(define-public crate-cardano-serialization-lib-10.2.0-beta.1 (c (n "cardano-serialization-lib") (v "10.2.0-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "01nia3hkrvgk9ycpgvzms2dyd6ir11fgb3pby0b88xpwshvpxsgz")))

(define-public crate-cardano-serialization-lib-10.2.0-beta.2 (c (n "cardano-serialization-lib") (v "10.2.0-beta.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1h7rl8vs37imf07skg59j7rmfbhavy279s42jd6xlyis0b4kf9xq")))

(define-public crate-cardano-serialization-lib-10.2.0-beta.3 (c (n "cardano-serialization-lib") (v "10.2.0-beta.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1xl4dlym7f41znc8rngvm8397wyqjg5h28nnljlbans7kcdd1x16")))

(define-public crate-cardano-serialization-lib-10.2.0-beta.4 (c (n "cardano-serialization-lib") (v "10.2.0-beta.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1smwzr97s2yc7a2c9a209p1w7hjsq8ws1vdyg7kclpkda2rprl6w")))

(define-public crate-cardano-serialization-lib-10.2.0-beta.5 (c (n "cardano-serialization-lib") (v "10.2.0-beta.5") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1wcmz5vs1a2y7nkyhfbjxyxxrk3kzivphnsnl0x283m6py3ydv9j")))

(define-public crate-cardano-serialization-lib-10.2.0 (c (n "cardano-serialization-lib") (v "10.2.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0jhl9af5lrxlkciapsgpmv5kg31gckmmiqqadgxf963sl3b3k6zm")))

(define-public crate-cardano-serialization-lib-11.0.0-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.0-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1gqk1ja9gz3gqcnfnwiyvz3rczk9bscljcacci2797laf3k7k78x")))

(define-public crate-cardano-serialization-lib-11.0.0-beta.1 (c (n "cardano-serialization-lib") (v "11.0.0-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "12jqkp9zycfvwbni6507kx2ybpk5z0yv9sbykwis5nq36za7kgmj")))

(define-public crate-cardano-serialization-lib-11.0.0-rc.1 (c (n "cardano-serialization-lib") (v "11.0.0-rc.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "12c0jirbbbzv9a736zlpgmmdsgm2yln9q6dn3f0fgz4201k6ba34")))

(define-public crate-cardano-serialization-lib-11.1.0-alpha.1 (c (n "cardano-serialization-lib") (v "11.1.0-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1fbmi1maq2fmqs4w3fasrq1aylcc51wmw74bpdb51xyffh2jbjvz")))

(define-public crate-cardano-serialization-lib-11.1.0-alpha.2 (c (n "cardano-serialization-lib") (v "11.1.0-alpha.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ycf7z9bfx4jblpvy2k0rwmi1r7mnpz4amczw0q2hik4a424px2q")))

(define-public crate-cardano-serialization-lib-11.0.0 (c (n "cardano-serialization-lib") (v "11.0.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "04nagyfrfjaz0q236ibbdndw9ymb3lf1wyhh0qlclfph3kckrn4n")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1fndd96diwq56hxasqzf2nwcjb7plcfk78ala59axs38a02hd3g7")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.2 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1h7p943cfwi34mfvyyfpgr28pqs0m76hdlv7fwcv38156ylwymsp")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.3 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0k7xc88hb9zkkmy4q5ynsfw93ss6kwc820cxy7m9g7wgwsr1kisa")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.4 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0b96i2a6xckhrfgak2m7hrjs1r2y4j3zqlg5yna7f7v85vkqmzrf")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.5 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.5") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "12hvvr2cxxga8m1laslb7d357r2d1xifk4v8d28d2yr5r1fhfaxj")))

(define-public crate-cardano-serialization-lib-11.0.1-alpha.6 (c (n "cardano-serialization-lib") (v "11.0.1-alpha.6") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0w96f6224rakxfkyh11hm1pxqrfbn82ga8ymlwfp2q85fxcwncsr")))

(define-public crate-cardano-serialization-lib-11.0.1 (c (n "cardano-serialization-lib") (v "11.0.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1fqxihv8p5chq5nlgh8lgsavgr8hbhfyw49g7bnx95nhpbplv6x5")))

(define-public crate-cardano-serialization-lib-11.0.2-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.2-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0wvhcav46vdqm8yq55s78brxh9rrb5biqhqgwiw8aj1vdlz6nk7v")))

(define-public crate-cardano-serialization-lib-11.0.2 (c (n "cardano-serialization-lib") (v "11.0.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1vdcgnwab9jsg84nsjwajlvv46d6z60hqbsqld4v0wxk5w1x3fyk")))

(define-public crate-cardano-serialization-lib-11.0.3-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.3-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0b4sv33czjchbc5np60ffp6ky3ya1f4pcrd2wk9a56wq0x4v457z")))

(define-public crate-cardano-serialization-lib-11.0.3 (c (n "cardano-serialization-lib") (v "11.0.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1jd397clmnh4z1c9k25ggb3d1mxy35g6i24p2lrqfca3jgam7dj6")))

(define-public crate-cardano-serialization-lib-11.0.4-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.4-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1wdzrppbikv2qxfs7klihh9b021hilzhs7v126b5ypx28xpr9v1b")))

(define-public crate-cardano-serialization-lib-11.0.4 (c (n "cardano-serialization-lib") (v "11.0.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0b8m8smp3sxqnwj35cmdvpzann3gq8v04yrr6w1gcfpszsriwagr")))

(define-public crate-cardano-serialization-lib-11.0.5-alpha.1 (c (n "cardano-serialization-lib") (v "11.0.5-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "00v8gnxn5g7hd6xrdy51fvbwwd4n7yfrklkgls9m3ym6mwskc8jy")))

(define-public crate-cardano-serialization-lib-11.0.5 (c (n "cardano-serialization-lib") (v "11.0.5") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1a7x174sn20ji6ydfw5cgwcfga3rfyfhra6svk3hinlya2ff6hpl")))

(define-public crate-cardano-serialization-lib-11.1.0 (c (n "cardano-serialization-lib") (v "11.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0j2vhiqly1f4svb2k750k2pv79l5zqbm0hwndzfpdpyn8gmvf72l")))

(define-public crate-cardano-serialization-lib-11.1.1-alpha.1 (c (n "cardano-serialization-lib") (v "11.1.1-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0wyghzb8q4d8pf565ljd1b7kcxan6rc13q9vma77rn4p5bsqfvaj")))

(define-public crate-cardano-serialization-lib-11.1.1 (c (n "cardano-serialization-lib") (v "11.1.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "17fymf9vvblnppmdi6cizf09inawyyn47cpgxjdj3xs8m2h9xapw")))

(define-public crate-cardano-serialization-lib-11.2.0 (c (n "cardano-serialization-lib") (v "11.2.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1x6m3hvjfxgnss234jabzpas8pq8m45gwvmin49g4qlmmhmdh1jq")))

(define-public crate-cardano-serialization-lib-11.2.1 (c (n "cardano-serialization-lib") (v "11.2.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1xcp8d9569s1d9cxsm6wwn4sqisd0xab41g7cn6ab1dix82hp1g0")))

(define-public crate-cardano-serialization-lib-11.3.0 (c (n "cardano-serialization-lib") (v "11.3.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "17k84l8s8wxfan17xs78dvfyl9c7ifwfdqdzv85j2ka6gbcbrjrg")))

(define-public crate-cardano-serialization-lib-11.3.1 (c (n "cardano-serialization-lib") (v "11.3.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "07b5pxn441xp22idd74g4lbdy15926qkljd6sqkx1g0ryyx43ych")))

(define-public crate-cardano-serialization-lib-11.4.0 (c (n "cardano-serialization-lib") (v "11.4.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1dfydnr0nf01z9az0jz6rn6rk5cvqqy5qham21mqq4n6h4gj9fy9")))

(define-public crate-cardano-serialization-lib-11.4.1-beta.1 (c (n "cardano-serialization-lib") (v "11.4.1-beta.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1430g0j4jkjprrsxilpa0qr6j723215waywasymymj8clykgw29x")))

(define-public crate-cardano-serialization-lib-11.5.0 (c (n "cardano-serialization-lib") (v "11.5.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0p62p4h0983zlgcr1skhjaqarmvyy2g4bvchxbkdlwxa20nangwc")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.1 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.1") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1rhj28cz88dcplki83chskskbwwr9y0a7ll21zva8qgdfhajg2zy")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.2 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.2") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1g2mjwyqzrdbmjky5766hp3gwcbxlhlcpldhqyq0rdmn1nkfksks")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.3 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.3") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0dr26c9gdx03rxwlbx43a33yg30z3vcws1das55s14qviwcdq4j7")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.4 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.4") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1hivmm11ghbwq054mdbz2d0y49pyvsq6s8snb9rmiqf4dbm1ahjw")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.5 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.5") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0pyrr9q3k3a9bq9d9d701l4rj0h3ay2iv7frlqkh14lf53db2rlc")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.6 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.6") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0zpasnh2bxs3m7dn2mmmn6pfna4j538qrjb8mbl120fqc44wc17j")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.7 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.7") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0g23ycsldxssrc3ngj37077j1vi1gimal33sd1k9drmdwifc4dlg")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.8 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.8") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0fp986wzss4ry24i9kdwlhw0miqfnmhdpl6bzd4a1i7p5y8gf8ax")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.9 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.9") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0b4j81b5k3rbqvzxgi0g8x6zfwavzqyndj9k915z9gn94ikfssp9")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.10 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.10") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1jw24k2a73l1vj78ssjkgf1y6adrrc77wwfjiap7sa31b7418wc7")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.11 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.11") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ryv52rhhr1b79m5ydbgs4vavb4xv28dh2hmwx71jn2wlhfi80qn")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.12 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.12") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "046h3zxap6zcz0m7hs9r81mj538j3qzrrk6slyjrcgm1sv38rkdy")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.13 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.13") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1x3rpa62j9477xyxa6lgakcrr3jxszhgx28g1n1rivhmz1230bbr")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.14 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.14") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1i7ylrf3l1jnf9iw2fn4a44azrqbwa7skby0wqlbjx9fw4xsycgs")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.15 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.15") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.87") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0s6cib4infzh8i1w5czncj1xxbq8qh5mh5bwkym15mcwpdbb5ban")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.16 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.16") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1dgjgs25x549rm9h3kw8cx34hghd20dqk1fhg4kllx0c2h61yjvp")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.17 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.17") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0dhi7capipx2h2my3978v7z5i0qi2qmxl70p71l0j29sa5liphkk")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.18 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.18") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "16ipz2fmssyadrywzd6z1hji5vxsp2f3izvxl6jv4cpihavyrp0r")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.19 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.19") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1myf6gq1hy7cn2fh0z3cbimnp3lv9vz81wqh0i7xjcnv7xlmixvc")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.20 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.20") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1xyxjf18jy6zx5hda2mavnd3r574g0w956klgcrcy1m8rc3zmjhd")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.21 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.21") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.57") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1ivf0a6zfvwzsgflivrxsrqzc1kw3biwji2ryxyzm6xx4dpyr1m2")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.22 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.22") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0r2ic3j1vlcbblmmqngpp0jnjyh9czjl2xgagz0h11skaz3w5vdj")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.23 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.23") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0zlqq9r4iffcy4jcsia51y69hrmsh15phh6y7b03w2wb8k8jc0yp")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.24 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.24") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1d1ii4rx537kv90wjg0apqnm5wj6y39aczmwqq6x6dhq7f5in1bf")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.25 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.25") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0i5j8225rg20yj65y1nb1qnmbfp0j9w4yzk75514va0bxvgn1xjf")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.26 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.26") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0b2r917qn2lg5lb6cg39sky8mc1v4spwkfi84kayxkwfhb85m9lw")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.27 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.27") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "08n0h4n0mqjgi48jmpw8sf033428kmb7sssj30sjd6wnqflfzlbd")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.28 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.28") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0izpg5c32zdif2h5xaglz4lww7ilpp79xnk194ky18sn2751690s")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.29 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.29") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1rjllrzwvkzwcs6sygrcf9mgg0f6r8mpar554abxcf18ga97igkh")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.30 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.30") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1waz795p6bk9md21rgy9k2xmpvq5r8bzwfnydfps2c76rykv68vx")))

(define-public crate-cardano-serialization-lib-12.0.0-alpha.31 (c (n "cardano-serialization-lib") (v "12.0.0-alpha.31") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "getrandom") (r "^0.2.3") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "hashlink") (r "^0.9.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 1)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.90") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1h35wxj6ackm483bf0vhaxprl2ham1xabrqswb92llbq2nk255mf")))

