(define-module (crates-io ca rd cardano-multiplatform-lib) #:use-module (crates-io))

(define-public crate-cardano-multiplatform-lib-0.1.0 (c (n "cardano-multiplatform-lib") (v "0.1.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0rfidh9ylc61w4ljdsfzr7j054jp4wllwvdal5wyjncfdzvl1xna")))

(define-public crate-cardano-multiplatform-lib-0.2.0 (c (n "cardano-multiplatform-lib") (v "0.2.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0ksf0znv0vk16nb2fq8fs12p20lq0plyd3b2nin5a9iws3lhw1v7")))

(define-public crate-cardano-multiplatform-lib-0.3.0 (c (n "cardano-multiplatform-lib") (v "0.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1rw8s9585q1jx88nwg6c3bg7rvc8z2mlpcv20xs2j8b9d5nj431r")))

(define-public crate-cardano-multiplatform-lib-1.0.0-beta.0 (c (n "cardano-multiplatform-lib") (v "1.0.0-beta.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0jfpv784xpbkwbjjc6yy1z382jx61q6p8v2k8977yafy5vkvazsx")))

(define-public crate-cardano-multiplatform-lib-1.0.0-beta.1 (c (n "cardano-multiplatform-lib") (v "1.0.0-beta.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.51") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.78") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0whs125k2m0hjfmh5j1dy94d9pwa85jlrqs9yrj5fbb2ja8vai30")))

(define-public crate-cardano-multiplatform-lib-1.0.0-beta.2 (c (n "cardano-multiplatform-lib") (v "1.0.0-beta.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "007p6q05sxg9m313xk1pdvy60ilia8115vkl1jvl6dm3q0fd81lq")))

(define-public crate-cardano-multiplatform-lib-1.0.0 (c (n "cardano-multiplatform-lib") (v "1.0.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0pk5s53gga8d61lhirp39aixn5r4vzrn7h9vwhlnbzvq8r927x89")))

(define-public crate-cardano-multiplatform-lib-1.0.1 (c (n "cardano-multiplatform-lib") (v "1.0.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "07pyj2dsy1mci2ndsscrcpg77bfq4qdy0z3wdq4ln79xf7bvpa8i")))

(define-public crate-cardano-multiplatform-lib-1.0.2 (c (n "cardano-multiplatform-lib") (v "1.0.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "162mgkcrsrx8ybxiwnhj2vaks6vm2fqllk4748lm4zixaidms0sb")))

(define-public crate-cardano-multiplatform-lib-1.0.3 (c (n "cardano-multiplatform-lib") (v "1.0.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1cv4bbv2xg4m7agvmrv29swm6gfw0r51s4ajn6idh2pizmgd8z40")))

(define-public crate-cardano-multiplatform-lib-2.0.0 (c (n "cardano-multiplatform-lib") (v "2.0.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1zbk6a36wbrdkyzy5k8rr0h469h8l6jp47kihllbbrdkigmymbdy")))

(define-public crate-cardano-multiplatform-lib-2.0.1 (c (n "cardano-multiplatform-lib") (v "2.0.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0p76ayrc3nfmbwkndm3ycsiq9h01p137ini8s69r46nrmyj85jmn")))

(define-public crate-cardano-multiplatform-lib-3.0.0 (c (n "cardano-multiplatform-lib") (v "3.0.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "0kflm3bkj7w4cqzrfir7b3d1i8cjws0kb8rkbgcvmn2yh6wdxqba")))

(define-public crate-cardano-multiplatform-lib-3.0.1 (c (n "cardano-multiplatform-lib") (v "3.0.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "05x6hpv03sg9x0gl6p0wlxvibdk1xr2s92b0i10382qbdg405kk7")))

(define-public crate-cardano-multiplatform-lib-3.1.0 (c (n "cardano-multiplatform-lib") (v "3.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "1qqhkn9zlv2wllkyyibn1gylhwpa60cd1sf69jcnf39c5sq9nnzi")))

(define-public crate-cardano-multiplatform-lib-3.1.1 (c (n "cardano-multiplatform-lib") (v "3.1.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.82") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "03h07b6g65vybw3zxqkn4gqq9ch0ybz1mxh5q362vpjs0pbcfijg")))

(define-public crate-cardano-multiplatform-lib-3.1.3 (c (n "cardano-multiplatform-lib") (v "3.1.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "cbor_event") (r "^2.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "cryptoxide") (r "^0.4.2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ed25519-bip32") (r "^0.4.1") (d #t) (k 0)) (d (n "fraction") (r "^0.10.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "=0.3.59") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "noop_proc_macro") (r "^0.3.0") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^0.9.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_os") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "rand_os") (r "^0.1") (d #t) (t "cfg(not(all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))") (k 0)) (d (n "schemars") (r "^0.8.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)))) (h "05lx7vrq5gy7yds6dwhq9qbv1xgmy0rb8w9q0gzvh862ayrkwagj") (f (quote (("wasm" "getrandom"))))))

(define-public crate-cardano-multiplatform-lib-4.0.1 (c (n "cardano-multiplatform-lib") (v "4.0.1") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^0.1.0") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^1.1.0") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^0.1.0") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^0.1.0") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1d3lrrwp7j9ld4wzragv6xa6xwkcrg502q52a8l5s6mk15grk4sx")))

(define-public crate-cardano-multiplatform-lib-4.0.2 (c (n "cardano-multiplatform-lib") (v "4.0.2") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^4.0.2") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^4.0.2") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^4.0.2") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^4.0.2") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^4.0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "14ddyx01ry38zjpax91la3ryy2as3al1c7jk7q89nhy4hkmdy8wm")))

(define-public crate-cardano-multiplatform-lib-5.0.0 (c (n "cardano-multiplatform-lib") (v "5.0.0") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^5.0.0") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^5.0.0") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^5.0.0") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^5.0.0") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^5.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "09q5fwpr3d5jhis2d6aynssn5bvvp5ikvqpavsy13ljrdjxnixif")))

(define-public crate-cardano-multiplatform-lib-5.1.0 (c (n "cardano-multiplatform-lib") (v "5.1.0") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^5.1.0") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^5.1.0") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^5.1.0") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^5.1.0") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^5.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0lzh7v9alpkxvn76pfa3gxkd8mas28fwh8wval40vpkvyj1j74hl")))

(define-public crate-cardano-multiplatform-lib-5.2.0 (c (n "cardano-multiplatform-lib") (v "5.2.0") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^5.2.0") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^5.2.0") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^5.2.0") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^5.2.0") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^5.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0p9labkdqsw9wzckcc1fgxzg8g26x71bzni6b46452bgnhfza0w5")))

(define-public crate-cardano-multiplatform-lib-5.3.0 (c (n "cardano-multiplatform-lib") (v "5.3.0") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^5.3.0") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^5.3.0") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^5.3.0") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^5.3.0") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^5.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1hpzqvadjiz4aaz04yc94wfxp91x3rwr7d84dsvld4z9djrr3kpj")))

(define-public crate-cardano-multiplatform-lib-5.3.1 (c (n "cardano-multiplatform-lib") (v "5.3.1") (d (list (d (n "cbor_event") (r "^2.4.0") (d #t) (k 0)) (d (n "cml-chain-wasm") (r "^5.3.1") (d #t) (k 0)) (d (n "cml-cip25-wasm") (r "^5.3.1") (d #t) (k 0)) (d (n "cml-cip36-wasm") (r "^5.3.1") (d #t) (k 0)) (d (n "cml-core-wasm") (r "^5.3.1") (d #t) (k 0)) (d (n "cml-crypto-wasm") (r "^5.3.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.3") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1mxlc4y7q74cijvng3fmv04k1s7nd5vvwsgnpzjs3b3ab9ladw7l")))

