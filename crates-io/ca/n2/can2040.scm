(define-module (crates-io ca n2 can2040) #:use-module (crates-io))

(define-public crate-can2040-0.1.0 (c (n "can2040") (v "0.1.0") (d (list (d (n "bindgen") (r "^0.68") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "rp-pico") (r "^0.8") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.9") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "0fl6p6nbxx4mbd2ky5my8zmi7b6wh0kcxgws80p2r7c8shh1m4qq")))

(define-public crate-can2040-0.1.1 (c (n "can2040") (v "0.1.1") (d (list (d (n "bindgen") (r "^0.68") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "rp-pico") (r "^0.8") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.9") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "1w143kb3kf5mx2d87csqkcrng041bq4pfnrwqdvyih47c1hl8mjc")))

(define-public crate-can2040-0.1.2 (c (n "can2040") (v "0.1.2") (d (list (d (n "alloc-cortex-m") (r "^0.4") (d #t) (k 0)) (d (n "bindgen") (r "^0.68") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (d #t) (k 0)) (d (n "rp-pico") (r "^0.8") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.9") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "09fhf1pgbmb9bw63yszcpff8cxdsabj4qzfrhrmw20v15z4wwhim")))

(define-public crate-can2040-0.1.3 (c (n "can2040") (v "0.1.3") (d (list (d (n "alloc-cortex-m") (r "^0.4") (d #t) (k 0)) (d (n "bindgen") (r "^0.68") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (d #t) (k 0)) (d (n "rp-pico") (r "^0.8") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.9") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "0l6nw96k6sldgxhvkniv3y98s7blx84vz4lsf4xymf880w8548rb")))

(define-public crate-can2040-0.1.4 (c (n "can2040") (v "0.1.4") (d (list (d (n "alloc-cortex-m") (r "^0.4") (d #t) (k 0)) (d (n "bindgen") (r "^0.68") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.5") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (d #t) (k 0)) (d (n "rp-pico") (r "^0.8") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.9") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "1ryz4nrri5h081v2xnxhn7z383m0vp8wv91my7c174cv5jx0w6c6")))

(define-public crate-can2040-0.1.5 (c (n "can2040") (v "0.1.5") (d (list (d (n "alloc-cortex-m") (r "^0.4") (d #t) (k 0)) (d (n "bindgen") (r "^0.69") (d #t) (k 1)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "defmt-rtt") (r "^0.4") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4") (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^1.1") (d #t) (k 0)) (d (n "panic-probe") (r "^0.3") (d #t) (k 0)) (d (n "rp-pico") (r "^0.9") (d #t) (k 0)) (d (n "rp2040-hal") (r "^0.10") (f (quote ("rt" "critical-section-impl"))) (d #t) (k 0)))) (h "1s9zhmv3jia8wmr46xbg0wvjlxj29flf47yf5w8fbiwfay38v2pd")))

