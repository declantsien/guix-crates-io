(define-module (crates-io ca ir cairo-felt) #:use-module (crates-io))

(define-public crate-cairo-felt-0.1.0 (c (n "cairo-felt") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "16q24npgyr0855n1j2yfq6n6id35d6yz77hygicy3cqaybd0ypj4")))

(define-public crate-cairo-felt-0.1.1 (c (n "cairo-felt") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "1hac6q4gc98x88if15dyal45pm3kwn4jjn7z5kbc4hkcb04z94m7")))

(define-public crate-cairo-felt-0.1.3 (c (n "cairo-felt") (v "0.1.3") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0hlsjwadj1ww1qwg509c795ngs81fg5gv594h64qb3mvnc6lc3r5")))

(define-public crate-cairo-felt-0.2.0 (c (n "cairo-felt") (v "0.2.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1m1gb4b8zzbzg9bl72z0zldgik9n89maxdxsh2q6mk3wwbvkjdgq") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.2.1-rc1 (c (n "cairo-felt") (v "0.2.1-rc1") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0zqqg90wrw64k6zs020d04yvqxipq0iq00jcaz1dnspq4x3xrjhc") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.2.1 (c (n "cairo-felt") (v "0.2.1") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0msq0ic7ysxhy0w4crq837j9qrkbvkvjhk4frjv5fv1d76hrcfi7") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.2.2 (c (n "cairo-felt") (v "0.2.2") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "03xa20pv803ywp475qavxlh56gfl67c7nhpsqiql9xzmdcpp4alr") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.3.0-rc1 (c (n "cairo-felt") (v "0.3.0-rc1") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "12xj1kxg6s9zg00c6qjjxabc26n21972xwgik1bnipwfkg8ysgd9") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.4.0 (c (n "cairo-felt") (v "0.4.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1zz9bpz3w5aybg7wzz6k5wiwjz20a8432n2w4m0r77vl3jx5kws4") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.5.0 (c (n "cairo-felt") (v "0.5.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1n5zxf8qhd4nqig0pqyb5kjan52jbl6jhi27nbch32dlzx8r9qlb") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.5.1 (c (n "cairo-felt") (v "0.5.1") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "03fz6vkvg0h84c50zivpafini11x798c3xzi84ir455n2r97i2f6") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.5.2 (c (n "cairo-felt") (v "0.5.2") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "19k8xgkhyj7pr00k4fpzw8rqgk3d9vrhpykj2qshpgz8pd2926j5") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.6.0 (c (n "cairo-felt") (v "0.6.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0hpazgpvan72gm9fgy2ajirw7p7qmkam8lvw4wr5jiq29bifw77v") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.6.1 (c (n "cairo-felt") (v "0.6.1") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "11gdlcb7xsk2gjgnannv7mk3pl68k59v2pfb1v89sm2b4ldf5bpd") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.7.0 (c (n "cairo-felt") (v "0.7.0") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "13yhiqlx5wfbp4kc6fz9lxbjww55xw60yxx66abc1smf8dc208mb") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.8.0 (c (n "cairo-felt") (v "0.8.0") (d (list (d (n "lambdaworks-math") (r "^0.1.1") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "08v94ik2ryxyrv29x2k49wahk127px8llm93yb2ks36gvp1y85az") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math"))))))

(define-public crate-cairo-felt-0.8.1 (c (n "cairo-felt") (v "0.8.1") (d (list (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1cy66x691mfd8qkydf26j3bz08k1m1x7viydi7fmszjwzsrb2fnk") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math"))))))

(define-public crate-cairo-felt-0.8.2 (c (n "cairo-felt") (v "0.8.2") (d (list (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0jjhwl86adwn3bkvdd1y3y78vcx6zxw8ln0bigni6z9sf98yi38g") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math"))))))

(define-public crate-cairo-felt-0.6.2 (c (n "cairo-felt") (v "0.6.2") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1fd0pb54k58s26knfhrrry4abw0wv70jdyynmgvsgrg5qk53gj7f") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.8.3 (c (n "cairo-felt") (v "0.8.3") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1qjxq0hld5341wnwdi1602dh9888r95abkvr2nnm5p22j04lpq4w") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary"))))))

(define-public crate-cairo-felt-0.8.4 (c (n "cairo-felt") (v "0.8.4") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "1vafvg3s0abz5sj45qs8crrarb0arxnjskzdk5lry3m6mzkh4hz9") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary"))))))

(define-public crate-cairo-felt-0.8.5 (c (n "cairo-felt") (v "0.8.5") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0d4qd4gqlj12a4xhda9inwvzm4kxf8sp5bmrlyfbyy7ihr1nc8pd") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary"))))))

(define-public crate-cairo-felt-0.8.6 (c (n "cairo-felt") (v "0.8.6") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0fnvys3hkiw9hf9g1fqcm2sj2x83db3n6zzhg731dm8pw1yl35f4") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary" "dep:proptest"))))))

(define-public crate-cairo-felt-0.6.3 (c (n "cairo-felt") (v "0.6.3") (d (list (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.1.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0daxj42fdzgm8mwhldd1kvnjvm82pzjzqw47kbbw9b1yz82yl66k") (f (quote (("std") ("default" "std") ("alloc"))))))

(define-public crate-cairo-felt-0.8.7 (c (n "cairo-felt") (v "0.8.7") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "09v4gpkcg5jv1ysq1d5mli7sr8i4qxs0w12qnkzmvjh0i1xhjwjr") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary" "dep:proptest"))))))

(define-public crate-cairo-felt-0.9.0 (c (n "cairo-felt") (v "0.9.0") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0m6rm3iapi21zvbd8dkl7xdivlq93pz564zjjcij3fmn5djmjj87") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary" "dep:proptest"))))))

(define-public crate-cairo-felt-0.9.1 (c (n "cairo-felt") (v "0.9.1") (d (list (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0lxiv5lgw3bh6b0vvzc0a52rlckg1i7almibi577ljdsp69254xf") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math") ("arbitrary" "dep:arbitrary" "num-bigint/arbitrary" "dep:proptest"))))))

(define-public crate-cairo-felt-0.8.2-hotfix1 (c (n "cairo-felt") (v "0.8.2-hotfix1") (d (list (d (n "lambdaworks-math") (r "^0.1.2") (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "proptest") (r "^1.2.0") (d #t) (k 2)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)))) (h "0ah0lwvs2dpfmbyjypldgvq4gx8ha7r4plc1j15jrvp92lbxmhp3") (f (quote (("std") ("default" "std") ("alloc")))) (s 2) (e (quote (("lambdaworks-felt" "dep:lambdaworks-math"))))))

