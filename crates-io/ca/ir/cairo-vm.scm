(define-module (crates-io ca ir cairo-vm) #:use-module (crates-io))

(define-public crate-cairo-vm-0.1.0 (c (n "cairo-vm") (v "0.1.0") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "keccak") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parse-hyperlinks") (r "^0.23.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "03p4i5d5z6cdfmxds94l1c52zmd5zci49qjdkk16w798g8h4id0d") (f (quote (("with_mimalloc" "mimalloc") ("default" "with_mimalloc"))))))

(define-public crate-cairo-vm-0.1.1 (c (n "cairo-vm") (v "0.1.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "felt") (r "^0.1.0") (d #t) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "keccak") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parse-hyperlinks") (r "^0.23.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "182mg19qhpbmjd391j8flxrphvhmj9hldwv1h1cz791p4s737jf5") (f (quote (("with_mimalloc" "mimalloc") ("default" "with_mimalloc"))))))

(define-public crate-cairo-vm-0.1.2 (c (n "cairo-vm") (v "0.1.2") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "felt") (r "^0.1.1") (d #t) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "keccak") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parse-hyperlinks") (r "^0.23.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0l9aalmkkbjgs079b1n1gz1gdif20s278glj39knwanx4gg1myn4") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint") ("skip_next_instruction_hint") ("default" "with_mimalloc"))))))

(define-public crate-cairo-vm-0.1.3 (c (n "cairo-vm") (v "0.1.3") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "felt") (r "^0.1.0") (d #t) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "keccak") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parse-hyperlinks") (r "^0.23.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10.1") (d #t) (k 0)) (d (n "starknet-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0h5r9immdfbigd7s1d2mr2vlrz7r3p3gqmx8z0wdik60sk5c9syw") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint") ("skip_next_instruction_hint") ("default" "with_mimalloc"))))))

(define-public crate-cairo-vm-0.2.1-rc1 (c (n "cairo-vm") (v "0.2.1-rc1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.2.1-rc1") (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.24.0-rc1") (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.4.2") (f (quote ("signature-display"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "18ryphf6nc66q1sn01536jkvd51py8h65mh4if18i7h6adjqfhhf") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("alloc" "serde_json/alloc" "serde_bytes/alloc" "starknet-crypto/alloc" "parse-hyperlinks/alloc" "felt/alloc"))))))

(define-public crate-cairo-vm-0.2.2 (c (n "cairo-vm") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.2.2") (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.24.1") (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.4.2") (f (quote ("signature-display"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0mcx0rad5sncsjlj7l76cbfrb6ymn6xa1z5a3f6a5swbdplqmd6d") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("alloc" "serde_json/alloc" "serde_bytes/alloc" "starknet-crypto/alloc" "parse-hyperlinks/alloc" "felt/alloc"))))))

(define-public crate-cairo-vm-0.3.0-rc1 (c (n "cairo-vm") (v "0.3.0-rc1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "assert_matches") (r "^1.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.3.0-rc1") (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.24.2-rc1") (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.4.2") (f (quote ("signature-display"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1pmwdp3g9vnwlkfs80dmzpicij743rasp8x4gmmw8nmywz1zhjlz") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("alloc" "serde_json/alloc" "serde_bytes/alloc" "starknet-crypto/alloc" "parse-hyperlinks/alloc" "felt/alloc"))))))

(define-public crate-cairo-vm-0.4.0 (c (n "cairo-vm") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.4.0") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.25.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1jbhlq8hr3snppplmrahny793xzzmc6rnx7cmaqja6agbp8cbv06") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc"))))))

(define-public crate-cairo-vm-0.5.1 (c (n "cairo-vm") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.5.1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.27.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ci0vdl91k81rf9y55912pjcxwxqbpjdqsala2h7301969gc6mw3") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.5.2 (c (n "cairo-vm") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.5.2") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.28.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1a2rgxksmnlygz4iygvihfps7q0gal1jhmcrhyhrbr93j3b3xixh") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.6.0 (c (n "cairo-vm") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.6.0") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.29.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1xhh2scp0hz5dy2his40jkayjhn8r2ywbdf59w4yaxh4yyz5ks0n") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "num-prime") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.6.1 (c (n "cairo-vm") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.6.1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.30.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ll7gml9gi0dc1ig219k6d8b8vyv8z45flnl7d6ibasbd3r09rcb") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "num-prime") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.7.0 (c (n "cairo-vm") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.7.0") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.31.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ix0z0lvmh9rvhqqpfywpshdm70yi7j14m12a5ixd7y5izyvpc66") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "dep:num-prime") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.8.0 (c (n "cairo-vm") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.0") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.32.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "15h3jddd30djk5j60b520b8yzv14yw7x5ajnwrxn7wfv6ag3v7q5") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "dep:num-prime") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.8.1 (c (n "cairo-vm") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0-rc6") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "16zxn6rjjzarncqapfk2xsq9adch3xq1ahv66y4dr46vavhmsmm5") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.8.2 (c (n "cairo-vm") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.2") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1x4iirwl3917qg6rxmmqsjrjkr177z1g74hj11gcgz3g7g0jav35") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.6.2 (c (n "cairo-vm") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.6.2") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.30.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1c95v5dv17bdc876kz1wb3x92sxwxw29a2a9mmy4ajk9s922kxjj") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "num-prime") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.8.5 (c (n "cairo-vm") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.5") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jbjm539wzajp21irs9ravy004ahqhss2p14fk10srvwasc2gbvl") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-0.8.6 (c (n "cairo-vm") (v "0.8.6") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.6") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1imsy72fmm4nlfvd5j95nbdj144l91i688wbln36r6sh4zgn7yrd") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-0.6.3 (c (n "cairo-vm") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha.7") (o #t) (k 0)) (d (n "ark-std") (r "^0.3.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^1.1.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.6.3") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.6") (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.29") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parse-hyperlinks") (r "^0.31.0") (f (quote ("alloc"))) (k 0) (p "cairo-take_until_unbalanced")) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "rusty-hook") (r "^0.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.2") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.1") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1d6zz8b548vmkfrsvdqi8dymdxcj97l59fc9f6fpy41ncv7p51wb") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("std" "serde_json/std" "serde_bytes/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "parse-hyperlinks/std" "felt/std" "num-prime") ("skip_next_instruction_hint") ("hooks") ("default" "std" "with_mimalloc") ("cairo-1-hints" "cairo-lang-starknet" "cairo-lang-casm" "ark-ff" "ark-std"))))))

(define-public crate-cairo-vm-0.8.7 (c (n "cairo-vm") (v "0.8.7") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.7") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0lw5ddvhq188dfzk683hp9fmgjgf8fpi37ghgii4bs0gkc9vzn80") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-0.9.0 (c (n "cairo-vm") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc2") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.9.0") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1wm3pspj6hvlikq1qjn8hnch31446blbgaycbhx6iiji4mdf61yr") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-0.9.1 (c (n "cairo-vm") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.1") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.1") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.9.1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1aknkaxymwyk4r9xpbahy0byqsg7lhygr7g0qr8kjnbdli2wsz4l") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-0.8.2-hotfix1 (c (n "cairo-vm") (v "0.8.2-hotfix1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.2-hotfix1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0bycgb8rzcdii701r0y2m4zlmka9sql2vgmc4953145j51sh1qqy") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.8.3 (c (n "cairo-vm") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.2") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lvmdxiasfvyp7mhbswsjanrcmzi340q7rvk8vhc028ar09cz08q") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.8.4-rc.0 (c (n "cairo-vm") (v "0.8.4-rc.0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.8.2") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.5.0") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-curve") (r "^0.4.0") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "06v5w67yyhkhmw7zfg3v51ccdw9gw03nyz1hwh7jc69dccqxmbkx") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std"))))))

(define-public crate-cairo-vm-0.9.2 (c (n "cairo-vm") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.1") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.1") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "felt") (r "^0.9.1") (f (quote ("alloc"))) (k 0) (p "cairo-felt")) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-curve") (r "^0.4.0") (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1cgzp0pqzb1bn40h6kdnn7vgc6zqwh4wim8k6qklgmw0va29cmpx") (f (quote (("with_mimalloc" "mimalloc") ("test_utils" "skip_next_instruction_hint" "hooks") ("skip_next_instruction_hint") ("lambdaworks-felt" "felt/lambdaworks-felt") ("hooks") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-crypto/std" "felt/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "felt/arbitrary" "felt/std" "std"))))))

(define-public crate-cairo-vm-1.0.0-rc0 (c (n "cairo-vm") (v "1.0.0-rc0") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.1") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.1") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-types-core") (r "^0.0.6") (f (quote ("serde" "curve" "num-traits"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "05lca9bks7sifmghb3k7vdq786r20gjncwi1npdpblkq0ys0b1j8") (f (quote (("test_utils" "skip_next_instruction_hint" "hooks" "print") ("skip_next_instruction_hint") ("print" "std") ("hooks") ("extensive_hints") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("with_mimalloc" "dep:mimalloc") ("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-types-core/std" "starknet-crypto/std" "dep:num-prime" "thiserror-no-std/std") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "std" "starknet-types-core/arbitrary" "starknet-types-core/std"))))))

(define-public crate-cairo-vm-1.0.0-rc1 (c (n "cairo-vm") (v "1.0.0-rc1") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.5.4") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.5.4") (o #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-types-core") (r "^0.0.9") (f (quote ("serde" "curve" "num-traits"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "1azm711l77h02bn4rbdv22sghizlb4hzip0h4ygxdmrqghzfxwsc") (f (quote (("test_utils" "skip_next_instruction_hint" "hooks" "print") ("skip_next_instruction_hint") ("print" "std") ("hooks") ("extensive_hints") ("default" "std" "with_mimalloc")))) (s 2) (e (quote (("with_mimalloc" "dep:mimalloc") ("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-types-core/std" "starknet-crypto/std" "dep:num-prime" "thiserror-no-std/std" "dep:zip") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "std" "starknet-types-core/arbitrary" "starknet-types-core/std"))))))

(define-public crate-cairo-vm-1.0.0-rc2 (c (n "cairo-vm") (v "1.0.0-rc2") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.3") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.6.3") (o #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.3") (o #t) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-types-core") (r "^0.1.0") (f (quote ("serde" "curve" "num-traits" "hash"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "19wc76sxc073715lpz4w87qwzc1nwg3hy4iaxqjik1hnyrsjgsls") (f (quote (("tracer") ("test_utils" "skip_next_instruction_hint" "hooks" "print") ("skip_next_instruction_hint") ("print" "std") ("mod_builtin") ("hooks") ("extensive_hints") ("default" "std")))) (s 2) (e (quote (("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-types-core/std" "starknet-crypto/std" "dep:num-prime" "thiserror-no-std/std" "dep:zip") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:cairo-lang-starknet-classes" "dep:ark-ff" "dep:ark-std") ("arbitrary" "dep:arbitrary" "std" "starknet-types-core/arbitrary" "starknet-types-core/std"))))))

(define-public crate-cairo-vm-1.0.0-rc3 (c (n "cairo-vm") (v "1.0.0-rc3") (d (list (d (n "anyhow") (r "^1.0.69") (k 0)) (d (n "arbitrary") (r "^1.3.0") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-std") (r "^0.4.0") (o #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^2.0.0-rc.3") (f (quote ("serde"))) (k 0)) (d (n "bitvec") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.3") (o #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.6.3") (o #t) (k 0)) (d (n "cairo-lang-starknet-classes") (r "^2.6.3") (o #t) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "generic-array") (r "^0.14.7") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "iai-callgrind") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "keccak") (r "^0.1.2") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (k 0)) (d (n "mimalloc") (r "^0.1.37") (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "nom") (r "^7") (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde" "rand"))) (k 0)) (d (n "num-integer") (r "^0.1.45") (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (o #t) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.3") (f (quote ("big-int"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (k 0)) (d (n "rstest") (r "^0.17.0") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("arbitrary_precision" "alloc"))) (k 0)) (d (n "sha2") (r "^0.10.7") (f (quote ("compress"))) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)) (d (n "starknet-crypto") (r "^0.6.1") (f (quote ("signature-display" "alloc"))) (k 0)) (d (n "starknet-types-core") (r "^0.1.0") (f (quote ("serde" "curve" "num-traits" "hash"))) (k 0)) (d (n "thiserror-no-std") (r "^2.0.2") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "0d84v7c2gfqj3rhdfnkj2bxl22nsq6sxlkzdijsif3vcp1s4rym0") (f (quote (("tracer") ("mod_builtin") ("extensive_hints") ("default" "std")))) (s 2) (e (quote (("test_utils" "std" "dep:arbitrary" "starknet-types-core/arbitrary" "starknet-types-core/std") ("std" "serde_json/std" "bincode/std" "anyhow/std" "starknet-types-core/std" "starknet-crypto/std" "dep:num-prime" "thiserror-no-std/std" "dep:zip") ("cairo-1-hints" "dep:cairo-lang-starknet" "dep:cairo-lang-casm" "dep:cairo-lang-starknet-classes" "dep:ark-ff" "dep:ark-std"))))))

