(define-module (crates-io ca ir cairo-lang-utils) #:use-module (crates-io))

(define-public crate-cairo-lang-utils-0.1.0 (c (n "cairo-lang-utils") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "01li8gpvxg3v8m0d6rgmrjnhj3k6pfkg0f9bmbkhkjqq6kdam5ki") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-alpha.2 (c (n "cairo-lang-utils") (v "1.0.0-alpha.2") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "1l7mb485qpyvdkzsm76m16hylksw1cdd8y04mhb6lnwldgis7mmp") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-alpha.3 (c (n "cairo-lang-utils") (v "1.0.0-alpha.3") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "0hhx2j653pj16k8hrma7i4y15j7h541f727dki2159djhr3r0vlj") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-alpha.4 (c (n "cairo-lang-utils") (v "1.0.0-alpha.4") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "1zdzy7snp41sihnz2q3a0gmv08m65l182x4kc8q01yrv3w1bsh8p") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-alpha.5 (c (n "cairo-lang-utils") (v "1.0.0-alpha.5") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "02x1kqx0v4vld45pb1hbp4aylyvz1j62qf8d6zf4bss3gd7xhpl8") (f (quote (("testing")))) (y #t)))

(define-public crate-cairo-lang-utils-1.0.0-alpha.6 (c (n "cairo-lang-utils") (v "1.0.0-alpha.6") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "147hbh2i0wjsgqgapjr3va513wn4gnkhzayc9i8vigrn8k8j96fn") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-alpha.7 (c (n "cairo-lang-utils") (v "1.0.0-alpha.7") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)))) (h "0m2fbv8gdzbfrxp6hg5w4pbvjjhdgqvrvhxk6xxyqlgn92nlrfmi") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0-rc0 (c (n "cairo-lang-utils") (v "1.0.0-rc0") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "0vbx1nd12l5jxx1y3p1qkp1y9d6p41bmql3wq161bs9cpxcl2f6l") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.0.0 (c (n "cairo-lang-utils") (v "1.0.0") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "0fwhxzdwy4z753nf73wcmps8z8cnlmgp9hg6rpfjpwvis1dhdg9r") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.1.0-alpha0 (c (n "cairo-lang-utils") (v "1.1.0-alpha0") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "0rb5dwbijdqx0j2cbmh5jw7rbpnyacny799h7xnnpj93xfizm9by") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.1.0-rc0 (c (n "cairo-lang-utils") (v "1.1.0-rc0") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "1p7cqi2xicr84pjsysrq5109q03di2ly3mb8p13fvmsfc5a2i88w") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-1.1.0 (c (n "cairo-lang-utils") (v "1.1.0") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "1bh50mwfabff0m0qq4gy1by75rwsfc9wydl5zvzpr4zx0hbyd9in") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc0 (c (n "cairo-lang-utils") (v "2.0.0-rc0") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "020d5p14fpfji5w85ya7dn0i5hwxc93xgam3v2kmx445wf5zx5w1") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc1 (c (n "cairo-lang-utils") (v "2.0.0-rc1") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0z4xpxigl4ar6n4c4l5b3mnai9c2mk6kvby9fz93my4ldpcjlfii") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc2 (c (n "cairo-lang-utils") (v "2.0.0-rc2") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "094k4x7j5wbf106w2cbrd7zrd87m1rnmb4vmigacxw2nsaxav4sc") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc3 (c (n "cairo-lang-utils") (v "2.0.0-rc3") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "17lvkl1badpkdglwbgprpgwydsrlhi3z7i312xa36wxh79wxfqm0") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc4 (c (n "cairo-lang-utils") (v "2.0.0-rc4") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "13ydpxh93mrvsfz1s22zjbh8dqc2k6y1pz9dd3v2255ig76kjyy3") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc5 (c (n "cairo-lang-utils") (v "2.0.0-rc5") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "006l00a5sdf9vqri67z0klcliqq6628h9vpalpj2r3959qsi8p8q") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-1.1.1 (c (n "cairo-lang-utils") (v "1.1.1") (d (list (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (d #t) (k 0)))) (h "0r304906vc7xhyl4j2wcnw14gm4702jnd1wz2w1mpk9sc6m0n65g") (f (quote (("testing"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc6 (c (n "cairo-lang-utils") (v "2.0.0-rc6") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1zya4kn1i6h82y4v3hzcdgp6cal523aqvrallkg9gjf17rd5fini") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0-rc7 (c (n "cairo-lang-utils") (v "2.0.0-rc7") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1mqi2rhca37hk0x5qfwc32dg9hmy996lm236v55gc38zqcy2n89q") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.0 (c (n "cairo-lang-utils") (v "2.0.0") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1q6vjiz6yy6rw3yjdhy2prx12mb6y41lmdh6vznh98sxdmznr69w") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.1 (c (n "cairo-lang-utils") (v "2.0.1") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1kz0zl5isr07lpamd024bszjilr0d8wa3gcylc7h5xm78lyqgl15") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.0.2 (c (n "cairo-lang-utils") (v "2.0.2") (d (list (d (n "env_logger") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1ryxp2grr5rmsyijj3b9lbmh5bp8vwi73f6cbimgk390gqnh2f3x") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0-rc0 (c (n "cairo-lang-utils") (v "2.1.0-rc0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1ldzgslrix6i4hagi0rxffnqhx4fzfvv7pvgk1jaw3yxki2rjad4") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0-rc1 (c (n "cairo-lang-utils") (v "2.1.0-rc1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0xxwkp5kz8yhalh7r45azy2s4g1y24n2jwqlz2pqxqfy15c719vf") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0-rc2 (c (n "cairo-lang-utils") (v "2.1.0-rc2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1vs5nydhm5ji0s7yn9w2vgzh092n54615fv5mkkvxqhmp7yvg8n5") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0-rc3 (c (n "cairo-lang-utils") (v "2.1.0-rc3") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1kbnd4vwiw3wqkxn2rgiw5ch97pz5567501qxj0pakalzqnqyii5") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0-rc4 (c (n "cairo-lang-utils") (v "2.1.0-rc4") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "12kp0vwmxgb2sn76n0a1ayvacs5656xbf3sscpb9w91drlpqqqi2") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.0 (c (n "cairo-lang-utils") (v "2.1.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0pvjmjvqysav237mwp5imajwhnszmmd38yx6grj8sc65nvhrf7nk") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.1 (c (n "cairo-lang-utils") (v "2.1.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1r672lb9lrkjjxs4y69ky0pm9hl81w3mf5sds1wjb7jhssqvvd5j") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.2.0 (c (n "cairo-lang-utils") (v "2.2.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0aw1rdkxmg5mvc8zj522l1fvp2wydv4qi0gc2c7rrc7hb7lbcx7r") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.3.0-rc0 (c (n "cairo-lang-utils") (v "2.3.0-rc0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1cw2dx601gv29lb169qyhxb57jbhv65bb65p5qckknl13qkbm0p7") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.3.0 (c (n "cairo-lang-utils") (v "2.3.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0sr6x3834qcd9r3fbipb4i94jaixxq4ffs96xzlib88dz036lrrs") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.3.1 (c (n "cairo-lang-utils") (v "2.3.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1b4p86ybmc62hxjs9jyynx0n1gxmr5j5920l6rsrpbvqp8pwvv8m") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc0 (c (n "cairo-lang-utils") (v "2.4.0-rc0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0rz6m1q5383by1r001ksmp12w4igzjvlk0gh0yz02vx8z379a1kh") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc1 (c (n "cairo-lang-utils") (v "2.4.0-rc1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0rfbgspn72xkp5rx746alppzjhwixcgbyvh4jvqvx3agqfb1lsz7") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc2 (c (n "cairo-lang-utils") (v "2.4.0-rc2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1j5yj06qh0f90nyr5z2d1jbgw9mnzj09cyac31q4hlgk9dlvb6k8") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc3 (c (n "cairo-lang-utils") (v "2.4.0-rc3") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "11bxqxw9kgv7mb5b82i6h8cqvih1v6qbxl79x1cmv61z64mvjjdf") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.1.2 (c (n "cairo-lang-utils") (v "2.1.2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "time") (r "^0.3.20") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0m1wdazyqdw4n197wflqlh70ap0fiyg6dxfpdf5rs2hmi883hijk") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc4 (c (n "cairo-lang-utils") (v "2.4.0-rc4") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0h44grgc89qxhk7bgi1ar1slm0qrbg55baz7sw0nns3fvl8vbscb") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc5 (c (n "cairo-lang-utils") (v "2.4.0-rc5") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "08bxpwyqwd4chjmx9wc6rggq0gzxqcvakh3fshr8pxbiccvzsqiv") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0-rc6 (c (n "cairo-lang-utils") (v "2.4.0-rc6") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1md366lw3y0mb62aj057a24gp5d7gv4ir3sdv8ih1x895x33451m") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.0 (c (n "cairo-lang-utils") (v "2.4.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "12c491gs6mi7y0ai367b0xw86c9ld5jrh0xx52bgxbqpckj9z5l8") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.1 (c (n "cairo-lang-utils") (v "2.4.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "01ix2naw4azrwmqryb7d4k9xim589ms6rdxz9pz2cziqh1yvqr9l") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.0-dev.0 (c (n "cairo-lang-utils") (v "2.5.0-dev.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0drx52rsnfqvvpkihywxqyxx4irjg3xgx5471lcc0ck9bkf080r1") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.2 (c (n "cairo-lang-utils") (v "2.4.2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "00mgjf4g13nxm22cxm0swkblbsb7yj2wfv56ay44zv07yy10680k") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.3 (c (n "cairo-lang-utils") (v "2.4.3") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0kywjf14yd6cjxqlhm7zyi6avv9i792ljwmcpgscjd4xbf5c0fil") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.0-dev.1 (c (n "cairo-lang-utils") (v "2.5.0-dev.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "16h5cadijvna6r0n2jmq1vyzgh2c0nrk5v2a4igwjfr09n82lflv") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.4.4 (c (n "cairo-lang-utils") (v "2.4.4") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1svqsgnm8hc1ivzxz0wjn4h4khswpizm6n76ys1cwc4jbna928pi") (f (quote (("testing")))) (s 2) (e (quote (("env_logger" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.0 (c (n "cairo-lang-utils") (v "2.5.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1dl6l5hak3r4qgy70w3xdq4x1a7ks606wmr0yq8hqirpwp2lbyki") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.1 (c (n "cairo-lang-utils") (v "2.5.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1i1v32rbwb8j2fjmr9qyi1822gpgw0kdk984i4vwcs6h4h5z3zyk") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.2 (c (n "cairo-lang-utils") (v "2.5.2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "19ym08wqnzffhc9ma4k8r4wfhwha2kqcyi3969cc1vnir6w6svj9") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.3 (c (n "cairo-lang-utils") (v "2.5.3") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0vi8sq47xwplfrqxn3xgg6ri1nkimcnvqq8n976cc1d6mwbdxww0") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.0-rc.0 (c (n "cairo-lang-utils") (v "2.6.0-rc.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1nwbvjh0zhild5j1sz9a6pjm3hibaga5b4cf7k6i0zrc8ysyj4nq") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.5.4 (c (n "cairo-lang-utils") (v "2.5.4") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "02gr4ma289am269r45529gg86bgqskbp7q6afpcv23yl8agr7l0j") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.0-rc.1 (c (n "cairo-lang-utils") (v "2.6.0-rc.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1dj0rg783fcnbi3abgmjkikr63cvs2r270kg2j2931hmkzwy4k6v") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.0 (c (n "cairo-lang-utils") (v "2.6.0") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0gyinsd79rl67p9llf187zbyjzdk5irgixalcpl2kidgnq42c8hm") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.1 (c (n "cairo-lang-utils") (v "2.6.1") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0hnz9aih4vjwbq9s8bgvmpza5iky0fg7hbhxn0p07lbwiw9hsir5") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.2 (c (n "cairo-lang-utils") (v "2.6.2") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1zp1s74wllg8if30pkli43drzshbl7jgx8xxmsbk68abhvlqaaca") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.6.3 (c (n "cairo-lang-utils") (v "2.6.3") (d (list (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (k 0)) (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "time") (r "^0.3.30") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "1ly6h4sfad734s9pvcskcvpdl9x8mpcri2pdy2xd0rj1viy3lwxz") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

(define-public crate-cairo-lang-utils-2.7.0-dev.0 (c (n "cairo-lang-utils") (v "2.7.0-dev.0") (d (list (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (k 0)) (d (n "itertools") (r "^0.12.1") (f (quote ("use_alloc"))) (k 0)) (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.5") (k 0)) (d (n "num-traits") (r "^0.2.19") (k 0)) (d (n "parity-scale-codec") (r "^3.6.9") (f (quote ("derive"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 2)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.16") (d #t) (k 2)) (d (n "time") (r "^0.3.36") (f (quote ("formatting" "macros" "local-offset"))) (o #t) (d #t) (k 0)))) (h "0r07q95qirrf8hns8vq09p59476k51jd9dxw5ax1rh37sxghrkl1") (f (quote (("testing") ("default" "std")))) (s 2) (e (quote (("std" "indexmap/std" "num-bigint/std" "num-traits/std" "serde?/std") ("serde" "dep:serde" "num-bigint/serde" "indexmap/serde") ("schemars" "std" "serde" "dep:schemars") ("parity-scale-codec" "dep:parity-scale-codec") ("env_logger" "std" "dep:env_logger" "dep:time" "dep:log"))))))

