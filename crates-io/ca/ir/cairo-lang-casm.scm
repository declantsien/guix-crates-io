(define-module (crates-io ca ir cairo-lang-casm) #:use-module (crates-io))

(define-public crate-cairo-lang-casm-0.1.0 (c (n "cairo-lang-casm") (v "0.1.0") (d (list (d (n "cairo-lang-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "cairo-vm") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "125yki0gkn44kphinsv1ayr2pjdd545c9i28vcshz5pkqwj2cb6n")))

(define-public crate-cairo-lang-casm-1.0.0-alpha.2 (c (n "cairo-lang-casm") (v "1.0.0-alpha.2") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0jj57zf9k049abha8j2gj4zkj3s7nqcd7iiyh23qr5jin6w7lx29")))

(define-public crate-cairo-lang-casm-1.0.0-alpha.3 (c (n "cairo-lang-casm") (v "1.0.0-alpha.3") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1n91xr5njrykhi3imad1ghzwm1j98h8cfvb93vsrfjjvbx1pf87j")))

(define-public crate-cairo-lang-casm-1.0.0-alpha.4 (c (n "cairo-lang-casm") (v "1.0.0-alpha.4") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1sa0chacinh01drs5v3h8axnhrfqsf557y9g9rpz0ps2b21q1cf1")))

(define-public crate-cairo-lang-casm-1.0.0-alpha.6 (c (n "cairo-lang-casm") (v "1.0.0-alpha.6") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^1.0.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0vmnmdkcrgyva9fyv4w07p1yp8ny3k95si0dxdqdkk0hcdr6s7jq")))

(define-public crate-cairo-lang-casm-1.0.0-alpha.7 (c (n "cairo-lang-casm") (v "1.0.0-alpha.7") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0hc4yszcng75ibn3d1ffdqfgasldb5mgr26bdgy3n3qwg9vdvpcc")))

(define-public crate-cairo-lang-casm-1.0.0-rc0 (c (n "cairo-lang-casm") (v "1.0.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^1.0.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0ngcs1njvjhnkr1iii14wlydks9fy0d70dgq97d9jqq90nwfjqsg")))

(define-public crate-cairo-lang-casm-1.0.0 (c (n "cairo-lang-casm") (v "1.0.0") (d (list (d (n "cairo-lang-utils") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0cjhjxgq06xza1nhlvg8fcg8xkln7bww2ba3lylylrfib7ldx483")))

(define-public crate-cairo-lang-casm-1.1.0-alpha0 (c (n "cairo-lang-casm") (v "1.1.0-alpha0") (d (list (d (n "cairo-lang-utils") (r "^1.1.0-alpha0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1lppdxvnl69xvmk0kgp8422ajfr4dxp2q1cd51ag43llwvj9rfjd")))

(define-public crate-cairo-lang-casm-1.1.0-rc0 (c (n "cairo-lang-casm") (v "1.1.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^1.1.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "027zi7w90l9xwrd99n4nr7pcy1yjlzag0h5ll814ifarc9kmi112")))

(define-public crate-cairo-lang-casm-1.1.0 (c (n "cairo-lang-casm") (v "1.1.0") (d (list (d (n "cairo-lang-utils") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1snfnimznbfim4bb4fywcdsai7lkbq166f5n0wik4vyra5sm77b0")))

(define-public crate-cairo-lang-casm-2.0.0-rc0 (c (n "cairo-lang-casm") (v "2.0.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1ydawyh79dsz1piy4jsc4nr5bv21wv1iszjq3z97vmrcgqhwvy98")))

(define-public crate-cairo-lang-casm-2.0.0-rc1 (c (n "cairo-lang-casm") (v "2.0.0-rc1") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1yhb0dl5zzxjzqwwg448f6zl1vsq77vwd7rfvikglm08vscpxy3f")))

(define-public crate-cairo-lang-casm-2.0.0-rc2 (c (n "cairo-lang-casm") (v "2.0.0-rc2") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1kwwr0dwc3pwv6zjspayz4hj9m21lq1caxijbygsph4ivk04c4zq")))

(define-public crate-cairo-lang-casm-2.0.0-rc3 (c (n "cairo-lang-casm") (v "2.0.0-rc3") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1b9xc5q6pz4h0ll06lylzh47c1dkbnscwspswr96nhqxylh7kyb9")))

(define-public crate-cairo-lang-casm-2.0.0-rc4 (c (n "cairo-lang-casm") (v "2.0.0-rc4") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0pjci2f9hnlh848aqi8j6y7vl9p3bxih0wxidb0kmy2094xqy8rr")))

(define-public crate-cairo-lang-casm-2.0.0-rc5 (c (n "cairo-lang-casm") (v "2.0.0-rc5") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1prwdqv6171l9zf5qsm5d8xzs4r06826dsi3k2sisi2f721xsqkc")))

(define-public crate-cairo-lang-casm-1.1.1 (c (n "cairo-lang-casm") (v "1.1.1") (d (list (d (n "cairo-lang-utils") (r "^1.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0r51fvdqn4225f2bfaa9nnx8lda2xr5iwgz2w023yjvzifk0fsh7")))

(define-public crate-cairo-lang-casm-2.0.0-rc6 (c (n "cairo-lang-casm") (v "2.0.0-rc6") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0iiayngsc2642icl8hf18gj6hhxs0gd2jdqvxikpf7iq2gaw3n9h")))

(define-public crate-cairo-lang-casm-2.0.0-rc7 (c (n "cairo-lang-casm") (v "2.0.0-rc7") (d (list (d (n "cairo-lang-utils") (r "^2.0.0-rc7") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1fka75aj1k6abhh3pz9ww72k4vi84szis9a8arwn0yichwgyvc8m")))

(define-public crate-cairo-lang-casm-2.0.0 (c (n "cairo-lang-casm") (v "2.0.0") (d (list (d (n "cairo-lang-utils") (r "^2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0aqc0v0whzrs3yfallk3aj8q808vn3gshppvagl5ca7m1znsh30a")))

(define-public crate-cairo-lang-casm-2.0.1 (c (n "cairo-lang-casm") (v "2.0.1") (d (list (d (n "cairo-lang-utils") (r "^2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1x62hfj2kk7y3za43wb6yipmkncac1kv8h8yksrii04qkyynms7z")))

(define-public crate-cairo-lang-casm-2.0.2 (c (n "cairo-lang-casm") (v "2.0.2") (d (list (d (n "cairo-lang-utils") (r "^2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "00av5apc05qicy9ndfvwr3ax9la6h4yyzih9psk4nk14hrk9ylb5")))

(define-public crate-cairo-lang-casm-2.1.0-rc0 (c (n "cairo-lang-casm") (v "2.1.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "13s8019n53f3qhhxaarwysnhaqf3hm5vszzfhi8bklhjp4s6nfwc")))

(define-public crate-cairo-lang-casm-2.1.0-rc1 (c (n "cairo-lang-casm") (v "2.1.0-rc1") (d (list (d (n "cairo-lang-utils") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1gm7f2xvs9p8z268ak73fiwdbr8bfjcsqmiap4drz6q2fy9pxmz4")))

(define-public crate-cairo-lang-casm-2.1.0-rc2 (c (n "cairo-lang-casm") (v "2.1.0-rc2") (d (list (d (n "cairo-lang-utils") (r "^2.1.0-rc2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "17x1a8hqyxb5l3czv4j1vq4ndbad0rkh72shnra0q2d770zpkffa")))

(define-public crate-cairo-lang-casm-2.1.0-rc3 (c (n "cairo-lang-casm") (v "2.1.0-rc3") (d (list (d (n "cairo-lang-utils") (r "^2.1.0-rc3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1yaf4pppv7ab81c6pcsa5fyh09j2d0wm5qcpjv3z25vi4r3lhzml")))

(define-public crate-cairo-lang-casm-2.1.0-rc4 (c (n "cairo-lang-casm") (v "2.1.0-rc4") (d (list (d (n "cairo-lang-utils") (r "^2.1.0-rc4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1r8srhqb5a568fzh4660dn8hr9437najmzs9dpq5d9i354hj7yqv")))

(define-public crate-cairo-lang-casm-2.1.0 (c (n "cairo-lang-casm") (v "2.1.0") (d (list (d (n "cairo-lang-utils") (r "^2.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "1y3ybl6c9s12kgzrx744vjdj8b3jix30rbdmqlkx16g4gbiyaasc")))

(define-public crate-cairo-lang-casm-2.1.1 (c (n "cairo-lang-casm") (v "2.1.1") (d (list (d (n "cairo-lang-utils") (r "^2.1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "177yv01cfi5jw8xh15dj01ayzxlwkn9qhw7r8gaanjchrzhh6c91")))

(define-public crate-cairo-lang-casm-2.2.0 (c (n "cairo-lang-casm") (v "2.2.0") (d (list (d (n "cairo-lang-utils") (r "^2.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0g2gb3db1m00s4id7qfaaqsbsww7ixyfiwrqqz154gxwi75zgixg")))

(define-public crate-cairo-lang-casm-2.3.0-rc0 (c (n "cairo-lang-casm") (v "2.3.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^2.3.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0ljmgyj66abzib3xzgh0agkzvzrbd4klrcdg19xarhm5q35qq1nb")))

(define-public crate-cairo-lang-casm-2.3.0 (c (n "cairo-lang-casm") (v "2.3.0") (d (list (d (n "cairo-lang-utils") (r "^2.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "05rj7nkiipqirpfijdhjijrfjaijvc3nzxr5z8lb3h75viggv2ab")))

(define-public crate-cairo-lang-casm-2.3.1 (c (n "cairo-lang-casm") (v "2.3.1") (d (list (d (n "cairo-lang-utils") (r "^2.3.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "14gxh6hz6wv87117idl3w8b6akn0yfiwvjqafj3imwqd3j4sgk60")))

(define-public crate-cairo-lang-casm-2.4.0-rc0 (c (n "cairo-lang-casm") (v "2.4.0-rc0") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "06wlqgrnd6hg4dznvz6421xgg9mww359p0lwzy1s6xwg2nqkkkqz")))

(define-public crate-cairo-lang-casm-2.4.0-rc1 (c (n "cairo-lang-casm") (v "2.4.0-rc1") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1pdw6zwy7d9iiar6hq47vjjnw3h9jd7p8w0m218qm2yrrxsr11zb")))

(define-public crate-cairo-lang-casm-2.4.0-rc2 (c (n "cairo-lang-casm") (v "2.4.0-rc2") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "09mzdz2qsya548k6pzzsw6js57c0zn6c99lwk3f8s51g7ml86d70")))

(define-public crate-cairo-lang-casm-2.4.0-rc3 (c (n "cairo-lang-casm") (v "2.4.0-rc3") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1p0wwaj5frzmfssx6d5zv40hy9kmr51lcbllkyjx3fwfhg5hlcn9")))

(define-public crate-cairo-lang-casm-2.1.2 (c (n "cairo-lang-casm") (v "2.1.2") (d (list (d (n "cairo-lang-utils") (r "^2.1.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)))) (h "0bn7b5j4mmdjrd7jv1b2ba9087x3g5zy1bh8ps10ag8nla17j6dv")))

(define-public crate-cairo-lang-casm-2.4.0-rc4 (c (n "cairo-lang-casm") (v "2.4.0-rc4") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0rmw9qfc70sxcrd6ispv18mkh0hl27p9cnp9847wiwmw1yc66saf")))

(define-public crate-cairo-lang-casm-2.4.0-rc5 (c (n "cairo-lang-casm") (v "2.4.0-rc5") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "02svamn9ax7mp626jp9lxs3nb23wg2klq51fk4bxqa5qmrllggx7")))

(define-public crate-cairo-lang-casm-2.4.0-rc6 (c (n "cairo-lang-casm") (v "2.4.0-rc6") (d (list (d (n "cairo-lang-utils") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "147f14fhw373p1py6jpn36kxaka93xas62la823xqwhpkbc1pka9")))

(define-public crate-cairo-lang-casm-2.4.0 (c (n "cairo-lang-casm") (v "2.4.0") (d (list (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1z76xzx2nz6zjyl7h9lgdb1x9r11936prg6hbr6bdgym8qfxql18")))

(define-public crate-cairo-lang-casm-2.4.1 (c (n "cairo-lang-casm") (v "2.4.1") (d (list (d (n "cairo-lang-utils") (r "^2.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "10c27sxngsv4wa0x47glcd1zgd81mvfyrflyw7z423b542s9kaqd")))

(define-public crate-cairo-lang-casm-2.5.0-dev.0 (c (n "cairo-lang-casm") (v "2.5.0-dev.0") (d (list (d (n "cairo-lang-utils") (r "^2.5.0-dev.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0fsi17jy09dc4cv1s7acvr30823wx1s3dxjmf2d6fjqyavmz3bl5")))

(define-public crate-cairo-lang-casm-2.4.2 (c (n "cairo-lang-casm") (v "2.4.2") (d (list (d (n "cairo-lang-utils") (r "^2.4.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1w72bicb6cq50jc2dyy1n4cmga7lcnav33kpyx10xil4h79357m2")))

(define-public crate-cairo-lang-casm-2.4.3 (c (n "cairo-lang-casm") (v "2.4.3") (d (list (d (n "cairo-lang-utils") (r "^2.4.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "14h8xc0i5nwhqzmvzpmwgipcyp476h2glqxsdwkx5ws15isxdar4")))

(define-public crate-cairo-lang-casm-2.5.0-dev.1 (c (n "cairo-lang-casm") (v "2.5.0-dev.1") (d (list (d (n "cairo-lang-utils") (r "^2.5.0-dev.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0jxabbhig0q1173ypcfqd9ahsf0hsmr4jdr45i8dr6bhsfjjd703")))

(define-public crate-cairo-lang-casm-2.4.4 (c (n "cairo-lang-casm") (v "2.4.4") (d (list (d (n "cairo-lang-utils") (r "^2.4.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (d #t) (k 0)) (d (n "parity-scale-codec-derive") (r "^3.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1s8aznm2jypdknkyqssjkq4csymyg4m9z84sycanr9jha4kqn1a0")))

(define-public crate-cairo-lang-casm-2.5.0 (c (n "cairo-lang-casm") (v "2.5.0") (d (list (d (n "cairo-lang-utils") (r "^2.5.0") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "19lc8fcv3wh14519z8p8i8s10jnksib0p5c7p21gr7hiz9am8263") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.5.1 (c (n "cairo-lang-casm") (v "2.5.1") (d (list (d (n "cairo-lang-utils") (r "^2.5.1") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0436hn6cbxvgj6caazbmzdqxpjaava1qyl45szs7clsahh8hv8q7") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.5.2 (c (n "cairo-lang-casm") (v "2.5.2") (d (list (d (n "cairo-lang-utils") (r "^2.5.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0xd609qkmx59c5ws0ygf4733n7z75m4n03zi3dsmrsml8wdpdw0x") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.5.3 (c (n "cairo-lang-casm") (v "2.5.3") (d (list (d (n "cairo-lang-utils") (r "^2.5.3") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0ywzba6qxyfcgyka1y0r479vld2nb95jv015qx8a1ql4cy5v6m6w") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.0-rc.0 (c (n "cairo-lang-casm") (v "2.6.0-rc.0") (d (list (d (n "cairo-lang-utils") (r "^2.6.0-rc.0") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "14bkmwhf0nn452qwvmf7di5zqyfskqgkwjn0n0380c0aspr0kikr") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.5.4 (c (n "cairo-lang-casm") (v "2.5.4") (d (list (d (n "cairo-lang-utils") (r "^2.5.4") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "00yvqfmbvcb3xw0irsmzk5qsjs41bv0b4y8wcyyp9d7mrfj73swc") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.0-rc.1 (c (n "cairo-lang-casm") (v "2.6.0-rc.1") (d (list (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "1kaipafnsf6j5c8mna5wi89i167m1knqbxj67c78q26kgbklc2bv") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.0 (c (n "cairo-lang-casm") (v "2.6.0") (d (list (d (n "cairo-lang-utils") (r "~2.6.0") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0yd2s119inxznhfbcip5f1y6v3lyq1brrlpf89nxs9wd8lfw96gd") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.1 (c (n "cairo-lang-casm") (v "2.6.1") (d (list (d (n "cairo-lang-utils") (r "~2.6.1") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0nyhl96ach70fvnmxq8i79h83k8ikkyrgcf3gc0zr3hi843jy3gx") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.2 (c (n "cairo-lang-casm") (v "2.6.2") (d (list (d (n "cairo-lang-utils") (r "~2.6.2") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "1shf5ap3qrikjqv24r2v31b7zysp09ifqfapr09m5y5h4rf4yvzz") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.6.3 (c (n "cairo-lang-casm") (v "2.6.3") (d (list (d (n "cairo-lang-utils") (r "~2.6.3") (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indoc") (r "^2.0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "parity-scale-codec") (r "^3.6.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.15") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (d #t) (k 2)))) (h "0nsl5qspjp6ycb2n6hyrcffki1hgx40qzj5dnn32bddnmqdw7n8h") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

(define-public crate-cairo-lang-casm-2.7.0-dev.0 (c (n "cairo-lang-casm") (v "2.7.0-dev.0") (d (list (d (n "cairo-lang-utils") (r "~2.7.0-dev.0") (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "indoc") (r "^2.0.5") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.5") (k 0)) (d (n "num-traits") (r "^0.2.19") (k 0)) (d (n "parity-scale-codec") (r "^3.6.9") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.19") (f (quote ("preserve_order" "preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (o #t) (k 0)) (d (n "test-case") (r "^3.3.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.16") (d #t) (k 2)))) (h "1gfsld085acdkyp43l887sw83q5qr1k0pmia4rqnvlcyb7mfzyn2") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "cairo-lang-utils/std" "num-bigint/std" "num-traits/std" "serde?/std" "parity-scale-codec?/std") ("serde" "dep:serde" "cairo-lang-utils/serde") ("schemars" "std" "dep:schemars" "cairo-lang-utils/schemars") ("parity-scale-codec" "dep:parity-scale-codec" "cairo-lang-utils/parity-scale-codec"))))))

