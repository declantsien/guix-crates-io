(define-module (crates-io ca rg cargo-spellcheck) #:use-module (crates-io))

(define-public crate-cargo-spellcheck-0.0.0 (c (n "cargo-spellcheck") (v "0.0.0") (d (list (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "hunspell") (r "^0.1") (d #t) (k 0)))) (h "1rrssgsfwigss7pqjdlmabd4xy1qaw98m0ppjgs64mb3irq93g31") (y #t)))

(define-public crate-cargo-spellcheck-0.0.3 (c (n "cargo-spellcheck") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "119m6n7d0xqal0v5k1m1ln9l96vmdlsxlrap579zb9c6dh1rmkx3") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell")))) (y #t)))

(define-public crate-cargo-spellcheck-0.0.4 (c (n "cargo-spellcheck") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "08nhm9klp56a5pwyh2wxzx0nd0svn079wp3x0az2xqm0h1ai463g") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell"))))))

(define-public crate-cargo-spellcheck-0.0.5 (c (n "cargo-spellcheck") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "134lij1z0m7y5j702cs0wbj22rndkzr0qfn3cz05xmxk1qxpr2f1") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell"))))))

(define-public crate-cargo-spellcheck-0.0.7 (c (n "cargo-spellcheck") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1i45bwf3awsa5x109bxf9la6ilz5pi8pv10jkzkc8varfzjrmp1i") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell"))))))

(define-public crate-cargo-spellcheck-0.0.8 (c (n "cargo-spellcheck") (v "0.0.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1wjil6w1ycfgw0dpc2m8liixxzq0hqhzf50pb1dbz68f3sn28714") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool")))) (y #t)))

(define-public crate-cargo-spellcheck-0.0.9 (c (n "cargo-spellcheck") (v "0.0.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1rvf9k00a08gxbqs72klj42jj9wh5wfpwmqad3n8nhlq28m19060") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.10 (c (n "cargo-spellcheck") (v "0.0.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mp0hacwpiqwrzn4n74m2fbma82dyrxlic1xkbmsihv2333s28zy") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.11 (c (n "cargo-spellcheck") (v "0.0.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07966dpcd4kx2r7p28h1qa5fx40bvmrgkdj63ybwwg8sb3dq1rig") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.12 (c (n "cargo-spellcheck") (v "0.0.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1l7p391sb6zckz18zi8apd0mbmhyfzr0643dqd6rzsiss3095vzj") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.13 (c (n "cargo-spellcheck") (v "0.0.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "17j8c5x5r71c870nria4djia07bnry76gifzk6in2wap3gwg8lbp") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.14 (c (n "cargo-spellcheck") (v "0.0.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1wg15h85gqmhgfb6cj030p9q3jhkdgd5gs7gwb8npcr6mj1aa4sm") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.15 (c (n "cargo-spellcheck") (v "0.0.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "097in9krdg34jx5qw2q83ib2rigqilfx6rfgs0f8izb2p0m5m2z0") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.0.16 (c (n "cargo-spellcheck") (v "0.0.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1dx7n6g649x2jnzghn4gxdyd3201bv6ch3ww793yiq10kxddp47i") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.1.0 (c (n "cargo-spellcheck") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zi66j5vn20451bgizz7mhdhq59gc4k1fhgagw5axrj6nwxng7zy") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.1.1 (c (n "cargo-spellcheck") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "098pqkn4lqsckhbsnk1higjjaagsqq04a2knsdrh4ql5b1dzhcy9") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.1.2 (c (n "cargo-spellcheck") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1i814av7wa63i8pi8fgsmfaxj8nasrfcmglrmwhhrbkfqq846f9h") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.1.3 (c (n "cargo-spellcheck") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "09ihac99r6lbh43kv7h7lmkccjfc8qzpc3iy9v0qrx0xsvs6lajw") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool")))) (y #t)))

(define-public crate-cargo-spellcheck-0.1.4 (c (n "cargo-spellcheck") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "01snmw7zwxyap6sq88al00lp38dmq05062m2mggvlqrygg4gsnhi") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.1.5 (c (n "cargo-spellcheck") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0aqy2m0xzdqp227gmvb7im5bk4bgr26nc5qwpxfgik1d12kaadli") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.2.0 (c (n "cargo-spellcheck") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0g26p84hjxh13nlqpl10s3y8qh6pipn7jrfaysjk7q1c69i1gc5a") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.2.1 (c (n "cargo-spellcheck") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07k94cjiw7f1ms55ql3n97hib3y76v9czxnvxb143sf4yafi8b0a") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.2.2 (c (n "cargo-spellcheck") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1c1xa34635n86ll0cwm449f5h3nxb2sg8qrpiqfmlcmmhzcfc25v") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.2.3 (c (n "cargo-spellcheck") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1d6bxyz7dx1lj8mhz6ylnhj462451f2snfrhp2vyp0bn804niiih") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.2.4 (c (n "cargo-spellcheck") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14zcb4wpp6clfc503cirrka21470b5hz6wz0yx59y9jl7h2fjsl9") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.1 (c (n "cargo-spellcheck") (v "0.3.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "termios") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1s1drbbxc81qbaa5vcygxch76awhlk2rxxl5vpgdd9ick74bcvc0") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.2 (c (n "cargo-spellcheck") (v "0.3.0-alpha.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0kvd9i8gcnf3584lmainrjzmjkj5vclkvwn7ifyk78lbsacnk9q1") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.3 (c (n "cargo-spellcheck") (v "0.3.0-alpha.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14gsvz49hpjy070qx4ryc8bprfd4kjz0d992ya3zdmah3is2mcm6") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.4 (c (n "cargo-spellcheck") (v "0.3.0-alpha.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "00kdrfh68hd6lmsa8jska6fsank84alxjwlk1jwlbfn377w6vrdw") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.5 (c (n "cargo-spellcheck") (v "0.3.0-alpha.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "15440fzzf9zg1qdkxrxnbggngka969jslfzh544kg653bj9h1b3f") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-alpha.6 (c (n "cargo-spellcheck") (v "0.3.0-alpha.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1631y15yi2jlalfyjsx0hkq3mijpzw9r1sm9pmv2b2s2llnw2n7r") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-beta.1 (c (n "cargo-spellcheck") (v "0.3.0-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06cwmv8lygnjy25b3s9ksifk8rvisvbrd1rh0xs1bkz6k5pk4iif") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-beta.2 (c (n "cargo-spellcheck") (v "0.3.0-beta.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hhci7blsivpj88hz28nzl6672wv69yys3r5wp6hzm5s4ywbh9zh") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-beta.3 (c (n "cargo-spellcheck") (v "0.3.0-beta.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q877ikxb53ry6pcm9xd09r97988fnhhbjbd5nvy5fwyg9wrpgpb") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-beta.4 (c (n "cargo-spellcheck") (v "0.3.0-beta.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0lryfgxl77xnbjd2myzlp17vk7d52iy9h2463hbnl83r21gk5225") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0-beta.5 (c (n "cargo-spellcheck") (v "0.3.0-beta.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q4m1qijm806dsylqv4gz32zdp7maqs0j7hc8xyaw51izixg02sp") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.0 (c (n "cargo-spellcheck") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1m3mvjqi9hilp5dwxjg128pm5p43qyly13qcbsyc5q0hhj5xvaiz") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.3.1 (c (n "cargo-spellcheck") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1265m7g90is8a27akgw5w95mjp8kyfbl1kjb140mkfpp7rywxc21") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.0-alpha.1 (c (n "cargo-spellcheck") (v "0.4.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1plh20biahgcsdbnbsb4hdi0a9iy7q41hwjlb0q6d8l0sp1g8987") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.0-alpha.2 (c (n "cargo-spellcheck") (v "0.4.0-alpha.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dx53qh3bn0s9irxkn7lzav512nxrybxjfxviz4nrx6pjlskyf69") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.0-alpha.3 (c (n "cargo-spellcheck") (v "0.4.0-alpha.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0p7mplgjri8an31q6hbn9md12mg554h9j4g8ab1j3rhx2m3kl5r7") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.0 (c (n "cargo-spellcheck") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04qv1a6wn12p1pfzrc39xffwrrxhzws610nbzv52h3907z571vnx") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.1 (c (n "cargo-spellcheck") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1wpbvfnqynby79wkcgvx3swk57q94vx3k31kx37varddfvqzikd0") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.2 (c (n "cargo-spellcheck") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dzanq1zcymx3m0bp7iwr8yaagqkxm6c26rfi6snwba1fwvkzpka") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.3 (c (n "cargo-spellcheck") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0z8lv3ri2qbyxj7yri7q0h150mpvndv2fldfkf2lc4hgk1bqgx0l") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.4 (c (n "cargo-spellcheck") (v "0.4.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.11") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^2") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "10njg19kzz167gn3g8s1m79yxchikcmsb580r79knc4rv90fw8w1") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.5 (c (n "cargo-spellcheck") (v "0.4.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 2)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "110ccz74z0a22v73i3kiwkgq4dxih70z3nh9vmf4cr7by41waq39") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.4.6 (c (n "cargo-spellcheck") (v "0.4.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 2)) (d (n "crossterm") (r "^0.18") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "149mdvc7pw2p14nb9q878m62b1laq3452l3wz12dlpiv1f1k2p56") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.5.0 (c (n "cargo-spellcheck") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 2)) (d (n "crossterm") (r "^0.18") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0n4ydvs34l488f998y3zamd63f7gbjb9dqzdnwh7cypz0zwpq84i") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.6.0 (c (n "cargo-spellcheck") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 2)) (d (n "crossterm") (r "^0.18") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.23") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0s5rmjcfwwaymkqm9yp0c0gpdb8wfbr0bbxkpwlk43lvvddzrk9d") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.6.1 (c (n "cargo-spellcheck") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 0)) (d (n "console") (r "^0.13") (d #t) (k 2)) (d (n "crossterm") (r "^0.18") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.23") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1nngmd9hcb6w329hlsxpibidy1sa4i7a9wajx8d2cqbad82jfrzq") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.6.2 (c (n "cargo-spellcheck") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.34") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ypy58x4nsmvpc43vmy6p78b07gxqrg29pbczbkm6wjp8vqm3nq3") (f (quote (("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell") ("all" "hunspell" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.1-beta.1 (c (n "cargo-spellcheck") (v "0.7.1-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.3") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.37") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1f97a5xqlf1xxz52g01vhfzvja7skqn18msqzisg8x9fncraclf9") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool")))) (y #t)))

(define-public crate-cargo-spellcheck-0.7.0-beta.1 (c (n "cargo-spellcheck") (v "0.7.0-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.3") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.37") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hyxc7xya15b3x406m0mg1339ysiayadjdyqxwmwak0a3s4lzy7d") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.0-beta.2 (c (n "cargo-spellcheck") (v "0.7.0-beta.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.3") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.37") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07qr6hgsb0ciyjlrbr2l4wnzsg66k1gaki35xgrp4jaaq481gz46") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.0-beta.3 (c (n "cargo-spellcheck") (v "0.7.0-beta.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 1)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.6") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.38") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "16hnf46yabad79l7j8ypr4cxxizvp2ag7lpcssbqjl35mqjqn5x2") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("artifacts") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.0-beta.4 (c (n "cargo-spellcheck") (v "0.7.0-beta.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 1)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.6") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.38") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0bl1jds0xbm41jxrb4g4s58wa1vr0s08z5dwbbij0rcmafp90vwn") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.0 (c (n "cargo-spellcheck") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.6") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.38") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1x4y8agsfr1w9iq3fxzn9l2zg0c6ddiz7d1lsqhwvdlknf1h7k9h") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.7.1 (c (n "cargo-spellcheck") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "languagetool-rs") (r "^0.1") (o #t) (d #t) (k 0) (p "languagetool")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.6") (o #t) (d #t) (k 1)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.38") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0m8lh9nb8ahc3hk9z640wl60m5d3qq20sqjqwm5xcjv9fkn9qfnj") (f (quote (("nlprules" "nlprule" "nlprule-build") ("languagetool" "languagetool-rs") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules" "languagetool"))))))

(define-public crate-cargo-spellcheck-0.8.0-alpha.0 (c (n "cargo-spellcheck") (v "0.8.0-alpha.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.4.6") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.42") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1v96m14f8dwgbv3z6jhdpgnj3j1w8c4qr7l7qkj3b90s7k3qbd35") (f (quote (("nlprules" "nlprule" "nlprule-build") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.0-beta.1 (c (n "cargo-spellcheck") (v "0.8.0-beta.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.8") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.6") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.45") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "08v9n5zjcqz5kbsv1y7niy0c37qvl0v4p9vc0pxa1p466xj62f1q") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.0-beta.2 (c (n "cargo-spellcheck") (v "0.8.0-beta.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.6.1") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.45") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0a6ar37jcmysn37w4l0d40qnaqn2y7jzfa4k74x2kzimvnwlyd05") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.0-beta.3 (c (n "cargo-spellcheck") (v "0.8.0-beta.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.45") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0gwb8s13fn5niprd1xyydwkwrdf98wzmv3n0bn06bjvbdjcdmycw") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.0 (c (n "cargo-spellcheck") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.3") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.45") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0w9v89ax5di1r0bl4sa5w822d32qnlzsk2nmmvb8h8dlvs9ykmzp") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.1 (c (n "cargo-spellcheck") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.3") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.48") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1b890gj0k8dj23p7n1m72iwn4cy7cbzv4k5hzl82mqlgyz9iaqai") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (y #t)))

(define-public crate-cargo-spellcheck-0.8.2 (c (n "cargo-spellcheck") (v "0.8.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.3") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.3") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.48") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "11a0n9zhb8482x6xrl1hnd8wqhryl68ydawsmzws59wgfm96bhil") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.3 (c (n "cargo-spellcheck") (v "0.8.3") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.49") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "056s7f6rkgirv07nnwhjcykrj90jz8mlr4rr4r1i8b67ic2kw78y") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.4 (c (n "cargo-spellcheck") (v "0.8.4") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.49") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0b5ll1zq2ivc0mxypq0qrhlrbdzk93n79q7dhhh6ld1ak3ds2v6q") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.5 (c (n "cargo-spellcheck") (v "0.8.5") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0bz1kcx155sz08i9210absa8d8wknzy9my4p7f4fw2yjzag8j8dn") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.6 (c (n "cargo-spellcheck") (v "0.8.6") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0zxz9mcqiyjag9lw4cp4bp3i0hzpx4y5bsc43lgkzzgscprzbzkg") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.7 (c (n "cargo-spellcheck") (v "0.8.7") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1nlmx0hx89y6l8ldn18bqf4nskmip666jylp73cm2xjfyr5m4063") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.8 (c (n "cargo-spellcheck") (v "0.8.8") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0yis5g8caq8l01jyfy8d505j7ygx81n4fsd0kma80q10l9x24396") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.9 (c (n "cargo-spellcheck") (v "0.8.9") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1f8y0hhjhjdnhvgvmnpgkis7kil5nrq4h0h26shnpsb2lmkgyr2s") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.10 (c (n "cargo-spellcheck") (v "0.8.10") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1f6596nmkis39aszgk5rawb7s17y02qcm25yxc9g3hmz5gfb3zpm") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.11 (c (n "cargo-spellcheck") (v "0.8.11") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0lmg4p534rby1lvp8pv4790sgfx19x19nwm49azhqkmh443rhan5") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.12 (c (n "cargo-spellcheck") (v "0.8.12") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^2") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1jzhzyc8b9iqlca6s3vi7i8przm2r6rwsbad6nnh3f8ar83nm8l4") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.13 (c (n "cargo-spellcheck") (v "0.8.13") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.9") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.19") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.6") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.61") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "06x7xx1q11yjzypbr8m6njcdriwkb6p9pgzdyhhbkfv2r0kyxzli") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.8.14 (c (n "cargo-spellcheck") (v "0.8.14") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.75") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0f09kqsxxa5vw5pin6jmsm4xkr3dz5nc0531fn5iqdzlbr0jrsj9") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.0-rc1 (c (n "cargo-spellcheck") (v "0.9.0-rc1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1d1x8zkjfdf43j7h5x5f57djy4zhyb21l0mmrn9ad8qlp25r0wwy") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.0 (c (n "cargo-spellcheck") (v "0.9.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "17im00jhin7kal2f9sd6zl2jzza8h8pv5h06qrqxmrnsqwzj0wkx") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.1 (c (n "cargo-spellcheck") (v "0.9.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1f6f8afxgixlkiw9k3k0m6hk9gpcnsbvryz8mc52dxnj64zxk5mm") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (y #t)))

(define-public crate-cargo-spellcheck-0.9.2 (c (n "cargo-spellcheck") (v "0.9.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "18zgj78bcxx173j795yijkk7qqnspyqv0dxbbbwmxfpmzl60igdr") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.3 (c (n "cargo-spellcheck") (v "0.9.3") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0dzl750j4mv8js1zdb2mryxxhs025app324jyw0hra63xnp5g9jc") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.4 (c (n "cargo-spellcheck") (v "0.9.4") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.77") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1fazixz4gqa036n6ksk8zkm93690fb01ickmwqg9v7xmnbjwyiaz") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.5 (c (n "cargo-spellcheck") (v "0.9.5") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.84") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0dqnrgfpzp8ckk3grbcqa97dhi8gp9b5bsv5mv818hfw22zb6kk5") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.9.6 (c (n "cargo-spellcheck") (v "0.9.6") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^1") (f (quote ("serde_serialize"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.8.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.84") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0j37lz0y90vvpw0in11cn6w4r02xvw1yssvifvvmnfdrism40yki") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.10.0-alpha.1 (c (n "cargo-spellcheck") (v "0.10.0-alpha.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.90") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0r6hlkd8kjh0a3b4dcsg2ajiiacmxck48fg7hwanxli3zj3anxci") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.10.1-beta.1 (c (n "cargo-spellcheck") (v "0.10.1-beta.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.90") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0rnh9hcbvpvpadpiblvz43mmpzrxv251pfcsh4v3zz5njgkwbvqy") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.10.1-beta.2 (c (n "cargo-spellcheck") (v "0.10.1-beta.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.10.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.90") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "186zhah49js7s5r8dc34drsfzy04byx8bx5rnay36gpv1mkjfw2h") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.10.1 (c (n "cargo-spellcheck") (v "0.10.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "docopt") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.7.1") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.94") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1g1nbkxd9w3n4f5q3n8lwdngm6vsxdczbvxrh8xnr1a92hqy2k47") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.0-rc.1 (c (n "cargo-spellcheck") (v "0.11.0-rc.1") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.99") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0fzi04vj26im96l2v0cfj39120dahj4afranb1gl5qyc4s97g9sj") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.0-rc.2 (c (n "cargo-spellcheck") (v "0.11.0-rc.2") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.99") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0lqz5vq5a3y8mq5z8wr1bfzzjrf8r17pfyg1k81h6s3crvyacqz6") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.0-rc.3 (c (n "cargo-spellcheck") (v "0.11.0-rc.3") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.99") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0q8dznh3z8fpdpakifbgp04iap0639d8mhkiscpvrlrxk98654rk") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.0 (c (n "cargo-spellcheck") (v "0.11.0") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.99") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1gnqhbpi6mbgvbsw8yxam3c4lmy20a04d9gvw56k8fa5q61ar3ma") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.1 (c (n "cargo-spellcheck") (v "0.11.1") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.0") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.99") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1wllf999ldl5dyghg7nzwcm0g04mi21rsj43vywgyjzfl1kwgky7") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.2 (c (n "cargo-spellcheck") (v "0.11.2") (d (list (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.102") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0w7n1c3p7xr7zpcqk3l6cyaamanj1vl1afnbm6ixz1fkylblscr6") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules"))))))

(define-public crate-cargo-spellcheck-0.11.3 (c (n "cargo-spellcheck") (v "0.11.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.104") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "05a54v89yvlyhhwbh4naynbr0nm9fxqv11mmmdm8ha8yi1vs76ag") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.12.0 (c (n "cargo-spellcheck") (v "0.12.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.104") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0nrm8jcd5lrdy0mrgl3vxlcw71xw7r568cs53pncy5bmx3mimwja") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.12.1 (c (n "cargo-spellcheck") (v "0.12.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.129") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "035zxp4k8sljhqszchil63c4awa7z6gimn6sjmdmn5c3v89djnai") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.12.2 (c (n "cargo-spellcheck") (v "0.12.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.11.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0.0") (d #t) (k 0)) (d (n "clap_complete") (r "^3.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.25.0") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.129") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0dh029j865mmmzcz34ikvlx1w6c95hkv3zh38ks1lb9hdds5l391") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.12.3 (c (n "cargo-spellcheck") (v "0.12.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.13") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.0") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.5") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "038rr0nn2d887im3ahwi532r9y24kn14bir333sgywm7230iz3sf") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules" "encoding_rs") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.12.4 (c (n "cargo-spellcheck") (v "0.12.4") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15.2") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.5") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11") (d #t) (k 0)) (d (n "fd-lock") (r "^3") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1zf21fzwra8drcz3f9vmnk3f10jlmpripnvfjmq722mqhbvid919") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules" "encoding_rs") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.13.0 (c (n "cargo-spellcheck") (v "0.13.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.15.2") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.26") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.5") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11") (d #t) (k 0)) (d (n "fd-lock") (r "^4") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "0b6205y26s2fmb7knq4lf0yxxpmc326ifmmg3235y2l01vnpbbly") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules" "encoding_rs") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.57.0")))

(define-public crate-cargo-spellcheck-0.13.1 (c (n "cargo-spellcheck") (v "0.13.1") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.16") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.5") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11") (d #t) (k 0)) (d (n "fd-lock") (r "^4") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "057845cdss4i30g9sfp2avwr2z0izqdvwbal80xbfm64f9m3n5ci") (f (quote (("nlprules" "nlprule/regex-fancy" "nlprule-build") ("hunspell" "hunspell-rs/bundled" "fd-lock" "nlprules" "encoding_rs") ("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (r "1.70.0")))

(define-public crate-cargo-spellcheck-0.13.2 (c (n "cargo-spellcheck") (v "0.13.2") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.16") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 2)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.0.6") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.11") (d #t) (k 0)) (d (n "fd-lock") (r "^4") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 2)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_plain") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "1141xcawhdrngnfdf61d3mbd2mcsv8afdag4rmlnb85w13ad8hqz") (f (quote (("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (s 2) (e (quote (("nlprules" "dep:nlprule" "nlprule?/regex-fancy" "dep:nlprule-build") ("hunspell" "dep:hunspell-rs" "hunspell-rs?/bundled" "dep:fd-lock" "nlprules" "dep:encoding_rs")))) (r "1.70.0")))

(define-public crate-cargo-spellcheck-0.14.0 (c (n "cargo-spellcheck") (v "0.14.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "cargo_toml") (r "^0.20") (d #t) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0") (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.4") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "doc-chunks") (r "^0.1.0") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.31") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.13") (d #t) (k 0)) (d (n "fd-lock") (r "^4") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hunspell-rs") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ignore") (r "^0.4.18") (d #t) (k 0)) (d (n "indexmap") (r "^2") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "iso_country") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "isolang") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memchr") (r "^2") (d #t) (k 0)) (d (n "nlprule") (r "=0.6.4") (o #t) (d #t) (k 0)) (d (n "nlprule-build") (r "=0.6.4") (o #t) (d #t) (k 1)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "thousands") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 0)) (d (n "xz2") (r "^0.1") (d #t) (k 1)))) (h "02iw405w8nxx87lgk02ja1fvbisv4jd83j0lfpwf5jk8y90491az") (f (quote (("default" "hunspell" "nlprules") ("all" "hunspell" "nlprules")))) (s 2) (e (quote (("nlprules" "dep:nlprule" "nlprule?/regex-fancy" "dep:nlprule-build") ("hunspell" "dep:hunspell-rs" "hunspell-rs?/bundled" "dep:fd-lock" "nlprules" "dep:encoding_rs")))) (r "1.76.0")))

