(define-module (crates-io ca rg cargo-maelstrom) #:use-module (crates-io))

(define-public crate-cargo-maelstrom-0.4.1 (c (n "cargo-maelstrom") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "figment") (r "^0.10.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.4.1") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.4.1") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.4.1") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.4.1") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.4.1") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.4.1") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)))) (h "16c7kawmcpih7gymsrrwg0qh9m09jmycr5cisl9pr569p8g1s8qg") (r "1.75")))

(define-public crate-cargo-maelstrom-0.4.2 (c (n "cargo-maelstrom") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "figment") (r "^0.10.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.4.2") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.4.2") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.4.2") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.4.2") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.4.2") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.4.2") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)))) (h "00ffq6f1nx3yvyczjwaqvvxlllczrg38cvr84zxjisy10whwyamx") (r "1.75")))

(define-public crate-cargo-maelstrom-0.4.3 (c (n "cargo-maelstrom") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "figment") (r "^0.10.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.4.3") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.4.3") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.4.3") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.4.3") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.4.3") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.4.3") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)))) (h "1kl220i4y8yvhf5fsixf8mlfh8xka57996dh6xgqnjff8ka4xfrb") (r "1.75")))

(define-public crate-cargo-maelstrom-0.5.0 (c (n "cargo-maelstrom") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "figment") (r "^0.10.10") (f (quote ("env" "toml"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.5.0") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.5.0") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.5.0") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.5.0") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.5.0") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.5.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)))) (h "08mayx7z8jvqminrjz4qc8xbcc19v3hzkkyknh2xgsbbp5dn3djg") (r "1.75")))

(define-public crate-cargo-maelstrom-0.6.0 (c (n "cargo-maelstrom") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("cargo" "derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.6.0") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.6.0") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.6.0") (d #t) (k 0)) (d (n "maelstrom-macro") (r "^0.6.0") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.6.0") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.6.0") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.6.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_debug" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.8.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (k 0)))) (h "1b4mxjqldbnmhcpq18h5kmp6lj2g2dm89psx5zsddgkfkkwpjmm7") (r "1.75")))

(define-public crate-cargo-maelstrom-0.7.0 (c (n "cargo-maelstrom") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("cargo" "derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "lddtree") (r "^0.3") (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.7.0") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.7.0") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.7.0") (d #t) (k 0)) (d (n "maelstrom-macro") (r "^0.7.0") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.7.0") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.7.0") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.7.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_debug" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.8.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (k 0)))) (h "1v5a69r5g29pawby4wsa8d66vwcqzydf93f5g8595bzjxyyd69km") (r "1.77.1")))

(define-public crate-cargo-maelstrom-0.8.0 (c (n "cargo-maelstrom") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("cargo" "derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "maelstrom-base") (r "^0.8.0") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.8.0") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.8.0") (d #t) (k 0)) (d (n "maelstrom-macro") (r "^0.8.0") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.8.0") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.8.0") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.8.0") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_debug" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.8.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (k 0)))) (h "066vpj7hya4zlcxvfgd94aw2x6fhjhgqpdgihr3m3cl9jkmdgsgd") (r "1.77.1")))

(define-public crate-cargo-maelstrom-0.9.0 (c (n "cargo-maelstrom") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("cargo" "derive" "string" "wrap_help"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "combine") (r "^4") (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "enum-map") (r "^2.7.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "enumset") (r "^1.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "globset") (r "^0.4") (d #t) (k 0)) (d (n "indicatif") (r "^0.17") (f (quote ("in_memory" "tokio"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0.4") (d #t) (k 2)) (d (n "maelstrom-base") (r "^0.9.0") (d #t) (k 0)) (d (n "maelstrom-broker") (r "^0.9.0") (d #t) (k 2)) (d (n "maelstrom-client") (r "^0.9.0") (d #t) (k 0)) (d (n "maelstrom-macro") (r "^0.9.0") (d #t) (k 0)) (d (n "maelstrom-test") (r "^0.9.0") (d #t) (k 2)) (d (n "maelstrom-util") (r "^0.9.0") (d #t) (k 0)) (d (n "maelstrom-worker") (r "^0.9.0") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "regex-macro") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (f (quote ("max_level_debug" "release_max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.8.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "unicode-truncate") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)) (d (n "xdg") (r "^2.5.2") (d #t) (k 0)))) (h "1jjg2jl7nx4hawgda345wimr8xqciwj2ypdzazi5mmh0738bxm41") (r "1.77.1")))

