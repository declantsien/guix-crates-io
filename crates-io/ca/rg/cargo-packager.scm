(define-module (crates-io ca rg cargo-packager) #:use-module (crates-io))

(define-public crate-cargo-packager-0.1.0 (c (n "cargo-packager") (v "0.1.0") (h "1shvrr3ry027gh5gm8nl1rlzpcvgkwkzg1hgr0byx1mmkda7yb91") (y #t)))

(define-public crate-cargo-packager-0.0.0 (c (n "cargo-packager") (v "0.0.0") (h "0p95nfv4b5hp54zz8fssfsdzdxri4bjs2kh8bf52xxixrmvbbnr6") (y #t)))

(define-public crate-cargo-packager-0.1.1 (c (n "cargo-packager") (v "0.1.1") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-config") (r "^0.1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.8") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0wg8bzg2m3bm5rpz0y51n660h7nxs96b08w6n0nln5v3835fp1ic") (f (quote (("default" "cli") ("cli" "clap" "cargo-packager-config/clap" "tracing" "tracing-subscriber")))) (y #t) (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-cargo-packager-0.1.2 (c (n "cargo-packager") (v "0.1.2") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-config") (r "^0.2.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.8") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0p4g850mjsnh2702dj7dxyjzkvjf0mi60jfcbcabznhld2kzvs2l") (f (quote (("default" "cli") ("cli" "clap" "cargo-packager-config/clap" "tracing-subscriber")))) (y #t)))

(define-public crate-cargo-packager-0.2.0 (c (n "cargo-packager") (v "0.2.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.9") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.8") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1rvvlmzfi4bnpd7i2fids4sx8dlinf0xl8miikxn5pbgcnlwvb74") (f (quote (("schema" "schemars") ("default" "cli") ("cli" "clap" "tracing-subscriber"))))))

(define-public crate-cargo-packager-0.3.0 (c (n "cargo-packager") (v "0.3.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.4") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.8") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.51") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "1klw4ci7whilzwjdq4a6y38clid7zlzs3ij2jxf0iiq10g5xh728") (f (quote (("schema" "schemars") ("default" "cli") ("cli" "clap" "tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.0 (c (n "cargo-packager") (v "0.4.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "10zkw83zj16kkbhhfj02zniv0ymrv73di5nya15zpdhcm4jarrwd") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.1 (c (n "cargo-packager") (v "0.4.1") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0az64pjv7s70ivzldz663hcz4s3z62khnp6zc7j04yixk19hkjvn") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.2 (c (n "cargo-packager") (v "0.4.2") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0c4bm340x44hig8ha0kbch27qqaq4jdxjdw539gkp036lq5h2anx") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.3 (c (n "cargo-packager") (v "0.4.3") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0v8cbd54wnlqbc52id04slc415szn9zxryv5j7jrkg3h1fyc7p4y") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.4 (c (n "cargo-packager") (v "0.4.4") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0p7gzk0y2xrppz4xbjjf27lk9qy2pg8bas9ips7cf34c4cshp1gh") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.4.5 (c (n "cargo-packager") (v "0.4.5") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libflate") (r "^2.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0syr4dplhjdh2p2rymvq6lcam33412z361b3dv7gw8hwasd8w483") (f (quote (("schema" "schemars") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber"))))))

(define-public crate-cargo-packager-0.5.0 (c (n "cargo-packager") (v "0.5.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0fs9jzwf5vnyhnqpyca4xm8jbnr75yyvsp92xph3ig991hgamkfj") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.6.0 (c (n "cargo-packager") (v "0.6.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0q17bi2g90h9dcyvnh0y1gp8jg55sirfpmkfhsss5ln29f8kz753") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.6.1 (c (n "cargo-packager") (v "0.6.1") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "082rrfmqawcp3a7jd6qy791vyndj0s2b4lh125y1hmzqh5i8945s") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.7.0 (c (n "cargo-packager") (v "0.7.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^4.5") (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0) (p "tauri-icns")) (d (n "image") (r "^0.24") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "image") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.10") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "10k2nwygdf12vydpig6iv6k5d5sgamvd83aad9kaz5nc8jcwmlqa") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.8.0 (c (n "cargo-packager") (v "0.8.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (k 0) (p "tauri-icns")) (d (n "image") (r "^0.25") (d #t) (k 0)) (d (n "image") (r "^0.25") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0f0r8pknvwpc6rhc4ni68aw520490qbfhq6b64ssmhch1rfpx3ig") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.8.1 (c (n "cargo-packager") (v "0.8.1") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (k 0) (p "tauri-icns")) (d (n "image") (r "^0.25") (d #t) (k 0)) (d (n "image") (r "^0.25") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0slc2mi5ars6ngb1qncfr3wrfa8glygka94h3s0l72azy3cc27kn") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

(define-public crate-cargo-packager-0.9.0 (c (n "cargo-packager") (v "0.9.0") (d (list (d (n "ar") (r "^0.9") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "cargo-packager-utils") (r "^0.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "heck") (r "^0.5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "icns") (r "^0.1") (d #t) (k 0) (p "tauri-icns")) (d (n "image") (r "^0.25") (d #t) (k 0)) (d (n "image") (r "^0.25") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "md5") (r "^0.7") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0)) (d (n "minisign") (r "^0.7") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "os_pipe") (r "^1") (d #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "relative-path") (r "^1.9") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "preserve_order" "derive"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "strsim") (r "^0.11") (d #t) (k 0)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.9") (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.52") (f (quote ("Win32_System_SystemInformation" "Win32_System_Diagnostics_Debug"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "^0.52") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "zip") (r "^0.6") (f (quote ("deflate"))) (k 0)))) (h "0qmffc0lri8g7pybpvzdrdbksxvvz3rs2vvjqilsbiwdic66yq05") (f (quote (("schema" "schemars" "cargo-packager-utils/schema") ("rustls-tls" "ureq/tls") ("native-tls-vendored" "native-tls" "native-tls/vendored") ("native-tls" "ureq/native-tls") ("default" "cli" "rustls-tls")))) (s 2) (e (quote (("cli" "clap" "dep:tracing-subscriber") ("clap" "dep:clap" "cargo-packager-utils/clap"))))))

