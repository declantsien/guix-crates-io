(define-module (crates-io ca rg cargo-dylint) #:use-module (crates-io))

(define-public crate-cargo-dylint-0.1.0-pre.1 (c (n "cargo-dylint") (v "0.1.0-pre.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)))) (h "181815ym2ii9mvddpmdva5qhjrcwd9a3hl5sivw988gq2bkbxgfj")))

(define-public crate-cargo-dylint-0.1.0-pre.2 (c (n "cargo-dylint") (v "0.1.0-pre.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)))) (h "004d1mar1rw90xwz973svv464x6p5ym1dybar1i7dm4nzw7hgmxb")))

(define-public crate-cargo-dylint-0.1.0-pre.3 (c (n "cargo-dylint") (v "0.1.0-pre.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)))) (h "0s0v11mx0ax1zsj9s8363i1h11fgj45664d5vh1953p5pqkc3h35")))

(define-public crate-cargo-dylint-0.1.0-pre.5 (c (n "cargo-dylint") (v "0.1.0-pre.5") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.5") (d #t) (k 0)) (d (n "dylint_internal") (r "=0.1.0-pre.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1n086fairl62xyy2mvbpxqh4mri8648742vyxx5ld5a4ycpf3347")))

(define-public crate-cargo-dylint-0.1.0-pre.6 (c (n "cargo-dylint") (v "0.1.0-pre.6") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.6") (d #t) (k 0)) (d (n "dylint_internal") (r "=0.1.0-pre.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0ab77a21xxdf39nidzvchxbg2dx8dgflqvx1r8q26cnp28l8js9g")))

(define-public crate-cargo-dylint-0.1.0-pre.7 (c (n "cargo-dylint") (v "0.1.0-pre.7") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.7") (d #t) (k 0)) (d (n "dylint_internal") (r "=0.1.0-pre.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0hz8fnkxakj65baslk3l15jdgfr7p1l3sv7v70gl95mz7fq8s2jk")))

(define-public crate-cargo-dylint-0.1.0-pre.8 (c (n "cargo-dylint") (v "0.1.0-pre.8") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.8") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.8") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.8") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "080abfc0h3k0ws8fygzxrnzknklx5din9vrg7sl9xnb8w9bp11kx")))

(define-public crate-cargo-dylint-0.1.0-pre.9 (c (n "cargo-dylint") (v "0.1.0-pre.9") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.9") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.9") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.9") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "02lw7lbb8ilwkc8wypz8ys7x7fvxdflkjqrgzkxgya1q9zpfrnfj")))

(define-public crate-cargo-dylint-0.1.0-pre.11 (c (n "cargo-dylint") (v "0.1.0-pre.11") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.11") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.11") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.11") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0xlfjhjh18dw7brbhn6lpz8527s5ivvg9f3vwzng4rw7hxr1zxdi")))

(define-public crate-cargo-dylint-0.1.0-pre.12 (c (n "cargo-dylint") (v "0.1.0-pre.12") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.12") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.12") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.12") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1y2jdi6f62ks85xal2gnmyjifd5nnwj6asy51dgm59f1drawch44")))

(define-public crate-cargo-dylint-0.1.0-pre.13 (c (n "cargo-dylint") (v "0.1.0-pre.13") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.13") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.13") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.13") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0x8v7i50rh6accmzrbfily6snihz1ssw3hl57x10rgqh3831lbx0")))

(define-public crate-cargo-dylint-0.1.0-pre.14 (c (n "cargo-dylint") (v "0.1.0-pre.14") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0-pre.14") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.14") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.14") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1d11jzx4bhdqfkz5kw11xxwhr7qxv0df7jivwg0bjlnf686yvmrk")))

(define-public crate-cargo-dylint-0.1.0 (c (n "cargo-dylint") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.0") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0rksg7hlbcwam4v9dc6ba3nyyq1d2xb98zscbk0iq1ggfra9a54h")))

(define-public crate-cargo-dylint-0.1.2 (c (n "cargo-dylint") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.2") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.2") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0mznj129yc5ch8npk710nx8xp4zgg3kv153pzlczyhyyc9kngcyj")))

(define-public crate-cargo-dylint-0.1.3 (c (n "cargo-dylint") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.3") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "dylint") (r "=0.1.3") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.3") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.7") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0k056d05my0fpdlwkj57pm4a8s7gm4sb3k7g95alz01sr4yhl0cp")))

(define-public crate-cargo-dylint-1.0.0 (c (n "cargo-dylint") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.5") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint") (r "=1.0.0") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "1qsz5nc9a67ln3x1n692zgh7lj6j3i78d75lkxymc79bnpbipj7n")))

(define-public crate-cargo-dylint-1.0.1 (c (n "cargo-dylint") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.5") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint") (r "=1.0.1") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^1.0.8") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "1v6ymd2395q5q1ap9n731im2iz2f9xa3m19id73jji4gw7qdkhv7")))

(define-public crate-cargo-dylint-1.0.2 (c (n "cargo-dylint") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint") (r "=1.0.2") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.1") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "19ym0vfaz764s1gddz9rrq56j34xjr7bab0ka8xvxf0qplyxgwly")))

(define-public crate-cargo-dylint-1.0.3 (c (n "cargo-dylint") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "assert_cmd") (r "^1.0.8") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "dylint") (r "=1.0.3") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "19m94c4q3w9lbii2283mm3yinsdbr0r246sg7wziifab1k8jzw9j")))

(define-public crate-cargo-dylint-1.0.4 (c (n "cargo-dylint") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.1") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "dylint") (r "=1.0.4") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "09nw284y2mpiij76073lrwpdnr877gz29a1gpvgl2kxna794gnjz")))

(define-public crate-cargo-dylint-1.0.5 (c (n "cargo-dylint") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.1") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "dylint") (r "=1.0.5") (f (quote ("dylint_driver_local"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.5") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "1qjmgf0hwnxswjlggn5j7mkik5yl3h3vim5cyv9mphhyhnbzqjgn")))

(define-public crate-cargo-dylint-1.0.6 (c (n "cargo-dylint") (v "1.0.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "dylint") (r "=1.0.6") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.6") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "121vw8890ydypcgjbrgv9dv34bddgjfz8cxy4c36hzcmj2wfkz0f")))

(define-public crate-cargo-dylint-1.0.7 (c (n "cargo-dylint") (v "1.0.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.5") (d #t) (k 0)) (d (n "dylint") (r "=1.0.7") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.7") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "08cb27b241qfxh18y2svgcpkf3c0kwyric3ql2qmmzkivbz7h69y")))

(define-public crate-cargo-dylint-1.0.8 (c (n "cargo-dylint") (v "1.0.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-beta.5") (d #t) (k 0)) (d (n "dylint") (r "=1.0.8") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.8") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "0lbxpk6gd01293ad08x1hxipvlz3mmyn1lnm677i62dbcdh30sr3")))

(define-public crate-cargo-dylint-1.0.9 (c (n "cargo-dylint") (v "1.0.9") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.9") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.9") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "0h6ii7jakjw6gn33w8lzz5f3p251synd896rxdgnqhxjyqrj5y97")))

(define-public crate-cargo-dylint-1.0.10 (c (n "cargo-dylint") (v "1.0.10") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0-rc.7") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.10") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.10") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "1dhq5qrda8sf49fm7fmwa3b22pn3la8dn8m31xav4nc387wyk6qs")))

(define-public crate-cargo-dylint-1.0.11 (c (n "cargo-dylint") (v "1.0.11") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.2") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.11") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.11") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "06wwh2x6p4kh7aw0y0874x355mmc9rp0laalwgd1ma0h9gqkg3xb")))

(define-public crate-cargo-dylint-1.0.12 (c (n "cargo-dylint") (v "1.0.12") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.10") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.12") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.12") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "0pi1f0c3vs3fzrr6443x7hiq8m7chlkpj5k0k6jcjmy0mqhgwsbw")))

(define-public crate-cargo-dylint-1.0.13 (c (n "cargo-dylint") (v "1.0.13") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 2)) (d (n "clap") (r "^3.0.14") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.13") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.13") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "1cr01abhnc778vj1fq21invv5mqcbac472262lxg381z920611rf")))

(define-public crate-cargo-dylint-1.0.14 (c (n "cargo-dylint") (v "1.0.14") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.2") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=1.0.14") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.14") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "semver") (r "^1.0.6") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "1ndfxnp2325nqdvz386iv07agrzvg6ciyjh8j8wx4466x5b6hd85")))

(define-public crate-cargo-dylint-2.0.0 (c (n "cargo-dylint") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.6") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.0") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.0") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.6") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)))) (h "0krhjxfsdwm7rp83bag8a6ash7qrykzfkkszis8qnx3rq14qa5fg")))

(define-public crate-cargo-dylint-2.0.1 (c (n "cargo-dylint") (v "2.0.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.12") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.1") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.1") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.7") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)))) (h "1dppl8l28c5jw6sb0ika0lfi3rr2di6x921rcii9pj7sh03iqmdr")))

(define-public crate-cargo-dylint-2.0.2 (c (n "cargo-dylint") (v "2.0.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.12") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.2") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.2") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.7") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)))) (h "0srrig0gkd9mv6wm7xw7xyxpvivpda1ajmc38l5ik2g1kkfd6dmx")))

(define-public crate-cargo-dylint-2.0.3 (c (n "cargo-dylint") (v "2.0.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.3") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.3") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1njqg7nad1wwppj0bamc5yamgs40jj0sc2cf8prfzf81c3b08zw7")))

(define-public crate-cargo-dylint-2.0.4 (c (n "cargo-dylint") (v "2.0.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.4") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.4") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "02y19a5kym2z2v3hdc410irc1rrm1kw8ly1fhxxf3ip38k9vrzvk")))

(define-public crate-cargo-dylint-2.0.5 (c (n "cargo-dylint") (v "2.0.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.5") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.5") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.9") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0w288qwqkdx6kvwsp9hn3hhgdkzplqkgxclqnbm3z564g0yx5zl8")))

(define-public crate-cargo-dylint-2.0.6 (c (n "cargo-dylint") (v "2.0.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 2)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.6") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.6") (f (quote ("git2"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0rpwvm27zq42fvgdigdi90b1x4cm0ac2gf9iyv13yxzmya8xic7v")))

(define-public crate-cargo-dylint-2.0.7 (c (n "cargo-dylint") (v "2.0.7") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.6") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.7") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.5.6") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.10") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0zc4ccrdfaiv03gb1mgr6s6fag3jzmqh6hv6lx74rnyv4k2mjzc2")))

(define-public crate-cargo-dylint-2.0.8 (c (n "cargo-dylint") (v "2.0.8") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.8") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.8") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.12") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1gkl7aldwyidzzjc1ny2bnz104rlsn1yhng843kvrw1895fs2vzr")))

(define-public crate-cargo-dylint-2.0.9 (c (n "cargo-dylint") (v "2.0.9") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.12") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.9") (f (quote ("dylint_driver_local" "package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.12") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1k6b2zy0fcn2f1hwga1ysqkjkz09wzjp6bf5nj82s85h0azlzkd7")))

(define-public crate-cargo-dylint-2.0.10 (c (n "cargo-dylint") (v "2.0.10") (d (list (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.10") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.10") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.10") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.13") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0r82r1rwgp44f4pqw1556dipf28wslci0f0p104pkd21fj5p9gmi")))

(define-public crate-cargo-dylint-2.0.11 (c (n "cargo-dylint") (v "2.0.11") (d (list (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.11") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.11") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.11") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.13") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "19dx89f5gqxpcz47iimka334bja37jmkiab79hryf42vm4c764n3")))

(define-public crate-cargo-dylint-2.0.12 (c (n "cargo-dylint") (v "2.0.12") (d (list (d (n "anyhow") (r "^1.0.61") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.17") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.12") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.12") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.12") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.13") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1xsnd3m6zk9hinbslyaadhzmcsl9xx1z0yif42rr8qfaywcrfx2y")))

(define-public crate-cargo-dylint-2.0.13 (c (n "cargo-dylint") (v "2.0.13") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.13") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.13") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.13") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.14") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0g8wnaiil8gsb8cf5bwxwwp5ma1g8qk16km5wg5lnns1l5v759aa")))

(define-public crate-cargo-dylint-2.0.14 (c (n "cargo-dylint") (v "2.0.14") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.6") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 2)) (d (n "clap") (r "^4.0.23") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.0.14") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.14") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.14") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.14") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0ly1yjnjr1j7839p3xkyjp2rs8hxj9914r71yaww7nncqvd9cpax")))

(define-public crate-cargo-dylint-2.1.0 (c (n "cargo-dylint") (v "2.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.6") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 2)) (d (n "clap") (r "^4.0.26") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.14") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0mpm9fgh6gfi1r5jdnxcz47s4jpj9rdnf78ah4nqinajdsdabwnd")))

(define-public crate-cargo-dylint-2.1.1 (c (n "cargo-dylint") (v "2.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.6") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "clap") (r "^4.0.27") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.1") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.1") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "predicates") (r "^2.1.3") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 2)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 2)) (d (n "semver") (r "^1.0.14") (d #t) (k 2)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0v2pbz4krg6h1qh1w2h1i118qbn1k6mwnhbd4b29sz4xjin8shp6")))

(define-public crate-cargo-dylint-2.1.2 (c (n "cargo-dylint") (v "2.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.2") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "0wnm1512zi8mjjx2rjss164sv2gh5ak9kavi1ccjzh0mjcx651n6")))

(define-public crate-cargo-dylint-2.1.3 (c (n "cargo-dylint") (v "2.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.3") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.3") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "01plzzhia8h5vfly5wv8kl8rqjn3nl1m63kyipsnnndv2n18w4nr")))

(define-public crate-cargo-dylint-2.1.4 (c (n "cargo-dylint") (v "2.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.4") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.4") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.4") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.3") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1f5cy1929qi3jna3pd9skmp9m8kbazgbprgk2sh1s605amx90dc5")))

(define-public crate-cargo-dylint-2.1.5 (c (n "cargo-dylint") (v "2.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.5") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.5") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.5") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1axmv52r8bh1z9x88cq1cdcl7f0k32czcfkprm5npnlvdaf6cpmf")))

(define-public crate-cargo-dylint-2.1.6 (c (n "cargo-dylint") (v "2.1.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.6") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.6") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.6") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1h8rwdk5d7dw6jz7j8gvxcb7qygcwayb8ai3zykhz4n447nh02kl")))

(define-public crate-cargo-dylint-2.1.7 (c (n "cargo-dylint") (v "2.1.7") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.1") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.7") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.7") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.7") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1r1ac5mhyzlhj20gacsbs77rgg4fr8l67shws47avb29n5pn52y9")))

(define-public crate-cargo-dylint-2.1.8 (c (n "cargo-dylint") (v "2.1.8") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.2") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.8") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.8") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.8") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "0r3jaz8mg1l0lj151011qv80iqp6nk3abl8ms17ydjd2xgpamyf8")))

(define-public crate-cargo-dylint-2.1.9 (c (n "cargo-dylint") (v "2.1.9") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.2") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.9") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.9") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.9") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.5") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1qjd28nzdbgb3rxh93647nvcgr7wkq9qyzz7b5a0hsmrmf6v7jfn")))

(define-public crate-cargo-dylint-2.1.10 (c (n "cargo-dylint") (v "2.1.10") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "dylint") (r "=2.1.10") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.10") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.10") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "1wilfm5f3717nlkppcx6yir1bv78mq3wvb48c7d1a9wwmwwka6p3")))

(define-public crate-cargo-dylint-2.1.11 (c (n "cargo-dylint") (v "2.1.11") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.1.11") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.11") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.11") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "0h9whwaqhbm2djwzxlwi1zbcs6avzg253kbh5fkzhdrasg41p7aq") (r "1.64")))

(define-public crate-cargo-dylint-2.1.12 (c (n "cargo-dylint") (v "2.1.12") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.1.12") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.12") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.12") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "tempfile") (r "^3.7") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "077ch56iirb35n57q3rkj7hrhvqbxdcgwl857w1z185mmk66jbz1") (r "1.64")))

(define-public crate-cargo-dylint-2.2.0 (c (n "cargo-dylint") (v "2.2.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.2.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.2.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.2.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "01yhz27sk362iryyhh2hg5x2pqa30m2z6ls5y4hxfi0vf80m1vz5") (r "1.64")))

(define-public crate-cargo-dylint-2.3.0 (c (n "cargo-dylint") (v "2.3.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.3.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.3.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.3.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 2)))) (h "01lx49cn2klp907xqxnf5z8zca9faqmqps52zc9nhx8vw8gy0ykg") (r "1.64")))

(define-public crate-cargo-dylint-2.4.0 (c (n "cargo-dylint") (v "2.4.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.4.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "1z0p3gwjqvza3ay7ds5l0cazapmh7iqhl2fihagvbwqyhvq77zkw") (r "1.70")))

(define-public crate-cargo-dylint-2.4.1 (c (n "cargo-dylint") (v "2.4.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.4.1") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.1") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "0avzdyzd7w1453jrc17lngb56lvpcbqwy4lah1cqck56mdgy9ha9") (r "1.70")))

(define-public crate-cargo-dylint-2.4.2 (c (n "cargo-dylint") (v "2.4.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.4.2") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "0qhwj575bkkhn5pnpi5k6jm2lvjp5v71fmx65fbmk2hw9i8pq018") (r "1.70")))

(define-public crate-cargo-dylint-2.4.3 (c (n "cargo-dylint") (v "2.4.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.4.3") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.3") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.3") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.9") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "10c0wgnfikszy6d7ik9pgh30x7jipxwwn0dpr9x79hhvs4rp57cs") (r "1.70")))

(define-public crate-cargo-dylint-2.4.4 (c (n "cargo-dylint") (v "2.4.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.4.4") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.4") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.4") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "154b8vnsk6wdn1cqf5n5i11j3ifsdnixrzfczanfv9cxz6y0fpzh") (r "1.70")))

(define-public crate-cargo-dylint-2.5.0 (c (n "cargo-dylint") (v "2.5.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.5.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.5.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "12f42hvcrcvm2ah9mbcjliahsrvk2ss22yx37i03gzd655srqj1h") (r "1.70")))

(define-public crate-cargo-dylint-2.6.0 (c (n "cargo-dylint") (v "2.6.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.6.0") (f (quote ("package_options"))) (k 0)) (d (n "dylint_internal") (r "=2.6.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "0sm7ibliyllrhdxhsxv9qdaln1m6rh007glidwyak0sdmq4rbhrl") (f (quote (("metadata-cli" "dylint/__metadata_cli") ("metadata-cargo" "dylint/__metadata_cargo") ("default" "metadata-cargo")))) (r "1.72")))

(define-public crate-cargo-dylint-2.6.1 (c (n "cargo-dylint") (v "2.6.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.4") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=2.6.1") (f (quote ("package_options"))) (k 0)) (d (n "dylint_internal") (r "=2.6.1") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.9") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (d #t) (k 2)))) (h "1pkffw7qb1dacy8q4ilg6b0gbkpnydirmffh2cg453yix00xlra0") (f (quote (("metadata-cli" "dylint/__metadata_cli") ("metadata-cargo" "dylint/__metadata_cargo") ("default" "metadata-cargo")))) (r "1.72")))

(define-public crate-cargo-dylint-3.0.0 (c (n "cargo-dylint") (v "3.0.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=3.0.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "11qap9i40rkil2irk0nvvmngmff5zvil78smxw12n5q6jpr0gzf3") (f (quote (("default" "cargo-cli" "__ci") ("cargo-lib" "dylint/__cargo_lib") ("cargo-cli" "dylint/__cargo_cli") ("__clap_headings") ("__ci")))) (r "1.74")))

(define-public crate-cargo-dylint-3.0.1 (c (n "cargo-dylint") (v "3.0.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=3.0.1") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.1") (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "0dqg8wy9a04abq4pgwr6v177cpjdf8cwgyqw13lmrxz2d8hc3mjc") (f (quote (("default" "cargo-cli" "__ci") ("cargo-lib" "dylint/__cargo_lib") ("cargo-cli" "dylint/__cargo_cli") ("__clap_headings") ("__ci")))) (r "1.74")))

(define-public crate-cargo-dylint-3.1.0 (c (n "cargo-dylint") (v "3.1.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=3.1.0") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.0") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "sedregex") (r "^0.2") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "0j3zd3zxrmzwaw9ab4x7gs8bf3cg5wbs7d1w5iqlqriqljkm6ag1") (f (quote (("default" "cargo-cli" "__ci") ("cargo-lib" "dylint/__cargo_lib") ("cargo-cli" "dylint/__cargo_cli") ("__clap_headings") ("__ci")))) (r "1.74")))

(define-public crate-cargo-dylint-3.1.1 (c (n "cargo-dylint") (v "3.1.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=3.1.1") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.1") (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.1") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "1y79l55za4lj95hf11s8164fkpy60lw87cxqi6fx5l2avg826qmi") (f (quote (("default" "cargo-cli" "__ci") ("cargo-lib" "dylint/__cargo_lib") ("cargo-cli" "dylint/__cargo_cli") ("__clap_headings") ("__ci")))) (r "1.74")))

(define-public crate-cargo-dylint-3.1.2 (c (n "cargo-dylint") (v "3.1.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 2)) (d (n "dylint") (r "=3.1.2") (f (quote ("package_options"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.2") (f (quote ("testing"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 2)) (d (n "predicates") (r "^3.1") (d #t) (k 2)) (d (n "regex") (r "^1.10") (d #t) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.10") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (d #t) (k 2)))) (h "01n6i8nzwclhgddiyg3vl4v7rz2nad72l3jcgc6n2728399flbzg") (f (quote (("default" "cargo-cli" "__ci") ("cargo-lib" "dylint/__cargo_lib") ("cargo-cli" "dylint/__cargo_cli") ("__clap_headings") ("__ci")))) (r "1.74")))

