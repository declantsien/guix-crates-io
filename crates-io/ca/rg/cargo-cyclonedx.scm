(define-module (crates-io ca rg cargo-cyclonedx) #:use-module (crates-io))

(define-public crate-cargo-cyclonedx-0.3.0 (c (n "cargo-cyclonedx") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo") (r "^0.57.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1r64gfjb233cq37hdvbal29q8v4vds3g7fgfpcd2ck0cqawhf5s6")))

(define-public crate-cargo-cyclonedx-0.3.1 (c (n "cargo-cyclonedx") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo") (r "^0.58.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "0rj9l9j7ghpb1b55fcx2x1gvxn3zdj499w440wdxmsl62s92hqza")))

(define-public crate-cargo-cyclonedx-0.3.2 (c (n "cargo-cyclonedx") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "cargo") (r "^0.59.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1z46pa58m67mafvch1rcvhkvbjyfn00wl60arjzf9jjayh48nd70")))

(define-public crate-cargo-cyclonedx-0.3.3 (c (n "cargo-cyclonedx") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "cargo") (r "^0.60.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1sdidp401iqvvar7gxagn5fng7z5hmgfd424f263gr6sl58hs3q0")))

(define-public crate-cargo-cyclonedx-0.3.4 (c (n "cargo-cyclonedx") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "cargo") (r "^0.60.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (f (quote ("serde" "serde-well-known"))) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "0i3dnn89af8bvpvq9cl9jd1b8bwc7qjbaicjlxhwz0dgy7cqwfqx")))

(define-public crate-cargo-cyclonedx-0.3.5 (c (n "cargo-cyclonedx") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cargo") (r "^0.63.1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-well-known"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (f (quote ("serde" "easy"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "076awc5q6h9k86iirbyxxwh60fypqcmkmcg6yyicslpzwzf5p8m4") (r "1.59.0")))

(define-public crate-cargo-cyclonedx-0.3.6 (c (n "cargo-cyclonedx") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cargo") (r "^0.63.1") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (f (quote ("serde" "serde-well-known"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (f (quote ("serde" "easy"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1nr8fb5rphwjj7kl1k9xmmvpsgl2sa9dnvyqh9njf66nbrh5qxgw") (r "1.60.0")))

(define-public crate-cargo-cyclonedx-0.3.7 (c (n "cargo-cyclonedx") (v "0.3.7") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "cargo") (r "^0.64.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.3.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (f (quote ("serde" "easy"))) (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "12mw7hlfhs5d6b3m2fcghnvgq9csbw4f4y8ml4pb3cd8hjadz0xx") (r "1.60.0")))

(define-public crate-cargo-cyclonedx-0.3.8 (c (n "cargo-cyclonedx") (v "0.3.8") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.11") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "cargo") (r "^0.70.1") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.4.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "validator") (r "^0.16.0") (d #t) (k 0)))) (h "03gd26d48lqbfsavzi9n54wnm15cax15d1f87zirs55zr7miixzv") (r "1.65.0")))

(define-public crate-cargo-cyclonedx-0.4.0 (c (n "cargo-cyclonedx") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.4.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "purl") (r "^0.1.2") (f (quote ("package-type"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)))) (h "12fjx8wjcqlgwbnd0w9r6ndwgn649pca9v0yn9chxwf3f4gjmm9k") (r "1.70.0")))

(define-public crate-cargo-cyclonedx-0.4.1 (c (n "cargo-cyclonedx") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.4.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "purl") (r "^0.1.2") (f (quote ("package-type"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)))) (h "0jz9v8nd74ls1lzmzqskmz05z2l4400qrrnjw9kd38sybgd29l8q") (r "1.70.0")))

(define-public crate-cargo-cyclonedx-0.5.0 (c (n "cargo-cyclonedx") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "cargo-lock") (r "^9.0.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "purl") (r "^0.1.2") (f (quote ("package-type"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)))) (h "1xk006msdfic348vl8rcvf93d74sh01kxx8w6s63nxxsc4crhqn2") (r "1.70.0")))

(define-public crate-cargo-cyclonedx-0.5.1 (c (n "cargo-cyclonedx") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.12") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "cargo-lock") (r "^9.0.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cyclonedx-bom") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "purl") (r "^0.1.2") (f (quote ("package-type"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "validator") (r "^0.16.1") (d #t) (k 0)))) (h "1gs4z3zqsq21ggn6a05i3anbq6gw6042nbxmsla2w20lf5b6pdnk") (r "1.70.0")))

