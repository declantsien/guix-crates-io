(define-module (crates-io ca na canadensis) #:use-module (crates-io))

(define-public crate-canadensis-0.1.0 (c (n "canadensis") (v "0.1.0") (d (list (d (n "canadensis_can") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_core") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_filter_config") (r "^0.1.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.1.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.7.1") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "0g1c9j8v01fgc3gqyhf4iprnq0in92li3dgpnq540fipvjkhc4ak") (f (quote (("can-fd" "canadensis_can/can-fd"))))))

(define-public crate-canadensis-0.2.0 (c (n "canadensis") (v "0.2.0") (d (list (d (n "canadensis_can") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.2.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1hmq1z58kidxkmhv0a29i73jvxww3fmcmzs0i5chjp7fw6bpa08m")))

(define-public crate-canadensis-0.2.1 (c (n "canadensis") (v "0.2.1") (d (list (d (n "canadensis_can") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.2.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1nxwkqkwgx2pzmr41m9clixs6xd43sfflpvxs82f8q76m7h3190c")))

(define-public crate-canadensis-0.2.2 (c (n "canadensis") (v "0.2.2") (d (list (d (n "canadensis_can") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.2.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1m364wjqwwciffl7kgkcfxlph1cszd7c2xgscgc1ar7m9drv90ir")))

(define-public crate-canadensis-0.2.3 (c (n "canadensis") (v "0.2.3") (d (list (d (n "canadensis_can") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.2.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "0w80w4yc085m2qgn490ah0x4jzyd7c0mw21vabm769l687nbcmym")))

(define-public crate-canadensis-0.2.4 (c (n "canadensis") (v "0.2.4") (d (list (d (n "canadensis_can") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.2.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1r7cvrkdf8z5ncxjsyc5qyjqqqw3mhw8bq04v3scg8jlkmjss2ya")))

(define-public crate-canadensis-0.3.0 (c (n "canadensis") (v "0.3.0") (d (list (d (n "canadensis_can") (r "^0.3.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.2.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.3.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.4.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^2.2") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "0v1vq8jwrl5cgqv57fyn0m2q1ws500hxc938swj023wdkc1s4kx9")))

(define-public crate-canadensis-0.3.1 (c (n "canadensis") (v "0.3.1") (d (list (d (n "canadensis_can") (r "^0.3.0") (d #t) (k 2)) (d (n "canadensis_core") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_data_types") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_derive_register_block") (r "^0.2.0") (d #t) (k 0)) (d (n "canadensis_encoding") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_linux") (r "^0.3.0") (d #t) (k 2)) (d (n "canadensis_serial") (r "^0.3.0") (d #t) (k 2)) (d (n "canadensis_udp") (r "^0.4.0") (d #t) (k 2)) (d (n "fallible_collections") (r "^0.4.0") (d #t) (k 0)) (d (n "half") (r "^2.2") (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "14xh87bhmxvlyb3wkj7pjy7n7h0pg0j4gmzlf60swpgjfvg9yrxc")))

