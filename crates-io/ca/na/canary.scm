(define-module (crates-io ca na canary) #:use-module (crates-io))

(define-public crate-canary-0.0.6 (c (n "canary") (v "0.0.6") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.0.6") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "07gkra1yy3shrxkpl6ddfdnd2qw888402x9ajrffdw8v0x1mad86") (f (quote (("rt-tokio" "tokio") ("rt-async-std" "async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.1.0 (c (n "canary") (v "0.1.0") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.0.6") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1w54s4zcmlj8ki5w5zamzr2c2b7qil9ln3d9d7gihn34h0pig2jx") (f (quote (("rt-tokio" "tokio") ("rt-async-std" "async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.1.1 (c (n "canary") (v "0.1.1") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("async-std-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "11s0z196jq0ipy4igcivn9iy8c1126r0810xh1qyaqv51wfvqcc4") (f (quote (("rt-tokio" "tokio") ("rt-async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.1.2 (c (n "canary") (v "0.1.2") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("async-std-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "00gvkkkak95bgpgkx3v8r5844jy9wcry3xv271mb3s3l874w6qrh") (f (quote (("rt-tokio" "tokio") ("rt-async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.1.3 (c (n "canary") (v "0.1.3") (d (list (d (n "async-std") (r "^1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("async-std-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1rlisn8kyf4w6sc62sk4bfc140p02sgmj8mlcw87b406s7vc0l3x") (f (quote (("rt-tokio" "tokio") ("rt-async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.1.6 (c (n "canary") (v "0.1.6") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "async-std") (r "^1") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("async-std-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "camino") (r "^1") (d #t) (k 0)) (d (n "canary-macro") (r "^0.1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "igcp") (r "^0.1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snow") (r "^0.8.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0k6jxx9fdk1j9z2zpwfpilp5knis5g05nl7lx9i95z5vnmnypai6") (f (quote (("rt-tokio" "tokio") ("rt-async-std") ("default" "rt-async-std"))))))

(define-public crate-canary-0.2.0 (c (n "canary") (v "0.2.0") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.4") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("net" "io-util" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)) (d (n "uuid") (r "~0.8.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1kkx8h6iaggzj1vykn9la6l42s15ghg277ngwxy06mlbv5nm4x48")))

(define-public crate-canary-0.2.1 (c (n "canary") (v "0.2.1") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.16.1") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.4") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("net" "io-util" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)) (d (n "uuid") (r "~0.8.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0v8z9aa4hfqac6p11nxx8albfkh6nbfjxjwdv1118lzyar395y85")))

(define-public crate-canary-0.2.2 (c (n "canary") (v "0.2.2") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.4") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("net" "io-util" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.30") (d #t) (k 0)) (d (n "uuid") (r "~0.8.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0mjbpnjxw4ljjqwwisacm1yrx58lqsp13hxlrxps4lf9kivgyh59")))

(define-public crate-canary-0.2.3 (c (n "canary") (v "0.2.3") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.0") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.5") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("net" "io-util" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.31") (d #t) (k 0)) (d (n "uuid") (r "~0.8.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "187s9hy46l42dhp24nyardq962c0czd2wang6iyp59q1nikaljhs")))

(define-public crate-canary-0.2.4 (c (n "canary") (v "0.2.4") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.5") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("net" "io-util" "time"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "uuid") (r "~0.8.2") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bp9lf8hig5i4iy42cxj8181jbg111mqm15f11ai82f263c1wlxp")))

(define-public crate-canary-0.2.5 (c (n "canary") (v "0.2.5") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.3.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.6") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "quinn") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "quinn-proto") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("net" "io-util" "time" "full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.33") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)) (d (n "uuid") (r "~1.0.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "144z4mrxyja3rdipvv4pp5xyn3hbfd16g019lih03hmxvhy9xwm2") (f (quote (("postcard_ser" "postcard") ("messagepack_ser" "rmp-serde") ("json_ser" "serde_json") ("bson_ser" "bson"))))))

(define-public crate-canary-0.3.0 (c (n "canary") (v "0.3.0") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "backoff") (r "^0.4.0") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.6") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "io_err") (r "^0.1.0") (d #t) (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "quinn") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("net" "io-util" "time" "full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)))) (h "1rhlvrfkjr7b4i7ywmwardcw6qvkf97qz6i7q8m9ddlbf618d42m") (f (quote (("quic" "quinn") ("postcard_ser" "postcard") ("messagepack_ser" "rmp-serde") ("json_ser" "serde_json") ("bson_ser" "bson"))))))

(define-public crate-canary-0.3.1 (c (n "canary") (v "0.3.1") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "backoff") (r "^0.4.0") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.6") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "io_err") (r "^0.1.0") (d #t) (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "quinn") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("net" "io-util" "time" "full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)))) (h "1xhbfb52gqi7g26awjxwfi9xqnp2094ngjjma75jad5jx14v651l") (f (quote (("quic" "quinn") ("postcard_ser" "postcard") ("messagepack_ser" "rmp-serde") ("json_ser" "serde_json") ("bson_ser" "bson"))))))

(define-public crate-canary-0.3.2 (c (n "canary") (v "0.3.2") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "backoff") (r "^0.4.0") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "delegate") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.6") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "io_err") (r "^0.1.0") (d #t) (k 0)) (d (n "postcard") (r "^0.7.3") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "quinn") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("net" "io-util" "time" "full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)))) (h "16iqj017bfhb9rl9l0igmykpjv2lg2x0y24k0i6m1c8fmj9n3zix") (f (quote (("quic" "quinn") ("postcard_ser" "postcard") ("messagepack_ser" "rmp-serde") ("json_ser" "serde_json") ("bson_ser" "bson"))))))

(define-public crate-canary-0.3.3 (c (n "canary") (v "0.3.3") (d (list (d (n "async-timer") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "async-tungstenite") (r "^0.17.2") (f (quote ("tokio-runtime"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "backoff") (r "^0.4.0") (f (quote ("tokio"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "compact_str") (r "^0.5.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "getrandom") (r "~0.2.6") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "io_err") (r "^0.1.0") (d #t) (k 0)) (d (n "postcard") (r "^1.0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "quinn") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwasm") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmp-serde") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.8") (d #t) (k 0)) (d (n "snow") (r "^0.9.0") (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.0") (f (quote ("net" "io-util" "time" "full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17.2") (d #t) (k 0)))) (h "1w3l62khvw7n2pg820v6231qyvf60rqr1vlp8q3yzgm4r8vqyakp") (f (quote (("quic" "quinn") ("postcard_ser" "postcard") ("messagepack_ser" "rmp-serde") ("json_ser" "serde_json") ("default" "json_ser" "postcard_ser" "messagepack_ser" "bson_ser" "quic") ("bson_ser" "bson"))))))

