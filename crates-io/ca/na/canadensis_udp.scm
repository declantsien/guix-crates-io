(define-module (crates-io ca na canadensis_udp) #:use-module (crates-io))

(define-public crate-canadensis_udp-0.2.0 (c (n "canadensis_udp") (v "0.2.0") (d (list (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "crc-any") (r "^2.4.0") (d #t) (k 0)) (d (n "fallible_collections") (r "^0.4.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.7") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socket2") (r "^0.4.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (d #t) (k 0)))) (h "03d35lna0prrrbrk5r23j2iackj0rbm9irgh272qj2kjn07xh3jp")))

(define-public crate-canadensis_udp-0.2.1 (c (n "canadensis_udp") (v "0.2.1") (d (list (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "crc-any") (r "^2.4.0") (d #t) (k 0)) (d (n "fallible_collections") (r "^0.4.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.7") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socket2") (r "^0.4.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (d #t) (k 0)))) (h "1mcwski7wsh6wblg7lsdg6jc4r1qflf7xnln4i9wlpgbs4lxlzvx")))

(define-public crate-canadensis_udp-0.2.2 (c (n "canadensis_udp") (v "0.2.2") (d (list (d (n "canadensis_core") (r "^0.2.0") (d #t) (k 0)) (d (n "crc-any") (r "^2.4.0") (d #t) (k 0)) (d (n "fallible_collections") (r "^0.4.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.7") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 2)) (d (n "socket2") (r "^0.4.2") (f (quote ("all"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (d #t) (k 0)))) (h "154g1rsw7li2gs7jfqm3jmlg3fdjm57agr7s9nhj6cdd3khpcdlf")))

(define-public crate-canadensis_udp-0.4.0 (c (n "canadensis_udp") (v "0.4.0") (d (list (d (n "canadensis_core") (r "^0.3.0") (d #t) (k 0)) (d (n "canadensis_header") (r "^0.1.0") (d #t) (k 0)) (d (n "crc-any") (r "^2.4.0") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "fallible_collections") (r "^0.4.3") (d #t) (k 0)) (d (n "hash32") (r "^0.2.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "heapless") (r "^0.7.7") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "zerocopy") (r "^0.6.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)))) (h "0afsj0wxnwmbaq0cd1d4apgmv4lajxxwc141r8if4dzn33pf6jk8") (f (quote (("std") ("default" "std"))))))

