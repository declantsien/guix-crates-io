(define-module (crates-io ca np canparse) #:use-module (crates-io))

(define-public crate-canparse-0.1.1 (c (n "canparse") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "num") (r "^0.1.37") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 0)) (d (n "socketcan") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.37") (d #t) (k 2)))) (h "1205p9f8463fs3sk4al9rfqag6z6c3a1asimhck23x7hhm7n8m1n") (f (quote (("use-socketcan" "socketcan"))))))

(define-public crate-canparse-0.1.2 (c (n "canparse") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "num") (r "^0.1.37") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 0)) (d (n "socketcan") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.37") (d #t) (k 2)))) (h "01xpxcdb4iyr0cyl1zwqgy0chqalgm1fddsiw0b3jdmrf8qmqrb6") (f (quote (("use-socketcan" "socketcan") ("default"))))))

(define-public crate-canparse-0.1.3 (c (n "canparse") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "num") (r "^0.1.37") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 2)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.24") (d #t) (k 0)) (d (n "socketcan") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.37") (d #t) (k 2)))) (h "1cjpisb1q0qlydbjpvw4gnvhv9k4gz1banr409l78lh0p9ks04p4") (f (quote (("use-socketcan" "socketcan") ("default"))))))

(define-public crate-canparse-0.1.4 (c (n "canparse") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "encoding") (r "^0.2") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nom") (r "^4.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "socketcan") (r "^1.7") (o #t) (d #t) (k 0)))) (h "1zhh88sqss5jjh8ls855wyzkci1k8xmncg9vb303w4x3shhp5s7y") (f (quote (("use-socketcan" "socketcan") ("default"))))))

