(define-module (crates-io ca n_ can_aerospace_lite) #:use-module (crates-io))

(define-public crate-can_aerospace_lite-0.0.1 (c (n "can_aerospace_lite") (v "0.0.1") (h "1b1z7md703bih0nh11i6166jk1nlbi17m816svd5n44w2xx0zyk2") (y #t)))

(define-public crate-can_aerospace_lite-0.1.0 (c (n "can_aerospace_lite") (v "0.1.0") (d (list (d (n "bxcan") (r ">=0.4, <0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.15") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7.4") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)))) (h "1cximfxqijspyyp847bacqvd4x6jmhm9548l0xv1j6ip68wz5y3n") (f (quote (("bxcan-support" "bxcan"))))))

(define-public crate-can_aerospace_lite-0.1.1 (c (n "can_aerospace_lite") (v "0.1.1") (d (list (d (n "bxcan") (r ">=0.4, <0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.15") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7.4") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "0zjr59zg1pskn5b46id1mnja3fjrrwrrsjj1q3a3cha9ins546fi") (f (quote (("bxcan-support" "bxcan"))))))

(define-public crate-can_aerospace_lite-0.1.2 (c (n "can_aerospace_lite") (v "0.1.2") (d (list (d (n "bxcan") (r ">=0.4, <0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.15") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7.4") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1vvgy4wdif5pwxhlfiikpbq0vqnysvl1x2777g7vzfdvc31p07gc") (f (quote (("ids-standard") ("bxcan-support" "bxcan"))))))

(define-public crate-can_aerospace_lite-0.1.3 (c (n "can_aerospace_lite") (v "0.1.3") (d (list (d (n "bxcan") (r ">=0.4, <0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.3") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.15") (d #t) (k 2)) (d (n "cortex-m-rtic") (r "^0.5") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7.4") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 2)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "socketcan") (r "^1.7.0") (d #t) (k 2)))) (h "1ap2a9yzk2ah5zz8irxsjjpq3mrd0g6m15z4xv756m5mr5nnqxqq") (f (quote (("ids-standard") ("bxcan-support" "bxcan"))))))

