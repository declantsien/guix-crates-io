(define-module (crates-io ca us causal-hub) #:use-module (crates-io))

(define-public crate-causal-hub-0.0.0 (c (n "causal-hub") (v "0.0.0") (h "1wzkawdk0cc7iqszdgyspgp0jifj4kmkpf6wh8zhjh2qwp8q3ls0")))

(define-public crate-causal-hub-0.0.1 (c (n "causal-hub") (v "0.0.1") (d (list (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0mws403rc30q311b1b49kw7501fr9ap1y6alf4g4cyf10na6g6i6")))

(define-public crate-causal-hub-0.0.2 (c (n "causal-hub") (v "0.0.2") (d (list (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "03xhjmpmvj92jj5g7gdb6h8sa5pxmrhmx98xcfk9gjzkjwf3gw8v")))

(define-public crate-causal-hub-0.0.3 (c (n "causal-hub") (v "0.0.3") (d (list (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1yfps6ggxibq2y8sjc0rmvbywnd7gb17d3j8xnpy3ya4mlz971ps")))

(define-public crate-causal-hub-0.1.0 (c (n "causal-hub") (v "0.1.0") (d (list (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "is_sorted") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16") (d #t) (k 0)) (d (n "page_size") (r "^0.5") (d #t) (k 0)) (d (n "polars") (r "^0.26") (f (quote ("dtype-categorical" "ndarray"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("openblas-system"))) (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1v01j1zpi19f553nwmbrl24vrmka13j5zrijy0rd33pr59hk2620")))

(define-public crate-causal-hub-0.1.1 (c (n "causal-hub") (v "0.1.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (d #t) (k 0)) (d (n "is_sorted") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx-0_5" "rayon"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "page_size") (r "^0.5") (d #t) (k 0)) (d (n "pest") (r "^2.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (d #t) (k 0)) (d (n "polars") (r "^0.26") (f (quote ("dtype-categorical" "ndarray"))) (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx-0_5" "rayon" "serde"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("openblas-system"))) (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1x8k78phc9mxqjbijgpla93g1g7fszxpjxn07yka7lpngll9697q")))

(define-public crate-causal-hub-0.1.2 (c (n "causal-hub") (v "0.1.2") (d (list (d (n "approx") (r "^0.5") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "is_sorted") (r "^0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "libm") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("approx-0_5" "rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16") (d #t) (k 0)) (d (n "ndarray-stats") (r "^0.5") (d #t) (k 0)) (d (n "page_size") (r "^0.5") (d #t) (k 0)) (d (n "pest") (r "^2.5") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5") (d #t) (k 0)) (d (n "polars") (r "^0.27") (f (quote ("dtype-categorical" "ndarray"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)) (d (n "statrs") (r "^0.16") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("approx-0_5" "rayon" "serde"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("openblas-system"))) (d #t) (k 2)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (d #t) (k 2)))) (h "1l0izqa6h1blvysfg8arv8a7l0phfr9rha0div447rmfi0l98kjk")))

