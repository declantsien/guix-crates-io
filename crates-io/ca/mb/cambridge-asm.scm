(define-module (crates-io ca mb cambridge-asm) #:use-module (crates-io))

(define-public crate-cambridge-asm-0.1.0 (c (n "cambridge-asm") (v "0.1.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "0iqyjb7cry2gcl1vk88s2hwd07dhnffxjllgjp81hdks4skg2w0s") (y #t)))

(define-public crate-cambridge-asm-0.1.1 (c (n "cambridge-asm") (v "0.1.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "11xzry53ilw2n5x70prj76diqkz7jllgx6yhfd6p0pqwiarljp0q") (y #t)))

(define-public crate-cambridge-asm-0.1.2 (c (n "cambridge-asm") (v "0.1.2") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "1gibym2zkhzxbjxsfxkv274pbgvg9vb380vmbqqyp72xgr5awb97") (y #t)))

(define-public crate-cambridge-asm-0.1.3 (c (n "cambridge-asm") (v "0.1.3") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "1yrkm2dip4x4aikq5a05arslnnzjnwyd9s4y8b3k20pf9sxvy881") (y #t)))

(define-public crate-cambridge-asm-0.1.4 (c (n "cambridge-asm") (v "0.1.4") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "030i1l6iipqqn257lb2gnha44p48k75lb5darbxyvgd19bzchmbd") (y #t)))

(define-public crate-cambridge-asm-0.2.0 (c (n "cambridge-asm") (v "0.2.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)))) (h "124hnwyc2iz2hpbjyf8sw1xcj520mycxk1j0nllfw3bk86q73cc7") (y #t)))

(define-public crate-cambridge-asm-0.3.0 (c (n "cambridge-asm") (v "0.3.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "1ij9ad2bm36b5lm54cq20kkcl1j74ng6x7vzz34nyyak9w1sk98s")))

(define-public crate-cambridge-asm-0.3.1 (c (n "cambridge-asm") (v "0.3.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "0n382mcpggdx88856vy3rhi5x583f36nywrmz3kvxzps0xihfzck")))

(define-public crate-cambridge-asm-0.3.2 (c (n "cambridge-asm") (v "0.3.2") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "0g6z7abdrkvz3f78qlp0dakqjakc0ayvkyih00jcqsdsf2kb8361")))

(define-public crate-cambridge-asm-0.4.0 (c (n "cambridge-asm") (v "0.4.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "1j3vhs97bfsqvfy8diqifqckdh6707hrjkgvmnkwwpk8fhy4w118")))

(define-public crate-cambridge-asm-0.5.0 (c (n "cambridge-asm") (v "0.5.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)))) (h "013s45rz8nma9lffdhfjz311fan340k11j7lly60y23sabhygndh")))

(define-public crate-cambridge-asm-0.5.1 (c (n "cambridge-asm") (v "0.5.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)))) (h "1rcffg50bgbpkk0yl8s0hybg8cn0d40xqnzrdvkb6nhhw53qhn6s")))

(define-public crate-cambridge-asm-0.6.0 (c (n "cambridge-asm") (v "0.6.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "simple_logger") (r "^1") (d #t) (k 0)))) (h "0rq63jm4s6zrifmk3lhajgzwvwxw1dngyjgh2l84z7h4jvllb410") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.6.1 (c (n "cambridge-asm") (v "0.6.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "1rcbgfsl6ry222cj54f6i7qkfq59jdjj076cn9zl99gdql48gj0z") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.7.0 (c (n "cambridge-asm") (v "0.7.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "0ly4g8jfhrpgvh4jspnnwgksj4qagswy5l3a2p7yqndpqwid8vyd") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.8.0 (c (n "cambridge-asm") (v "0.8.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "1i2k88z89fvsz6ihjm5c3xvfaa847nhsp089lm67qfdz7kmx6g30") (f (quote (("cambridge")))) (y #t)))

(define-public crate-cambridge-asm-0.8.1 (c (n "cambridge-asm") (v "0.8.1") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "159n9a07m8rwr2zdh349zly735dzn3rcvfy3p0hg2vqbl69x9xby") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.9.0 (c (n "cambridge-asm") (v "0.9.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "0n8wkaxhl8bcj6j7gg7xawlc0whs7f97w32c8s1hdf9bqxvarxi5") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.10.0 (c (n "cambridge-asm") (v "0.10.0") (d (list (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)))) (h "0g2y7rgrxwbvp21lnmczm3krsn6zq97dgngz96h26mp5g74v860z") (f (quote (("cambridge"))))))

(define-public crate-cambridge-asm-0.11.0 (c (n "cambridge-asm") (v "0.11.0") (d (list (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)))) (h "1ngs4d4jl6pdi13ymxjhhvm3sp8fik29pg80nkhhq5qvfg8r24gi") (f (quote (("cambridge")))) (y #t) (r "1.59")))

(define-public crate-cambridge-asm-0.11.1 (c (n "cambridge-asm") (v "0.11.1") (d (list (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.36") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)))) (h "0ah8mn8ms7s55z672018lhl4janjvg1nl3rs64k8sgc5ihyr045h") (f (quote (("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.11.2 (c (n "cambridge-asm") (v "0.11.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "15zahc7cmw6q86xgqp7fxzcbmx4rd73ap228pmlg2hqxsfaf7qbq") (f (quote (("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.11.3 (c (n "cambridge-asm") (v "0.11.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0ffm1b1wpdidcpd0dhldnj45b2as7w8jv2p87y601j73dm3hxvvn") (f (quote (("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.12.0 (c (n "cambridge-asm") (v "0.12.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "192dyr4yjypmlwbx9s1bh71qzq7x3spp7hc6c6n2jjcbracj4xi1") (f (quote (("default" "compile") ("compile" "serde") ("cambridge")))) (y #t) (r "1.59")))

(define-public crate-cambridge-asm-0.12.1 (c (n "cambridge-asm") (v "0.12.1") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1ig7c228j0x6vw0ms6k0r16alpvvrcj5y5zdng28vkmv3gmx8786") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.12.2 (c (n "cambridge-asm") (v "0.12.2") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1izmkzd8zi3gih9l9ch6g2s0q0y9xn6ly1scnm515x0l7sk4qbg0") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.13.0 (c (n "cambridge-asm") (v "0.13.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1bz10456w98002l07jwmcxg669s6rcxlk2vi5g6dgr3rmwk05qwz") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (y #t) (r "1.59")))

(define-public crate-cambridge-asm-0.13.1 (c (n "cambridge-asm") (v "0.13.1") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0y47xlz56m43zr6gwbnyfmxz6y3giy7bmcycahr1j5wr4lrn6wm2") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (y #t) (r "1.59")))

(define-public crate-cambridge-asm-0.13.2 (c (n "cambridge-asm") (v "0.13.2") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1zlk8c83nf4y22wim4m771dj0ijm3jjpkxfa853f2sbz4dk3rx8a") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (r "1.59")))

(define-public crate-cambridge-asm-0.14.0 (c (n "cambridge-asm") (v "0.14.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0qqg0ygxp4fipy53n1azx6w2gh82qlfnzri1p854vaz9anzsgf9a") (f (quote (("default" "compile") ("compile" "serde" "bincode") ("cambridge")))) (y #t) (r "1.59")))

(define-public crate-cambridge-asm-0.15.0 (c (n "cambridge-asm") (v "0.15.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1vax28kn8g503pknx63zx40cxalf4hrasfl4fi6j4yagycnvni5d") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.15.1 (c (n "cambridge-asm") (v "0.15.1") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1va1hw224gy7431l1n2bwsabz4vqvww9nvdd5y4kn191iyyfi4ww") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.15.2 (c (n "cambridge-asm") (v "0.15.2") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1gcapm60giqk2viv1l31k7zqlkvh14963c4z71k8x49zvdcry7qa") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.15.3 (c (n "cambridge-asm") (v "0.15.3") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0s65n0kpss59pi3d5k7n8bwws54s6chcznj6zbb2f8yvh95fkjq2") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.15.4 (c (n "cambridge-asm") (v "0.15.4") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0sndblpkj91k52pryhxqh504y17dh1l9qpixwdclsg2sk79msz5s") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.16.0 (c (n "cambridge-asm") (v "0.16.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pest") (r "^2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "14wa5wdf034411lvkjsvp3dqn7cb4f83zpvvl6drd4mbdsrqm1rz") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.59")))

(define-public crate-cambridge-asm-0.17.0 (c (n "cambridge-asm") (v "0.17.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "01ybz4gyh1vbh6jfj5anadz3hdcpwz7blzdx5gxhnwmiss0y9vy1") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.63")))

(define-public crate-cambridge-asm-0.18.0 (c (n "cambridge-asm") (v "0.18.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0dbwgx5y9hj2yk515qx1kfkk8iyys8vahmfx5j8p15jnsmk3bp95") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.63")))

(define-public crate-cambridge-asm-0.18.1 (c (n "cambridge-asm") (v "0.18.1") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "0fanapw9k5amf1s4x4as432sljq6fm1an48qb7cck1yvad1lqsr7") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.63")))

(define-public crate-cambridge-asm-0.19.0 (c (n "cambridge-asm") (v "0.19.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)))) (h "1ryk8yy1mfh08mykgn3awhmcg3z2md4hrmqsfp4hw4303jnmzy94") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.63")))

(define-public crate-cambridge-asm-0.20.0 (c (n "cambridge-asm") (v "0.20.0") (d (list (d (n "bincode") (r "^2.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "logos") (r "^0.12") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1mkg8qyh6dx0wah6f595r121p13r72i15lyrppjgvycd5rbn6sxc") (f (quote (("extended") ("default" "compile" "extended") ("compile" "serde" "bincode")))) (r "1.63")))

