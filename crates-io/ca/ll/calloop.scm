(define-module (crates-io ca ll calloop) #:use-module (crates-io))

(define-public crate-calloop-0.1.0 (c (n "calloop") (v "0.1.0") (d (list (d (n "mio") (r "^0.6") (d #t) (k 0)))) (h "114ygh9x732gyv77msqzx3601icy3j2sa2zxsmpy517k8bpn1zjg")))

(define-public crate-calloop-0.1.1 (c (n "calloop") (v "0.1.1") (d (list (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1w74hj7y23lgzj9cq2aq6hd2vllzm25jpq92qshlj785zps5cvxc")))

(define-public crate-calloop-0.2.0 (c (n "calloop") (v "0.2.0") (d (list (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1sm5vdv0g788xr7b35mhj7vrgiqaf1p2azn9q77v086i8c7hzw56")))

(define-public crate-calloop-0.2.2 (c (n "calloop") (v "0.2.2") (d (list (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "0my1njrqk5xdm14cibwl3gh2xnk53bbca7nhgzjhpmk4bs10j4vp")))

(define-public crate-calloop-0.3.0 (c (n "calloop") (v "0.3.0") (d (list (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1lzv10n9y0c3l4n19f7fmxw1zgj4m52yxbw58vdrml9xlp2jbzk4")))

(define-public crate-calloop-0.3.1 (c (n "calloop") (v "0.3.1") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1sa655vld447aar41446ianjk61pr4zi5yprq141m9fqrqwbwbbj")))

(define-public crate-calloop-0.3.2 (c (n "calloop") (v "0.3.2") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-more") (r "^0.1") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "0xia5kbqdfhh278kd47g3g3hcn14a5avrxjfpq92igcin7vlybq0")))

(define-public crate-calloop-0.4.0 (c (n "calloop") (v "0.4.0") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1fgw1y3kbkvp7kk1hbh5bh4gb34gzqzyd9w8v9fv3p1jvxk7r2ky")))

(define-public crate-calloop-0.4.1 (c (n "calloop") (v "0.4.1") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "1p2gas62j8gcdwial3vlsmcapnyv2010p27bnc3j5mqyfhg0g1fa")))

(define-public crate-calloop-0.4.2 (c (n "calloop") (v "0.4.2") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)))) (h "07y0dqjlp19qh0zz66z1gga5fl1ldh8iba1jkb6bl8mkrchjyp2d")))

(define-public crate-calloop-0.4.3 (c (n "calloop") (v "0.4.3") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "nix") (r "^0.13") (d #t) (t "cfg(unix)") (k 0)))) (h "19l0xlxxp0qn6k017dssqhmamfx36gs80haq863v7x5fzf15pq2j")))

(define-public crate-calloop-0.4.4 (c (n "calloop") (v "0.4.4") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.6") (d #t) (k 0)) (d (n "mio-extras") (r "^2.0") (d #t) (k 0)) (d (n "nix") (r "^0.14.1") (d #t) (t "cfg(unix)") (k 0)))) (h "0q6ic9lr0s86886mbyn4yncg68b2sykgwjf3iygdw01swmxhk8ks")))

(define-public crate-calloop-0.5.0 (c (n "calloop") (v "0.5.0") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "= 0.7.0-alpha.1") (f (quote ("os-poll" "os-util"))) (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(unix)") (k 0)))) (h "07khj43b5gxjdzn2wx5alv6qdcsrn84yi9qha6jbfl8ahppwpwzw")))

(define-public crate-calloop-0.5.1 (c (n "calloop") (v "0.5.1") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "os-util"))) (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(unix)") (k 0)))) (h "1rbdmnvl4xhh26a1pmslkwj7z2zid4imlh3k139s7q2y05ccnyf0")))

(define-public crate-calloop-0.5.2 (c (n "calloop") (v "0.5.2") (d (list (d (n "lazycell") (r "= 1.0.0") (d #t) (k 2)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "os-util"))) (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (t "cfg(unix)") (k 0)))) (h "0czq9hxg8nw246d75w3ahq1clanqgfhm8hp9mjx82yrys411qgbw")))

(define-public crate-calloop-0.6.0 (c (n "calloop") (v "0.6.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (k 0)))) (h "0w71rsbavps5l3cnp5f28gjnk773x8344hvfzy7gc4wswq7kwamm")))

(define-public crate-calloop-0.6.1 (c (n "calloop") (v "0.6.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (k 0)))) (h "05fkbfxa9xb5rczrprqazx6n1aq9zrsxb7524wvjnw2cl9s2yxri")))

(define-public crate-calloop-0.6.2 (c (n "calloop") (v "0.6.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.17") (d #t) (k 0)))) (h "0wq9agqz0y4bhpd5gnl6h3i6jw651988f6kmkl9gbwag33lqb7hf")))

(define-public crate-calloop-0.6.3 (c (n "calloop") (v "0.6.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)))) (h "1sfwai0jd4xsbip9b2rbvd4h5bgq7671sxizpl4yk2y03z6ffvvn") (y #t)))

(define-public crate-calloop-0.6.4 (c (n "calloop") (v "0.6.4") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)))) (h "0fpzhg6vw33k1hm6yfscx4k5sz2hd02jxx261kd4pfk8765ilmjr")))

(define-public crate-calloop-0.6.5 (c (n "calloop") (v "0.6.5") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)))) (h "0z3jlsv3g28097dhsmi2l8nzkd3p937jhb4pg52njhb0wxkn20qb")))

(define-public crate-calloop-0.7.0 (c (n "calloop") (v "0.7.0") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)))) (h "1p3bri1j5ycnn71r2lr7j9bv7yzvsn1smqrhsifkdlzzb6ngjvzn") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.7.1 (c (n "calloop") (v "0.7.1") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)))) (h "0jv0vaklc4f4grin722m8h790yg1yym1qkc3hczawzx9fwi6w41x") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.7.2 (c (n "calloop") (v "0.7.2") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.19") (d #t) (k 0)))) (h "0c91s83ncm4yyg1f6b4ahxl9ycvab68r0ik620gdhssx250162lx") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.8.0 (c (n "calloop") (v "0.8.0") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.20") (d #t) (k 0)))) (h "0ibkgsd2z4dra6s42j0qrsfpg67gz1s4z941gpq5lxx206zkfl65") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.9.0 (c (n "calloop") (v "0.9.0") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.21") (d #t) (k 0)))) (h "1rsacwcq39ilyd60pirada0ii4g093cjl193jalcw284infj7ypy") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.9.1 (c (n "calloop") (v "0.9.1") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)))) (h "0xsw4nmww1m06557plyqn9wls50iig85mzac0agzyvma4gbzpp22") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.9.2 (c (n "calloop") (v "0.9.2") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.23") (d #t) (k 0)))) (h "0n2pw484y339ga83v7dah9hjzhwdr470qmqdla5i2h198g1q73il") (f (quote (("executor" "futures-util")))) (y #t)))

(define-public crate-calloop-0.9.3 (c (n "calloop") (v "0.9.3") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22") (d #t) (k 0)))) (h "10mbcsd7fj3cg0a463h3003wycv955cnj4pm2gla2sp5xxhyqbmz") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.0 (c (n "calloop") (v "0.10.0") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "0bp0h8d8k7r05ggp7ip3y26anwaspld134mgx46s9s1z913128l4") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.1 (c (n "calloop") (v "0.10.1") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "1vmlfynd8s3qrqwj0gkm38d37q8jmfq31ijjshh72y9gca7nlam2") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.2 (c (n "calloop") (v "0.10.2") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.24") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "1wnb41pgw9zj0w5b1432lmzbbgk1kbgfcc7yjlijcv9wid1v0pjr") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.3 (c (n "calloop") (v "0.10.3") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "0qw6wnrhysld7bca84m9hjg17zfpjvlya0878ha5xr20zc557ksv") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.4 (c (n "calloop") (v "0.10.4") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "0rg452ikg6mbjr1kwijqalybs50cj4m5qjhkfsyll8v5lh6pli8r") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.5 (c (n "calloop") (v "0.10.5") (d (list (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "14h1yjksd8kakbd4xqz9xjc2gsa97rsdj5g05ivqsisswidj4n8s") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.10.6 (c (n "calloop") (v "0.10.6") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.25") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "vec_map") (r "^0.8.2") (d #t) (k 0)))) (h "1a04jp2v80rla3pqh6fwqqyn6yklqq0n5nnjjwd3f97an47d1q2j") (f (quote (("executor" "futures-util"))))))

(define-public crate-calloop-0.11.0 (c (n "calloop") (v "0.11.0") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "io-lifetimes") (r "^1.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("event" "fs" "signal" "socket" "time"))) (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^2.6.0") (d #t) (k 0)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1i75jffmv7m56a1s1scysb34ivbyrjv66w4apgjp3gbz9k7bz96y") (f (quote (("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.56.0")))

(define-public crate-calloop-0.12.0 (c (n "calloop") (v "0.12.0") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07iq5cgswdgr02lz0kxgm0icxdwl015gzf3sa94ghm07c4nqak1l") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

(define-public crate-calloop-0.12.1 (c (n "calloop") (v "0.12.1") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1425cszhx3cb2crxrakvr3di87wyrh3dnia7i3vhjzn0cz1bvsqp") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

(define-public crate-calloop-0.12.2 (c (n "calloop") (v "0.12.2") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0517yhf4wnr1lx6sij0kxpw0hck430sc9caij1jc0j2kh4z1ipda") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

(define-public crate-calloop-0.12.3 (c (n "calloop") (v "0.12.3") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)))) (h "1gxd20zpys0q4v9fg3nrkyhrnjgpkgriidgfm5aqraar9njbal3v") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

(define-public crate-calloop-0.12.4 (c (n "calloop") (v "0.12.4") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)))) (h "162jk6j6qgqisyngkiay2qhzcj3i1q0260jiadaqxaasvnsav9zv") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

(define-public crate-calloop-0.13.0 (c (n "calloop") (v "0.13.0") (d (list (d (n "async-task") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (o #t) (t "cfg(unix)") (k 0)) (d (n "pin-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "polling") (r "^3.0.0") (d #t) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("event" "fs" "pipe" "std"))) (k 0)) (d (n "rustix") (r "^0.38") (f (quote ("net"))) (k 2)) (d (n "slab") (r "^0.4.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)))) (h "1v5zgidnhsyml403rzr7vm99f8q6r5bxq5gxyiqkr8lcapwa57dr") (f (quote (("signals" "nix") ("nightly_coverage") ("executor" "async-task") ("block_on" "pin-utils")))) (r "1.63.0")))

