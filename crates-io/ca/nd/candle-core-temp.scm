(define-module (crates-io ca nd candle-core-temp) #:use-module (crates-io))

(define-public crate-candle-core-temp-0.3.0 (c (n "candle-core-temp") (v "0.3.0") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "candle-kernels") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "cudarc") (r "^0.9.14") (f (quote ("f16"))) (o #t) (d #t) (k 0)) (d (n "gemm") (r "^0.16.6") (f (quote ("wasm-simd128-enable"))) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (f (quote ("stable_deref_trait"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "safetensors") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "yoke") (r "^0.7.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "0mbpx0l7vry6wbiscgp7f4cwqkaff5m71h4bbjiqh3kjrrd7l0kk") (f (quote (("default") ("cudnn" "cuda" "cudarc/cudnn")))) (s 2) (e (quote (("mkl" "dep:libc" "dep:intel-mkl-src") ("cuda" "cudarc" "dep:candle-kernels") ("accelerate" "dep:libc" "dep:accelerate-src"))))))

