(define-module (crates-io ca nd candid_parser) #:use-module (crates-io))

(define-public crate-candid_parser-0.1.0 (c (n "candid_parser") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_dhall") (r "^0.11") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "007724y4hbz81g7gvydfb7f2v7s9dc0ib7rmsd71ss62q4vvflm1") (f (quote (("random" "configs" "arbitrary" "fake" "rand" "num-traits" "serde") ("configs" "serde_dhall") ("all" "random"))))))

(define-public crate-candid_parser-0.1.1 (c (n "candid_parser") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_dhall") (r "^0.11") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13xjhy1x1v9n186kjkng9kzqhp3jj582cak5yi0lr62m56c5cixg") (f (quote (("random" "configs" "arbitrary" "fake" "rand" "num-traits" "serde") ("configs" "serde_dhall") ("all" "random"))))))

(define-public crate-candid_parser-0.1.2 (c (n "candid_parser") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (f (quote ("editor" "completion"))) (o #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_dhall") (r "^0.11") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1md9rw436r53b16awjzl0kifczvw7zbc0ll50bmjsccapbiisf1n") (f (quote (("random" "configs" "arbitrary" "fake" "rand" "num-traits" "serde") ("configs" "serde_dhall") ("all" "random" "assist")))) (s 2) (e (quote (("assist" "dep:dialoguer" "dep:console" "dep:ctrlc"))))))

(define-public crate-candid_parser-0.1.3 (c (n "candid_parser") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (f (quote ("editor" "completion"))) (o #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_dhall") (r "^0.11") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b5qdxyjc7kmxwc8qbh3qb3phcykmyhbq77j9jfi0z0yr04ns7qi") (f (quote (("random" "configs" "arbitrary" "fake" "rand" "num-traits" "serde") ("configs" "serde_dhall") ("all" "random" "assist")))) (s 2) (e (quote (("assist" "dep:dialoguer" "dep:console" "dep:ctrlc")))) (r "1.70.0")))

(define-public crate-candid_parser-0.1.4 (c (n "candid_parser") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (f (quote ("editor" "completion"))) (o #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_dhall") (r "^0.11") (o #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xpxl05wavg50kpk4s3g32v1nd08c1n4rij2fc5kbkc9z5vdm8s8") (f (quote (("random" "configs" "arbitrary" "fake" "rand" "num-traits" "serde") ("configs" "serde_dhall") ("all" "random" "assist")))) (s 2) (e (quote (("assist" "dep:dialoguer" "dep:console" "dep:ctrlc")))) (r "1.70.0")))

(define-public crate-candid_parser-0.2.0-beta.0 (c (n "candid_parser") (v "0.2.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (f (quote ("editor" "completion"))) (o #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.13") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse"))) (k 0)))) (h "0sgnhq2g7ia886flgzpn0xfwswxg5hnvbqqcm7ryqfrbj75xqrd4") (f (quote (("all" "random" "assist")))) (s 2) (e (quote (("random" "dep:arbitrary" "dep:fake" "dep:rand" "dep:num-traits") ("assist" "dep:dialoguer" "dep:console" "dep:ctrlc")))) (r "1.70.0")))

(define-public crate-candid_parser-0.2.0-beta.1 (c (n "candid_parser") (v "0.2.0-beta.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "candid") (r "^0.10") (f (quote ("all"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11") (d #t) (k 0)) (d (n "console") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4") (o #t) (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (f (quote ("editor" "completion"))) (o #t) (k 0)) (d (n "fake") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "goldenfile") (r "^1.1.0") (d #t) (k 2)) (d (n "handlebars") (r "^5.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lalrpop") (r "^0.20.0") (d #t) (k 1)) (d (n "lalrpop-util") (r "^0.20.0") (d #t) (k 0)) (d (n "logos") (r "^0.14") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "pretty") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "test-generator") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse"))) (k 0)))) (h "00nq14cdp5kav2sj99s253j8fhjmxpasqzmk8p5azxncaxkmmmb0") (f (quote (("all" "random" "assist")))) (s 2) (e (quote (("random" "dep:arbitrary" "dep:fake" "dep:rand" "dep:num-traits") ("assist" "dep:dialoguer" "dep:console" "dep:ctrlc")))) (r "1.70.0")))

