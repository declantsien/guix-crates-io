(define-module (crates-io ca nd candle-optimisers) #:use-module (crates-io))

(define-public crate-candle-optimisers-0.3.0 (c (n "candle-optimisers") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "candle-core") (r "^0.3.0") (d #t) (k 0)) (d (n "candle-datasets") (r "^0.3.0") (d #t) (k 2)) (d (n "candle-nn") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)))) (h "1a55srla13f6pkj23lnba0jzv0xi4vfi263f9q5za7pa1vamlb6n") (f (quote (("default") ("cuda" "candle-core/cuda" "candle-nn/cuda")))) (s 2) (e (quote (("mkl" "dep:intel-mkl-src" "candle-core/mkl"))))))

(define-public crate-candle-optimisers-0.3.1 (c (n "candle-optimisers") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "candle-core") (r "^0.3.0") (d #t) (k 0)) (d (n "candle-datasets") (r "^0.3.0") (d #t) (k 2)) (d (n "candle-nn") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)))) (h "06bf9gvjfcmq70dw1nfw8lh6gv42l9agacdrhvgcrpvm00z0azgw") (f (quote (("default") ("cuda" "candle-core/cuda" "candle-nn/cuda")))) (s 2) (e (quote (("mkl" "dep:intel-mkl-src" "candle-core/mkl"))))))

(define-public crate-candle-optimisers-0.3.2 (c (n "candle-optimisers") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "candle-core") (r "^0.3.0") (d #t) (k 0)) (d (n "candle-datasets") (r "^0.3.0") (d #t) (k 2)) (d (n "candle-nn") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)))) (h "07x73jdw2js370hjfi29c61f2lvyl1ah8y90c3zlwdk75c9mabi0") (f (quote (("default") ("cuda" "candle-core/cuda" "candle-nn/cuda")))) (s 2) (e (quote (("mkl" "dep:intel-mkl-src" "candle-core/mkl"))))))

(define-public crate-candle-optimisers-0.4.0 (c (n "candle-optimisers") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "candle-core") (r "^0.4.0") (d #t) (k 0)) (d (n "candle-datasets") (r "^0.4.0") (d #t) (k 2)) (d (n "candle-nn") (r "^0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)))) (h "0mnrlr03yviigzcf2iv3h49253mli1dgnbfbyymskaiv7sdapd7q") (f (quote (("default") ("cuda" "candle-core/cuda" "candle-nn/cuda"))))))

(define-public crate-candle-optimisers-0.5.0 (c (n "candle-optimisers") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "candle-core") (r "^0.5.0") (d #t) (k 0)) (d (n "candle-datasets") (r "^0.5.0") (d #t) (k 2)) (d (n "candle-nn") (r "^0.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)))) (h "0ckmgvl0q366mj1zdgn7wpx003ik4p0mm5bqk6n3yp5pzqljsjc1") (f (quote (("default") ("cuda" "candle-core/cuda" "candle-nn/cuda"))))))

