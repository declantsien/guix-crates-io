(define-module (crates-io ca nd candle-pyo3) #:use-module (crates-io))

(define-public crate-candle-pyo3-0.2.0 (c (n "candle-pyo3") (v "0.2.0") (d (list (d (n "candle") (r "^0.2.0") (d #t) (k 0) (p "candle-core")) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.19") (d #t) (k 1)))) (h "0b331kg91zlldqf028q8h47pb2ccic5vbi7rw2if6rk5n1bghrfa") (f (quote (("default") ("cuda" "candle/cuda"))))))

(define-public crate-candle-pyo3-0.2.1 (c (n "candle-pyo3") (v "0.2.1") (d (list (d (n "candle") (r "^0.2.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.2.1") (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.19") (d #t) (k 1)))) (h "0f3pkxfj15sldc8qdym1r58a4nj0snr8pl44gvinskqf29bx2yxj") (f (quote (("default") ("cuda" "candle/cuda"))))))

(define-public crate-candle-pyo3-0.2.2 (c (n "candle-pyo3") (v "0.2.2") (d (list (d (n "candle") (r "^0.2.2") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.2.2") (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.19") (d #t) (k 1)))) (h "0mfbiq16h0f5a2ink4wqh1ahb66dhq9jwcibd7b76561l3x7lddq") (f (quote (("default") ("cuda" "candle/cuda"))))))

(define-public crate-candle-pyo3-0.3.0 (c (n "candle-pyo3") (v "0.3.0") (d (list (d (n "candle") (r "^0.3.0") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.3.0") (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.19") (d #t) (k 1)))) (h "0ls8p1sw4967qv5akj5g56fw214mnj2xxkwc63zg6v8xqkv66n4h") (f (quote (("default") ("cuda" "candle/cuda"))))))

(define-public crate-candle-pyo3-0.3.1 (c (n "candle-pyo3") (v "0.3.1") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.3.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.3.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.20") (d #t) (k 1)))) (h "0g4qd1scj34qp1ks9b2n7446fqlif5bikx7wfblnadqyiihwwp3q") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.3.2 (c (n "candle-pyo3") (v "0.3.2") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.3.2") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.3.2") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.20") (d #t) (k 1)))) (h "1l565p70d166429qhba643xkr3zny82mln9syykz796r9da4l0h1") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.3.3 (c (n "candle-pyo3") (v "0.3.3") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.3.3") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.3.3") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.20") (d #t) (k 1)))) (h "18fl0iqvdpc6xjxfy0gxbz7l6n4cfjqc84j0g22nwnxh83nf9p7p") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.4.0 (c (n "candle-pyo3") (v "0.4.0") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.4.0") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.4.0") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.20") (d #t) (k 1)))) (h "11njys8wncr6n8fh3dbyy141b386k41939lfc81c4ssjr75bh6k7") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.4.1 (c (n "candle-pyo3") (v "0.4.1") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.4.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.4.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.20") (d #t) (k 1)))) (h "1kr116vxv94q2kk9a5xmzw022d9qx0cczf9bzix7jv2bmm7lzzvh") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.5.0 (c (n "candle-pyo3") (v "0.5.0") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.5.0") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.5.0") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.21") (d #t) (k 1)))) (h "081cry6vxgjfsn7y0fwq3vsf342v1x9n7vd8d8908fnj6vnz4rh1") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

(define-public crate-candle-pyo3-0.5.1 (c (n "candle-pyo3") (v "0.5.1") (d (list (d (n "accelerate-src") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "candle") (r "^0.5.1") (d #t) (k 0) (p "candle-core")) (d (n "candle-nn") (r "^0.5.1") (d #t) (k 0)) (d (n "candle-onnx") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "use-intrinsics" "rand_distr"))) (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.8.1") (f (quote ("mkl-static-lp64-iomp"))) (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.21.0") (f (quote ("extension-module" "abi3-py38"))) (d #t) (k 0)) (d (n "pyo3-build-config") (r "^0.21") (d #t) (k 1)))) (h "1xx36sgjzfym5vkgp3nxf8h276bmqvs17259a03sz6lc0dal7ik1") (f (quote (("default") ("cuda" "candle/cuda")))) (s 2) (e (quote (("onnx" "dep:candle-onnx") ("mkl" "dep:intel-mkl-src" "candle/mkl") ("accelerate" "dep:accelerate-src" "candle/accelerate"))))))

