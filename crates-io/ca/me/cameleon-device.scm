(define-module (crates-io ca me cameleon-device) #:use-module (crates-io))

(define-public crate-cameleon-device-0.1.0 (c (n "cameleon-device") (v "0.1.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "14wkvgv6hfqj1pdgjqj7g3viwckh3j022bq9dg2cxjdxfqadv5zh") (f (quote (("libusb" "rusb"))))))

(define-public crate-cameleon-device-0.1.1 (c (n "cameleon-device") (v "0.1.1") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "1vwvlh35xcpxxbl4sn0kb8lrnsm2q23b7rc3nkjvaf4iyq48aygl") (f (quote (("libusb" "rusb"))))))

(define-public crate-cameleon-device-0.1.4 (c (n "cameleon-device") (v "0.1.4") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "1fg57z5936mklv6p78i2wjaihzqqfhlardm5l97vna137i0wmr3c") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.5 (c (n "cameleon-device") (v "0.1.5") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "0gwm5yk2x1n0jdcgkd6vsb7b920arhk24dngiha2f9hapw7qw2a2") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.6 (c (n "cameleon-device") (v "0.1.6") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.6") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "04nsq8sqhfqb3grvzjvd7fnkzi8d5j480zrfvv3x74d2mgzjy7if") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.7 (c (n "cameleon-device") (v "0.1.7") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.7") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "116lbzxxmxncp367dnh51k94kqs0s8fb5ln2bgpap4wgdfdkn8s7") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.8 (c (n "cameleon-device") (v "0.1.8") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "cameleon-impl") (r "^0.1.8") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "14s8fhj31hl46f42958gvmj4hyr1ahwggms3cdbggf4nig2yf31c") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.9 (c (n "cameleon-device") (v "0.1.9") (d (list (d (n "cameleon-impl") (r "^0.1.9") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "0pshlx5h5k1vn6fyq2ws90j47likmkh1z4cliq74xgs77cjclph4") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.10 (c (n "cameleon-device") (v "0.1.10") (d (list (d (n "cameleon-impl") (r "^0.1.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "0hgfmy09y2fv652bv1js2rrq5b0jiq3wkbgpw92zj9qflfg8nxx0") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.11 (c (n "cameleon-device") (v "0.1.11") (d (list (d (n "cameleon-impl") (r "^0.1.11") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "1dhf24bf8lsj0b96200z8inmdwrdwr374p92nq76sspkfrwmxfms") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

(define-public crate-cameleon-device-0.1.12 (c (n "cameleon-device") (v "0.1.12") (d (list (d (n "cameleon-impl") (r "^0.1.12") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rusb") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)))) (h "11rn19i6qxsldsh67b1jp6ri11i4163cjanbxs98zk60cfl5n42w") (f (quote (("libusb" "rusb" "libusb1-sys" "libc"))))))

