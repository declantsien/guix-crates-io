(define-module (crates-io ca me cameleon) #:use-module (crates-io))

(define-public crate-cameleon-0.1.0 (c (n "cameleon") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.0") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "0aynl6p63yjkcl8v0yn8avn676pjy59n6b7cg4aiywkk3fpwv07q") (f (quote (("libusb" "cameleon-device/libusb" "rusb" "libc" "libusb1-sys"))))))

(define-public crate-cameleon-0.1.1 (c (n "cameleon") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.0") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "16m5hn4a3p200v193vx2aassc4zszpbvai2i53cpf0sr86byf1zh") (f (quote (("libusb" "cameleon-device/libusb" "rusb" "libc" "libusb1-sys"))))))

(define-public crate-cameleon-0.1.2 (c (n "cameleon") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.1") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "0mgzzk54sz1wl95cc4hhxa1a2wqk5xgl52wh9r79bcvxhra564la") (f (quote (("libusb" "cameleon-device/libusb" "rusb" "libc" "libusb1-sys"))))))

(define-public crate-cameleon-0.1.3 (c (n "cameleon") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.1") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "libusb1-sys") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "rusb") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.9.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "0r2jsyckqm7vvls8mqx2jk3ipzc49gylzzn9pmlpmw3jk9cd7n8g") (f (quote (("libusb" "cameleon-device/libusb" "rusb" "libc" "libusb1-sys"))))))

(define-public crate-cameleon-0.1.4 (c (n "cameleon") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^0.5.0") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.4") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.5.12") (d #t) (k 0)))) (h "00gshry5ciaddmqinh51d9pm0b5xqm87vndyq10jlqyy5a4dx7kp") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.5 (c (n "cameleon") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.5") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "0i8r584fssscf0xk9jbaq6509pclqdh3srvws2d4nyz0q5a16rj3") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.6 (c (n "cameleon") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.6") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "1q9hr8gjch8yn7ni2agy58h8qwmpbwni2cbgxxax26yql81vw2vh") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.7 (c (n "cameleon") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.7") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "0w8sziwnngyrra415lihqizlnhfhpvyb3vmyhjg1wz5asvsdwhbc") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.8 (c (n "cameleon") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-std") (r "^1.9.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.8") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "0pa9pbyws2prfx134cgfinx6klpsrdl3zl894d7jhh1l3yfbhxs9") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.9 (c (n "cameleon") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-channel") (r "^1.7.0") (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.9") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.9") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "03yrkd82p652zvn9bfym531c1axwiv797nfpzln77l2zwrqw6q4v") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.10 (c (n "cameleon") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-channel") (r "^1.7.0") (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.10") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.10") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "0raw6mfzn1mhmlya9m93azqsn95q5db7gl3lz2ydz5q3ks4iplzn") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.11 (c (n "cameleon") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-channel") (r "^1.7.0") (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.11") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.11") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "1n10jy3n1dbnx1wpyn20sngdczd09dnhr097kv2zmpi9lpjqwgdd") (f (quote (("libusb" "cameleon-device/libusb"))))))

(define-public crate-cameleon-0.1.12 (c (n "cameleon") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-channel") (r "^1.7.0") (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.1") (d #t) (k 0)) (d (n "cameleon-device") (r "^0.1.12") (d #t) (k 0)) (d (n "cameleon-genapi") (r "^0.1.12") (d #t) (k 0)) (d (n "semver") (r "^1.0.0") (d #t) (k 0)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tracing") (r "^0.1.26") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.42") (d #t) (k 2)) (d (n "zip") (r "^0.6.0") (d #t) (k 0)))) (h "1yi386q5jy2xm9mfj640sw4f4803sifzap45gh4rzw9f6p2378ix") (f (quote (("libusb" "cameleon-device/libusb"))))))

