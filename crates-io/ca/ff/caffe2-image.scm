(define-module (crates-io ca ff caffe2-image) #:use-module (crates-io))

(define-public crate-caffe2-image-0.1.3-alpha.0 (c (n "caffe2-image") (v "0.1.3-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.3-alpha.0") (d #t) (k 0)))) (h "1sq3hvhps2ddmvz6fpi5jgn5hlndqpv5fn0kr6r46rb8i1g3fpvh")))

(define-public crate-caffe2-image-0.1.4-alpha.0 (c (n "caffe2-image") (v "0.1.4-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.4-alpha.0") (d #t) (k 0)))) (h "07i6fhjsjkhpng9gsynz3pqkpa5rgpyk055i20cvw9wxnc1s86yd")))

(define-public crate-caffe2-image-0.1.5-alpha.0 (c (n "caffe2-image") (v "0.1.5-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.5-alpha.0") (d #t) (k 0)))) (h "17sqs5l5nlsl65k7ancwaj13xl829r61ppnc84z4fi0k4b2i49sk")))

