(define-module (crates-io ca ff caffe2op-i8quantized) #:use-module (crates-io))

(define-public crate-caffe2op-i8quantized-0.1.4-alpha.0 (c (n "caffe2op-i8quantized") (v "0.1.4-alpha.0") (d (list (d (n "caffe2-context") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-types") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-conv") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-reshape") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-slice") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-transpose") (r "^0.1.4-alpha.0") (d #t) (k 0)))) (h "1jllz3hv4xk5bz5lx2zsxymsg5wh1mwlb8cgk4wfwgnsl805ka8g")))

(define-public crate-caffe2op-i8quantized-0.1.5-alpha.0 (c (n "caffe2op-i8quantized") (v "0.1.5-alpha.0") (d (list (d (n "caffe2-common") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-conv") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-reshape") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-slice") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-transpose") (r "^0.1.5-alpha.0") (d #t) (k 0)))) (h "190arlc730lplmcy2wm5mj02f9daw015dbf1n838l5km28dy4xzq")))

