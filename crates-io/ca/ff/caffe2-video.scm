(define-module (crates-io ca ff caffe2-video) #:use-module (crates-io))

(define-public crate-caffe2-video-0.1.3-alpha.0 (c (n "caffe2-video") (v "0.1.3-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.3-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.3-alpha.0") (d #t) (k 0)))) (h "1b3jsgx1xkfsdczbghyh88cpmhnh38vxdg5ssnvpk3cwrk6c9l6x")))

(define-public crate-caffe2-video-0.1.4-alpha.0 (c (n "caffe2-video") (v "0.1.4-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.4-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.4-alpha.0") (d #t) (k 0)))) (h "1jjj7wbn9sw0nb4fah54acsxidbljch62igs655yvizlkqpcilbm")))

(define-public crate-caffe2-video-0.1.5-alpha.0 (c (n "caffe2-video") (v "0.1.5-alpha.0") (d (list (d (n "caffe2-c10") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-context") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-db") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-imports") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-operator") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-tensor") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2-util") (r "^0.1.5-alpha.0") (d #t) (k 0)) (d (n "caffe2op-prefetch") (r "^0.1.5-alpha.0") (d #t) (k 0)))) (h "0i1nhd16x6c72hkj7v2847vwpcixwsm1wwjnfhbivmkrqbhvfbrh")))

