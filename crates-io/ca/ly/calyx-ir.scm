(define-module (crates-io ca ly calyx-ir) #:use-module (crates-io))

(define-public crate-calyx-ir-0.1.0 (c (n "calyx-ir") (v "0.1.0") (d (list (d (n "calyx-frontend") (r "^0.1.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "16gn468p0rhgn9zlg8w86a0n94fz4lahki9mmrx3040adx7hj08h")))

(define-public crate-calyx-ir-0.1.1 (c (n "calyx-ir") (v "0.1.1") (d (list (d (n "calyx-frontend") (r "^0.1.1") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.1.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "0vwzb0fq6vjgc7aim0va3lp327yln5c64bxhihy1q8p29lalvxa2")))

(define-public crate-calyx-ir-0.2.0 (c (n "calyx-ir") (v "0.2.0") (d (list (d (n "calyx-frontend") (r "^0.2.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "128bcmxdz246888zsvrykgwz2pyfzin123qqwhpn0n1cabfxn183")))

(define-public crate-calyx-ir-0.2.1 (c (n "calyx-ir") (v "0.2.1") (d (list (d (n "calyx-frontend") (r "^0.2.1") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "1v42r4r83x5lsq8in9cgx6kg995yk9xghdir9flhihmcypz9fkd4")))

(define-public crate-calyx-ir-0.3.0 (c (n "calyx-ir") (v "0.3.0") (d (list (d (n "calyx-frontend") (r "^0.3.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "1yvan24w789hrw6bkpvvdlyiwwsqbf6s58wndimd66ywhw8xrnac")))

(define-public crate-calyx-ir-0.4.0 (c (n "calyx-ir") (v "0.4.0") (d (list (d (n "calyx-frontend") (r "^0.4.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "1rsds1xmm61hfmzw1b6lsljz17hwlbh928y2j2x0szc41xavzfvx") (f (quote (("default")))) (s 2) (e (quote (("serialize" "serde/derive" "dep:serde_with" "calyx-utils/serialize" "calyx-frontend/serialize" "smallvec/serde"))))))

(define-public crate-calyx-ir-0.5.0 (c (n "calyx-ir") (v "0.5.0") (d (list (d (n "calyx-frontend") (r "^0.5.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "12pg2gjn9b24g058h42gb47vwrvznk3s2hv8d6v0n8nr6g5yl6m9") (f (quote (("default")))) (s 2) (e (quote (("serialize" "serde/derive" "dep:serde_with" "calyx-utils/serialize" "calyx-frontend/serialize" "smallvec/serde"))))))

(define-public crate-calyx-ir-0.6.0 (c (n "calyx-ir") (v "0.6.0") (d (list (d (n "calyx-frontend") (r "^0.6.0") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "0qlhiqvhmi05f30qbnx55gajkg6m0dn8axbxaa0qfxkam393iz5m") (f (quote (("default")))) (s 2) (e (quote (("serialize" "serde/derive" "dep:serde_with" "calyx-utils/serialize" "calyx-frontend/serialize" "smallvec/serde"))))))

(define-public crate-calyx-ir-0.6.1 (c (n "calyx-ir") (v "0.6.1") (d (list (d (n "calyx-frontend") (r "^0.6.1") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.6.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "1f82dsl39n9f7s459ck5y7pvh77fvsjskjciw5qa917lhmhbgv2k") (f (quote (("default")))) (s 2) (e (quote (("serialize" "serde/derive" "dep:serde_with" "calyx-utils/serialize" "calyx-frontend/serialize" "smallvec/serde"))))))

(define-public crate-calyx-ir-0.7.1 (c (n "calyx-ir") (v "0.7.1") (d (list (d (n "calyx-frontend") (r "^0.7.1") (d #t) (k 0)) (d (n "calyx-utils") (r "^0.7.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("matrix_graph"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "string-interner") (r "^0.14.0") (d #t) (k 0)))) (h "1wikk0r1h3j97lcm2c3qx4ds4q1sfb9wzlfr7c3w5azqqr9dawdc") (f (quote (("default")))) (s 2) (e (quote (("serialize" "serde/derive" "dep:serde_with" "calyx-utils/serialize" "calyx-frontend/serialize" "smallvec/serde"))))))

