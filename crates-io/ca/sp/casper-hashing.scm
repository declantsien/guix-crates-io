(define-module (crates-io ca sp casper-hashing) #:use-module (crates-io))

(define-public crate-casper-hashing-1.4.0 (c (n "casper-hashing") (v "1.4.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^1.0.0") (f (quote ("gens"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)))) (h "1mi8hcgiqp7in6sk5gjv9iy8aqnhrw7dybgxcxy2417lp2zis3vc") (y #t)))

(define-public crate-casper-hashing-1.4.1 (c (n "casper-hashing") (v "1.4.1") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^1.0.0") (f (quote ("gens"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)))) (h "163lklgs5afa7xm55vrgj4fvw5d2rhki5vaj47vfpyx2ki5gw0ah")))

(define-public crate-casper-hashing-1.4.2 (c (n "casper-hashing") (v "1.4.2") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^1.0.0") (f (quote ("gens"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "0zr6m5n1v41276cp2w0gq4xwn9xzyvxr0p6fvy1f7dfbyvj5y3dp")))

(define-public crate-casper-hashing-1.4.3 (c (n "casper-hashing") (v "1.4.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^1.0.0") (f (quote ("gens"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "1a37cssxfmmwvba56sbhjlwl1kgirhd5bq1kfdvnkb5brdvqzwas")))

(define-public crate-casper-hashing-1.4.4 (c (n "casper-hashing") (v "1.4.4") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^2.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "15vkcr1vzjfa31qv20fhlbxnv77ibwmkk9i0168qhcr3ar44flcg")))

(define-public crate-casper-hashing-2.0.0 (c (n "casper-hashing") (v "2.0.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^3.0.0") (f (quote ("datasize" "std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "14wjxbkjy7hb89gb3zsibhy27s077b3az7lbi0bv94i8y8azrjn9")))

(define-public crate-casper-hashing-3.0.0 (c (n "casper-hashing") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "base16") (r "^0.2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "blake2") (r "^0.9.0") (d #t) (k 0)) (d (n "casper-types") (r "^4.0.1") (f (quote ("datasize" "std"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.9") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (k 0)) (d (n "hex-buffer-serde") (r "^0.3.0") (d #t) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)))) (h "1q3sx295zj4hhgwdgcnipzsgb02lmm5vih9jdc6dlrwx2wzbca9c")))

