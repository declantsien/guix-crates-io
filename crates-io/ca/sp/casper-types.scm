(define-module (crates-io ca sp casper-types) #:use-module (crates-io))

(define-public crate-casper-types-0.1.0 (c (n "casper-types") (v "0.1.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.0") (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1jx59w55wnv99d6jmmnrca9rrd5jm2wrw9630fmqaz6g04cwz38x") (f (quote (("std" "base16/std" "serde/std" "serde_json/std") ("no-unstable-features") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.2.1 (c (n "casper-types") (v "0.2.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.0") (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0f8sc1ql9lpn85d0hnil0rfcazq6hvyivpmrxr0irq7088p5anah") (f (quote (("std" "base16/std" "serde/std" "serde_json/std" "schemars") ("no-unstable-features") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.3.1 (c (n "casper-types") (v "0.3.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.0") (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "165hf4siwwvxsh904yzjx9mfgsbrc3mx265jpfcasygbq5xykbzz") (f (quote (("std" "base16/std" "serde/std" "serde_json/std" "schemars") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.6.3 (c (n "casper-types") (v "0.6.3") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.4.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "15knp4dmp3255z1873hjajwfimgzd85lwfhc76dwpjxdrfpc2ffx") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc")))) (y #t)))

(define-public crate-casper-types-0.7.0 (c (n "casper-types") (v "0.7.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.4.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0md1x6q9aqlxmkppfqyi65inym6xwg29q4k5dln7x7xn1k73sfpb") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.7.5 (c (n "casper-types") (v "0.7.5") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.4.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0cknlm6bxk438nz96ykdrsx95a4844wa4d52dwhq7djh5vs3wpyj") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.7.6 (c (n "casper-types") (v "0.7.6") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("failure_derive"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.4.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1is73hpns4jrv1mrrs1am0m1bz3lk3ggsjjg4w8qfbm688xr0wxr") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars") ("gens" "std" "proptest/std") ("default" "base16/alloc" "serde/alloc" "serde_json/alloc"))))))

(define-public crate-casper-types-0.9.3 (c (n "casper-types") (v "0.9.3") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "01kya0cdnx16w4j90dgqpzc1gixy9gnk5v82h4cb7vwbjnhpwrd3") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-0.9.4 (c (n "casper-types") (v "0.9.4") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1xl4b0wlx53d0fp81qh8a8k5vhlbpkjcpilazcvsxvsbnn1pbb8q") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.0.0 (c (n "casper-types") (v "1.0.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1zif4lfmq5hznyi21kd9z0vzy4i4x1fsdzx8rkvqzrnn5bpjv0al") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.0.1 (c (n "casper-types") (v "1.0.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0rg272j225gxls48za5bk7qdi5rxp4hqjr09npkx4g0iwj6w10k5") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.1.0 (c (n "casper-types") (v "1.1.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0lf75s0gvf7k36c83sqwlycv4fj9prgjrcznya3lv9n07iw6ps2n") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc")))) (y #t)))

(define-public crate-casper-types-1.1.1 (c (n "casper-types") (v "1.1.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.8.3") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1n26kyai17lbxk8b5mnxzyqkn15rilgmlmsaazp23cf19fk9i3bk") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.2.0 (c (n "casper-types") (v "1.2.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "09cvs3kylgladafnjbvjlpir7fq0izx9jvy22rf2qydpxbn1q1gs") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.2.1 (c (n "casper-types") (v "1.2.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1bn5ivnq4n7mwxvmvqcjnwvvjj4m20lh0n2kjlm945c57kjkqx56") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.3.0 (c (n "casper-types") (v "1.3.0") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0klzsgzpdaxh9ad16cggkrv65q9k1q1ic9qddj9zzn7gnqi5991v") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.3.1 (c (n "casper-types") (v "1.3.1") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1hzfgqdjkhcy6pngx5hbpn1yq6gsl22hd0y25splwawjw9wgr5b8") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.3.2 (c (n "casper-types") (v "1.3.2") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1clp1sc5apqypwv42raa20qvrkc1mac258qv81imsa4h0c5p36z5") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.3.3 (c (n "casper-types") (v "1.3.3") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "08vws1pbdy0h1nyh9s4cx7qn3vbvrxyppfg6hx5c3kx0p0p1cf3l") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.3.4 (c (n "casper-types") (v "1.3.4") (d (list (d (n "base16") (r "^0.2.1") (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (k 0)) (d (n "displaydoc") (r "^0.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (o #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1fy858zacsx8cmsj6a2yr57vawk74ywdqr9v4aahq91p5xv84w7l") (f (quote (("std" "base16/std" "base64/std" "ed25519-dalek/std" "ed25519-dalek/serde" "hex/std" "k256/std" "serde/std" "serde_json/std" "schemars" "thiserror") ("gens" "std" "proptest/std") ("default" "base16/alloc" "hex/alloc" "serde/alloc" "serde_json/alloc" "displaydoc"))))))

(define-public crate-casper-types-1.4.0 (c (n "casper-types") (v "1.4.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "12i7bf5lxx8qs6d59226sspp14fwbn9bh82c20kar79yi92vya0d") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest")))) (y #t)))

(define-public crate-casper-types-1.4.1 (c (n "casper-types") (v "1.4.1") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "^0.8.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1v81iv04azbxr618x6mrviyjmzlm18523nqh9hx5jk2v2w62xd0j") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.4.2 (c (n "casper-types") (v "1.4.2") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.29") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0rdajv4shh4di74117dx940n28452gmj1m9hjka91aw9qx2rfca9") (f (quote (("std" "thiserror") ("json-schema" "once_cell" "schemars") ("gens" "proptest")))) (y #t)))

(define-public crate-casper-types-1.4.3 (c (n "casper-types") (v "1.4.3") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1f6qwpdfa51ncx8bgmqxc7zr0mhinphdrr91rgag5jjpmxkab8ka") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.4.4 (c (n "casper-types") (v "1.4.4") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "00yqwscgbspfhs5w2y0a4j62gsl5bw9c06my58nhh44hzzjabxs4") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.4.5 (c (n "casper-types") (v "1.4.5") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1pb74gxx7zjwy068gz6xn9g9bn88plm3mpf5g9qc5fgs2m5f7sik") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.4.6 (c (n "casper-types") (v "1.4.6") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "007jbc987l062768ksb2hxh39kj8niq7w2q4c2dks1adsiv1gnp9") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.5.0 (c (n "casper-types") (v "1.5.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.21") (f (quote ("derive"))) (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "133cl6akinnqycn3rc169gl99nk9djjqv8r1s17i110p7nhq4gm1") (f (quote (("std") ("json-schema" "once_cell" "schemars") ("gens" "proptest"))))))

(define-public crate-casper-types-1.6.0 (c (n "casper-types") (v "1.6.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "humantime") (r "^2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 2)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "sha256" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.32") (d #t) (k 2)) (d (n "pem") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "untrusted") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1kxyfwn0vl9zlj38r6rk898r2f3a1w2lsyqa8rrbqrspqn8br21j") (f (quote (("testing" "proptest" "proptest-derive" "rand_pcg" "strum") ("std" "derp" "getrandom/std" "humantime" "once_cell" "pem" "serde_json/preserve_order" "thiserror" "untrusted") ("json-schema" "once_cell" "schemars") ("gens" "testing")))) (y #t)))

(define-public crate-casper-types-2.0.0 (c (n "casper-types") (v "2.0.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "humantime") (r "^2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 2)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "sha256" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.10.32") (d #t) (k 2)) (d (n "pem") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.117") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "untrusted") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "105dij0b5c0sc89vjwqc9k37z821x6rzxinkn9baw6gn5wbzlh0f") (f (quote (("testing" "proptest" "proptest-derive" "rand_pcg" "strum") ("std" "derp" "getrandom/std" "humantime" "once_cell" "pem" "serde_json/preserve_order" "thiserror" "untrusted") ("json-schema" "once_cell" "schemars") ("gens" "testing"))))))

(define-public crate-casper-types-3.0.0 (c (n "casper-types") (v "3.0.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "humantime") (r "^2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 2)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "sha256" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 2)) (d (n "openssl") (r "^0.10.32") (d #t) (k 2)) (d (n "pem") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "untrusted") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1rfyddsvlg0z9kpb024kwb77cansnhn84lba40ryfv1lxbvglr8x") (f (quote (("testing" "proptest" "proptest-derive" "rand_pcg" "strum") ("std" "derp" "getrandom/std" "humantime" "once_cell" "pem" "serde_json/preserve_order" "thiserror" "untrusted") ("json-schema" "once_cell" "schemars") ("gens" "testing"))))))

(define-public crate-casper-types-4.0.0 (c (n "casper-types") (v "4.0.0") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.0") (f (quote ("rand" "u64_backend"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "humantime") (r "^2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 2)) (d (n "k256") (r "^0.7.2") (f (quote ("ecdsa" "sha256" "zeroize"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 2)) (d (n "openssl") (r "^0.10.32") (d #t) (k 2)) (d (n "pem") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "untrusted") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "025m1ia51r64xsabf9zrbmy331lg1abb3mrbr7l3q2c8k8jbv0b4") (f (quote (("testing" "proptest" "proptest-derive" "rand_pcg" "strum") ("std" "derp" "getrandom/std" "humantime" "once_cell" "pem" "serde_json/preserve_order" "thiserror" "untrusted") ("json-schema" "once_cell" "schemars") ("gens" "testing"))))))

(define-public crate-casper-types-4.0.1 (c (n "casper-types") (v "4.0.1") (d (list (d (n "base16") (r "^0.2.1") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.13.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.9.0") (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "datasize") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0.0") (f (quote ("alloc" "zeroize"))) (k 0)) (d (n "getrandom") (r "^0.2.0") (f (quote ("rdrand"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.0") (d #t) (k 2)) (d (n "hex") (r "^0.4.2") (f (quote ("alloc"))) (k 0)) (d (n "hex_fmt") (r "^0.3.0") (d #t) (k 0)) (d (n "humantime") (r "^2") (o #t) (d #t) (k 0)) (d (n "humantime") (r "^2") (d #t) (k 2)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "sha256"))) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("alloc"))) (k 0)) (d (n "num-derive") (r "^0.3.0") (k 0)) (d (n "num-integer") (r "^0.1.42") (k 0)) (d (n "num-rational") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2.10") (k 0)) (d (n "once_cell") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 2)) (d (n "openssl") (r "^0.10.32") (d #t) (k 2)) (d (n "pem") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "pem") (r "^0.8.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-attr-macro") (r "^1.0.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "proptest-derive") (r "^0.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_pcg") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_pcg") (r "^0.3.0") (d #t) (k 2)) (d (n "schemars") (r "=0.8.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("alloc" "derive"))) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.59") (f (quote ("alloc"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 2)) (d (n "uint") (r "^0.9.0") (k 0)) (d (n "untrusted") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.7.1") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (o #t) (d #t) (k 0)))) (h "06y3xqgciblbng1b253xxna2l185zrpyy79zvvlhzsdsgddm408y") (f (quote (("testing" "proptest" "proptest-derive" "rand_pcg" "strum") ("std" "derp" "getrandom/std" "humantime" "once_cell" "pem" "serde_json/preserve_order" "thiserror" "untrusted") ("json-schema" "once_cell" "schemars") ("gens" "testing"))))))

