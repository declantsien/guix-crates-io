(define-module (crates-io ca ss cassandra-cpp) #:use-module (crates-io))

(define-public crate-cassandra-cpp-0.8.2 (c (n "cassandra-cpp") (v "0.8.2") (d (list (d (n "cassandra-cpp-sys") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^1") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "ip") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "0w455xh49f5pjv8d4rmjkb9bw4f3zqawdk973zk2gss5zqwrssry")))

(define-public crate-cassandra-cpp-0.10.0 (c (n "cassandra-cpp") (v "0.10.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^1") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "ip") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "1xn4ycbjs3ff9dirbcxijwy91qv0335gnywwbxq20bwgmp2gml0z")))

(define-public crate-cassandra-cpp-0.10.1 (c (n "cassandra-cpp") (v "0.10.1") (d (list (d (n "cassandra-cpp-sys") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^1") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "0cls5zs9fm18xn1dfhwg0hz3vcd0srgk70c74g3i98a5n9k4i4gl")))

(define-public crate-cassandra-cpp-0.10.2 (c (n "cassandra-cpp") (v "0.10.2") (d (list (d (n "cassandra-cpp-sys") (r "^0.11") (d #t) (k 0)) (d (n "chrono") (r "^0.2") (d #t) (k 0)) (d (n "clap") (r "^1") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^0.2") (d #t) (k 0)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.1") (d #t) (k 0)))) (h "0f560vxh9zvx32ijms9cbaj0n3kw5v8z78bgbm3p3larh8f5dxij")))

(define-public crate-cassandra-cpp-0.11.0 (c (n "cassandra-cpp") (v "0.11.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.11") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "01zydn26hd7xabv2dn671jyfjzyaf849l2jf0zwg2mixp2cflfy4")))

(define-public crate-cassandra-cpp-0.12.0 (c (n "cassandra-cpp") (v "0.12.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "0z66dl6ffyfi9lsl95441jj1mxw6g6c18ghb6ls14h784cyv0acm")))

(define-public crate-cassandra-cpp-0.13.0 (c (n "cassandra-cpp") (v "0.13.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1w9d35zrba20d2l7m52bnwjbwvnrqhh7aa9gz94a2y1wpi7dnbab")))

(define-public crate-cassandra-cpp-0.13.1 (c (n "cassandra-cpp") (v "0.13.1") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1gv8764vb5yycyx5zq4cw7ck23qpm5kv2bpx015ab9wzl4zcijjd")))

(define-public crate-cassandra-cpp-0.13.2 (c (n "cassandra-cpp") (v "0.13.2") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1fa3srzkmp33rvx3svsp2mm7bbj208r13wk5s1jlivn8vz2wz1ni")))

(define-public crate-cassandra-cpp-0.14.0 (c (n "cassandra-cpp") (v "0.14.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1la6y0vqdy5ivfn38j9p862lzhvzf9fmyjl0618zayx7ly4ci9aj")))

(define-public crate-cassandra-cpp-0.14.1 (c (n "cassandra-cpp") (v "0.14.1") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "123q3vjvan184782j0cj41rmcqjs6wsgvn0vv21wzdxahwwn4raq")))

(define-public crate-cassandra-cpp-0.15.0 (c (n "cassandra-cpp") (v "0.15.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "13faspb7wckx0ljda2dc4cdw9wbi0zxx6vcdg9hfcz9hfj6w7nbd")))

(define-public crate-cassandra-cpp-0.15.1 (c (n "cassandra-cpp") (v "0.15.1") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^1") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "0i3d70kq4drh84xi4a5lpfz1mfq8905ssz0x5fzd2n10adsdyrq7")))

(define-public crate-cassandra-cpp-0.16.0 (c (n "cassandra-cpp") (v "0.16.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0bfkjwkpiyy4ph1vsbfsl73csfh0p1kryhmjcvv9f4i2dkiwhdq3")))

(define-public crate-cassandra-cpp-0.17.0 (c (n "cassandra-cpp") (v "0.17.0") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "decimal") (r "^2") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0krjqcr9nci87mjvff420wvig6kh8i7s84q6rbwd3pcmij4i8xj2")))

(define-public crate-cassandra-cpp-0.17.1 (c (n "cassandra-cpp") (v "0.17.1") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "clippy") (r "^0.0") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "04n79g0ngmb903l1nywi7hvvprs513y8br2z16fji6c5i0csq8kh")))

(define-public crate-cassandra-cpp-0.17.2 (c (n "cassandra-cpp") (v "0.17.2") (d (list (d (n "cassandra-cpp-sys") (r "^0.12") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "09czq39q42wyiy051yvgp5xrbf7789kc1g1cp41hjmhgvwcrk47x")))

(define-public crate-cassandra-cpp-1.0.0 (c (n "cassandra-cpp") (v "1.0.0") (d (list (d (n "cassandra-cpp-sys") (r "^1.0.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0xw698rds8hhnvnqmdc62hdsy12ym3ml7bcmhc2m12l8xws1ziss")))

(define-public crate-cassandra-cpp-1.1.0 (c (n "cassandra-cpp") (v "1.1.0") (d (list (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "0v5f3cjddg2nm7gdi54ldyvpgqlx2y80qnnx4p0ahnindblxk9fg") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default"))))))

(define-public crate-cassandra-cpp-1.2.0 (c (n "cassandra-cpp") (v "1.2.0") (d (list (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "0kfkvrh9vp01zsg57s0xx5xc85dbj5kc21v447zh41yq1gw2bhka") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default" "slog" "log"))))))

(define-public crate-cassandra-cpp-2.0.0 (c (n "cassandra-cpp") (v "2.0.0") (d (list (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "0ir2gy7s2w1pzhjdc80r8fw51x0bb9az8s28dykvwdsk5xh9qyw7") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default" "slog" "log"))))))

(define-public crate-cassandra-cpp-2.0.1 (c (n "cassandra-cpp") (v "2.0.1") (d (list (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "1p98px52xv9ng4i4v61gmi9zhilkfbf01zpwnd7mbffiv2ydzyy2") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default" "slog" "log"))))))

(define-public crate-cassandra-cpp-3.0.0 (c (n "cassandra-cpp") (v "3.0.0") (d (list (d (n "bigdecimal") (r "^0.4.2") (d #t) (k 0)) (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "1k99ff7acl7ab6s00c4cna9c6jc3b67071jdq17idzk5vvgzh63y") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default" "slog" "log"))))))

(define-public crate-cassandra-cpp-3.0.1 (c (n "cassandra-cpp") (v "3.0.1") (d (list (d (n "bigdecimal") (r "^0.4.2") (d #t) (k 0)) (d (n "cassandra-cpp-sys") (r "^1.1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "logtest") (r "^2.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "slog") (r "^2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "rt-multi-thread" "macros" "test-util"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "152qq0h3x44v600glra5vnsqmrcwp2r9ym95nvr7w9x6mvh7gvf9") (f (quote (("early_access_min_tls_version" "cassandra-cpp-sys/early_access_min_tls_version") ("default" "slog" "log"))))))

