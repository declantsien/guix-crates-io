(define-module (crates-io ca rb carbide_core) #:use-module (crates-io))

(define-public crate-carbide_core-0.70.0 (c (n "carbide_core") (v "0.70.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "carbide_derive") (r "^0.70") (d #t) (k 0)) (d (n "copypasta") (r "^0.6") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lyon") (r "^0.17.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "pistoncore-input") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ron") (r "^0.6.2") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.6") (d #t) (k 0)))) (h "0dcbpcbaiwlqwr1ixi73zjahclmcq6hb5nxscpyp4msqiy7vhkrv") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("stdweb" "instant/stdweb"))))))

(define-public crate-carbide_core-0.70.1 (c (n "carbide_core") (v "0.70.1") (d (list (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "carbide_derive") (r "^0.70") (d #t) (k 0)) (d (n "copypasta") (r "^0.6") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "lyon") (r "^0.17.3") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "pistoncore-input") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ron") (r "^0.6.2") (d #t) (k 0)) (d (n "rusttype") (r "^0.8") (f (quote ("gpu_cache"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.6") (d #t) (k 0)))) (h "0qazgkhhrl9bxw9c6ibgxasf957xp58fv1nakn4aky0dv0vn9mkj") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("stdweb" "instant/stdweb"))))))

