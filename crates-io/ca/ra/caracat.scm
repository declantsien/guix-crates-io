(define-module (crates-io ca ra caracat) #:use-module (crates-io))

(define-public crate-caracat-1.0.0 (c (n "caracat") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2.6") (d #t) (k 0)) (d (n "csv") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "pnet") (r "^0.33.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "libm") (r "^0.2.6") (d #t) (k 2)) (d (n "permutation_iterator") (r "^0.1.2") (d #t) (k 2)))) (h "0w2ifzn5djb4ik8w1qnxg4fgsbirsvq3kls10sdvwr39kgzjr6jb") (f (quote (("pkg-config" "zstd/pkg-config"))))))

