(define-module (crates-io fr os frost-ristretto255) #:use-module (crates-io))

(define-public crate-frost-ristretto255-0.1.0 (c (n "frost-ristretto255") (v "0.1.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.1.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0s3v3kfmksp9wkg9sgwx8pgs6bkd6z07fk2j4y1ycw8rwb3zmpak") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.2.0 (c (n "frost-ristretto255") (v "0.2.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.2.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0vyp42x8kbd9nim4hxls17vaqcn66d3lcg3vvl2hkfzx8g4vzyqm") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.3.0 (c (n "frost-ristretto255") (v "0.3.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.3.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0iqciki1xw6zhh2vxayhq1cxyrzhpg7vhnkgma9mx1xki4nq9c1s") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.4.0 (c (n "frost-ristretto255") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.4.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1xnyyv114xhl6ca026qss197z4p132p751xp56qg8wlgpjz42zqp") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.5.0 (c (n "frost-ristretto255") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^4.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.5.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1hvzrik3y0iwwp840xrl4m14p7g2k1nsja4kpq2d6hsi6qlcnhgv") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.6.0 (c (n "frost-ristretto255") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.3") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "frost-core") (r "^0.6.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1drf70dhxbycmn8lr9bdscmkym4vndpjpx8v7zhhjbjyajmb6hjy") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-ristretto255-0.7.0 (c (n "frost-ristretto255") (v "0.7.0") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.0") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "149i9v4y4akz9sc0jwkcv0brnmxw0gvv9jlgwrsfqjjnpdbafhn0") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization"))))))

(define-public crate-frost-ristretto255-1.0.0-rc.0 (c (n "frost-ristretto255") (v "1.0.0-rc.0") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.1") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "16sqnv073gz033gk4nwm4wcxcicgj8nj314rcw2c08p8mdz1vyk9") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

(define-public crate-frost-ristretto255-1.0.0 (c (n "frost-ristretto255") (v "1.0.0") (d (list (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1v4z6mf91crw8xldlyczadq26nalmx1f8pjhhb6z1szcbs9lrk6c") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

