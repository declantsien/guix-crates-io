(define-module (crates-io fr os frost-p256) #:use-module (crates-io))

(define-public crate-frost-p256-0.1.0 (c (n "frost-p256") (v "0.1.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.1.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1igmnh8k6b4aziyr8n8gkv7nl11c5nnnrxpqpnq1skyd880n42hx") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-p256-0.2.0 (c (n "frost-p256") (v "0.2.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.2.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0pq1gb5h1r3igjacjqf2nmmrmm1ak6vlm22fnj50vz1g7h7wzhd4") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-p256-0.3.0 (c (n "frost-p256") (v "0.3.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.3.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1k4s8b78n5q92ab21d92csr159r3x0p3k4k9gzvaw032016l76cr") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-p256-0.4.0 (c (n "frost-p256") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.4.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0vngsvr28y9m5ldxjxmvfsrsggrc3zj9j39x4d6826k8v0xmd30j") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-p256-0.5.0 (c (n "frost-p256") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^4.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.5.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0dks1n08g2s6h19mcbklp4c49crrygx3j72h38pbdi9lcn0gjqvf") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-p256-0.6.0 (c (n "frost-p256") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "frost-core") (r "^0.6.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1lai2s4k1ci7ahjjbchm57044xsx1zhyyz23sm6l36vpwfq82zg5") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-p256-0.7.0 (c (n "frost-p256") (v "0.7.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "04qvv5ki7wb4yk3paqgzlkkzlla38x4rp1gjk9v8k2wnrcjbrqn6") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization"))))))

(define-public crate-frost-p256-1.0.0-rc.0 (c (n "frost-p256") (v "1.0.0-rc.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0rvigv8wir0yhabzfjswiy123xh74c34bqzgdfdpbafwd5jwn91c") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

(define-public crate-frost-p256-1.0.0 (c (n "frost-p256") (v "1.0.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "p256") (r "^0.13.0") (f (quote ("hash2curve"))) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1jbyivps8l247cjb1cnzakn9xhkjm3yf9p5k7rymmnrfaxi042a6") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

