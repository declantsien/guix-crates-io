(define-module (crates-io fr os frost-ed25519) #:use-module (crates-io))

(define-public crate-frost-ed25519-0.1.0 (c (n "frost-ed25519") (v "0.1.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.1.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1jp5mxyz0mrmzxyc4zi22gs6crhw6kvvmaf4h71xj8jr96gbw30h") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.2.0 (c (n "frost-ed25519") (v "0.2.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.2.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1ly86jh8c9rfrgdv0sfdbvc7ccd7n6j7mdd6hfv218v8qa3bb461") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.3.0 (c (n "frost-ed25519") (v "0.3.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.3.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "06nxx2hl2nbivmplp6s8n45hncjxdijxa4nrr3v0b4lf3n1yljdp") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.4.0 (c (n "frost-ed25519") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.4.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1cp4wq8rskkcqbja4aipra0ak6srq40blyi4vscqzvsyfr467x94") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.5.0 (c (n "frost-ed25519") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^4.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.5.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1awya4avr380bm47bm7lwhbp1ffrrrvk7rj74rlwm5dg3lvaprjk") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.6.0 (c (n "frost-ed25519") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.3") (f (quote ("serde" "rand_core"))) (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "frost-core") (r "^0.6.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1lgkhzgmaqqx848ia20qpsi5nnyg429rwzdmy8n1w0yqc0hnb7f6") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-ed25519-0.7.0 (c (n "frost-ed25519") (v "0.7.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.0") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.7.0") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "15zsmg336ssn3pygi2k3lmwm1gw6d13y4q63q08jpzx5cidsv5nk") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization"))))))

(define-public crate-frost-ed25519-1.0.0-rc.0 (c (n "frost-ed25519") (v "1.0.0-rc.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.1") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0wjkmsbxdk8nhrpk1b446ydzd34lwgh9giwmskpgdacd9zjkl0gw") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

(define-public crate-frost-ed25519-1.0.0 (c (n "frost-ed25519") (v "1.0.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.1.2") (f (quote ("rand_core"))) (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1sk825zjdgzjhmw8a6b44i8w202dlknw6s6bsqznc90hpijy8ndk") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

