(define-module (crates-io fr os frost-core) #:use-module (crates-io))

(define-public crate-frost-core-0.1.0 (c (n "frost-core") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (f (quote ("serde"))) (d #t) (k 2)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "04b4bn0c3bhpcknfym2yq8swfzpry5cvp5y0q0s5jcbnqkav67zr") (f (quote (("test-impl" "proptest" "proptest-derive" "serde_json" "criterion") ("nightly") ("internals") ("default"))))))

(define-public crate-frost-core-0.2.0 (c (n "frost-core") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "183igjblv64cbd2my8zmrhl41642qk2cmwxmsb4p777kkkixzc85") (f (quote (("test-impl" "proptest" "proptest-derive" "serde_json" "criterion") ("nightly") ("internals") ("default"))))))

(define-public crate-frost-core-0.3.0 (c (n "frost-core") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "1lyfxyjlb8wfsz30dcw6xiv3mmpzhfd3hy741m13jn96n8392cp2") (f (quote (("test-impl" "proptest" "proptest-derive" "serde_json" "criterion") ("nightly") ("internals") ("default"))))))

(define-public crate-frost-core-0.4.0 (c (n "frost-core") (v "0.4.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "1p02rfd62ny6ymn78anr82f567ppdjycfx5bajplm4g8xqi2pznj") (f (quote (("test-impl" "proptest" "proptest-derive" "serde_json" "criterion") ("nightly") ("internals") ("default"))))))

(define-public crate-frost-core-0.5.0 (c (n "frost-core") (v "0.5.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "=4.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "08xaaxvmi66n9wfn634y47k4zxdagh7vrpm5zc083hqhqiigy486") (f (quote (("test-impl" "proptest" "proptest-derive" "serde_json" "criterion") ("nightly") ("internals") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serdect"))))))

(define-public crate-frost-core-0.6.0 (c (n "frost-core") (v "0.6.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.0.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "0lhifb7p2l2w6za3gf1889q8k6w9qng7rr1p4nacflp3jll3vdqn") (f (quote (("test-impl" "proptest" "serde_json" "criterion") ("nightly") ("internals") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serdect"))))))

(define-public crate-frost-core-0.7.0 (c (n "frost-core") (v "0.7.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "const-crc32") (r "^1.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "066ds8bqz381x677ww3g07jd27xbjsmiv8d9vp7a1ghrgrrivdp3") (f (quote (("test-impl" "proptest" "serde_json" "criterion") ("internals") ("default" "serialization")))) (s 2) (e (quote (("serialization" "serde" "dep:postcard") ("serde" "dep:serde" "dep:serdect"))))))

(define-public crate-frost-core-1.0.0-rc.0 (c (n "frost-core") (v "1.0.0-rc.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "const-crc32") (r "^1.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "1cibbc67w5377cmyk9pv7nv23wrn6vpjxps664mybrr0hri35rza") (f (quote (("test-impl" "proptest" "serde_json" "criterion") ("internals") ("default" "serialization" "cheater-detection") ("cheater-detection")))) (s 2) (e (quote (("serialization" "serde" "dep:postcard") ("serde" "dep:serde" "dep:serdect"))))))

(define-public crate-frost-core-1.0.0 (c (n "frost-core") (v "1.0.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "const-crc32") (r "^1.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "debugless-unwrap") (r "^0.0.4") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serdect") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "visibility") (r "^0.1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.4") (f (quote ("derive"))) (k 0)))) (h "0d7869611l13d1hawm8lyj374sjak3j26jzj1lb3sq7i4l32imj5") (f (quote (("test-impl" "proptest" "serde_json" "criterion") ("internals") ("default" "serialization" "cheater-detection") ("cheater-detection")))) (s 2) (e (quote (("serialization" "serde" "dep:postcard") ("serde" "dep:serde" "dep:serdect"))))))

