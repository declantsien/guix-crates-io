(define-module (crates-io fr os frost-secp256k1) #:use-module (crates-io))

(define-public crate-frost-secp256k1-0.1.0 (c (n "frost-secp256k1") (v "0.1.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.1.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "1mnlaxa3cycl90kgjf9dxrnrlwp4f3rz6c8vf56rvqkjlchdr5z7") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.2.0 (c (n "frost-secp256k1") (v "0.2.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.2.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0xfn7hbf5idgvy4vf3l716dv8h4q2wrv74m3fxj734wsn5gpyihk") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.3.0 (c (n "frost-secp256k1") (v "0.3.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.3.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "13n9fh1mm2kb4k9sprf6jr7lazg3n5h9v20m86m1r6rxxlznfban") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.4.0 (c (n "frost-secp256k1") (v "0.4.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^3.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.4.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "09h1xydhbwdwqw8amccr8dmyhl04c6yr11fjlj8kqnnwys08vm4a") (f (quote (("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.5.0 (c (n "frost-secp256k1") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 2)) (d (n "ed25519-zebra") (r "^4.0.0") (d #t) (k 2)) (d (n "frost-core") (r "^0.5.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "08phmjc21p4wy8rn7j3acfnkgy4dw6183anlndgq18f7r28k1gmh") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.6.0 (c (n "frost-secp256k1") (v "0.6.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "frost-core") (r "^0.6.0") (f (quote ("test-impl"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "0fjpzihwr4597mq4w430sawlfy18mqlcajpsrqqxxr46q2rfxzwn") (f (quote (("serde" "frost-core/serde") ("nightly") ("default"))))))

(define-public crate-frost-secp256k1-0.7.0 (c (n "frost-secp256k1") (v "0.7.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (d #t) (k 0)) (d (n "frost-core") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^0.7.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "146g2zjn9rikbf3v8349z12rqp0h6gql44fdm0djw2r9b0s28hzx") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization"))))))

(define-public crate-frost-secp256k1-1.0.0-rc.0 (c (n "frost-secp256k1") (v "1.0.0-rc.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0-rc.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "07hapkmrlwn5l6cbmbfjjrlv7wainq80hvgvb9r048g7azvjbd0q") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

(define-public crate-frost-secp256k1-1.0.0 (c (n "frost-secp256k1") (v "1.0.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "document-features") (r "^0.2.7") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-core") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "frost-rerandomized") (r "^1.0.0") (d #t) (k 0)) (d (n "frost-rerandomized") (r "^1.0.0") (f (quote ("test-impl"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "k256") (r "^0.13.0") (f (quote ("arithmetic" "expose-field" "hash2curve"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)))) (h "06x48glxdd7afxp49jhmdymiz200y2idqmjgwipmk4mpyznxj5h2") (f (quote (("serialization" "serde" "frost-core/serialization") ("serde" "frost-core/serde") ("nightly") ("default" "serialization" "cheater-detection") ("cheater-detection" "frost-core/cheater-detection"))))))

