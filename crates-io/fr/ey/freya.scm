(define-module (crates-io fr ey freya) #:use-module (crates-io))

(define-public crate-freya-0.1.0 (c (n "freya") (v "0.1.0") (h "1sl2xbqnb6wzsqmc6vx0fq6a62viysfd1yj4l89icdgaak9k6xab")))

(define-public crate-freya-0.1.1 (c (n "freya") (v "0.1.1") (h "0mwmk3nkcd62av0wmb58r4mvrn0kfq6z0gbklx6l4294y2fklya0")))

(define-public crate-freya-0.1.2 (c (n "freya") (v "0.1.2") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg" "gl" "textlayout" "svg" "x11" "wayland"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0xaac397y0nqkr01mal5idya53pppb4nj2nahmphg5z43zn4bwml") (f (quote (("use_camera" "freya-hooks/use_camera")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.3 (c (n "freya") (v "0.1.3") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg" "gl" "textlayout" "svg" "x11" "wayland"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "1j4z827ajgzwh0wmj9s2qs0fls3xiqdxldrs2s3krh69i8qx52pn") (f (quote (("use_camera" "freya-hooks/use_camera")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.4 (c (n "freya") (v "0.1.4") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0hz77p96n34nrmq6p92nwcm71p69i5ick7rx99lsf0hygzzh1hks") (f (quote (("use_camera" "freya-hooks/use_camera")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.5 (c (n "freya") (v "0.1.5") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0csf3gyla7lmskmyjdq86cj9crkgjn1ripfx0ygqrlc083g5c3hz") (f (quote (("use_camera" "freya-hooks/use_camera") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.6 (c (n "freya") (v "0.1.6") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "02y54k73ikqqfyqpzy2rrikgiy1av8nnhb61xgrwlbs8nwyqg04v") (f (quote (("use_camera" "freya-hooks/use_camera") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.7 (c (n "freya") (v "0.1.7") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "1l7gvh9jz2l3bvv9xqkf9gfdaq8xrqfyb1z2wk7y78msm38nk4j3") (f (quote (("use_camera" "freya-hooks/use_camera") ("skia-engine" "freya-engine/skia-engine")))) (y #t) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.1.8 (c (n "freya") (v "0.1.8") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.4") (f (quote ("file_watcher"))) (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "1jvvg03fb46sbf16jz2irv42ap49zrkx4g6q77hhlz472jm7qzd7") (f (quote (("use_camera" "freya-hooks/use_camera") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools" "freya-dom/shared"))))))

(define-public crate-freya-0.2.0 (c (n "freya") (v "0.2.0") (d (list (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5") (f (quote ("file_watcher"))) (k 0)) (d (n "dioxus-signals") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-components") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.2") (d #t) (k 0)) (d (n "freya-testing") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "1hg3qixjxmpcnaz15zs3l1x2l0ng1ggzfyyfnmggcxgrhlwjal04") (f (quote (("use_camera" "freya-hooks/use_camera") ("mocked-engine-development" "freya-engine/mocked-engine") ("hot-reload" "freya-renderer/hot-reload" "dioxus/hot-reload") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools"))))))

(define-public crate-freya-0.2.1 (c (n "freya") (v "0.2.1") (d (list (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5") (f (quote ("file_watcher"))) (k 0)) (d (n "dioxus-signals") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-components") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.2") (d #t) (k 0)) (d (n "freya-testing") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "1bgap1ssgjnjg4pi7snz817ay3kx2c7ds8gwryq05hm819xs30qi") (f (quote (("use_camera" "freya-hooks/use_camera") ("mocked-engine-development" "freya-engine/mocked-engine") ("hot-reload" "freya-renderer/hot-reload" "dioxus/hot-reload") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools"))))))

(define-public crate-freya-0.2.2 (c (n "freya") (v "0.2.2") (d (list (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-hot-reload") (r "^0.5") (f (quote ("file_watcher"))) (k 0)) (d (n "dioxus-signals") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-components") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-devtools") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "freya-renderer") (r "^0.2") (d #t) (k 0)) (d (n "freya-testing") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "0mav67carwckkg0wviys5nxi5hwgqz4xqgwq1sf6fzlifpkq3d38") (f (quote (("use_camera" "freya-hooks/use_camera") ("mocked-engine-development" "freya-engine/mocked-engine") ("hot-reload" "freya-renderer/hot-reload" "dioxus/hot-reload") ("default" "freya-engine/skia-engine")))) (s 2) (e (quote (("log" "dep:tracing" "dep:tracing-subscriber") ("devtools" "dep:freya-devtools"))))))

