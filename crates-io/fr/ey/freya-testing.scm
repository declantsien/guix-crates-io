(define-module (crates-io fr ey freya-testing) #:use-module (crates-io))

(define-public crate-freya-testing-0.1.0 (c (n "freya-testing") (v "0.1.0") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 2)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0hqz32fr1mwhmdln2c7h1mldwqslaz8g90pbar4cj9r6r50h21g2")))

(define-public crate-freya-testing-0.1.1 (c (n "freya-testing") (v "0.1.1") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 2)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "11s4x0hc1yf9r5jvc3jdq6623l2scwv5f078n73wryjk0p0fg5qs")))

(define-public crate-freya-testing-0.1.2 (c (n "freya-testing") (v "0.1.2") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 2)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0ariainha5wryipk9lrjlp1kkshdqs6523rnip4i73544jwdv75w") (f (quote (("default" "freya-engine/skia-engine"))))))

(define-public crate-freya-testing-0.1.3 (c (n "freya-testing") (v "0.1.3") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 2)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-components") (r "^0.1") (d #t) (k 2)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-layout") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "09s00iqql52r0d84i552aps5lgcwxf9d05wp2dggpfkwd8pvq30l") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-testing-0.2.0 (c (n "freya-testing") (v "0.2.0") (d (list (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 2)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-components") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "0bl427szbl5cp0ppckq2w8w3vsx3wwrl3rcgkci24hajdbb8a1f4") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-testing-0.2.1 (c (n "freya-testing") (v "0.2.1") (d (list (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 2)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-components") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (f (quote ("shared"))) (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "0s5vhk624r31bm3qx17p5dsgvhfhvwzhv4ywisvx3bk3kajhy5dn") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

