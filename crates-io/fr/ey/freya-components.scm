(define-module (crates-io fr ey freya-components) #:use-module (crates-io))

(define-public crate-freya-components-0.1.0 (c (n "freya-components") (v "0.1.0") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1.0") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0hgw44q0wdpl0xkskxwp53a5k6pnpvibqzk49r5idx6smlysgalm")))

(define-public crate-freya-components-0.1.1 (c (n "freya-components") (v "0.1.1") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1.0") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1.0") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0dx353advz0p0vpv2iv59llz99h5sfdjfj48jrbp6wimq3nkln0h")))

(define-public crate-freya-components-0.1.2 (c (n "freya-components") (v "0.1.2") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0p2vbrq9n5vwgv77i71rx6jwn71m3hy9mwcfxpppwcf4gfs67hll") (f (quote (("default" "freya-engine/skia-engine"))))))

(define-public crate-freya-components-0.1.3 (c (n "freya-components") (v "0.1.3") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "0slzn89rwczc30knf5zm0q5ds6mcppbzrv0h6gbk8w4qm8fajnrn") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-components-0.1.4 (c (n "freya-components") (v "0.1.4") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "1xqcb4pkallqjxfcxp2klb4mb3f4v8m1s4ak7sm2wrniy9izhrjq") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-components-0.1.5 (c (n "freya-components") (v "0.1.5") (d (list (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-router") (r "^0.4") (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-core") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "open") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.2") (d #t) (k 0)))) (h "19a80b2004kpalxxc7gmlq79p66llzyzm6wlywh46rpy8x68b63w") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-components-0.2.0 (c (n "freya-components") (v "0.2.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus-router") (r "^0.5") (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "0grg2iqd41d4kjqbxhkyrgy1kzkglnfm2kj2x6njk4r0faz4r7f8") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-components-0.2.1 (c (n "freya-components") (v "0.2.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dioxus") (r "^0.5") (f (quote ("macro" "signals" "hooks"))) (k 0)) (d (n "dioxus-router") (r "^0.5") (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-elements") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-hooks") (r "^0.2") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "open") (r "^5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (d #t) (k 0)))) (h "024xf6vnzkrx1pq25sfmgsvb6cq4zyi4nfmj0rpfxr7crrrfxmvq") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

