(define-module (crates-io fr ey freya-layout) #:use-module (crates-io))

(define-public crate-freya-layout-0.1.0 (c (n "freya-layout") (v "0.1.0") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg" "gl" "textlayout" "svg" "x11" "wayland"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "05gh141iwy2szrs1i9zxppx52n5qx7bxair9c2vd2p5mx4g9a7fv")))

(define-public crate-freya-layout-0.1.1 (c (n "freya-layout") (v "0.1.1") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0fhqnj4bcp2bavrr4r76q3vddvbzx1ffq2pwjfchxnpz6j1kwxdl")))

(define-public crate-freya-layout-0.1.5 (c (n "freya-layout") (v "0.1.5") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0fwp765cfkfhr9y7d1ncml3kx6xdjqabz3nvp7iinkim0azdcggq") (f (quote (("default" "freya-engine/skia-engine"))))))

(define-public crate-freya-layout-0.1.6 (c (n "freya-layout") (v "0.1.6") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dioxus") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-dom") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "freya-node-state") (r "^0.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "08yx9kb08brymv826yw24dzvk3pa6pnmpzrqgn32wx5jr2dh14cp") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

