(define-module (crates-io fr ey freya-node-state) #:use-module (crates-io))

(define-public crate-freya-node-state-0.1.0 (c (n "freya-node-state") (v "0.1.0") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (d #t) (k 0)) (d (n "skia-safe") (r "^0.63.0") (f (quote ("gl" "textlayout" "svg"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0yvfmmnscw0wd0a4y28j1z4j55mj9jkm3hpx3j6x4g2kr5fpd3yq")))

(define-public crate-freya-node-state-0.1.1 (c (n "freya-node-state") (v "0.1.1") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1xdmyrnf4g34cz174ym0xf8507ici1b06xnamfgpglaidbk6i0rp")))

(define-public crate-freya-node-state-0.1.3 (c (n "freya-node-state") (v "0.1.3") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "10wjm38nsgmmywmal8y81k13mgiywfpxi8kdcg0jwxdqkhdqsqf1") (f (quote (("default" "freya-engine/skia-engine"))))))

(define-public crate-freya-node-state-0.1.4 (c (n "freya-node-state") (v "0.1.4") (d (list (d (n "accesskit") (r "^0.11.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-hooks") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-native-core") (r "^0.4") (f (quote ("dioxus"))) (d #t) (k 0)) (d (n "dioxus-native-core-macro") (r "^0.4") (d #t) (k 0)) (d (n "dioxus-rsx") (r "^0.4") (f (quote ("hot_reload"))) (d #t) (k 0)) (d (n "freya-common") (r "^0.1") (d #t) (k 0)) (d (n "freya-elements") (r "^0.1") (d #t) (k 0)) (d (n "freya-engine") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wwk8hgh02azd58ln1xzzdgaar428n07n7z2fkdxi4r65mn9rhxj") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-node-state-0.2.0 (c (n "freya-node-state") (v "0.2.0") (d (list (d (n "accesskit") (r "^0.12.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core-macro") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (f (quote ("proc" "std" "parallel"))) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1w621c22vbda2l1as2nfp42j7bybi2icabf7gxzjabv4pbzdq1ap") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

(define-public crate-freya-node-state-0.2.1 (c (n "freya-node-state") (v "0.2.1") (d (list (d (n "accesskit") (r "^0.12.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dioxus-core") (r "^0.5") (d #t) (k 0)) (d (n "freya-common") (r "^0.2") (d #t) (k 0)) (d (n "freya-engine") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core") (r "^0.2") (d #t) (k 0)) (d (n "freya-native-core-macro") (r "^0.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "shipyard") (r "^0.6.2") (f (quote ("proc" "std" "parallel"))) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("sync" "rt-multi-thread" "time" "macros"))) (d #t) (k 0)) (d (n "torin") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1p7j5i7xjl54wc5vg7jrhdgq064yr4qcihb01xzbx135dcgq5m3g") (f (quote (("skia-engine" "freya-engine/skia-engine"))))))

