(define-module (crates-io fr cl frclib-core) #:use-module (crates-io))

(define-public crate-frclib-core-0.1.0 (c (n "frclib-core") (v "0.1.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "frclib-structure-macros") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "rmpv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0h7dy23jx0irqmgziq4n1r3ysjfi969hg1q6plws3dhrpj6xx3ay") (f (quote (("value-union" "structure" "serde" "rmpv" "serde_json") ("units" "num" "nalgebra" "simba" "serde" "paste") ("time" "ctor") ("structure" "bytes" "inventory" "logos" "frclib-structure-macros") ("hal" "time" "units") ("full" "basic" "units" "hal") ("basic" "value-union" "time")))) (r "1.75.0")))

(define-public crate-frclib-core-0.1.1 (c (n "frclib-core") (v "0.1.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "frclib-structure-macros") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "rmpv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "0j6r9mwbk7gqrsshdlny2yw519bfxp2a8kyh9chs1hxlnw99k8yw") (f (quote (("value-union" "structure" "serde" "rmpv" "serde_json") ("units" "num" "nalgebra" "simba" "serde" "paste") ("time" "ctor") ("structure" "bytes" "inventory" "logos" "frclib-structure-macros") ("hal" "time" "units") ("full" "basic" "units" "hal") ("basic" "value-union" "time")))) (r "1.75.0")))

(define-public crate-frclib-core-0.1.2 (c (n "frclib-core") (v "0.1.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "frclib-structure-macros") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "rmpv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "1kcyqw6k9xa7081lam08rb97xaxfk0sfh39xxqkpflg5r9snnvbl") (f (quote (("value-union" "structure" "serde" "rmpv" "serde_json") ("units" "num" "nalgebra" "simba" "serde" "paste") ("time" "ctor") ("structure" "bytes" "inventory" "logos" "frclib-structure-macros") ("hal" "time" "units") ("full" "basic" "units" "hal") ("basic" "value-union" "time")))) (r "1.75.0")))

(define-public crate-frclib-core-0.2.0 (c (n "frclib-core") (v "0.2.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "frclib-structure-macros") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "rmpv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "09a1gq04y9xqpv6gp7kswwcf23fkp20mak2fk8bvpnb10xwrad1y") (f (quote (("value-union" "structure" "serde" "rmpv" "serde_json") ("units" "num" "nalgebra" "simba" "serde" "paste") ("time" "ctor") ("structure" "bytes" "inventory" "logos" "frclib-structure-macros") ("hal" "time" "units") ("full" "basic" "units" "hal") ("basic" "value-union" "time")))) (r "1.75.0")))

(define-public crate-frclib-core-0.2.1 (c (n "frclib-core") (v "0.2.1") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "ctor") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "frclib-structure-macros") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.13") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "rmpv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)))) (h "153s5a7bjrx83kcc67jla6x0lj50nwpbka7prdiasyzdm800f2gr") (f (quote (("value-union" "structure" "serde" "rmpv" "serde_json") ("units" "num" "nalgebra" "simba" "serde" "paste") ("time" "ctor") ("structure" "inventory" "frclib-structure-macros") ("hal" "time" "units") ("full" "basic" "units" "hal") ("basic" "value-union" "time")))) (r "1.75.0")))

