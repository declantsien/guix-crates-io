(define-module (crates-io le ar learnwy_bin_utils) #:use-module (crates-io))

(define-public crate-learnwy_bin_utils-0.1.0 (c (n "learnwy_bin_utils") (v "0.1.0") (d (list (d (n "confy") (r "^0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0mcpcn5rqvqkxc1ih079grw7a8ahrcpq53lr6h610j7rawpji91l")))

(define-public crate-learnwy_bin_utils-0.1.1 (c (n "learnwy_bin_utils") (v "0.1.1") (d (list (d (n "confy") (r "^0.3") (d #t) (k 0)) (d (n "human-panic") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0n5ri7v3h4934j85bpz295brxlkm1qhipa2z6xfrayrvlh61csj6")))

(define-public crate-learnwy_bin_utils-0.1.2 (c (n "learnwy_bin_utils") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "confy") (r "^0.3") (d #t) (k 0)) (d (n "dirs") (r "^1") (d #t) (k 0)) (d (n "human-panic") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0d9r5fpb5g8mv3fqy2aqraspf2qrcy1yk08q3922d9wj95dzh8yb")))

(define-public crate-learnwy_bin_utils-0.2.0 (c (n "learnwy_bin_utils") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "confy") (r "^0") (d #t) (k 0)) (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "env_logger") (r "^0") (d #t) (k 0)) (d (n "fnm") (r "^1") (d #t) (k 0)) (d (n "fs_extra") (r "^1") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 0)) (d (n "reqwest") (r "^0") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "brotli"))) (k 0)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1lfkdbx6hfkxrc5g50b8xclbq9fhbb4nklx02h1mqlddis4fdadx")))

