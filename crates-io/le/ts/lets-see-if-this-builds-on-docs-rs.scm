(define-module (crates-io le ts lets-see-if-this-builds-on-docs-rs) #:use-module (crates-io))

(define-public crate-lets-see-if-this-builds-on-docs-rs-0.0.1 (c (n "lets-see-if-this-builds-on-docs-rs") (v "0.0.1") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.11") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 1)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.7") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0yw293rra7sargw0kgb3z9yzwqrw82cqr2km6dyj5sdkh9j6g1hl") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber")))) (y #t)))

(define-public crate-lets-see-if-this-builds-on-docs-rs-0.0.2 (c (n "lets-see-if-this-builds-on-docs-rs") (v "0.0.2") (d (list (d (n "access-json") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.64") (d #t) (k 0)) (d (n "apollo-parser") (r "^0.2.11") (d #t) (k 0)) (d (n "askama") (r "^0.11.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.14") (f (quote ("tokio" "brotli" "gzip" "deflate"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "axum") (r "^0.5.16") (f (quote ("headers" "json" "original-uri"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.66") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "buildstructor") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("env" "derive" "std"))) (k 0)) (d (n "console-subscriber") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.23") (d #t) (k 0)) (d (n "dashmap") (r "^5.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "deadpool") (r "^0.9.5") (f (quote ("rt_tokio_1"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hotwatch") (r "^0.4.6") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "humantime-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("server" "client"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (f (quote ("http1" "http2"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("json" "redactions"))) (d #t) (k 2)) (d (n "introspector-gadget") (r "^0.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.3.0") (d #t) (k 2)) (d (n "jsonschema") (r "^0.16.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "mediatype") (r "^0.19.9") (d #t) (k 0)) (d (n "memchr") (r "^2.5.0") (k 2)) (d (n "miette") (r "^5.3.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "mime") (r "^0.3.16") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 0)) (d (n "mockall") (r "^0.11.2") (d #t) (k 2)) (d (n "multimap") (r "^0.8.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.17.0") (f (quote ("rt-tokio" "serialize" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-datadog") (r "^0.5.0") (f (quote ("reqwest-client"))) (d #t) (k 0)) (d (n "opentelemetry-http") (r "^0.6.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.16.0") (f (quote ("collector_client" "reqwest_collector_client" "rt-tokio"))) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.10.0") (f (quote ("tonic" "tonic-build" "prost" "tls" "http-proto" "metrics" "reqwest-client"))) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.9.0") (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.15.0") (f (quote ("reqwest-client" "reqwest-rustls"))) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.9") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-types") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "blocking"))) (k 1)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json" "stream"))) (k 2)) (d (n "rhai") (r "^1.10.0") (f (quote ("sync" "serde" "internals"))) (d #t) (k 0)) (d (n "router-bridge") (r "^0.1.7") (d #t) (k 0)) (d (n "schemars") (r "^0.8.10") (f (quote ("url"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_json_bytes") (r "^0.2.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "sha2") (r "^0.10.5") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "sys-info") (r "^0.9.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "test-span") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.4") (f (quote ("net" "codec"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (f (quote ("transport" "tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tower") (r "^0.4.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("trace" "cors" "compression-br" "compression-deflate" "compression-gzip" "decompression-br" "decompression-deflate" "decompression-gzip" "timeout"))) (d #t) (k 0)) (d (n "tower-service") (r "^0.3.2") (d #t) (k 0)) (d (n "tower-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (f (quote ("futures-03"))) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)) (d (n "tracing-test") (r "^0.2.2") (d #t) (k 2)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(macos)") (k 0)) (d (n "uname") (r "^0.1.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 0)))) (h "0rqcwjbp5vq3h8gcw3dkqx2mg8sqf2qv9zwd306g5g5rgl1bfn4v") (f (quote (("failfast") ("docs_rs" "router-bridge/docs_rs") ("console" "tokio/tracing" "console-subscriber")))) (y #t)))

