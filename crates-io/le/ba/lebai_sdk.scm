(define-module (crates-io le ba lebai_sdk) #:use-module (crates-io))

(define-public crate-lebai_sdk-0.1.14 (c (n "lebai_sdk") (v "0.1.14") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.7") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1d94xg7q9lkmzynd5pi33nbrx2wp1jw0xj3ipk34j8y1j9dxlw37") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.15 (c (n "lebai_sdk") (v "0.1.15") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.7") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0qqj9d5i7avs83rhw8z4rslxpyqdfdlji1r9ymysxfx46jlr476y") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.16 (c (n "lebai_sdk") (v "0.1.16") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.7") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0rn9jjc68884jbkcj5hnv83pcqm70v69q4r37zmavrvbdi5ajwli") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.17 (c (n "lebai_sdk") (v "0.1.17") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.7") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0ldgs6hvpnvvii1k67iylcw60zqpz2rn3lzgywyn5b2qnjbqwhhi") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.19 (c (n "lebai_sdk") (v "0.1.19") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1fb9i89xc89m2yl6psb841pkmvflqb2vyhp98l4p63nd0l7zi78x") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.20 (c (n "lebai_sdk") (v "0.1.20") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0rfqxsjlgcypkh0vjcbk5brybc6v3lamyd0l47d9f7w5m36dc719") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.21 (c (n "lebai_sdk") (v "0.1.21") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "15fkf12lad32v5gklf2jw59qg892lp2ywnl528pm78m4kkrmsiql") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.23 (c (n "lebai_sdk") (v "0.1.23") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "rustls") (r "=0.21.7") (k 0)) (d (n "rustls-webpki") (r "=0.101.6") (k 0)) (d (n "sct") (r "=0.7.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1q782ib2dzllmz9xakhbb8f10d5w1xar56vnc90gq9vxz3frlndq") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.1.22 (c (n "lebai_sdk") (v "0.1.22") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.2") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (f (quote ("webpki-tls"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.19") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "rustls") (r "=0.21.7") (k 0)) (d (n "rustls-webpki") (r "=0.101.6") (k 0)) (d (n "sct") (r "=0.7.0") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "176jhfh7r12mrw1md213ybfrq1h1rdfwn4jq4brx6yx0wi3d0ngd") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.0 (c (n "lebai_sdk") (v "0.2.0") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "errno") (r "=0.3.7") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.9") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "=0.38.25") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0rij5y1ljmxrzj0n55mbm3rl28ppf9qcm22ycg5ixf5cs24yasmr") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.1 (c (n "lebai_sdk") (v "0.2.1") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "errno") (r "=0.3.7") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (d #t) (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (d #t) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "=0.38.25") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "15s9nf0lh55xl9qanw3gqgvjzl7ms5lq3q36l1qnvgvgnnibhp9a") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.2 (c (n "lebai_sdk") (v "0.2.2") (d (list (d (n "async-lock") (r "^2") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "errno") (r "=0.3.7") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.20") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.20") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.20") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "rustix") (r "=0.38.25") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0k669hmr6dvf0xgdbpzir7ma2jknfav7jj1w6gm6dlxczdlx5d5f") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.4 (c (n "lebai_sdk") (v "0.2.4") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "18jfdyhawnzrm3601xkfbzm2vq9sxh771khq6qx8dp0wvzqkawp6") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.5 (c (n "lebai_sdk") (v "0.2.5") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0gyyvdd2s100pybixacpyrr260j8qvb75anac5z8zpkd4ga182q2") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default")))) (s 2) (e (quote (("module" "mlua?/module"))))))

(define-public crate-lebai_sdk-0.2.6 (c (n "lebai_sdk") (v "0.2.6") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "092vv6y99kfiisnkagh9s9c7k64dfmzycr5gnbvscjxh2dv3a8rk") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.7 (c (n "lebai_sdk") (v "0.2.7") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1ygq09c2xp9s3fxz5g74qbmcizvqx74c3q465gydqvq9pvwrz9zw") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.8 (c (n "lebai_sdk") (v "0.2.8") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1gjsna94qd2j3kc54rps9jkjh18633w3sia0d5w08vbwsqh06q10") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.10 (c (n "lebai_sdk") (v "0.2.10") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0n1anzlrngyni0cagan32sgqhqss20l0q84xxjir7imas0rdxkxg") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.11 (c (n "lebai_sdk") (v "0.2.11") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0zmkhkg4xxb3vjhhx6wdmhqgccn0fzxkb121glxap7z7qf9a8nyz") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.12 (c (n "lebai_sdk") (v "0.2.12") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1hfz7rvm94yhkdh7n3pqpx9vaw47xlrv5i0mycb39adyrrzsmdzk") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.13 (c (n "lebai_sdk") (v "0.2.13") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1fr673kc48wgnlhsjd1aij68zwk76k8pdb991wzc9ssx72nscmpk") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

(define-public crate-lebai_sdk-0.2.14 (c (n "lebai_sdk") (v "0.2.14") (d (list (d (n "async-lock") (r "^3") (d #t) (k 0)) (d (n "cmod") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "jsonrpsee-core") (r "^0.21") (k 0)) (d (n "jsonrpsee-wasm-client") (r "^0.21") (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "jsonrpsee-ws-client") (r "^0.21") (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "mdns-sd") (r "^0.10") (f (quote ("async"))) (o #t) (k 0)) (d (n "mlua") (r "^0.9") (f (quote ("lua54"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 0)) (d (n "pin-project-lite") (r "^0.2") (d #t) (k 0)) (d (n "proto") (r "^3") (d #t) (k 0) (p "lebai-proto")) (d (n "pyo3") (r "^0.20") (f (quote ("abi3-py37"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0mcs6aaqrs0bvq54gdhd9hbm8bw19hz3xy3xj24a71psac9bqfdj") (f (quote (("mdns" "mdns-sd") ("ffi_wasm" "cmod/ffi_wasm" "wasm-bindgen" "wasm-bindgen-futures" "futures-timer/wasm-bindgen") ("ffi_py_asyncio" "ffi_py" "cmod/ffi_py_asyncio" "pyo3") ("ffi_py" "cmod/ffi_py" "pyo3") ("ffi_lua" "cmod/ffi_lua" "mlua") ("default"))))))

