(define-module (crates-io le nn lenna_cli) #:use-module (crates-io))

(define-public crate-lenna_cli-0.1.0 (c (n "lenna_cli") (v "0.1.0") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1") (d #t) (k 0)) (d (n "libloading") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0004dgcr1h8rwz73j3k2pv90bb165pvd0zwf77z853prdxdd9aci") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.1 (c (n "lenna_cli") (v "0.1.1") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1.3") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "1aqmgssvblixl5zxpasch5k8cxc0ydrcb0nnr7awzbr6ylgm03gk") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.2 (c (n "lenna_cli") (v "0.1.2") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0br2qzvdbjj5kygwxm7dv1cy8jvwvhzcnw1da86pf9yk960gl708") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.3 (c (n "lenna_cli") (v "0.1.3") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "13xqmcsn9m51g6iqxpli6g5l7ql92kml3ysx22ids23wd9262i96") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.4 (c (n "lenna_cli") (v "0.1.4") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "047win82dbis8az0cm0yyca96rbpd2xbk208fgs92mm1lvrg8ynm") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.5 (c (n "lenna_cli") (v "0.1.5") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1.4") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0rqawhzpbv61m6piq39mjjgkv6rkxps32bs0v23ccqyrwi7qvnw9") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.6 (c (n "lenna_cli") (v "0.1.6") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "0gi0nw44alix5ag8bafs3z5azi4jx2waicv7p5z47md6wqnn1yrv") (f (quote (("default"))))))

(define-public crate-lenna_cli-0.1.7 (c (n "lenna_cli") (v "0.1.7") (d (list (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg" "ico" "gif"))) (k 0)) (d (n "js-sys") (r "^0.3.50") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "lenna_core") (r "^0.1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.23") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "zip") (r "^0.5") (k 0)))) (h "04n1j5w06x1bl193kdz7aid572lcv2ykn346h7dhhf0n2afhgpn8") (f (quote (("default"))))))

