(define-module (crates-io le xi lexical) #:use-module (crates-io))

(define-public crate-lexical-0.0.1 (c (n "lexical") (v "0.0.1") (h "1fiilgzfp6wqgmvm22awv41xhsclgifjv1b0w2y2v7hl33i7i757") (y #t)))

(define-public crate-lexical-1.0.0 (c (n "lexical") (v "1.0.0") (d (list (d (n "assert_float_eq") (r "^1") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1dn81mxigj9gjblqr9v1np2maihlz1c8fak0abfv6g33zdrxzy66") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.0.2 (c (n "lexical") (v "1.0.2") (d (list (d (n "assert_float_eq") (r "^1") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "17nncqxlmbs3xxda5il5viqr8jprfxji857bhxm6yqpyv2lm6y5i") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.0.3 (c (n "lexical") (v "1.0.3") (d (list (d (n "assert_float_eq") (r "^1") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1qmv0djl20bndmmc3i8yx1ly56p0aiqiw2mlclgnl8zgc8r8gks1") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.1.0 (c (n "lexical") (v "1.1.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1idx2qwir7fsnchi84jrp38pb6r88szqm5ll7sswcj4i3z6vv19q") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.2.0 (c (n "lexical") (v "1.2.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1ln3kkk7ni45izmnwmkfz82y9l75s07rh7cs82xzcmy1s8lhpkfw") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.2.1 (c (n "lexical") (v "1.2.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1mnk72zp58p43m28jjln5vlqmz1k132596k4c09mpc68zc09zcg1") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.3.0 (c (n "lexical") (v "1.3.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "19z429vdrq6ylayxbyryxx980zp0jfiam912hlj7lx45h3g4hsl4") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.3.1 (c (n "lexical") (v "1.3.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1bhf7smwfhyg5n1sy26ryp1ff31v1i4fylkz812fnlblddyka9wr") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.3.2 (c (n "lexical") (v "1.3.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0iyv09sn31lad90w0lp84hfvm44g1ynsvhm95q031zj4wr9gplzj") (f (quote (("table") ("std") ("nightly" "alloc") ("default" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.4.0 (c (n "lexical") (v "1.4.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ryu") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "17bv7121g7ndzmghznmimhzc391vslgq6l9fp9lm7l3dydgn1l3l") (f (quote (("table") ("std") ("nightly" "alloc") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.4.1 (c (n "lexical") (v "1.4.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0aaz1f2ipm5brpiakqyd2p2mdz97axvdwill024k3brf3mkny1jk") (f (quote (("table") ("std") ("nightly" "alloc") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.4.2 (c (n "lexical") (v "1.4.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1qz2sp4fsg192rab737j8rga78y23v24f59j8wccsgsrg7h7zqrg") (f (quote (("table") ("std") ("nightly" "alloc") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.5.0 (c (n "lexical") (v "1.5.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0fnkqcrlfim3aw51n55qgzb2ahfin16naz0k2y1bq1bnjmv5difh") (f (quote (("table") ("std") ("nightly" "alloc") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("correct") ("alloc" "wee_alloc")))) (y #t)))

(define-public crate-lexical-1.6.0 (c (n "lexical") (v "1.6.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)))) (h "1m6vw9ykgji5k1xxl9c6hacjr9mcm8rqxdkm913zpxa33mcbaf05") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table")))) (y #t)))

(define-public crate-lexical-1.6.1 (c (n "lexical") (v "1.6.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)))) (h "08sq36wsn5p4lp9ypl7z39icw2sv8q5ffwc69xz73d2v87qgdh9x") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table")))) (y #t)))

(define-public crate-lexical-1.6.2 (c (n "lexical") (v "1.6.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)))) (h "0asglb20yb7qyiy3cywg4ynwcj52fl7bg2pw2njsc6lk3lnv5jna") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table")))) (y #t)))

(define-public crate-lexical-1.6.3 (c (n "lexical") (v "1.6.3") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)))) (h "1qhl92vjvwggn5hdavshk1dypmbfwdqm92vy11fgj99hs10cp429") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table")))) (y #t)))

(define-public crate-lexical-1.6.5 (c (n "lexical") (v "1.6.5") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1r2my3yjf2nivnmzm3xrgn7dv5d3j09gdy9965fz3xq6q0z1rigf") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("comprehensive_float_test" "rand" "serde" "serde_derive" "toml")))) (y #t)))

(define-public crate-lexical-1.6.6 (c (n "lexical") (v "1.6.6") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1qza9pj9zqz5p3a9h6gnnv4h570vbnichrd8jkxcgx2nw0xhzib4") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("comprehensive_float_test" "rand" "serde" "serde_derive" "toml")))) (y #t)))

(define-public crate-lexical-1.6.7 (c (n "lexical") (v "1.6.7") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "ryu") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^0.2.5") (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1syk9f2h4ii97x3p76fzk6jx0vy923kgayx88dl1hdh4l1fjw6x7") (f (quote (("table") ("std") ("imprecise") ("grisu3" "dtoa") ("default" "ryu" "std" "table") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml")))) (y #t)))

(define-public crate-lexical-1.8.0 (c (n "lexical") (v "1.8.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0h4vfgyzvvh93419sf4zfy6g4b47nhqxlg6ixv1hp24l9n7766x8") (f (quote (("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml") ("algorithm_m" "lexical-core/algorithm_m")))) (y #t)))

(define-public crate-lexical-1.8.2 (c (n "lexical") (v "1.8.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "176zm5s0zm9ppmxr363rgmipmvla11cr05k85ldy7gv6lf6p49ks") (f (quote (("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml") ("algorithm_m" "lexical-core/algorithm_m"))))))

(define-public crate-lexical-1.9.0 (c (n "lexical") (v "1.9.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.2") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1hs4jfz5krr6n45avyhbn4gf1dbw6f4hn48k3bgjh27zj7vfwz2s") (f (quote (("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "bhcomp" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml") ("bhcomp" "correct" "lexical-core/bhcomp") ("algorithm_m" "correct" "lexical-core/algorithm_m"))))))

(define-public crate-lexical-1.9.1 (c (n "lexical") (v "1.9.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.2") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1g695vprw8gjrsdydi060ib9vxfjk7sdajjl47paawbp922hbaab") (f (quote (("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "bhcomp" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml") ("bhcomp" "correct" "lexical-core/bhcomp") ("algorithm_m" "correct" "lexical-core/algorithm_m"))))))

(define-public crate-lexical-2.0.0 (c (n "lexical") (v "2.0.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.3") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1vx49fjq5syf4s3njzch04kcxd4w4d3c6d53ndxvalg7yxfwdyp4") (f (quote (("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-2.1.0 (c (n "lexical") (v "2.1.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.4") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^0.2") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "166ndhjrigd30fxbvc3ydpcqqrkma66nmmj31ia5lclpjscys1n1") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-2.2.0 (c (n "lexical") (v "2.2.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.4.1") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1l3kxjcbfzawk7srqcmmjfyd8cdd746whidkixk973gmyjzd8npj") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-2.2.1 (c (n "lexical") (v "2.2.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.4.1") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0x0yhwdiszmjrvxdrvqxfqawvdjkl114by3v6an1mw67v4p1pplk") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-2.2.2 (c (n "lexical") (v "2.2.2") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.4.3") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "03fibsdk2kqky8k62bw7vvlllskwb34aw6547w56syhq1kk0j3cf") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-3.0.0 (c (n "lexical") (v "3.0.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.5.0") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0m0sl03nb8q4xkcp1bp3rh84v37m10q4wnlwy5sp57zifqhwawq2") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-4.0.0 (c (n "lexical") (v "4.0.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.6.0") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "00zh69p0rflk3zpq3qrfigmaknm8zrdqf2b8xww56mvwq3hymyha") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-5.0.0 (c (n "lexical") (v "5.0.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.0") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1624rxfxqx4w1sb5r67v32gi7w5322c2wm6i3amdmvgqjmafk16x") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-5.1.0 (c (n "lexical") (v "5.1.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.1") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^1.0") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1dzybaaiya99m0w37j2ai6cjnikkgfdwhjaplzfbbjlnj71d4xfm") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-4.1.0 (c (n "lexical") (v "4.1.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "cfg-if") (r "= 0.1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.6.4") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1gp5pj76k7fk8iyygrkva583yg9njjrfcrjxlfbz7zqmkys3sp87") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-4.2.0 (c (n "lexical") (v "4.2.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "cfg-if") (r "= 0.1.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.6.7") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1565gcqbajsa9s7vizh42hsqjqcxpxwvxzg8yxywzh0g2bl0xbga") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-5.2.0 (c (n "lexical") (v "5.2.0") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.4") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^1.0") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1kxs7pmaqlz1afcz62gplcz8p5v8d9ajhbbvlf4qqxa1fsjzi3x2") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-5.2.1 (c (n "lexical") (v "5.2.1") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.5") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^1.0") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "099x2ylfri770zmfr75i88kl6w200nalcbblyrzwzaa25mvrn6x1") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-2.2.4 (c (n "lexical") (v "2.2.4") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.4.3") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0v6waw8wha11mj4gsga5vcfgwdzcz7bcnq2gwq35rakq5bw8klf9") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("property_tests" "lexical-core/property_tests") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-3.0.1 (c (n "lexical") (v "3.0.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.5.0") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0bz06095ak8d7fc203ppx9z28gv0nwws8sd7jx1rrxvrcmpbwbgq") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("property_tests" "lexical-core/property_tests") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-4.2.1 (c (n "lexical") (v "4.2.1") (d (list (d (n "approx") (r "^0.3.0") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.6.8") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1gc8fxs2xhchv5rz7fw7q5iqcf4d14l102lzjnz907x0mgy76cxk") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("property_tests" "lexical-core/property_tests") ("noinline" "lexical-core/noinline") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-5.2.2 (c (n "lexical") (v "5.2.2") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dtoa") (r "^0.4") (d #t) (k 2)) (d (n "itoa") (r "^0.4") (f (quote ("i128"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lexical-core") (r "^0.7.6") (k 0)) (d (n "rand") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ryu_impl") (r "^1.0") (d #t) (k 2) (p "ryu")) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1r8lsi523h53kbb99xgv31jabwhcp4rzqd4hfazfhcjffh5aj17l") (f (quote (("unchecked_index" "lexical-core/unchecked_index") ("trim_floats" "lexical-core/trim_floats") ("std" "lexical-core/std") ("ryu" "lexical-core/ryu") ("rounding" "lexical-core/rounding") ("radix" "lexical-core/radix") ("property_tests" "lexical-core/property_tests") ("noinline" "lexical-core/noinline") ("libm" "lexical-core/libm") ("grisu3" "lexical-core/grisu3") ("format" "lexical-core/format") ("default" "correct" "ryu" "std") ("correct" "lexical-core/correct") ("comprehensive_float_test" "rand/std" "serde/std" "serde_derive" "std" "toml"))))))

(define-public crate-lexical-6.0.0 (c (n "lexical") (v "6.0.0") (d (list (d (n "lexical-core") (r "^0.8") (k 0)))) (h "14dzhg4xikcnfqaw8a9f4xlgjspqg5v0ksla3b1aq8pdvqin5wi3") (f (quote (("write-integers" "lexical-core/write-integers" "write" "integers") ("write-floats" "lexical-core/write-floats" "write" "floats") ("write") ("std" "lexical-core/std") ("radix" "lexical-core/radix") ("power-of-two" "lexical-core/power-of-two") ("parse-integers" "lexical-core/parse-integers" "parse" "integers") ("parse-floats" "lexical-core/parse-floats" "parse" "floats") ("parse") ("nightly" "lexical-core/nightly") ("lint" "lexical-core/lint") ("integers") ("format" "lexical-core/format") ("floats") ("f16" "lexical-core/f16") ("f128" "lexical-core/f128") ("default" "std" "write-integers" "write-floats" "parse-integers" "parse-floats") ("compact" "lexical-core/compact"))))))

(define-public crate-lexical-6.0.1 (c (n "lexical") (v "6.0.1") (d (list (d (n "lexical-core") (r "^0.8") (k 0)))) (h "1y8v2s8g2hjinwf5hbm1ncbazw9q4qbp111q2mwacq6hi0grhkn3") (f (quote (("write-integers" "lexical-core/write-integers" "write" "integers") ("write-floats" "lexical-core/write-floats" "write" "floats") ("write") ("std" "lexical-core/std") ("radix" "lexical-core/radix") ("power-of-two" "lexical-core/power-of-two") ("parse-integers" "lexical-core/parse-integers" "parse" "integers") ("parse-floats" "lexical-core/parse-floats" "parse" "floats") ("parse") ("nightly" "lexical-core/nightly") ("lint" "lexical-core/lint") ("integers") ("format" "lexical-core/format") ("floats") ("f16" "lexical-core/f16") ("f128" "lexical-core/f128") ("default" "std" "write-integers" "write-floats" "parse-integers" "parse-floats") ("compact" "lexical-core/compact"))))))

(define-public crate-lexical-6.1.0 (c (n "lexical") (v "6.1.0") (d (list (d (n "lexical-core") (r "^0.8.3") (k 0)))) (h "11k8mahm294c3mzhrb8wzgdc7z14wggdq4ny989680bgq4sf9lyc") (f (quote (("write-integers" "lexical-core/write-integers" "write" "integers") ("write-floats" "lexical-core/write-floats" "write" "floats") ("write") ("std" "lexical-core/std") ("radix" "lexical-core/radix") ("power-of-two" "lexical-core/power-of-two") ("parse-integers" "lexical-core/parse-integers" "parse" "integers") ("parse-floats" "lexical-core/parse-floats" "parse" "floats") ("parse") ("nightly" "lexical-core/nightly") ("lint" "lexical-core/lint") ("integers") ("format" "lexical-core/format") ("floats") ("f16" "lexical-core/f16") ("f128" "lexical-core/f128") ("default" "std" "write-integers" "write-floats" "parse-integers" "parse-floats") ("compact" "lexical-core/compact"))))))

(define-public crate-lexical-6.1.1 (c (n "lexical") (v "6.1.1") (d (list (d (n "lexical-core") (r "^0.8.5") (k 0)))) (h "1xk8g6k17ml0sjyx388qck9zqhxjfyzjqx1l6c0ggzj3zlvgpbn7") (f (quote (("write-integers" "lexical-core/write-integers" "write" "integers") ("write-floats" "lexical-core/write-floats" "write" "floats") ("write") ("std" "lexical-core/std") ("radix" "lexical-core/radix") ("power-of-two" "lexical-core/power-of-two") ("parse-integers" "lexical-core/parse-integers" "parse" "integers") ("parse-floats" "lexical-core/parse-floats" "parse" "floats") ("parse") ("nightly" "lexical-core/nightly") ("lint" "lexical-core/lint") ("integers") ("format" "lexical-core/format") ("floats") ("f16" "lexical-core/f16") ("f128" "lexical-core/f128") ("default" "std" "write-integers" "write-floats" "parse-integers" "parse-floats") ("compact" "lexical-core/compact"))))))

