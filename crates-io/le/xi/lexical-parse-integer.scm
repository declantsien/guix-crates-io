(define-module (crates-io le xi lexical-parse-integer) #:use-module (crates-io))

(define-public crate-lexical-parse-integer-0.8.0 (c (n "lexical-parse-integer") (v "0.8.0") (d (list (d (n "lexical-util") (r "^0.8") (f (quote ("parse-integers"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "1b2kxprq3636x3j1qy68202q7yzsmq5c7h9w7m7zrh4cvanjpjgj") (f (quote (("std" "lexical-util/std") ("safe") ("radix" "lexical-util/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two") ("nightly") ("lint" "lexical-util/lint") ("format" "lexical-util/format") ("default" "std") ("compact" "lexical-util/compact"))))))

(define-public crate-lexical-parse-integer-0.8.3 (c (n "lexical-parse-integer") (v "0.8.3") (d (list (d (n "lexical-util") (r "^0.8.3") (f (quote ("parse-integers"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0s4ilwain5badr8snscshw75292v71m124cr5fxqnly6czn55j5g") (f (quote (("std" "lexical-util/std") ("safe") ("radix" "lexical-util/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two") ("nightly") ("lint" "lexical-util/lint") ("format" "lexical-util/format") ("default" "std") ("compact" "lexical-util/compact"))))))

(define-public crate-lexical-parse-integer-0.8.4 (c (n "lexical-parse-integer") (v "0.8.4") (d (list (d (n "lexical-util") (r "^0.8.4") (f (quote ("parse-integers"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0bzdk08cv53rml9s81f3xgm75ddk68hgi0xzidbvq6l6330a3awf") (f (quote (("std" "lexical-util/std") ("safe") ("radix" "lexical-util/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two") ("nightly") ("lint" "lexical-util/lint") ("format" "lexical-util/format") ("default" "std") ("compact" "lexical-util/compact"))))))

(define-public crate-lexical-parse-integer-0.8.5 (c (n "lexical-parse-integer") (v "0.8.5") (d (list (d (n "lexical-util") (r "^0.8.5") (f (quote ("parse-integers"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "1ralsf3prq7gh7jwsczn5mii7bmzf4kwmhjqjzc4ng80wn9iyphj") (f (quote (("std" "lexical-util/std") ("safe") ("radix" "lexical-util/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two") ("nightly") ("lint" "lexical-util/lint") ("format" "lexical-util/format") ("default" "std") ("compact" "lexical-util/compact"))))))

(define-public crate-lexical-parse-integer-0.8.6 (c (n "lexical-parse-integer") (v "0.8.6") (d (list (d (n "lexical-util") (r "^0.8.5") (f (quote ("parse-integers"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "1sayji3mpvb2xsjq56qcq3whfz8px9a6fxk5v7v15hyhbr4982bd") (f (quote (("std" "lexical-util/std") ("safe") ("radix" "lexical-util/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two") ("nightly") ("lint" "lexical-util/lint") ("format" "lexical-util/format") ("default" "std") ("compact" "lexical-util/compact"))))))

