(define-module (crates-io le xi lexical-parse-float) #:use-module (crates-io))

(define-public crate-lexical-parse-float-0.8.0 (c (n "lexical-parse-float") (v "0.8.0") (d (list (d (n "lexical-parse-integer") (r "^0.8") (k 0)) (d (n "lexical-util") (r "^0.8") (f (quote ("parse-floats"))) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0pz4b3gj2qk447g2mlmqlfgb7rym796c9b3cnhxs6ldq5k402fk7") (f (quote (("std" "lexical-util/std" "lexical-parse-integer/std") ("safe" "lexical-parse-integer/safe") ("radix" "lexical-util/radix" "lexical-parse-integer/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two" "lexical-parse-integer/power-of-two") ("nightly" "lexical-parse-integer/nightly") ("lint" "lexical-util/lint" "lexical-parse-integer/lint") ("format" "lexical-util/format" "lexical-parse-integer/format") ("f16" "lexical-util/f16") ("f128" "lexical-util/f128") ("default" "std") ("compact" "lexical-util/compact" "lexical-parse-integer/compact"))))))

(define-public crate-lexical-parse-float-0.8.2 (c (n "lexical-parse-float") (v "0.8.2") (d (list (d (n "lexical-parse-integer") (r "^0.8") (k 0)) (d (n "lexical-util") (r "^0.8") (f (quote ("parse-floats"))) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "03mzjx8k2jzv2vbl1xb589p9zfs5i2m23vcmm6fjsxps0k86dl5l") (f (quote (("std" "lexical-util/std" "lexical-parse-integer/std") ("safe" "lexical-parse-integer/safe") ("radix" "lexical-util/radix" "lexical-parse-integer/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two" "lexical-parse-integer/power-of-two") ("nightly" "lexical-parse-integer/nightly") ("lint" "lexical-util/lint" "lexical-parse-integer/lint") ("format" "lexical-util/format" "lexical-parse-integer/format") ("f16" "lexical-util/f16") ("f128" "lexical-util/f128") ("default" "std") ("compact" "lexical-util/compact" "lexical-parse-integer/compact"))))))

(define-public crate-lexical-parse-float-0.8.3 (c (n "lexical-parse-float") (v "0.8.3") (d (list (d (n "lexical-parse-integer") (r "^0.8.3") (k 0)) (d (n "lexical-util") (r "^0.8.3") (f (quote ("parse-floats"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "1n1dmpsq0c7mwlvw3kjsy0ds3n2qfg4mbf16dnzdxrivgkcfw67m") (f (quote (("std" "lexical-util/std" "lexical-parse-integer/std") ("safe" "lexical-parse-integer/safe") ("radix" "lexical-util/radix" "lexical-parse-integer/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two" "lexical-parse-integer/power-of-two") ("nightly" "lexical-parse-integer/nightly") ("lint" "lexical-util/lint" "lexical-parse-integer/lint") ("format" "lexical-util/format" "lexical-parse-integer/format") ("f16" "lexical-util/f16") ("f128" "lexical-util/f128") ("default" "std") ("compact" "lexical-util/compact" "lexical-parse-integer/compact"))))))

(define-public crate-lexical-parse-float-0.8.5 (c (n "lexical-parse-float") (v "0.8.5") (d (list (d (n "lexical-parse-integer") (r "^0.8.5") (k 0)) (d (n "lexical-util") (r "^0.8.5") (f (quote ("parse-floats"))) (k 0)) (d (n "proptest") (r "^0.10.1") (d #t) (k 2)) (d (n "static_assertions") (r "^1") (d #t) (k 0)))) (h "0py0gp8hlzcrlvjqmqlpl2v1as65iiqxq2xsabxvhc01pmg3lfv8") (f (quote (("std" "lexical-util/std" "lexical-parse-integer/std") ("safe" "lexical-parse-integer/safe") ("radix" "lexical-util/radix" "lexical-parse-integer/radix" "power-of-two") ("power-of-two" "lexical-util/power-of-two" "lexical-parse-integer/power-of-two") ("nightly" "lexical-parse-integer/nightly") ("lint" "lexical-util/lint" "lexical-parse-integer/lint") ("format" "lexical-util/format" "lexical-parse-integer/format") ("f16" "lexical-util/f16") ("f128" "lexical-util/f128") ("default" "std") ("compact" "lexical-util/compact" "lexical-parse-integer/compact"))))))

