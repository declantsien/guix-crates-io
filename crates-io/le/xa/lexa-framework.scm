(define-module (crates-io le xa lexa-framework) #:use-module (crates-io))

(define-public crate-lexa-framework-0.1.0 (c (n "lexa-framework") (v "0.1.0") (h "1fmk79pyh76l6xj5yy8ym6ca256qmyzpj3l3vp75959af5gi78iw")))

(define-public crate-lexa-framework-0.1.1 (c (n "lexa-framework") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)))) (h "15skkggakv8wsnc0q2wfqqq5dnaxc7q918gvgw71gg40k41zl0hy")))

(define-public crate-lexa-framework-0.1.2 (c (n "lexa-framework") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)))) (h "16abm2labiiajcrzmiv0s2p6y9mcij8vm516mgc5jk51kavw0xgg")))

(define-public crate-lexa-framework-0.1.3 (c (n "lexa-framework") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)))) (h "00inmsp48avzq4f0njg666sx4r8qcrlyvna78s4819iqhbx2qwyy") (f (quote (("cors" "tower-http/cors"))))))

(define-public crate-lexa-framework-0.1.4 (c (n "lexa-framework") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)))) (h "0dhbl7k15z448j86vin1v9lkvjxw2bcvxrqqp0y3h3jvk5pymx7n") (f (quote (("cors" "tower-http/cors"))))))

(define-public crate-lexa-framework-0.2.0 (c (n "lexa-framework") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "0kdzkx53694mimrlzv79iwrax89f03f1q616b38knlf9sl8an8h2") (f (quote (("database-postgres" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("cors" "tower-http/cors")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.1 (c (n "lexa-framework") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "0acvpnlnawzcjdjm148b2yyxvhwa9fwng9l7br30c08a0ikf3qad") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.3 (c (n "lexa-framework") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "1xhkij6dgwi7422djna1m49k350rzdj97b4x23hb46mpgjrl47rx") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.4 (c (n "lexa-framework") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.1") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "12066sajhnxjdhgj0pch5f5j7rd02cr77jkr2hgwf97px6w5nsca") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.5 (c (n "lexa-framework") (v "0.2.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.2") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "0b9ll0wnjqhs56lkahr2r5i3hjdmjs4014832rxqma0y9xigpadk") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.6 (c (n "lexa-framework") (v "0.2.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.2") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "1ni58c15311ki53jbmlzq16jw4b4rhnyqdhz0vhl1cir2z1mj89c") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.7 (c (n "lexa-framework") (v "0.2.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.2") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "1rjkvd3r8wvm9apa0awv9wnivp1f7llny1hjm69xnd70nrrp9ngg") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

(define-public crate-lexa-framework-0.2.8 (c (n "lexa-framework") (v "0.2.8") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-server") (r "^0.5") (f (quote ("tls-rustls"))) (d #t) (k 0)) (d (n "axum-sessions") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "html-escape") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexa-database") (r "^0.1") (d #t) (k 0)) (d (n "lexa-env") (r "^0.1") (d #t) (k 0)) (d (n "lexa-framework-macro") (r "^0.2") (d #t) (k 0)) (d (n "lexa-fs") (r "^0.1") (d #t) (k 0)) (d (n "lexa-logger") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lexa-wildcard-matching") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlb") (r "^0.3") (f (quote ("chrono-support"))) (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tower-cookies") (r "^0.9") (f (quote ("private" "signed"))) (o #t) (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tower-layer") (r "^0.3") (d #t) (k 0)) (d (n "tower-service") (r "^0.3") (d #t) (k 0)) (d (n "ulid") (r "^1.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)))) (h "0cimdadrlwxh0syfdl9930psip05sh5mwacdk5cgp3w5v10b360w") (f (quote (("encryption-argon2" "rust-argon2") ("database-postgres" "database" "lexa-database/postgres-sgbd" "sqlb" "sqlx/postgres") ("database") ("cors" "tower-http/cors") ("cookies" "axum-sessions" "tower-cookies") ("auth" "bitflags" "cookies" "database-postgres" "tower-http/auth" "time")))) (s 2) (e (quote (("uuid" "dep:uuid") ("ulid" "dep:ulid") ("time" "dep:time" "chrono"))))))

