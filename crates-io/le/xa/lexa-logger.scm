(define-module (crates-io le xa lexa-logger) #:use-module (crates-io))

(define-public crate-lexa-logger-0.1.0 (c (n "lexa-logger") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0shfjpd9sxp1cih0d1fss3hcryk2bd2mv5v1h8jpf2crg5l8c2s0")))

(define-public crate-lexa-logger-0.1.1 (c (n "lexa-logger") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "07q5z3wgx9nhwqmlg6flyn9id4nl0vksxbnw4nqmlgkdypiz62kp") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.1.2 (c (n "lexa-logger") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0rlga9lfkiiqyz3s9r1a6jpqkhrj54y4x7x6jqgx9xqf98yxgwwc") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.1.3 (c (n "lexa-logger") (v "0.1.3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "06s5f9id46f5mv76k3xvf8dvvi2dpf54vfij5y4fcyxndkginds0") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.2.0 (c (n "lexa-logger") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0hi4jwgcs1baxavq4qk2g3c8czc40qamakc9a7jafkiaaq6x2253") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.3.0 (c (n "lexa-logger") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0xn6iqqgn1lww1ba5lbnbz2f4halcrpcd1dmm828wbh4h9czymjr") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.3.1 (c (n "lexa-logger") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "1f7cdi3sawf5yjbmkkwzjmpzgjgh77jq2ya0kq20i62zjp3qjhpf") (s 2) (e (quote (("tracing" "dep:tracing" "tracing-subscriber") ("serde" "dep:serde"))))))

(define-public crate-lexa-logger-0.3.2 (c (n "lexa-logger") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "159d0cx35xg6ichvni29lvqqd0j6068nb854zdjji26g596nis2k") (s 2) (e (quote (("tracing" "dep:tracing" "tracing-subscriber") ("serde" "dep:serde"))))))

