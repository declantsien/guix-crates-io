(define-module (crates-io le et leetcode-tui-config) #:use-module (crates-io))

(define-public crate-leetcode-tui-config-0.4.0 (c (n "leetcode-tui-config") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo" "wrap_help" "unicode" "string" "unstable-styles"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "leetcode-tui-shared") (r "^0.4.0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "native_db") (r "^0") (d #t) (k 0)) (d (n "ratatui") (r "^0.23") (f (quote ("all-widgets"))) (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0") (d #t) (k 0)) (d (n "toml") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "tracing-error") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (f (quote ("env-filter" "serde"))) (d #t) (k 0)))) (h "1pac8nl9cad6cx9h15xs1shiaf27g6bbcppcrp9sv7ppzj8g9by2")))

