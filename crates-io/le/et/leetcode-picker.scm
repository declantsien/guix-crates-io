(define-module (crates-io le et leetcode-picker) #:use-module (crates-io))

(define-public crate-leetcode-picker-0.1.0 (c (n "leetcode-picker") (v "0.1.0") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "1v8dm5dv9dgf6lqhy2n3bfw62r5324z2aqnk483g366b1jzhxf0n")))

(define-public crate-leetcode-picker-0.1.1 (c (n "leetcode-picker") (v "0.1.1") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "0d9mhn7hb54fp9x9xqqy7splv5az53pdx30srnzf4j88m0nslls8")))

(define-public crate-leetcode-picker-0.1.3 (c (n "leetcode-picker") (v "0.1.3") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "1sdxvkblc52hdpz85mzsk657ikrm997hq1p24nzidqkw1lwjvzpy")))

(define-public crate-leetcode-picker-0.1.5 (c (n "leetcode-picker") (v "0.1.5") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "emacs") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "0f3ab886h8x5nmfx56h8vv7hnhwjrzykn9bw4zn72lzns9j1xg9j") (f (quote (("emacs-support" "emacs"))))))

(define-public crate-leetcode-picker-0.1.6 (c (n "leetcode-picker") (v "0.1.6") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "emacs") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "1x5d263mzyj7h64m5b1la2xk00h7cnsw73gc8m9nkz3nwmhak477") (f (quote (("emacs-support" "emacs"))))))

(define-public crate-leetcode-picker-0.1.7 (c (n "leetcode-picker") (v "0.1.7") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "emacs") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "1x5j9sn4mzvbpxrj56gmjglqicj70bw8l3nm4v69fmfb7pdpfl2a") (f (quote (("emacs-support" "emacs"))))))

(define-public crate-leetcode-picker-0.1.8 (c (n "leetcode-picker") (v "0.1.8") (d (list (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6") (d #t) (k 0)) (d (n "emacs") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "question") (r "^0.2.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "cookies"))) (d #t) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)))) (h "0hahnrk704kk4q09xlrbij8dkv1s1jk5sfgpdknwgddvk2psgfk7") (f (quote (("emacs-support" "emacs"))))))

