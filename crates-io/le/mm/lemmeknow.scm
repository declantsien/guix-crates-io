(define-module (crates-io le mm lemmeknow) #:use-module (crates-io))

(define-public crate-lemmeknow-0.1.0 (c (n "lemmeknow") (v "0.1.0") (d (list (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "comfy-table") (r "^0.1.1") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1qy9s97p4ssa3h6jaar071vj31d31r8gva5ji2lcx40wi025xzk4")))

(define-public crate-lemmeknow-0.2.0 (c (n "lemmeknow") (v "0.2.0") (d (list (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "comfy-table") (r "^0.1.1") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1zix1qy7787nm9rs624blnwy8a6dz2kv43i64kh3pkx3k7jpzzwz")))

(define-public crate-lemmeknow-0.3.0 (c (n "lemmeknow") (v "0.3.0") (d (list (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "145hmsn3767ba5gs3k0kvm91hvragxwnhsarnpqr58rcrzdz537m")))

(define-public crate-lemmeknow-0.4.0 (c (n "lemmeknow") (v "0.4.0") (d (list (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0zdmybq2qv5fkzi1nkc38vrlgxx98wm93i9nhghn8b4463d9nkdj") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

(define-public crate-lemmeknow-0.4.1 (c (n "lemmeknow") (v "0.4.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0") (d #t) (k 2)) (d (n "clap") (r "^3.1.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.8.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "16zv49905axw88f6x11znjjr30vw6dwi41qvxyjpdccnbj925i13") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

(define-public crate-lemmeknow-0.5.0 (c (n "lemmeknow") (v "0.5.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "comfy-table") (r "^6.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fancy-regex") (r "^0.10.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0nrq51p3pcp4n9v72wnligqm4rrf2shz7pcmx4xbanwwfyiyin81") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

(define-public crate-lemmeknow-0.6.0 (c (n "lemmeknow") (v "0.6.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "comfy-table") (r "^6.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fancy-regex") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "13r0bffn1sm2h712yckvkid5vi05mxdjrdnhcpbplhwpn60d9300") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

(define-public crate-lemmeknow-0.7.0 (c (n "lemmeknow") (v "0.7.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0") (d #t) (k 2)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "comfy-table") (r "^6.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fancy-regex") (r "^0.10") (d #t) (k 1)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "predicates") (r "^2.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "uneval") (r "^0.2.4") (d #t) (k 1)))) (h "0hd9daqq5hnaldiyxb06hr8clyqsg3safgp3zh3xqms2byf53hxm") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

(define-public crate-lemmeknow-0.8.0 (c (n "lemmeknow") (v "0.8.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "assert_fs") (r "^1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "comfy-table") (r "^6.1.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "fancy-regex") (r "^0.11") (d #t) (k 1)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)))) (h "0cs7kqyx3zzizqlw3sj4cr7fjpm1kkzwgkmwn91kpfiskhydr13a") (f (quote (("default" "cli") ("cli" "comfy-table" "clap"))))))

