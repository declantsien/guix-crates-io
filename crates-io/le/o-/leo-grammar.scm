(define-module (crates-io le o- leo-grammar) #:use-module (crates-io))

(define-public crate-leo-grammar-1.0.5 (c (n "leo-grammar") (v "1.0.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "00q1jvhracvyzdp69x7p4bp7v26mg8x02ndf914yv231hr093x6a") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.0.6 (c (n "leo-grammar") (v "1.0.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0m3ffxf1jqqa2ny7iffrhn1s9jb0c6qpln49l5ibfsqx7p7favqk") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.0.7 (c (n "leo-grammar") (v "1.0.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0f98r5nsiplm3i9mqd5zd63pdkv7r8c6w2zd2zmnm93chm3alf9i") (f (quote (("default") ("ci_skip"))))))

(define-public crate-leo-grammar-1.0.8 (c (n "leo-grammar") (v "1.0.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0dpyiz63caqm6fjnwqr37a5cq3i6rxwgjz6llpn6ix4awfbmc8f7") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.1.8 (c (n "leo-grammar") (v "1.1.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "1h2n01h5cr1fxin32kvm9kdchj7mxma1ggjvzg4nr62hjhpng3cz") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.2.0 (c (n "leo-grammar") (v "1.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "0flhacbzv8jkfindrzl7p1clvz35kbmbj96flb57qs725zcpkcay") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.2.1 (c (n "leo-grammar") (v "1.2.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "03h0s85xkmlssgsn69fl1mxszhdg65kyfm1ixid217rsxks9mnrf") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.2.2 (c (n "leo-grammar") (v "1.2.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "18lf6fln6pzaybmvpfnrnm6l02ci0yb9kaz23gr0750qd9pn8p5h") (f (quote (("default") ("ci_skip")))) (y #t)))

(define-public crate-leo-grammar-1.2.3 (c (n "leo-grammar") (v "1.2.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "from-pest") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.0") (d #t) (k 0)) (d (n "pest-ast") (r "^0.3.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "063zpab5d9h4q2a6i1mabgk7p2b5k7bvyvb55cxfrprjmjnbzzrg") (f (quote (("default") ("ci_skip")))) (y #t)))

