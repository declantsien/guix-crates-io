(define-module (crates-io le an lean-sys) #:use-module (crates-io))

(define-public crate-lean-sys-0.0.1 (c (n "lean-sys") (v "0.0.1") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0dywzdjiiwijnf5091n7rwnms8y5scw1mj2slldcc07gbqkfz26p") (f (quote (("small_allocator") ("default" "small_allocator")))) (l "leanshared")))

(define-public crate-lean-sys-0.0.2 (c (n "lean-sys") (v "0.0.2") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "081dkqh62q89ksgq4cpnqmvb35si54zzvw3g6y8a5l25q9d2pcqr") (f (quote (("small_allocator") ("default" "small_allocator")))) (l "leanshared")))

(define-public crate-lean-sys-0.0.3 (c (n "lean-sys") (v "0.0.3") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1l9fnfqp501rwdni62c9w519akj7maxbb84apalkm45gyaq00241") (f (quote (("small_allocator") ("default" "small_allocator")))) (l "leanshared")))

(define-public crate-lean-sys-0.0.4 (c (n "lean-sys") (v "0.0.4") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1h9ps4mxidpjpz8wn1niix0sjw0h1wk0m0wyn2h74kf41yyrrafn") (f (quote (("small_allocator") ("default" "small_allocator")))) (l "leanshared")))

(define-public crate-lean-sys-0.0.5 (c (n "lean-sys") (v "0.0.5") (d (list (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "042f59zwf1k3zh1nwsy6p9g6lc7r8s3s25gs0nczrdfkjz2r49vh") (f (quote (("static") ("small_allocator") ("extern") ("default" "small_allocator" "static")))) (l "leanshared")))

(define-public crate-lean-sys-0.0.6 (c (n "lean-sys") (v "0.0.6") (d (list (d (n "libc") (r "^0.2") (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0jn8642fd1fxjm790mgrwzddihvw14z0xaqc9jqbq1j6kyc8jj5x") (f (quote (("static") ("small_allocator") ("extern") ("default" "small_allocator" "static")))) (l "leanshared")))

