(define-module (crates-io le gi legion-core) #:use-module (crates-io))

(define-public crate-legion-core-0.2.2 (c (n "legion-core") (v "0.2.2") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 2)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 2)) (d (n "metrics") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "type-uuid") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1qdw26s0d9plgnaq7qim419kpdrbzlzpgh1gg7zmc705l550ds7a") (f (quote (("serialize" "serde") ("par-iter" "rayon") ("ffi"))))))

(define-public crate-legion-core-0.2.3 (c (n "legion-core") (v "0.2.3") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 2)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 2)) (d (n "metrics") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "type-uuid") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0f59idi5s3m3n4qc779r4ka38njhqxsvw41z6z680r0iak9lpw4n") (f (quote (("serialize" "serde") ("par-iter" "rayon") ("ffi"))))))

(define-public crate-legion-core-0.2.4 (c (n "legion-core") (v "0.2.4") (d (list (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 2)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 2)) (d (n "metrics") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.2") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "type-uuid") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0xgic2knlb1gqxr0cazlmxlhkdgavbvd20qsmkazz07np7fb2va9") (f (quote (("serialize" "serde") ("par-iter" "rayon") ("ffi"))))))

