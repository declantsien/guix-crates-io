(define-module (crates-io le pt leptos-pretty) #:use-module (crates-io))

(define-public crate-leptos-pretty-1.0.0 (c (n "leptos-pretty") (v "1.0.0") (d (list (d (n "annotate-snippets") (r "^0.9") (f (quote ("color"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.4") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-cargo") (r "^0.12.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "rstml") (r "^0.11") (d #t) (k 0)) (d (n "rustfmt-config_proc_macro") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "term") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "unicode-properties") (r "^0.1") (f (quote ("general-category"))) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0smv4klj9b8zwxj36xj60c4508x4l0vzrnl2cgh1y9vsjc4bc34a") (f (quote (("rustfmt-format-diff") ("generic-simd" "bytecount/generic-simd") ("default" "cargo-fmt" "rustfmt-format-diff") ("cargo-fmt"))))))

(define-public crate-leptos-pretty-1.0.1 (c (n "leptos-pretty") (v "1.0.1") (d (list (d (n "annotate-snippets") (r "^0.9") (f (quote ("color"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytecount") (r "^0.6.4") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-cargo") (r "^0.12.0") (d #t) (k 0)) (d (n "diff") (r "^0.1") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (f (quote ("span-locations"))) (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "rstml") (r "^0.11") (d #t) (k 0)) (d (n "rustfmt-config_proc_macro") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0") (d #t) (k 0)) (d (n "term") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "unicode-properties") (r "^0.1") (f (quote ("general-category"))) (k 0)) (d (n "unicode-segmentation") (r "^1.9") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0cyiphmcjlsx220p4spbxml8akkhpkp1awvyw5prdbkvawpwkdkc") (f (quote (("rustfmt-format-diff") ("generic-simd" "bytecount/generic-simd") ("default" "cargo-fmt" "rustfmt-format-diff") ("cargo-fmt"))))))

