(define-module (crates-io qs ca qscan) #:use-module (crates-io))

(define-public crate-qscan-0.1.0 (c (n "qscan") (v "0.1.0") (d (list (d (n "async-std") (r "^1.11.0") (d #t) (k 0)) (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)))) (h "1nif8d4cn0pb9nyb6za5psyyb3ak18pv0n3y6dpzhszsggdl22v7")))

(define-public crate-qscan-0.2.0 (c (n "qscan") (v "0.2.0") (d (list (d (n "async-std") (r "^1.11.0") (d #t) (k 0)) (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)))) (h "065k0n4m25d2dab9awvkxc8r3p437p0vhszaglla0c01x6a47z47") (f (quote (("build-binary" "clap"))))))

(define-public crate-qscan-0.3.0 (c (n "qscan") (v "0.3.0") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)))) (h "13jnw28yj6c6cifd5wwq1wpwzxg3i77ihzb994hi214jd16q8qd4") (f (quote (("build-binary" "clap"))))))

(define-public crate-qscan-0.3.1 (c (n "qscan") (v "0.3.1") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "02ssf5qmnwrh0fs2avafmzikrksj8sjwvjkrpp1c3cp6i3azd19m") (f (quote (("build-binary" "clap"))))))

(define-public crate-qscan-0.3.2 (c (n "qscan") (v "0.3.2") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "1fpdwvmqib7c4i49lhcs66kxcfakxxli6mrjaafwd62jzdn6p18i") (f (quote (("build-binary" "clap"))))))

(define-public crate-qscan-0.3.3 (c (n "qscan") (v "0.3.3") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "1wiihwczm29bvnl2m8b6zdmb9ialb6yy3bvm13q0pzv5baaibdpj")))

(define-public crate-qscan-0.4.0 (c (n "qscan") (v "0.4.0") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "00g66mxlyz2jd1w99c91ingyyicig92vyjwy29nwa4afhw8jhqby")))

(define-public crate-qscan-0.4.1 (c (n "qscan") (v "0.4.1") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "15fmhpzrs3lv8qxskvm769igmhij4ammqvxhj8q6alq27jdqkq91")))

(define-public crate-qscan-0.5.0 (c (n "qscan") (v "0.5.0") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "1385xwasjabszhaa2m7w09b9m1v6zkgj81dnli5a9p6bc5j5nf37") (f (quote (("serialize" "serde" "serde_json"))))))

(define-public crate-qscan-0.6.0 (c (n "qscan") (v "0.6.0") (d (list (d (n "cidr-utils") (r "^0.5.6") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "surge-ping") (r "^0.7.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.21.2") (f (quote ("dns-over-rustls"))) (d #t) (k 0)))) (h "0hlg8xllqj4hg0024kqz6bqs2yyrm7zcrmlqk2imk24qcckfgs6k") (f (quote (("serialize" "serde" "serde_json"))))))

