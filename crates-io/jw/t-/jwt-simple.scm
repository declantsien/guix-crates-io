(define-module (crates-io jw t- jwt-simple) #:use-module (crates-io))

(define-public crate-jwt-simple-0.0.0 (c (n "jwt-simple") (v "0.0.0") (h "0yll903afi3zn2gqa1w9667jqbznazmm2d37hhhwx345qg998i1m")))

(define-public crate-jwt-simple-0.0.1 (c (n "jwt-simple") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "13jsfd9ssnl1kc7inw7sl65dxklacngafcd2lq6zwdfzb6bdy9qk")))

(define-public crate-jwt-simple-0.0.2 (c (n "jwt-simple") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1f27331hms6v9n37v8nf8wfg8fch5jzg44vpf1sxyvckilq6w7dx")))

(define-public crate-jwt-simple-0.0.3 (c (n "jwt-simple") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0iscvh9nla0xaha1can3cark3ilmvg2a9mgyjcxzg54gxl542av1")))

(define-public crate-jwt-simple-0.1.0 (c (n "jwt-simple") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "17p7pf5zz1kv1288zry5gjxgwvakpn883q73qqz90zzi3kx7qmhh")))

(define-public crate-jwt-simple-0.1.1 (c (n "jwt-simple") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0b688swn6jxgdd6w5554qkxfnvp2bbdmacvqnn3p92hljflm59mq")))

(define-public crate-jwt-simple-0.1.2 (c (n "jwt-simple") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "08l8f367sbhvzixv5jjl2m6dac31i44zl52hay2v6kf5prcnc5aq")))

(define-public crate-jwt-simple-0.1.3 (c (n "jwt-simple") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0lcjigqw11b7q8zfdjfy9qmli4bcxcmbrsickmkjhg6hpg9wbc14")))

(define-public crate-jwt-simple-0.1.4 (c (n "jwt-simple") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "16jk46r5mhhd68qabx9v1p0c3zhzmjq1mgwlbrl2jjm99abq0jw0")))

(define-public crate-jwt-simple-0.1.5 (c (n "jwt-simple") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0897i5nkmi8gz1zcylgsji0gxi4020zkj2s23iqymnlns50blkjh")))

(define-public crate-jwt-simple-0.1.6 (c (n "jwt-simple") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1bkplvznsmp2zp25h84lzd5dlm23ixfcl87hiqymciybjw3h5kdv")))

(define-public crate-jwt-simple-0.1.8 (c (n "jwt-simple") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "01sdw4pl1ygirawgpgpz3l793xf9p6fcf6lfnhsqv8ai0jrjhrc4")))

(define-public crate-jwt-simple-0.1.9 (c (n "jwt-simple") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.4") (f (quote ("ecdsa" "ecdsa-core" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1s829awbp7z6xswmlmx8cwipp669vc64w9zh9mh0j3iq6zkvq7pr")))

(define-public crate-jwt-simple-0.1.10 (c (n "jwt-simple") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1x9wb6gbxp6drmkrwv2s144lw5yy34y7yvzh1j2cxcvyfw86raam")))

(define-public crate-jwt-simple-0.1.11 (c (n "jwt-simple") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1112hyb5mkcjdbb8lggsyq9mr51xq4r5jbw2bqjf55wjrzmxkaxz")))

(define-public crate-jwt-simple-0.1.12 (c (n "jwt-simple") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0nfhbj0azars292zbpsslihbcr43hmygpvb12i04g3fzpjkvlwy5")))

(define-public crate-jwt-simple-0.2.0 (c (n "jwt-simple") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "09j25y6x2f78cbbm29nj690ll01hi0g1v3ygjnlsap12np1vx871")))

(define-public crate-jwt-simple-0.2.1 (c (n "jwt-simple") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "09iwhfwf6a227p9cdiq3zi20s3aznvy4jkbshaib253jmi327883")))

(define-public crate-jwt-simple-0.1.13 (c (n "jwt-simple") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "0pmccwhxw7ji6ah92fsf0an3pjwhk8217mz4iiz2caj8jzwby7sf")))

(define-public crate-jwt-simple-0.2.2 (c (n "jwt-simple") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.5") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1hcizl5y93f3kaayr1j0ywd8i24wj6c7l74mhfqw7zak7zb2ki9c")))

(define-public crate-jwt-simple-0.2.3 (c (n "jwt-simple") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.6") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.6") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "082z0b5f4iw02dhxmlbnsrpxjx1zk6cs2zx6h1pnqn3004fjy0za")))

(define-public crate-jwt-simple-0.2.4 (c (n "jwt-simple") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.6") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "p256") (r "^0.6") (f (quote ("ecdsa" "std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "19z4drvqcrk9giyxsfm4n4wvn7waljz998hn4s912lslhy2yhj84")))

(define-public crate-jwt-simple-0.2.5 (c (n "jwt-simple") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "1c1l6p3xl9pvf52frqah2fzh138jhd7rbqhs27y8hynnxcza62l4")))

(define-public crate-jwt-simple-0.2.6 (c (n "jwt-simple") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "09fqis26q34fawgswhlbp0sin4b8gq7s0n01xh4h2wm6qdic6shx")))

(define-public crate-jwt-simple-0.2.7 (c (n "jwt-simple") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "0p364k26rx47w3f894fpm31h2zbp3ms8fxsml1a1vm1gzx5q8ffi")))

(define-public crate-jwt-simple-0.2.8 (c (n "jwt-simple") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^0.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "1qgf7krpfpn6mfvjaqxi0q4bpi1n93kkdjh1zxbh03w9pji2zgla")))

(define-public crate-jwt-simple-0.9.0 (c (n "jwt-simple") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "1a47yj5hwgyigf413vz85iqxcs3zzjb24pq92m6zhqcm25wyalj6")))

(define-public crate-jwt-simple-0.9.1 (c (n "jwt-simple") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "0mkliv3v78apgzk4ry134s9a2pfd2kmwpgyraq3srqizm3ldg9zw")))

(define-public crate-jwt-simple-0.9.2 (c (n "jwt-simple") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "1d65z97shjkl02rfnm1v2v29jjcj7n30v2r87hcd4hgm763krbqk")))

(define-public crate-jwt-simple-0.9.3 (c (n "jwt-simple") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rsa") (r "^0.3") (d #t) (k 0)) (d (n "rsa-export") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "1jvgad3ipmx507h0wbzr233pfbfalcn7y79p79ik4zys7ma33mnd")))

(define-public crate-jwt-simple-0.9.4 (c (n "jwt-simple") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.7") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_08") (r "^0.8") (d #t) (k 0) (p "rand")) (d (n "rsa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.2") (d #t) (k 0)))) (h "0ffkwsq4hd846p8ny95352lmhys3ryjjd02s0r30f8jwsgnid6r8")))

(define-public crate-jwt-simple-0.10.0 (c (n "jwt-simple") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.8.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.8.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "11975s6qncbz1fl0rl0l6idrp5andw3k3s423sbg56zcn1vqcy4w")))

(define-public crate-jwt-simple-0.10.1 (c (n "jwt-simple") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "1sgr5jhdcwhqldv4vnj2qhxil7w1149cj7kd9wkx4by07m430miv")))

(define-public crate-jwt-simple-0.10.2 (c (n "jwt-simple") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "19d1kc90yw4gcf4j7lmwd0pn7qywb4j2jxjv1n4681xzj07sd4yp")))

(define-public crate-jwt-simple-0.10.3 (c (n "jwt-simple") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "1yh9q5vwx5sdw12f52kisdmlh5sg9qaj0bqdzgqlh2zm8r2b9674")))

(define-public crate-jwt-simple-0.10.4 (c (n "jwt-simple") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0xl1mpflpm0j86kxq6lhp2hqw3jxyc67zsp4js0ji6lmv4qmvdrh")))

(define-public crate-jwt-simple-0.10.5 (c (n "jwt-simple") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1.10") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "1hnq9qj1724729za382d034p61jq3s7nc2xlxz46yda4g11hyp82")))

(define-public crate-jwt-simple-0.10.6 (c (n "jwt-simple") (v "0.10.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1.11") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha256") (r "^0.1") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^0.1") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0zdfl55gyqk68wk2zpk2cg14zw0gsbsyirmmi1w1sncwzp8qbcrg")))

(define-public crate-jwt-simple-0.10.7 (c (n "jwt-simple") (v "0.10.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^0.1.11") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.0.0") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.0.0") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.0.0") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0ga3bgqmhwlc2akqgxw61lc11grxq0chsjxmm59n3002zv208vi2")))

(define-public crate-jwt-simple-0.10.8 (c (n "jwt-simple") (v "0.10.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.0") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.0.0") (d #t) (k 0)) (d (n "hmac-sha256") (r "~1.0") (f (quote ("traits"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "~1.0") (f (quote ("traits" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.9.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "177vrp3d7r8pf9hp7ykl8lj7jk5c315nh3pn1zlkv26bp13nbdb2")))

(define-public crate-jwt-simple-0.10.9 (c (n "jwt-simple") (v "0.10.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.0") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.0.0") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.1") (f (quote ("traits09"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.1") (f (quote ("traits09" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0a6p09fc8jmjx2xs615zf80s69ybdab947y4vck3c1ryi1kz2dn0")))

(define-public crate-jwt-simple-0.10.10 (c (n "jwt-simple") (v "0.10.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.0") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.0.0") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.1") (f (quote ("traits09"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.1") (f (quote ("traits09" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0rwg6h5byhzlj9xj0qhkfmvpcilammv0fbsxdkgmxxainfrigbm6")))

(define-public crate-jwt-simple-0.11.0 (c (n "jwt-simple") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "coarsetime") (r "^0.1") (d #t) (k 0)) (d (n "ct-codecs") (r "^1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.0") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.0.0") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.1") (f (quote ("traits09"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.1") (f (quote ("traits09" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.10.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rsa") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.4") (d #t) (k 0)))) (h "0hvf7028ysx2rq2i1vzbjakazgnxip0v3ka6x24ppab5qgsakwvc")))

(define-public crate-jwt-simple-0.11.1 (c (n "jwt-simple") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^1.0.15") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.1") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.4") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.2") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.11.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.11.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "spki05") (r "^0.5.4") (d #t) (k 0) (p "spki")) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0sikby3kwif7vwb0kxgy7xvs5cws6vf97jgrys5ch3kdsyi9mzm7") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.2 (c (n "jwt-simple") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.2") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.2") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.5") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.3") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.11.6") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.11.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.11.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0qqgam614m04dhgkcr8shcjk5x8vr0bmkrllr54w6z9dskr016jj") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.3 (c (n "jwt-simple") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.3") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.6") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.4") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "0m6wwzq6vdlxhdg16khyrkmh2gw2kqxak0jbzvi20zm28kjwi911") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.4 (c (n "jwt-simple") (v "0.11.4") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.23") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.3") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.6") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.4") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.12.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "zeroize") (r "^1.5.7") (d #t) (k 0)))) (h "1936cbyy856ics9fgrs56msz5vn7in2bc9h0qc14x07723zxvx3z") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.5 (c (n "jwt-simple") (v "0.11.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.7") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.23") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.3") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.6") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.4") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.162") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "1nkhn5j25kyl4sc5b8q829gyxib61n7sh861nqpvm0npjmlhhdq5") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.6 (c (n "jwt-simple") (v "0.11.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.23") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "06xaxl66acbz5h6nz5ddh8vly9wz0s66jv5sr5b2nlyipkkl2dvk") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.7 (c (n "jwt-simple") (v "0.11.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.24") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "1pylpc20wkvw7iiaj9b7mhyqszfsxpjydvaa11cn7rwrccdsr0qj") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.8 (c (n "jwt-simple") (v "0.11.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.29") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "024dwjcrinr0p3ha273gbmjn4kc52vymv9mgig1nwqyhmdqnkr89") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.11.9 (c (n "jwt-simple") (v "0.11.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.31") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1.6.0") (d #t) (k 0)))) (h "0gpqbb85b1fvj9ssg6ls64f8x6nbmlzp6l7aplx7d78m6axr4y1m") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.0 (c (n "jwt-simple") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "boring") (r "^4.1.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0qml0nijcjmy5f81zx9cw3n50pp98rflvfl003g2g7yg2k79s5a0") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.1 (c (n "jwt-simple") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "boring") (r "^4.1.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.4") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.7.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0fnfica7dlsra8594va0lxli4060jlznsr0zhhfvk462n81s6s2r") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.2 (c (n "jwt-simple") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.5") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rsa") (r "^0.8.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spki") (r "^0.6.0") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0rg4c23a4k98y15w9v9jv2i2kpc74703lnd94vh8acvjsdysvifp") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.3 (c (n "jwt-simple") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.0") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0vgq3r2lm2x10m2lwdcpbbabwvmlv2s858qld35qgbjprdlcwhp5") (f (quote (("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.4 (c (n "jwt-simple") (v "0.12.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0b08yvgd58ch9qjwxr6zhma35620gbmbpaik0pkjafz0riq80nsf") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.5 (c (n "jwt-simple") (v "0.12.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0v78a7iaqrxirhn1j09igyknfv43mhiync903yfkjqkazf00lh4z") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.6 (c (n "jwt-simple") (v "0.12.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "1pcbkl3zhmra70j2pjky1pgmmj9qhvps4fm2hjdym4j1c52l25m1") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.7 (c (n "jwt-simple") (v "0.12.7") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.3.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "1yghd14xrh22rvxf2gpln1g5i58izmnfxag68nrpx878y3jrs5c9") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.8 (c (n "jwt-simple") (v "0.12.8") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.9") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.5.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.34") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.1.1") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.3") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0a3nb2sl4dibfhl1x7sk0dfs7fah24shykkrbdj3ar72pgm5b4xw") (f (quote (("wasi-abi2" "coarsetime/wasi-abi2") ("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-0.12.9 (c (n "jwt-simple") (v "0.12.9") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.9") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.5.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.34") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.1.1") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.3") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "181bk1nhn42wgw0d9hlx7msnn149kr021zwbcpian46mmbsn2ih9") (f (quote (("wasi-abi2" "coarsetime/wasi-abi2") ("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

