(define-module (crates-io jw t- jwt-simple-no-nbf-fork) #:use-module (crates-io))

(define-public crate-jwt-simple-no-nbf-fork-0.12.7 (c (n "jwt-simple-no-nbf-fork") (v "0.12.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "0cfbik59qr2zvkinf45znxdi32iqy19fkyx0bzx9vkaqiy0kzf02") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-no-nbf-fork-0.12.8 (c (n "jwt-simple-no-nbf-fork") (v "0.12.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "062sya7a64bbcyqzsrqr9rijmap5l5r3x09rm4b4psqd9d9hv1ra") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

(define-public crate-jwt-simple-no-nbf-fork-0.12.9 (c (n "jwt-simple-no-nbf-fork") (v "0.12.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "benchmark-simple") (r "^0.1.8") (d #t) (k 2)) (d (n "binstring") (r "^0.1.1") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1.0.2") (d #t) (k 0)) (d (n "boring") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.33") (d #t) (k 0)) (d (n "ct-codecs") (r "^1.1.1") (d #t) (k 0)) (d (n "ed25519-compact") (r "^2.0.6") (f (quote ("pem"))) (d #t) (k 0)) (d (n "hmac-sha1-compact") (r "^1.1.4") (d #t) (k 0)) (d (n "hmac-sha256") (r "^1.1.7") (f (quote ("traits010"))) (d #t) (k 0)) (d (n "hmac-sha512") (r "^1.1.5") (f (quote ("traits010" "sha384"))) (d #t) (k 0)) (d (n "k256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "p384") (r "^0.13.0") (f (quote ("ecdsa" "std" "pkcs8" "pem"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "superboring") (r "^0.1.2") (d #t) (t "cfg(any(target_arch = \"wasm32\", target_arch = \"wasm64\"))") (k 0)) (d (n "superboring") (r "^0.1.2") (o #t) (d #t) (t "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))") (k 0)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "zeroize") (r "^1.7.0") (d #t) (k 0)))) (h "1lx71i5i6zvn4fi9mqy36s5d3mx87rh7xly8j3hgfqkkigmv3qpm") (f (quote (("pure-rust" "superboring") ("optimal" "boring") ("default" "optimal") ("cwt" "ciborium"))))))

