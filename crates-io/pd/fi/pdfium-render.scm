(define-module (crates-io pd fi pdfium-render) #:use-module (crates-io))

(define-public crate-pdfium-render-0.4.0 (c (n "pdfium-render") (v "0.4.0") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11kmp5im6kxdghcliv4qz95wvmxj0s0ayp5in48mff1whpvxy1zs")))

(define-public crate-pdfium-render-0.4.1 (c (n "pdfium-render") (v "0.4.1") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "00zm0q6xdvjh4j3z8srqypmbw4pyrqvb5l0hl31cy09nfllm0ffd")))

(define-public crate-pdfium-render-0.4.2 (c (n "pdfium-render") (v "0.4.2") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0r8rnbzigysw7vh8sinm7dqcydaafkqy71ndrsr96jsx6i0nf2p1")))

(define-public crate-pdfium-render-0.5.0 (c (n "pdfium-render") (v "0.5.0") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ygsy8ppa4zg4zdi4agnvs7jhnybazkpi0m7c6fkpqih8b43mqmx")))

(define-public crate-pdfium-render-0.5.1 (c (n "pdfium-render") (v "0.5.1") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11fgsljw6mggf4az1mn0xjcrbqqfm7qp032qb4ckv5jc46rgibgz")))

(define-public crate-pdfium-render-0.5.2 (c (n "pdfium-render") (v "0.5.2") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1va0zpgkhxwpnxk4iwq2z2wz1vbrkbs9xp85wxqpwlnl1rjgc3zr")))

(define-public crate-pdfium-render-0.5.3 (c (n "pdfium-render") (v "0.5.3") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ay60wq7ilgrrvxqnc3406n1pgl077yhnydrxjjg3lny12mf01np")))

(define-public crate-pdfium-render-0.5.4 (c (n "pdfium-render") (v "0.5.4") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "072gpg153qm3ywqxjx6bqrdwpjxggja4wzl6qk2nii5rhmb3zrpa")))

(define-public crate-pdfium-render-0.5.5 (c (n "pdfium-render") (v "0.5.5") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1cgjwd6czflahwwag05z6cpr978ik27bvwi4qhbinhdi276k04rk")))

(define-public crate-pdfium-render-0.5.6 (c (n "pdfium-render") (v "0.5.6") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1c3mm53ly7bdxcw5mv2mixsrpc0fzjsrlw118v81ak080si3dw6g")))

(define-public crate-pdfium-render-0.5.7 (c (n "pdfium-render") (v "0.5.7") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04k0bzjc9a9q5bjcz9qv6g5la7a6a8acigl8b2mpj0whg59cpgil") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.5.8 (c (n "pdfium-render") (v "0.5.8") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0rcsmr8fx6xsmc79qhzpgbgmpv1125pnv5773lz6szk0m6lbn2ic") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.5.9 (c (n "pdfium-render") (v "0.5.9") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1q1b8wqacj0ilrp4vkdyhjs3cyrsc8q0xq4fil5fzvchcyksz1km") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.6.0 (c (n "pdfium-render") (v "0.6.0") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04asbv1pij2hfa35bvgkii4f8xzq4sx7mv23xbl7hqsc7yqi9rr9") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.0 (c (n "pdfium-render") (v "0.7.0") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02vdxwrrzabhxlllljmd8rix554rxvsgvkp3zdblvqdv36wcg14y") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.1 (c (n "pdfium-render") (v "0.7.1") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0h9kixrpwmmlbhbzmwg5h1cgcyfh4225a4b5fcpdd5ffnjg3jwhx") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.2 (c (n "pdfium-render") (v "0.7.2") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ixfcgm1cfm146skdbyghlj6pasx16fvbcfbxm9pjqbrs5zc6lyp") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.3 (c (n "pdfium-render") (v "0.7.3") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0qc8vqh9izbh80m7ncsqy209q3y8vh57bg8b601cg5wb956rnh8i") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.4 (c (n "pdfium-render") (v "0.7.4") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0dgpfq3yawifsmbp8cdrzpqks1fb85va01ddzxs1891w8bhhzcvl") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.5 (c (n "pdfium-render") (v "0.7.5") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08wjda2cdg5hfmvqcrsd3hx74004mj85s20fjw2jsawpqjbjs5al") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.6 (c (n "pdfium-render") (v "0.7.6") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yf3km2h88knwvhhx8gvii7ac3gfcjw7lnkckyvvd4vynx8xvkib") (f (quote (("static") ("default") ("bindings"))))))

(define-public crate-pdfium-render-0.7.7 (c (n "pdfium-render") (v "0.7.7") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0qf87jiajqzw60gygdpymkx2sg16xgvqk1k3a14x0f7wb3yj25bq") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.8 (c (n "pdfium-render") (v "0.7.8") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0b2b1sqigvw26zwdg3ch4n8hcl5hc1f0bva8vybd35x8af4514iz") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.9 (c (n "pdfium-render") (v "0.7.9") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09v9cgpagsdz3ivm5lay9zpx78m39l8lxzmk278mz03nsby3dlwn") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.10 (c (n "pdfium-render") (v "0.7.10") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "067gxqqjs1hwrg1znwcf1cg54bh51688qvyjhk6084bmm9yg4lwd") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.11 (c (n "pdfium-render") (v "0.7.11") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gnr2lnl7zp46haizh311r4id2d2dkykax9rhlz390ikkmwnz2y6") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.13 (c (n "pdfium-render") (v "0.7.13") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r "^0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02mv5gzxhwsx5xd1y7vk72g6wdbribw61dkl51vg8ykldrpz8gyj") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.14 (c (n "pdfium-render") (v "0.7.14") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xgw82223yf2l7nwppbs6jk5fz110cz05khi1dcz79x13v5qpf1p") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.15 (c (n "pdfium-render") (v "0.7.15") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xw6gsw4yhqkf2aqw1y0mwn1s10y2khs1h39h79vkg46gw71wdpl") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.16 (c (n "pdfium-render") (v "0.7.16") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1qbsp396vi3k406dfgzzmw1jf49z3fz3zlvilaysari7iws79wsx") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.17 (c (n "pdfium-render") (v "0.7.17") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0lsdd17f8gv61hb88g9g79ibbhpqp5nvz3jjw605402k64qn3krk") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.18 (c (n "pdfium-render") (v "0.7.18") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0a1p5yfgy0kbg5p876lb7x03mfs9sxblg7bvihccm9xkbxrgsxl2") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.19 (c (n "pdfium-render") (v "0.7.19") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06va71kbx7masvr3ydgniz0k10n076qfg5xfa2qycxf43gi45zw0") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.20 (c (n "pdfium-render") (v "0.7.20") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "118188d6965ax8scb9gf59kgj8is6vc6rvmhzkazj1v74k7n0bb2") (f (quote (("thread_safe") ("static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.21 (c (n "pdfium-render") (v "0.7.21") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "154dl93h4g0x637yskfachv2w1lyfxk2az8k681rh2ldr8423nip") (f (quote (("thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.22 (c (n "pdfium-render") (v "0.7.22") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0p2h6kk0gisbmz9kv5b8qsm432r4b490gnx2n2rkdhjd0ind5615") (f (quote (("thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.23 (c (n "pdfium-render") (v "0.7.23") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0nmhk4r7sknv59zahqfcpg3f0621hkggq2xvkchd3g4xrr2pi3xl") (f (quote (("thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.24 (c (n "pdfium-render") (v "0.7.24") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0j8bs995ywq3csdqba2s0rmhkzbkss13l41a2lsy10aa0ngzkmzz") (f (quote (("thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.25 (c (n "pdfium-render") (v "0.7.25") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wkjz8zc1kka14qfigc5w923gcqrgi76vj3admr9n4h7bzspi5k8") (f (quote (("thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.26 (c (n "pdfium-render") (v "0.7.26") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16vvpinp0dczw2m9jc6ic53hgygc5i7yh7gzr33sd81zc9pax857") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "sync" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.7.27 (c (n "pdfium-render") (v "0.7.27") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1blv6br2y502ib8ldgmcmilcs3f2f01xb73yzxgiiajw6giy3p9r") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "sync" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.28 (c (n "pdfium-render") (v "0.7.28") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1m1hq08zabh59b64glz4zmkcx02varakyz40hyja4pix706d42zz") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "sync" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.29 (c (n "pdfium-render") (v "0.7.29") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dbs1pcjvk2rycxf012m6l7f6w1pdcyl89d4hgyxbnrfcxsp7y00") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.30 (c (n "pdfium-render") (v "0.7.30") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0im6swc31sz6hiqvi8jiwwj9bfz1nmfxjx1w64bfqiw26aqv5l7p") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.31 (c (n "pdfium-render") (v "0.7.31") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "098gyij47lsr1ksgjgbvrymny5lmyrq7jx6mylchjnxdkf85alwb") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.32 (c (n "pdfium-render") (v "0.7.32") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zgwldfn600zniwvv9rrvb3788z8b5667wh7r98h35g03xr3b47c") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.33 (c (n "pdfium-render") (v "0.7.33") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "05vv5zs0ijyah3fdp92xrfpx2i3rjhl3yhs667x8sa88hk3crha0") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.7.34 (c (n "pdfium-render") (v "0.7.34") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0kxfnpqls7m49x975h5llywn4ppgvf3ckdjsci2p3a561zcx91d3") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.8.0 (c (n "pdfium-render") (v "0.8.0") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0nnhbxxi2gap7dwf8sdd8zxiyysb41km5y7y1xqrkzbh460581cd") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.8.1 (c (n "pdfium-render") (v "0.8.1") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0whnn4vdjwxxi8qha27ha5jkv9kg9qzph9r5yyfmxs7l6j1m6d4l") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.8.3 (c (n "pdfium-render") (v "0.8.3") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1z99rfdgdsj1gyn173mxc80n8nb3flfb0dljn1xa21hjf4h7i8h2") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings")))) (s 2) (e (quote (("image" "dep:image"))))))

(define-public crate-pdfium-render-0.8.4 (c (n "pdfium-render") (v "0.8.4") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1jjavl4s75vrmfzyqzslhgb937k5nvsj5rpccdmlix649c6n253w") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.5 (c (n "pdfium-render") (v "0.8.5") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1v5i2p3b71cczsy3ha67vqfnqxfkh2a14g8vkq6cl63r25n9ynig") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.6 (c (n "pdfium-render") (v "0.8.6") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07x4mb3j64bbdjjdd21m6yn6xha7x554mzy6wpl7nzrpwmnxync7") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.7 (c (n "pdfium-render") (v "0.8.7") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jyaj12dja87d46hp3799q9xirxx897qj3q7hc5sqv5h7x4rs6ld") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.8 (c (n "pdfium-render") (v "0.8.8") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yk1aki64b5cawy64r2hkmk2b7ad0qdz9h7ygdxyjjj6dirgqriz") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.9 (c (n "pdfium-render") (v "0.8.9") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "05sbgjqc06vgk1is0ixg4rpjwvxc1rjgv3p31hiv78s76x8wny1z") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.10 (c (n "pdfium-render") (v "0.8.10") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vmm2k6kw9psnsc79lv9qdfvg866zfrsxz8cwnzna9m9w3fnhqml") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.11 (c (n "pdfium-render") (v "0.8.11") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jav10xahmcavkb1lmdjxb4c1s9pxasscms6qf2mds2hrgnqm4qy") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.12 (c (n "pdfium-render") (v "0.8.12") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0hpigf0vphyihzi1zvrdzghni0k2bmvlcjvym5s0589zzzfh51y6") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.13 (c (n "pdfium-render") (v "0.8.13") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ycyk4vkjcp8v4zl4r5kgkcg7vrvvv2jcw3b0nizn68r183lnqcf") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.14 (c (n "pdfium-render") (v "0.8.14") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0b8k547w8sm4m1kshm06chlnh0vx5szmi54q31vq265y4hifqq7f") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.15 (c (n "pdfium-render") (v "0.8.15") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1zra1mpc9k861mvw5lk50qnip078zzf64ddgswrf4v666jffy2cv") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.16 (c (n "pdfium-render") (v "0.8.16") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0.2") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0vksnf78x3zah1z2l9sf74a9irgcbm68zr7s55m6p0f7q2h9xcfj") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.17 (c (n "pdfium-render") (v "0.8.17") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bk6hsddkdi5gzp9f3049w1pgjn9zmzhnxa6zn99rw6v7nim6pqn") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.18 (c (n "pdfium-render") (v "0.8.18") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ddfcylyfad8qa7g1g4kwqifqrf01mksfvfwdv7a31601sv2k421") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.19 (c (n "pdfium-render") (v "0.8.19") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ixh1bx7xlzirn5796jsp6349p57ipvbbsrz2133ia589cqjsgln") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

(define-public crate-pdfium-render-0.8.20 (c (n "pdfium-render") (v "0.8.20") (d (list (d (n "bindgen") (r "^0") (d #t) (k 1)) (d (n "bitflags") (r "^2") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "image") (r ">=0.24.0") (o #t) (d #t) (k 0)) (d (n "iter_tools") (r "^0") (d #t) (k 0)) (d (n "js-sys") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libloading") (r "^0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0") (d #t) (k 0)) (d (n "maybe-owned") (r "^0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "utf16string") (r "^0") (d #t) (k 0)) (d (n "vecmath") (r "^1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0") (f (quote ("enable-interning"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0") (f (quote ("TextDecoder" "ImageData" "Window" "Response" "Blob"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "02jnfmjiha19d7bkay39f0kjc4qsvkpqlcf3a9phpfw9lk53b2pi") (f (quote (("thread_safe") ("sync" "thread_safe") ("static") ("libstdc++" "static") ("libc++" "static") ("default" "image" "thread_safe") ("bindings"))))))

