(define-module (crates-io qa pr qapro-rs) #:use-module (crates-io))

(define-public crate-qapro-rs-0.1.0 (c (n "qapro-rs") (v "0.1.0") (d (list (d (n "actix") (r "^0.12.0") (d #t) (k 0)) (d (n "actix-cors") (r "^0.6.0-beta.7") (d #t) (k 0)) (d (n "actix-redis") (r "^0.10.0-beta.4") (d #t) (k 0)) (d (n "actix-rt") (r "^2.5.0") (d #t) (k 0)) (d (n "actix-web") (r "^4.0.0-beta.5") (k 0)) (d (n "actix-web-actors") (r "^4.0.0-beta.8") (k 0)) (d (n "amiquip") (r "^0.4.0") (d #t) (k 0)) (d (n "arrow") (r "^6.4.0") (f (quote ("csv" "prettyprint" "ipc"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bson") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "clickhouse-rs") (r "^1.0.0-alpha.1") (f (quote ("async_std"))) (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 0)) (d (n "datafusion") (r "^6.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-test") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log4rs") (r "^0.13") (d #t) (k 0)) (d (n "mongodb") (r "^1.1.1") (f (quote ("sync"))) (k 0)) (d (n "polars") (r "^0.18.0") (f (quote ("zip_with" "strings" "random" "object" "csv-file" "pretty_fmt" "performant" "dtype-full" "rows" "round_series" "is_first" "asof_join" "cross_join" "dot_product" "concat_str" "row_hash" "reinterpret" "mode" "extract_jsonpath" "lazy_regex" "cum_agg" "rolling_window" "interpolate" "list" "rank" "diff" "moment" "arange" "true_div" "dtype-categorical" "diagonal_concat" "abs" "parquet"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "redis") (r "^0.18.0") (d #t) (k 0)) (d (n "redis-async") (r "^0.8") (f (quote ("tokio10"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.22") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "stopwatch") (r "^0.0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v1" "v4"))) (d #t) (k 0)))) (h "1nyqs8c3x5dnaaf39wggmvvpkg900bki6a772d4w21v4sa38bcbw")))

