(define-module (crates-io tw ir twirs) #:use-module (crates-io))

(define-public crate-twirs-1.0.0 (c (n "twirs") (v "1.0.0") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "kiddo") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.3") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (f (quote ("approx-0_5" "rayon"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "numpy") (r "^0.19.0") (f (quote ("nalgebra"))) (d #t) (k 2)) (d (n "pyo3") (r "^0.19.2") (f (quote ("auto-initialize"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 2)))) (h "0hspnsfyiaxz92wwzags872kimwllrzvq8sv910rngmg0zqgar4g") (f (quote (("parallel" "rayon" "ndarray/rayon") ("default" "parallel"))))))

