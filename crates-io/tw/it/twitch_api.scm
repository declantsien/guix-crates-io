(define-module (crates-io tw it twitch_api) #:use-module (crates-io))

(define-public crate-twitch_api-0.1.0 (c (n "twitch_api") (v "0.1.0") (d (list (d (n "chrono") (r "^0.3") (f (quote ("serde" "rustc-serialize"))) (d #t) (k 0)) (d (n "hyper") (r "^0.10.4") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "urlparse") (r "^0.7.3") (d #t) (k 0)))) (h "1vy2w0zy00lqv79klbakz2yf6fiqibfyrp84s4czb10dwixslh0s") (y #t)))

(define-public crate-twitch_api-0.1.1 (c (n "twitch_api") (v "0.1.1") (d (list (d (n "chrono") (r "^0.3") (f (quote ("serde" "rustc-serialize"))) (d #t) (k 0)) (d (n "hyper") (r "^0.10.4") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "urlparse") (r "^0.7.3") (d #t) (k 0)))) (h "1zwm4cm1nc6mxhzrzsbhg2a91qlf4j9ig3snwjcadcf91hg3rr8c") (y #t)))

(define-public crate-twitch_api-0.1.3 (c (n "twitch_api") (v "0.1.3") (d (list (d (n "chrono") (r "^0.3") (f (quote ("serde" "rustc-serialize"))) (d #t) (k 0)) (d (n "hyper") (r "^0.10.4") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)) (d (n "toml") (r "^0.3.2") (d #t) (k 0)) (d (n "urlparse") (r "^0.7.3") (d #t) (k 0)))) (h "13rwym3vp7vq726l5fa6ni11jq9fy5zw7f66ay06d5dsfbdgb86a") (y #t)))

(define-public crate-twitch_api-0.2.0 (c (n "twitch_api") (v "0.2.0") (d (list (d (n "libtwitch-rs") (r "^0.2") (d #t) (k 0)))) (h "04a67sn0x63qximsbxwfshnvfnd8x80lj7g0jm2sqx0cc6wbvhm4") (y #t)))

(define-public crate-twitch_api-0.3.0 (c (n "twitch_api") (v "0.3.0") (d (list (d (n "libtwitch-rs") (r "^0.3") (d #t) (k 0)))) (h "0yysxhplwp34kn3kzi146kam45ix6gnxaswsvqdxvanpjcyxn52d") (y #t)))

(define-public crate-twitch_api-0.7.0-alpha.1 (c (n "twitch_api") (v "0.7.0-alpha.1") (d (list (d (n "aliri_braid") (r "^0.2.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (o #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.3.5") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5.0") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0yrgqnaxdnc1r9ahs5ssfhflr4jan2pc9qyrzw55sv2f7rn10kxj") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("mock_api") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deny_unknown_fields") ("default") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.64")))

(define-public crate-twitch_api-0.7.0-rc.1 (c (n "twitch_api") (v "0.7.0-rc.1") (d (list (d (n "aliri_braid") (r "^0.2.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.3.6") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5.0") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "1g6cqmi8zv927svjh7w2vbj3r0ygjdjbjcldhdffkc93dqsyy9bn") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("mock_api") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deny_unknown_fields") ("default") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.64")))

(define-public crate-twitch_api-0.7.0-rc.2 (c (n "twitch_api") (v "0.7.0-rc.2") (d (list (d (n "aliri_braid") (r "^0.2.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (d #t) (k 2)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.3.6") (d #t) (k 0)) (d (n "typed-builder") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5.0") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0kg1ls5q91vbd9fdbry5qjlsxi73szriy9qr1ny8w2sdljm9ks6n") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("mock_api") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.64")))

(define-public crate-twitch_api-0.7.0-rc.3 (c (n "twitch_api") (v "0.7.0-rc.3") (d (list (d (n "aliri_braid") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.22.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.3.10") (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5.0") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "10sfsx8aya5114s1g3sjyabalvi4i9hivk267av6g19dyqpw5sgx") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("mock_api" "twitch_oauth2?/mock_api") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.64")))

(define-public crate-twitch_api-0.7.0-rc.4 (c (n "twitch_api") (v "0.7.0-rc.4") (d (list (d (n "aliri_braid") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 2)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.23") (d #t) (k 2)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (d #t) (k 2)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.24.2") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.3.11") (d #t) (k 0)) (d (n "typed-builder") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5.0") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "141q0bk8x515v0ss7rfngi9vs267xnjwpzhgsba3sqm8lvcsc7yx") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("mock_api" "twitch_oauth2?/mock_api") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.64")))

(define-public crate-twitch_api-0.7.0-rc.5 (c (n "twitch_api") (v "0.7.0-rc.5") (d (list (d (n "aliri_braid") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 1)) (d (n "tower-service") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0j3n912zswx555n90i4j7c1fxymp4zq7aq4s5mc9g8cjbp6229xb") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("beta") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (y #t) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value" "beta") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tower" "dep:tower-service" "client") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("mock_api" "twitch_oauth2?/mock_api") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.66.1")))

(define-public crate-twitch_api-0.7.0-rc.6 (c (n "twitch_api") (v "0.7.0-rc.6") (d (list (d (n "aliri_braid") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 1)) (d (n "tower-service") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.4.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0w16fr1i97b4bkfy7i1jpngb3f5b7kpm8r32mika40szvcn678gh") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("eventsub" "serde_json" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("beta") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value" "beta") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tower" "dep:tower-service" "client") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("mock_api" "twitch_oauth2?/mock_api") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.66.1")))

(define-public crate-twitch_api-0.7.0-rc.7 (c (n "twitch_api") (v "0.7.0-rc.7") (d (list (d (n "aliri_braid") (r "^0.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (o #t) (d #t) (k 0)) (d (n "crypto_hmac") (r "^0.12.1") (o #t) (d #t) (k 0) (p "hmac")) (d (n "displaydoc") (r "^0.2.3") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "http-types") (r "^2.12.0") (f (quote ("hyperium_http"))) (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_ignored") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "serde_path_to_error") (r "^0.1.11") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3.2") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 1)) (d (n "tower-service") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "twitch_oauth2") (r "^0.12.4") (o #t) (d #t) (k 0)) (d (n "twitch_types") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.6.2") (f (quote ("tls"))) (o #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.4") (d #t) (k 1)))) (h "0hlbsi1q65xhnjjnqabxw21bi93kjlsdq6mj7ijgq06xqk51ggh8") (f (quote (("pubsub" "serde_json" "twitch_types/emote" "twitch_types/moderation" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "twitch_types/points") ("eventsub" "serde_json/raw_value" "twitch_types/emote" "twitch_types/eventsub" "twitch_types/goal" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp") ("deser_borrow") ("deny_unknown_fields") ("default" "deser_borrow") ("beta") ("all" "tmi" "helix" "client" "pubsub" "eventsub" "hmac" "twitch_oauth2" "tracing" "twitch_types/time") ("_all" "all" "typed-builder" "surf" "reqwest" "ureq" "twitch_oauth2/surf_client_curl" "mock_api" "tower")))) (s 2) (e (quote (("ureq" "dep:ureq" "client") ("unsupported" "serde_json?/raw_value" "beta") ("trace_unknown_fields" "dep:serde_ignored" "tracing") ("tower" "dep:tower-service" "client") ("tmi" "serde_json" "dep:serde_path_to_error" "dep:hyper") ("surf" "dep:surf" "dep:http-types" "client" "twitch_oauth2/surf" "hyper?/stream") ("serde_json" "dep:serde_json" "dep:serde_path_to_error") ("reqwest" "dep:reqwest" "client" "twitch_oauth2/reqwest") ("mock_api" "twitch_oauth2?/mock_api") ("hmac" "dep:crypto_hmac" "dep:sha2") ("helix" "twitch_types/color" "twitch_types/color" "twitch_types/emote" "twitch_types/goal" "twitch_types/moderation" "twitch_types/points" "twitch_types/stream" "twitch_types/timestamp" "twitch_types/user" "dep:async-trait" "serde_json" "dep:hyper") ("client" "twitch_oauth2/client" "dep:futures" "dep:hyper")))) (r "1.67.0")))

