(define-module (crates-io su ga sugarloaf) #:use-module (crates-io))

(define-public crate-sugarloaf-0.0.1 (c (n "sugarloaf") (v "0.0.1") (d (list (d (n "bytemuck") (r "^1.9") (f (quote ("derive"))) (d #t) (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "wgpu") (r "^0.15.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.3") (d #t) (k 0)))) (h "0763bgxn0h4znkwh6g5y77zf0r5267hvk4qqfsp8yvmv2clrzaib")))

(define-public crate-sugarloaf-0.0.7 (c (n "sugarloaf") (v "0.0.7") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "console_log") (r "^0.2") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "font-kit") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.1") (d #t) (k 0)) (d (n "winit") (r "^0.28.6") (f (quote ("serde"))) (k 0)))) (h "17wd3dcyysjv08b4y6jf72i882bwfbws01rrcikvgjhwac1dsndx")))

(define-public crate-sugarloaf-0.0.12 (c (n "sugarloaf") (v "0.0.12") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "console_log") (r "^0.2") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "font-kit") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.61") (d #t) (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.2") (d #t) (k 0)) (d (n "winit") (r "^0.29.0-beta.0") (f (quote ("serde"))) (k 0)))) (h "1ccm9fm98n3ras3rahj05229yy56ivz8qf607mx4jac3mbblx8i7")))

(define-public crate-sugarloaf-0.0.16 (c (n "sugarloaf") (v "0.0.16") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "font-kit") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.0-beta.0") (f (quote ("serde"))) (k 0)))) (h "16mm61i3mnmlpl2wnrh0r6inmv5zbdccf5nn63g5kdxicrs5wblb")))

(define-public crate-sugarloaf-0.0.18 (c (n "sugarloaf") (v "0.0.18") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontdb") (r "^0.14.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)))) (h "0kqsr0pn4xkhyw29gdx4jk0wx69hv14y2wwx9khy6k161nzi8br4")))

(define-public crate-sugarloaf-0.0.19 (c (n "sugarloaf") (v "0.0.19") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "guillotiere") (r "^0.6") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "memmap2") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.0") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)))) (h "1fa6lp75pmq37b71cpdd3kz665m69js0z3l3gqciaw0im1yql6sh")))

(define-public crate-sugarloaf-0.0.20 (c (n "sugarloaf") (v "0.0.20") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)))) (h "14l06xyll0r79kgirh23x8d00bhc1dfdijhicr4vq8889j2iwvic")))

(define-public crate-sugarloaf-0.0.21 (c (n "sugarloaf") (v "0.0.21") (d (list (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "glyph_brush") (r "^0.7.7") (d #t) (k 0)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)))) (h "1g9kbjkkmdh2m8i2v0qxqgyg0n9aa4d2jd4bj9nhw91509rkm26f")))

(define-public crate-sugarloaf-0.0.22 (c (n "sugarloaf") (v "0.0.22") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0h5yfz5db53h29p2np9qdzsvfmrfjvc4jgcad4kd8z3j6kb9by4y")))

(define-public crate-sugarloaf-0.0.23 (c (n "sugarloaf") (v "0.0.23") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "151jfsh2hym19zmcaisgcvslwz8knbrcj39zrmqvppcghnph0776")))

(define-public crate-sugarloaf-0.0.24 (c (n "sugarloaf") (v "0.0.24") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.17.1") (d #t) (k 0)) (d (n "winit") (r "^0.29.1-beta") (f (quote ("serde"))) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1dpfb87wr7hqj1fvsd18q4ih2f7dpnfaw9p2dhbmfz8jkrnay0jn")))

(define-public crate-sugarloaf-0.0.25 (c (n "sugarloaf") (v "0.0.25") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.2") (f (quote ("rwh_05" "serde"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0yqqqbm3x2y2f33syrph674kjqygk2131dy43xdb8n4wrhyz84vp")))

(define-public crate-sugarloaf-0.0.26 (c (n "sugarloaf") (v "0.0.26") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.3") (f (quote ("rwh_05" "serde"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1vkabwpv9w2b7010i7qy0p1kwh6gyar90lzpb6m9bsdxhiwy58la")))

(define-public crate-sugarloaf-0.0.27 (c (n "sugarloaf") (v "0.0.27") (d (list (d (n "ab_glyph") (r "^0.2.2") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1.1") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.3") (f (quote ("rwh_05" "serde"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0hcnlm2lkbg2v8miriv60pipi7km1q6f9zq8ws633gcdh0q54g0a")))

(define-public crate-sugarloaf-0.0.28 (c (n "sugarloaf") (v "0.0.28") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1.1") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0cfahblbfvl7b50cdwmpql66cniv44kdz9wpi103j3lgq94nww63")))

(define-public crate-sugarloaf-0.0.29 (c (n "sugarloaf") (v "0.0.29") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1.1") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1cz3b55sj9flzdcick73zl650yi2xrj6n9gpgi1r3s57kvr3bj6z")))

(define-public crate-sugarloaf-0.0.30 (c (n "sugarloaf") (v "0.0.30") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1.1") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "19ynpz09k1lk69dwkzq75vnw0lfjlcqjqi2gxkim6cbzz4isxds7")))

(define-public crate-sugarloaf-0.0.31 (c (n "sugarloaf") (v "0.0.31") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1.1") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0hvazk7vf3mxxqzz2kzxjiksppmgsr7d241ib5kxp8cv0ri6bm5l")))

(define-public crate-sugarloaf-0.0.32 (c (n "sugarloaf") (v "0.0.32") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0wkwiagwh6zw284zilqv0ajn76h76g6ixbviw8aha8zn0z6b1b7h")))

(define-public crate-sugarloaf-0.0.33 (c (n "sugarloaf") (v "0.0.33") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.4") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "07rqj0mf1z38vm2839amq98gmjnfifazbikib5373spsl2yb9y7y")))

(define-public crate-sugarloaf-0.0.34 (c (n "sugarloaf") (v "0.0.34") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.9") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1ybpz63vscxz6mz3m3q59rpc7gmpwvgb384sly1ikzngf64890v1")))

(define-public crate-sugarloaf-0.0.35 (c (n "sugarloaf") (v "0.0.35") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.11") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0vppqzgcjs1bic8bwbhdfa7pkw92v6ri1w2w1j004j1sgvhz441j")))

(define-public crate-sugarloaf-0.0.36 (c (n "sugarloaf") (v "0.0.36") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.29.15") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "18m344b1mqpjc3p2qkl379n4zy09xx8mkwnwn246y01vk4dvl5im")))

(define-public crate-sugarloaf-0.0.37 (c (n "sugarloaf") (v "0.0.37") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1iladk48570jfd95k8gv47a0zzx51b4mq6p9d93g161g6h9jpfjz")))

(define-public crate-sugarloaf-0.0.38 (c (n "sugarloaf") (v "0.0.38") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "18abcazvxwqi7d7ckns35ll5yj2mhn8glnga8j42rh6bmq6rqmdp")))

(define-public crate-sugarloaf-0.0.39 (c (n "sugarloaf") (v "0.0.39") (d (list (d (n "ab_glyph") (r "^0.2.23") (d #t) (k 0)) (d (n "approx") (r "^0.5.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "crossbeam-deque") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fontconfig-parser") (r "^0.5.3") (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "guillotiere") (r "^0.6.2") (d #t) (k 0)) (d (n "image") (r "^0.24.7") (f (quote ("ico"))) (k 0)) (d (n "image") (r "^0.24.6") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "linked-hash-map") (r "^0.5.6") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "ordered-float") (r "^4.2.0") (d #t) (k 0)) (d (n "png") (r "^0.17.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("alloc"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt" "rt-multi-thread" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ttf-parser") (r "^0.19.2") (f (quote ("opentype-layout" "apple-layout" "variable-fonts" "glyph-names"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "twox-hash") (r "^1.6.3") (k 0)) (d (n "twox-hash") (r "^1.6.3") (f (quote ("std"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Document" "Navigator" "Node" "NodeList" "Gpu" "GpuAdapter" "GpuAddressMode" "GpuAutoLayoutMode" "GpuBindGroup" "GpuBindGroupDescriptor" "GpuBindGroupEntry" "GpuBindGroupLayout" "GpuBindGroupLayoutDescriptor" "GpuBindGroupLayoutEntry" "GpuBlendComponent" "GpuBlendFactor" "GpuBlendOperation" "GpuBlendState" "GpuBuffer" "GpuBufferBinding" "GpuBufferBindingLayout" "GpuBufferBindingType" "GpuBufferDescriptor" "GpuCanvasAlphaMode" "GpuCanvasContext" "GpuCanvasConfiguration" "GpuColorDict" "GpuColorTargetState" "GpuCommandBuffer" "GpuCommandBufferDescriptor" "GpuCommandEncoder" "GpuCommandEncoderDescriptor" "GpuCompareFunction" "GpuCompilationInfo" "GpuCompilationMessage" "GpuCompilationMessageType" "GpuComputePassDescriptor" "GpuComputePassEncoder" "GpuComputePipeline" "GpuComputePipelineDescriptor" "GpuCullMode" "GpuDepthStencilState" "GpuDevice" "GpuDeviceDescriptor" "GpuDeviceLostInfo" "GpuDeviceLostReason" "GpuError" "GpuErrorFilter" "GpuExtent3dDict" "GpuFeatureName" "GpuFilterMode" "GpuFragmentState" "GpuFrontFace" "GpuImageCopyBuffer" "GpuImageCopyExternalImage" "GpuImageCopyTexture" "GpuImageCopyTextureTagged" "GpuImageDataLayout" "GpuIndexFormat" "GpuLoadOp" "gpu_map_mode" "GpuMipmapFilterMode" "GpuMultisampleState" "GpuObjectDescriptorBase" "GpuOrigin2dDict" "GpuOrigin3dDict" "GpuOutOfMemoryError" "GpuPipelineDescriptorBase" "GpuPipelineLayout" "GpuPipelineLayoutDescriptor" "GpuPowerPreference" "GpuPrimitiveState" "GpuPrimitiveTopology" "GpuProgrammableStage" "GpuQuerySet" "GpuQuerySetDescriptor" "GpuQueryType" "GpuQueue" "GpuRenderBundle" "GpuRenderBundleDescriptor" "GpuRenderBundleEncoder" "GpuRenderBundleEncoderDescriptor" "GpuRenderPassColorAttachment" "GpuRenderPassDepthStencilAttachment" "GpuRenderPassDescriptor" "GpuRenderPassEncoder" "GpuRenderPipeline" "GpuRenderPipelineDescriptor" "GpuRequestAdapterOptions" "GpuSampler" "GpuSamplerBindingLayout" "GpuSamplerBindingType" "GpuSamplerDescriptor" "GpuShaderModule" "GpuShaderModuleDescriptor" "GpuStencilFaceState" "GpuStencilOperation" "GpuStorageTextureAccess" "GpuStorageTextureBindingLayout" "GpuStoreOp" "GpuSupportedFeatures" "GpuSupportedLimits" "GpuTexture" "GpuTextureAspect" "GpuTextureBindingLayout" "GpuTextureDescriptor" "GpuTextureDimension" "GpuTextureFormat" "GpuTextureSampleType" "GpuTextureView" "GpuTextureViewDescriptor" "GpuTextureViewDimension" "GpuUncapturedErrorEvent" "GpuUncapturedErrorEventInit" "GpuValidationError" "GpuVertexAttribute" "GpuVertexBufferLayout" "GpuVertexFormat" "GpuVertexState" "GpuVertexStepMode" "HtmlCanvasElement" "OffscreenCanvas" "ImageBitmap" "ImageBitmapRenderingContext" "Window" "WorkerGlobalScope" "WorkerNavigator"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Location" "Blob" "RequestInit" "RequestMode" "Request" "Response" "WebGl2RenderingContext" "CanvasRenderingContext2d"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18.0") (d #t) (k 0)) (d (n "winit") (r "^0.30.0") (f (quote ("rwh_05"))) (k 2)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0709p415ky0mw1p3jh17c17hpq6czi6xa81xzry9hrg54fyhcx73")))

