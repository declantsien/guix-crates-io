(define-module (crates-io su an suan) #:use-module (crates-io))

(define-public crate-suan-0.0.0 (c (n "suan") (v "0.0.0") (d (list (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)))) (h "1il02qhm1xld0qhka9mif1r5g0vw0ya9wm8pj32mx8jz224hh1fs")))

(define-public crate-suan-0.0.1 (c (n "suan") (v "0.0.1") (d (list (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-irrational") (r "^0.0.3") (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-prime") (r "^0.2") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.15.0") (f (quote ("extension-module" "num-bigint"))) (d #t) (k 0)))) (h "0b412csy7hx5sav0wxdf26az3jh5qk5qwl406gcx5y3qkcndjqfw")))

(define-public crate-suan-0.0.2 (c (n "suan") (v "0.0.2") (d (list (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-irrational") (r "^0.0.3") (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-prime") (r "^0.2") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.15.0") (f (quote ("extension-module" "num-bigint" "num-complex"))) (d #t) (k 0)) (d (n "suan-core") (r "^0.0.2") (f (quote ("pyo3"))) (d #t) (k 0)))) (h "1w9mr0w2dsx092lcnqb1krh20a0gv7wd47xcfc0844q406mh41mf")))

(define-public crate-suan-0.0.3 (c (n "suan") (v "0.0.3") (d (list (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-irrational") (r "^0.2.0-alpha") (f (quote ("num-bigint" "complex"))) (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-prime") (r "^0.3.0-alpha") (f (quote ("big-table" "big-int"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.0") (f (quote ("extension-module" "num-bigint" "num-complex"))) (d #t) (k 0)) (d (n "suan-core") (r "^0.0.3") (f (quote ("pyo3"))) (d #t) (k 0)))) (h "17mc1xmf6dkybfdw1s4m7zqb0h1brlkd68k78vcwf26jsljr603d")))

(define-public crate-suan-0.0.4 (c (n "suan") (v "0.0.4") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-irrational") (r "^0.3.0") (d #t) (k 0)) (d (n "num-modular") (r "^0.5.1") (d #t) (k 0)) (d (n "num-prime") (r "^0.4.1") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.0") (f (quote ("extension-module" "num-bigint" "num-complex"))) (d #t) (k 0)) (d (n "suan-core") (r "^0.0.4") (f (quote ("pyo3"))) (d #t) (k 0)))) (h "1k07vhrap4n9k4h689m4rrvyqnfn9xk46kg73jfdmcjaqqdln0cn") (f (quote (("default" "backend-pure") ("backend-pure" "bigdecimal" "suan-core/backend-pure"))))))

