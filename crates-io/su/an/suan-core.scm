(define-module (crates-io su an suan-core) #:use-module (crates-io))

(define-public crate-suan-core-0.0.2 (c (n "suan-core") (v "0.0.2") (d (list (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-irrational") (r "^0.0.3") (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-prime") (r "^0.2") (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.15.0") (o #t) (k 0)))) (h "12insvyhcg2i4pj0gsbqsv64wsn9fv28q6dpd3fxjx0sr554ywgj")))

(define-public crate-suan-core-0.0.3 (c (n "suan-core") (v "0.0.3") (d (list (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-irrational") (r "^0.2.0-alpha") (f (quote ("num-bigint" "complex"))) (d #t) (k 0)) (d (n "num-modular") (r "^0.1.0") (d #t) (k 0)) (d (n "num-prime") (r "^0.3.0-alpha") (f (quote ("big-table" "big-int"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.0") (o #t) (k 0)))) (h "10hybndq4wyzbkgflzixbsbpjq1dx7zb68y1yv9h499sg07d3kll") (f (quote (("backend-rug") ("backend-native"))))))

(define-public crate-suan-core-0.0.4 (c (n "suan-core") (v "0.0.4") (d (list (d (n "bigdecimal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-integer") (r "^0.1.44") (d #t) (k 0)) (d (n "num-irrational") (r "^0.3.0") (f (quote ("num-bigint" "complex"))) (d #t) (k 0)) (d (n "num-modular") (r "^0.5.1") (f (quote ("num-bigint" "std"))) (d #t) (k 0)) (d (n "num-order") (r "^1.0.4") (f (quote ("num-bigint" "num-complex" "num-rational" "std"))) (d #t) (k 0)) (d (n "num-prime") (r "^0.4.1") (f (quote ("big-table" "big-int"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.0") (o #t) (k 0)))) (h "184blvj914g6mf34fdgh460qwxrx20zinzq3mz9s37qmwpqlypd7") (f (quote (("default" "backend-pure") ("backend-rug") ("backend-pure" "bigdecimal"))))))

