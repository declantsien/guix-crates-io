(define-module (crates-io su pe super_orchestrator) #:use-module (crates-io))

(define-public crate-super_orchestrator-0.1.0 (c (n "super_orchestrator") (v "0.1.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.1.0") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "1l35whbzf9fsd3avq0fhypgfc9m10f3r8v54z3m3bw592zlfxrh8") (f (quote (("serde_yaml_support" "serde_yaml") ("serde_json_support" "serde_json") ("env_logger_support" "env_logger") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.2.0 (c (n "super_orchestrator") (v "0.2.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.2") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "0yavy9dillykqq8bfg6swzixdr6bgvnszcm9g8pjngm3mvcwgrl4") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.3.0 (c (n "super_orchestrator") (v "0.3.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.2") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "1m13hna4ny64ldmjfrkq7a2y2h2kpjcs4cl8dp692y9n6rvnj7di") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("nix_support" "nix") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support" "nix_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.3.1 (c (n "super_orchestrator") (v "0.3.1") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.2") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "0mz7s7y673jq8vx434csrv08hf5xsa8la36aghp990pa425zqmp1") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("nix_support" "nix") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support" "nix_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.4.0 (c (n "super_orchestrator") (v "0.4.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.2") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "054n6wcijq1073xknhy745jpyf5c1zmqlfg0ipf80jhn93w26bq1") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("nix_support" "nix") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support" "nix_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.5.0 (c (n "super_orchestrator") (v "0.5.0") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.3") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)))) (h "134shly6lmcmyxsljm8z5z4p7lx04f102h5zxjf0ms988f6zfa8p") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("nix_support" "nix") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support" "nix_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.5.1 (c (n "super_orchestrator") (v "0.5.1") (d (list (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "musli") (r "^0.0.49") (d #t) (k 0)) (d (n "musli-descriptive") (r "^0.0.49") (f (quote ("std"))) (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.3") (f (quote ("tokio_rt_support"))) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)))) (h "1f4yiia9mznlfa1ya4kd0j8yd6y1snsj9z87ira5f4h37ffb8lmi") (f (quote (("toml_support" "stacked_errors/toml_support") ("serde_yaml_support" "serde_yaml" "stacked_errors/serde_yaml_support") ("serde_json_support" "serde_json" "stacked_errors/serde_json_support") ("ron_support" "stacked_errors/ron_support") ("reqwest_support" "stacked_errors/reqwest_support") ("nix_support" "nix") ("hyper_support" "stacked_errors/hyper_support") ("env_logger_support" "env_logger" "stacked_errors/env_logger_support") ("default" "serde_json_support" "ctrlc_support" "env_logger_support" "serde_yaml_support" "nix_support") ("ctrlc_support" "ctrlc" "stacked_errors/ctrlc_support"))))))

(define-public crate-super_orchestrator-0.6.0 (c (n "super_orchestrator") (v "0.6.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.0") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.26") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.4") (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("full"))) (d #t) (k 0)))) (h "0996q70j3k9zd4a7a09mv25qhl71nc0n08s98q2n35bv3ll9i7p0") (f (quote (("nix_support" "nix") ("env_logger_support" "env_logger") ("default" "ctrlc_support" "env_logger_support" "nix_support") ("ctrlc_support" "ctrlc"))))))

(define-public crate-super_orchestrator-0.7.0 (c (n "super_orchestrator") (v "0.7.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.4") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ijk599aaahqh9fmrqmb7j0cid0yzr7krj3cq0s6fa2zbvbaabxh") (f (quote (("nix_support" "nix") ("env_logger_support" "env_logger") ("default" "ctrlc_support" "env_logger_support" "nix_support") ("ctrlc_support" "ctrlc"))))))

(define-public crate-super_orchestrator-0.8.0 (c (n "super_orchestrator") (v "0.8.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.4") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0j70qxa7chvkcrpab6ry30bbs60nc3dxpy0k4z9d9p8lg57pnicl") (f (quote (("nix_support" "nix") ("env_logger_support" "env_logger") ("default" "ctrlc_support" "env_logger_support" "nix_support") ("ctrlc_support" "ctrlc"))))))

(define-public crate-super_orchestrator-0.9.0 (c (n "super_orchestrator") (v "0.9.0") (d (list (d (n "clap") (r "^4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3") (o #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^3.5") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.5") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wh7ji6v1bypjsasya094hrccvpzs4dgxp06sd9ydsa50rj39wjw") (f (quote (("nix_support" "nix") ("env_logger_support" "env_logger") ("default" "ctrlc_support" "env_logger_support" "nix_support") ("ctrlc_support" "ctrlc"))))))

(define-public crate-super_orchestrator-0.10.0 (c (n "super_orchestrator") (v "0.10.0") (d (list (d (n "clap") (r "^4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3") (k 0)) (d (n "env_logger") (r "^0.11") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^4.0") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.5") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "09xybx91iivddqdz5icwbznlyw1zjkxddbrzns680qi1f8ki9dyc") (f (quote (("nix_support" "nix") ("default"))))))

(define-public crate-super_orchestrator-0.11.0 (c (n "super_orchestrator") (v "0.11.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3") (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^4.0") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.5") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "114zc5ijfb75g88dhk6g35a046q4gp5wl0avaqjylwyznrisjmsf") (f (quote (("nix_support" "nix") ("default"))))))

(define-public crate-super_orchestrator-0.12.0 (c (n "super_orchestrator") (v "0.12.0") (d (list (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3") (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^4.0") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.5") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "04zxgcxgjrb36rkg364f1qznjkk8ggvxwkabn2mx9g5ap4pmdmfb") (f (quote (("nix_support" "nix") ("default"))))))

(define-public crate-super_orchestrator-0.12.1 (c (n "super_orchestrator") (v "0.12.1") (d (list (d (n "bstr") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 2)) (d (n "ctrlc") (r "^3") (k 0)) (d (n "dunce") (r "^1.0") (d #t) (k 0)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (o #t) (k 0)) (d (n "owo-colors") (r "^4.0") (k 0)) (d (n "postcard") (r "^1") (f (quote ("use-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "stacked_errors") (r "^0.5") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1bhaaayibq1f7fb3y0fm2g7qana3zd60pmwxbbcwia1zk8xm7f7v") (f (quote (("nix_support" "nix") ("default"))))))

