(define-module (crates-io su bs substrate-bn) #:use-module (crates-io))

(define-public crate-substrate-bn-0.5.0 (c (n "substrate-bn") (v "0.5.0") (d (list (d (n "bincode") (r "^0.6") (f (quote ("rustc-serialize"))) (k 2)) (d (n "byteorder") (r "^1.0") (f (quote ("i128"))) (k 0)) (d (n "crunchy") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("i128_support"))) (k 0)) (d (n "rand") (r "^0.5") (f (quote ("i128_support"))) (d #t) (k 2)) (d (n "rustc-hex") (r "^2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1h9v6kx7bdfc2ivi3hzckg16yb88yamds4hy7yw9i3iiqaz3kd5c") (f (quote (("default" "rustc-serialize"))))))

(define-public crate-substrate-bn-0.6.0 (c (n "substrate-bn") (v "0.6.0") (d (list (d (n "byteorder") (r "^1.0") (f (quote ("i128"))) (k 0)) (d (n "crunchy") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("std_rng"))) (d #t) (k 2)) (d (n "rustc-hex") (r "^2") (k 0)))) (h "0724bd7d0ym23qfrcn80q3rmyqqsl9v83sj2srfy3fmbg7xbpdbj") (f (quote (("default"))))))

