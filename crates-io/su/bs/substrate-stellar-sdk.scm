(define-module (crates-io su bs substrate-stellar-sdk) #:use-module (crates-io))

(define-public crate-substrate-stellar-sdk-0.1.0 (c (n "substrate-stellar-sdk") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.2") (f (quote ("main-types-only"))) (d #t) (k 0)))) (h "0rgqn5h2h7lknnlmqvn645yq51wlrqivxrl3b9dbrwii8cqpgj4m")))

(define-public crate-substrate-stellar-sdk-0.1.1 (c (n "substrate-stellar-sdk") (v "0.1.1") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.3") (d #t) (k 0)))) (h "14400k8paim84ayilk2b49lr0vhdw44igj8n0vajkzlqqbm6sqfr")))

(define-public crate-substrate-stellar-sdk-0.1.2 (c (n "substrate-stellar-sdk") (v "0.1.2") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.4") (d #t) (k 0)))) (h "1ygyl7b42b19lym066crp2j223yf88inc06qnd8k83fd31dx6di0")))

(define-public crate-substrate-stellar-sdk-0.1.3 (c (n "substrate-stellar-sdk") (v "0.1.3") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.4") (d #t) (k 0)))) (h "0kxrrxx0q12sb7cgm68707m57yablmwl8szrklnd9zagvkqk3alp")))

(define-public crate-substrate-stellar-sdk-0.1.4 (c (n "substrate-stellar-sdk") (v "0.1.4") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.4") (d #t) (k 0)))) (h "09h2lg9g497vm53cjs6gsmjgv8n32pqddnq4gqmxnjhxbr3jfazq")))

(define-public crate-substrate-stellar-sdk-0.1.5 (c (n "substrate-stellar-sdk") (v "0.1.5") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "substrate-stellar-xdr") (r "^0.2.6") (d #t) (k 0)))) (h "09spz1jgpx3lp1z9ckj4wr79fgxily67d33z6y73y8r8wl4vmhgz")))

(define-public crate-substrate-stellar-sdk-0.2.0 (c (n "substrate-stellar-sdk") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "1hivnzc389h4xkqfdji8w4f4whx46yj7i4vlzsw41zcyi01m35vh") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

(define-public crate-substrate-stellar-sdk-0.2.1 (c (n "substrate-stellar-sdk") (v "0.2.1") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "0kj2s9qar9hyl53a98alb3xinp5rra0v9gcsr7rj7wwgfmvlxny6") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

(define-public crate-substrate-stellar-sdk-0.2.2 (c (n "substrate-stellar-sdk") (v "0.2.2") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9.5") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^3.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "1w884j2dlvh4mrmkwd1mqwp36l1yzj15vwizxvl229s904fk4r47") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

(define-public crate-substrate-stellar-sdk-0.2.3 (c (n "substrate-stellar-sdk") (v "0.2.3") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9.9") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-runtime") (r "^6.0.0") (o #t) (d #t) (k 0)) (d (n "sp-std") (r "^4.0.0") (d #t) (k 0)))) (h "1n0hmlyzsl4q0ijg414z6am54l5iwbnbly60nvhdfza166s3gv84") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

(define-public crate-substrate-stellar-sdk-0.2.4 (c (n "substrate-stellar-sdk") (v "0.2.4") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0.100") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9.9") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^6.0.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^6.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)))) (h "07zk411s1gbwsv240hs5ir1hvmvyswlnmr9vrbpfjlbqyj9zy50p") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

(define-public crate-substrate-stellar-sdk-0.3.0 (c (n "substrate-stellar-sdk") (v "0.3.0") (d (list (d (n "base64") (r "^0.13.0") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (d #t) (k 0)) (d (n "num-rational") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sodalite") (r "^0.4.0") (d #t) (k 0)) (d (n "sp-io") (r "^23.0.0") (o #t) (k 0)) (d (n "sp-runtime") (r "^24.0.0") (o #t) (k 0)) (d (n "sp-std") (r "^8.0.0") (k 0)))) (h "0jqrg4yl6znfzy3bkjin5c8yi7zbqxr43h8s725y78jzhndx4wpg") (f (quote (("std" "sp-runtime/std" "sp-std/std" "sp-io/std" "serde_json/std" "serde/std" "scale-info/std" "hex/std" "num-rational/std") ("offchain" "sp-runtime" "sp-io" "serde_json" "serde") ("default" "offchain" "std") ("all-types"))))))

