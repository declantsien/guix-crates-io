(define-module (crates-io su bs substrate-ai) #:use-module (crates-io))

(define-public crate-substrate-ai-2.0.0 (c (n "substrate-ai") (v "2.0.0") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 2)) (d (n "sp-io") (r "^2.0.0") (k 2)) (d (n "sp-runtime") (r "^2.0.0") (k 2)))) (h "1qf85msbgrcm1jf2ad3ihmryxzyzzp0k6ln9pffyc5j1rgl8317l") (f (quote (("std" "codec/std" "frame-support/std" "frame-system/std") ("default" "std"))))))

(define-public crate-substrate-ai-2.0.1 (c (n "substrate-ai") (v "2.0.1") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 2)) (d (n "sp-runtime") (r "^2.0.0") (k 2)))) (h "14vnlzl6x2rxischld99a80051mgp685jvrbmb9jfkv5czl94zi1") (f (quote (("std" "codec/std" "frame-support/std" "frame-system/std") ("default" "std"))))))

(define-public crate-substrate-ai-2.0.2 (c (n "substrate-ai") (v "2.0.2") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "postcard") (r "^0.5.1") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "sp-core") (r "^2.0.0") (k 2)) (d (n "sp-runtime") (r "^2.0.0") (k 2)))) (h "0i5kp4grn4l5xar24mlwf05ghjj50w3w2fxa2awah9yx4fwq2j24") (f (quote (("std" "codec/std" "serde/std" "postcard/use-std" "frame-support/std" "frame-system/std") ("default" "std"))))))

