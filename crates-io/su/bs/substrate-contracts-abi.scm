(define-module (crates-io su bs substrate-contracts-abi) #:use-module (crates-io))

(define-public crate-substrate-contracts-abi-0.3.0 (c (n "substrate-contracts-abi") (v "0.3.0") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "0mrj4b03g5c0nik8kqci40jvy9hqp8pvfr9blcnb0hspmdyy2hqq") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.1 (c (n "substrate-contracts-abi") (v "0.3.1") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "0g11fdn6a9kqiz8a7lwz11skjcd7pj8am330pd4nxsxbzq49jkdc") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.2 (c (n "substrate-contracts-abi") (v "0.3.2") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "0lq34l3lfdz59gydgg98zfd8qpq7bs9dpsfdazj4gwsgwggwdzfr") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.4 (c (n "substrate-contracts-abi") (v "0.3.4") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "10ga4gfls8qcmfrnk432r6aimiq9yyznv1ijlw6fnlr4b1n0qvp3") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.5 (c (n "substrate-contracts-abi") (v "0.3.5") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "1hwl13i19f3qss2ip8dr45mj90nbqp8n1n6wbvj9p9fnd6na93b8") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.6 (c (n "substrate-contracts-abi") (v "0.3.6") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "0il0v9lzwh7w4606i8f7nncmbx6nrc8646flq1nsi0nz7hs1qx9l") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

(define-public crate-substrate-contracts-abi-0.3.7 (c (n "substrate-contracts-abi") (v "0.3.7") (d (list (d (n "codec") (r "^3") (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^6.0.0") (k 0)) (d (n "sp-runtime") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "substrate-abi") (r "^0.3") (k 0)))) (h "1r3ywzmdibvzx8zl535iah0kj3lvsmvzpmlnvjv5f80hj62knk37") (f (quote (("std" "sp-std/std" "sp-core/std" "sp-runtime/std" "substrate-abi/std" "scale-info/std" "codec/std" "log/std") ("default" "std"))))))

