(define-module (crates-io su bs substrate-primitives) #:use-module (crates-io))

(define-public crate-substrate-primitives-1.0.0 (c (n "substrate-primitives") (v "1.0.0") (d (list (d (n "base58") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (k 0)) (d (n "hash-db") (r "^0.12") (k 0)) (d (n "hash256-std-hasher") (r "^0.12") (k 0)) (d (n "heapsize") (r "^0.4") (d #t) (k 2)) (d (n "hex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "impl-serde") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parity-codec") (r "^3.2") (f (quote ("derive"))) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "primitive-types") (r "^0.2") (f (quote ("codec"))) (k 0)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rstd") (r "^1.0") (k 0) (p "sr-std")) (d (n "rustc-hex") (r "^2.0") (k 0)) (d (n "schnorrkel") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "substrate-bip39") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "substrate-serializer") (r "^1.0") (d #t) (k 2)) (d (n "tiny-bip39") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "untrusted") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "wasmi") (r "^0.4.3") (o #t) (d #t) (k 0)))) (h "13w99sb6l8s5m8kl70wg2j0hl9s9xqq06fymih8fq9nk9rlfmbxz") (f (quote (("std" "wasmi" "primitive-types/std" "primitive-types/serde" "primitive-types/heapsize" "primitive-types/byteorder" "primitive-types/rustc-hex" "primitive-types/libc" "impl-serde" "parity-codec/std" "hash256-std-hasher/std" "hash-db/std" "rstd/std" "serde" "rustc-hex/std" "twox-hash" "blake2-rfc" "ring" "untrusted" "hex-literal" "hex" "base58" "substrate-bip39" "tiny-bip39" "serde" "byteorder/std" "rand" "sha2" "schnorrkel" "regex") ("default" "std"))))))

