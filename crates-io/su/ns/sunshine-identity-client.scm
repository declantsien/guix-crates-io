(define-module (crates-io su ns sunshine-identity-client) #:use-module (crates-io))

(define-public crate-sunshine-identity-client-0.1.0 (c (n "sunshine-identity-client") (v "0.1.0") (d (list (d (n "async-std") (r "=1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "=1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "ipld-block-builder") (r "^0.3.0") (d #t) (k 0)) (d (n "keystore") (r "^0.1.0") (d #t) (k 0) (p "keybase-keystore")) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-json"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.55") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "ureq") (r "^1.3.0") (f (quote ("tls" "json"))) (k 0)))) (h "0xvkwn7jzad1a07z9bmnyxlivmlg9a80z5iicama1h9pqd9cz9k2")))

(define-public crate-sunshine-identity-client-0.2.0 (c (n "sunshine-identity-client") (v "0.2.0") (d (list (d (n "async-std") (r "=1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "=1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "ipld-block-builder") (r "^0.4.0") (d #t) (k 0)) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-json"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.10.1") (d #t) (k 0)) (d (n "sunshine-core") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "ureq") (r "^1.3.0") (f (quote ("tls" "json"))) (k 0)))) (h "0vfcffhaa95gckvkn67l07yydmiivzrp311zxfkn6vr7fvbhsxxg")))

(define-public crate-sunshine-identity-client-0.2.2 (c (n "sunshine-identity-client") (v "0.2.2") (d (list (d (n "async-std") (r "=1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "=1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "ipld-block-builder") (r "^0.4.1") (d #t) (k 0)) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-json"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.10.1") (d #t) (k 0)) (d (n "sunshine-core") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "ureq") (r "^1.3.0") (f (quote ("tls" "json"))) (k 0)))) (h "0109k5n18kaqfrvq54yc458xpdpjcws5xyzrvscrnfsyr0lrq80q")))

(define-public crate-sunshine-identity-client-0.2.3 (c (n "sunshine-identity-client") (v "0.2.3") (d (list (d (n "async-std") (r "=1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "=1.5.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "ed25519-dalek") (r "=1.0.0-pre.3") (d #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "ipld-block-builder") (r "^0.4.1") (d #t) (k 0)) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-json"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.56") (d #t) (k 0)) (d (n "substrate-subxt") (r "^0.10.1") (d #t) (k 0)) (d (n "sunshine-core") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "ureq") (r "^1.3.0") (f (quote ("tls" "json"))) (k 0)))) (h "1086aqvlr3ciklh2g2np9wgz8wd66xi2km53m893h9pp7ljkl8xa")))

