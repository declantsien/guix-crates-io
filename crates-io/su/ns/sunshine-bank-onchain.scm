(define-module (crates-io su ns sunshine-bank-onchain) #:use-module (crates-io))

(define-public crate-sunshine-bank-onchain-0.0.2 (c (n "sunshine-bank-onchain") (v "0.0.2") (d (list (d (n "clear_on_drop") (r "^0.2.3") (f (quote ("no_cc"))) (d #t) (k 0)) (d (n "codec") (r "^1.2.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc2") (k 0)) (d (n "frame-system") (r "^2.0.0-rc2") (k 0)) (d (n "membership") (r "^0.0.2") (k 0) (p "sunshine-membership")) (d (n "org") (r "^0.0.2") (k 0) (p "sunshine-org")) (d (n "pallet-balances") (r "^2.0.0-rc2") (k 0)) (d (n "pallet-balances") (r "^2.0.0-rc2") (k 2)) (d (n "serde") (r "^1.0.106") (o #t) (d #t) (k 0)) (d (n "shares-atomic") (r "^0.0.3") (k 0) (p "sunshine-shares-atomic")) (d (n "shares-membership") (r "^0.0.2") (k 0) (p "sunshine-shares-membership")) (d (n "sp-core") (r "^2.0.0-rc2") (k 2)) (d (n "sp-io") (r "^2.0.0-rc2") (k 2)) (d (n "sp-runtime") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "util") (r "^0.0.3") (k 0) (p "sunshine-util")))) (h "02i1q92pk4y2pc8bqpll9dxv15djackqkqc573g5sgmj9ywvllby") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "membership/std" "shares-membership/std" "shares-atomic/std" "org/std") ("default" "std"))))))

