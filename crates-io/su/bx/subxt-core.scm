(define-module (crates-io su bx subxt-core) #:use-module (crates-io))

(define-public crate-subxt-core-0.0.1 (c (n "subxt-core") (v "0.0.1") (h "0xkjzjw2zxlc6a16782c0x0gqir5lspj7qka636972mp2p3dgv8r")))

(define-public crate-subxt-core-0.36.0 (c (n "subxt-core") (v "0.36.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base58") (r "^0.2.0") (d #t) (k 0)) (d (n "bitvec") (r "^1") (k 2)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "codec") (r "^3.6.9") (f (quote ("derive" "bit-vec"))) (k 2) (p "parity-scale-codec")) (d (n "derive-where") (r "^1.2.7") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "frame-metadata") (r "^16.0.0") (k 0)) (d (n "hashbrown") (r "^0.14.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex") (r "^0.4.3") (k 2)) (d (n "impl-serde") (r "^0.4.0") (k 0)) (d (n "primitive-types") (r "^0.12.2") (f (quote ("codec" "serde_no_std" "scale-info"))) (k 0)) (d (n "scale-bits") (r "^0.6.0") (k 0)) (d (n "scale-decode") (r "^0.13.0") (f (quote ("derive" "primitive-types"))) (k 0)) (d (n "scale-encode") (r "^0.7.0") (f (quote ("derive" "primitive-types" "bits"))) (k 0)) (d (n "scale-info") (r "^2.11.0") (f (quote ("bit-vec"))) (k 0)) (d (n "scale-value") (r "^0.16.0") (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.116") (f (quote ("raw_value" "alloc"))) (k 0)) (d (n "sp-core") (r "^31.0.0") (o #t) (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "sp-runtime") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt-macro") (r "^0.36.0") (d #t) (k 2)) (d (n "subxt-metadata") (r "^0.36.0") (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)))) (h "1kn1310yvxrn1g89k048gmn9diiav81y4pnlkbsqvb1hnhcb3vf5") (f (quote (("substrate-compat" "sp-core" "sp-runtime") ("std" "codec/std" "scale-info/std" "scale-value/std" "scale-bits/std" "scale-decode/std" "scale-encode/std" "frame-metadata/std" "subxt-metadata/std" "hex/std" "serde/std" "serde_json/std" "tracing/std" "impl-serde/std" "primitive-types/std") ("default" "std")))) (r "1.74.0")))

(define-public crate-subxt-core-0.36.1 (c (n "subxt-core") (v "0.36.1") (d (list (d (n "base58") (r "^0.2.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive-where") (r "^1.2.7") (d #t) (k 0)) (d (n "frame-metadata") (r "^16.0.0") (k 0)) (d (n "hashbrown") (r "^0.14.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "impl-serde") (r "^0.4.0") (k 0)) (d (n "primitive-types") (r "^0.12.2") (f (quote ("codec" "serde_no_std" "scale-info"))) (k 0)) (d (n "scale-bits") (r "^0.6.0") (k 0)) (d (n "scale-decode") (r "^0.13.0") (f (quote ("derive" "primitive-types"))) (k 0)) (d (n "scale-encode") (r "^0.7.0") (f (quote ("derive" "primitive-types" "bits"))) (k 0)) (d (n "scale-info") (r "^2.11.3") (f (quote ("bit-vec"))) (k 0)) (d (n "scale-value") (r "^0.16.0") (k 0)) (d (n "serde") (r "^1.0.203") (f (quote ("derive" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.117") (f (quote ("raw_value" "alloc"))) (k 0)) (d (n "sp-core") (r "^31.0.0") (o #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "subxt-metadata") (r "^0.36.1") (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)))) (h "1q6zdf5fbwrrwdzscaai12wxhkx6j9vydjfpg0gs2h20dx73wi8j") (f (quote (("substrate-compat" "sp-core" "sp-runtime") ("std" "codec/std" "scale-info/std" "scale-value/std" "scale-bits/std" "scale-decode/std" "scale-encode/std" "frame-metadata/std" "subxt-metadata/std" "hex/std" "serde/std" "serde_json/std" "tracing/std" "impl-serde/std" "primitive-types/std") ("default" "std")))) (y #t) (r "1.74.0")))

(define-public crate-subxt-core-0.37.0 (c (n "subxt-core") (v "0.37.0") (d (list (d (n "base58") (r "^0.2.0") (d #t) (k 0)) (d (n "blake2") (r "^0.10.6") (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive-where") (r "^1.2.7") (d #t) (k 0)) (d (n "frame-metadata") (r "^16.0.0") (k 0)) (d (n "hashbrown") (r "^0.14.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "impl-serde") (r "^0.4.0") (k 0)) (d (n "primitive-types") (r "^0.12.2") (f (quote ("codec" "serde_no_std" "scale-info"))) (k 0)) (d (n "scale-bits") (r "^0.6.0") (k 0)) (d (n "scale-decode") (r "^0.13.0") (f (quote ("derive" "primitive-types"))) (k 0)) (d (n "scale-encode") (r "^0.7.0") (f (quote ("derive" "primitive-types" "bits"))) (k 0)) (d (n "scale-info") (r "^2.11.3") (f (quote ("bit-vec"))) (k 0)) (d (n "scale-value") (r "^0.16.0") (k 0)) (d (n "serde") (r "^1.0.203") (f (quote ("derive" "derive"))) (k 0)) (d (n "serde_json") (r "^1.0.117") (f (quote ("raw_value" "alloc"))) (k 0)) (d (n "sp-core") (r "^31.0.0") (o #t) (k 0)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "subxt-metadata") (r "^0.37.0") (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)))) (h "0ibk2xrylw42bzkjjlmirwgpzhljbxrwq24mci2yv9pfwar1xx2r") (f (quote (("substrate-compat" "sp-core" "sp-runtime") ("std" "codec/std" "scale-info/std" "scale-value/std" "scale-bits/std" "scale-decode/std" "scale-encode/std" "frame-metadata/std" "subxt-metadata/std" "hex/std" "serde/std" "serde_json/std" "tracing/std" "impl-serde/std" "primitive-types/std") ("default" "std")))) (r "1.74.0")))

