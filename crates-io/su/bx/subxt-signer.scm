(define-module (crates-io su bx subxt-signer) #:use-module (crates-io))

(define-public crate-subxt-signer-0.0.1 (c (n "subxt-signer") (v "0.0.1") (h "0zdmzabwq53flcksdwb1ygzrwzqrxbrkrzgg0qq66m17y4cdvd7s")))

(define-public crate-subxt-signer-0.30.0 (c (n "subxt-signer") (v "0.30.0") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^9.0.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.30.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "01r6yjw81jcx2k3r6nx4rc8vfs52bqng968457njb8r4qlflxr2q") (f (quote (("web" "getrandom/js") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa")))) (s 2) (e (quote (("subxt" "dep:subxt")))) (r "1.64.0")))

(define-public crate-subxt-signer-0.30.1 (c (n "subxt-signer") (v "0.30.1") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^9.0.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.30.1") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0zavr7fy6y8nq5kyscbhklhw0jsmkni807gfrkz0py9xrrqdwac8") (f (quote (("web" "getrandom/js") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa")))) (s 2) (e (quote (("subxt" "dep:subxt")))) (r "1.64.0")))

(define-public crate-subxt-signer-0.31.0 (c (n "subxt-signer") (v "0.31.0") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^9.0.0") (d #t) (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.31.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0pf65dxkfzsa9h2han6gc1g3iyqfcy8gba0i443fxdvwyprlq7hf") (f (quote (("web" "getrandom/js") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa")))) (s 2) (e (quote (("subxt" "dep:subxt")))) (r "1.70.0")))

(define-public crate-subxt-signer-0.32.0 (c (n "subxt-signer") (v "0.32.0") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^9.0.0") (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.32.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1dbr10n983cw2i8ykn10i7v2bfqfywrlwwvxsf7c3shrnyi1y76g") (f (quote (("web" "getrandom/js") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa")))) (s 2) (e (quote (("subxt" "dep:subxt")))) (r "1.70.0")))

(define-public crate-subxt-signer-0.32.1 (c (n "subxt-signer") (v "0.32.1") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.9.6") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "sp-core") (r "^21.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^9.0.0") (k 0)) (d (n "sp-keyring") (r "^24.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.32.1") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1ljl7gw633qy45iq33a94a0k2ph1gxg6mf6mh5jmlpvdi6xmlbnq") (f (quote (("web" "getrandom/js") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa")))) (s 2) (e (quote (("subxt" "dep:subxt")))) (r "1.70.0")))

(define-public crate-subxt-signer-0.33.0 (c (n "subxt-signer") (v "0.33.0") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sp-core") (r "^26.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^13.0.0") (k 0)) (d (n "sp-keyring") (r "^29.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.33.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "18rb07bj4gmxjcq6mkkad8rl0apj8n51gzkvrwmbcql23x383k05") (f (quote (("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.34.0 (c (n "subxt-signer") (v "0.34.0") (d (list (d (n "bip39") (r "^2.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.4.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.28.1") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sp-core") (r "^28.0.0") (f (quote ("std"))) (k 2)) (d (n "sp-core-hashing") (r "^15.0.0") (k 0)) (d (n "sp-keyring") (r "^31.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.34.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0.53") (d #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1d9snka4739wxd43krdrn8zwqghp8qf4khcwdwpsxgqls6jpd2pq") (f (quote (("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.35.0 (c (n "subxt-signer") (v "0.35.0") (d (list (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.35.0") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1sj7679cxwxgipjf4lca0yr2xbvm84748qvvf6yv6w16ik4pfamj") (f (quote (("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std" "sp-core/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.35.1 (c (n "subxt-signer") (v "0.35.1") (d (list (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.35.0") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0xg0dbgdyw98l0i2nc2yccc0035h7p7kk23jk0a4i4hw86sx4607") (f (quote (("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std" "sp-core/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.35.2 (c (n "subxt-signer") (v "0.35.2") (d (list (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.35.0") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0253g1yg7wcgps81kjgayzmryniidjrd1xcqs1blmim2r9zyiknc") (f (quote (("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std" "sp-core/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.35.3 (c (n "subxt-signer") (v "0.35.3") (d (list (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt") (r "^0.35.3") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1y4xfxga2dc69654x1i976wjd1jy8ds62xa7aaszlmz3iyimkjvc") (f (quote (("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std" "sp-core/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std" "native")))) (s 2) (e (quote (("web" "getrandom/js" "subxt?/web") ("subxt" "dep:subxt") ("native" "subxt?/native")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.36.0 (c (n "subxt-signer") (v "0.36.0") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1"))) (o #t) (k 0)) (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt-core") (r "^0.36.0") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1l5hvgnliq1cbjc048fl1yj0jldnd7g6jhv2snzyw1fcyr78w1kz") (f (quote (("web" "getrandom/js") ("unstable-eth" "keccak-hash" "ecdsa" "secp256k1" "bip32") ("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std" "sp-core/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std")))) (s 2) (e (quote (("subxt" "dep:subxt-core")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.36.1 (c (n "subxt-signer") (v "0.36.1") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1"))) (o #t) (k 0)) (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt-core") (r "^0.36.1") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "1zi684ab5wm2a21wj3lp9jlcig5qjci02i2hphnxlykkzzf9gknp") (f (quote (("web" "getrandom/js") ("unstable-eth" "keccak-hash" "ecdsa" "secp256k1" "bip32") ("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std")))) (y #t) (s 2) (e (quote (("subxt" "dep:subxt-core")))) (r "1.74.0")))

(define-public crate-subxt-signer-0.37.0 (c (n "subxt-signer") (v "0.37.0") (d (list (d (n "bip32") (r "^0.5.1") (f (quote ("alloc" "secp256k1"))) (o #t) (k 0)) (d (n "bip39") (r "^2.0.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "getrandom") (r "^0.2") (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (o #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (f (quote ("unicode"))) (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("alloc" "recovery"))) (o #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sp-core") (r "^31.0.0") (k 2)) (d (n "sp-crypto-hashing") (r "^0.1.0") (k 0)) (d (n "sp-keyring") (r "^34.0.0") (d #t) (k 2)) (d (n "subxt-core") (r "^0.37.0") (o #t) (k 0)) (d (n "zeroize") (r "^1") (k 0)))) (h "0l48723kncx2yh9jvkgfv19fvm2vxa7554qi8wdy03z9dap8i67l") (f (quote (("web" "getrandom/js") ("unstable-eth" "keccak-hash" "ecdsa" "secp256k1" "bip32") ("std" "regex/std" "sp-crypto-hashing/std" "pbkdf2/std" "sha2/std" "hmac/std" "bip39/std" "schnorrkel/std" "secp256k1/std") ("sr25519" "schnorrkel") ("ecdsa" "secp256k1") ("default" "sr25519" "ecdsa" "subxt" "std")))) (s 2) (e (quote (("subxt" "dep:subxt-core")))) (r "1.74.0")))

