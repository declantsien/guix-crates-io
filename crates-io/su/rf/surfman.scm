(define-module (crates-io su rf surfman) #:use-module (crates-io))

(define-public crate-surfman-0.1.0 (c (n "surfman") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "1f42fzz3nxj7fmlw44kkh19wqxc8kcwdgc0n1glz64vw3a1z8cbi") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-osmesa-default" "sm-osmesa") ("sm-osmesa" "osmesa-sys") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.1.1 (c (n "surfman") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "0l4yd33c1lklk3rxr12lc539v67fxh18hrf87mn24r8ds6kdn1wn") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-osmesa-default" "sm-osmesa") ("sm-osmesa" "osmesa-sys") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.1.2 (c (n "surfman") (v "0.1.2") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "1x105y9lhkl2dvmmjh8sssrj26238qx8if2c5r8djdmv6mkdx0bi") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-osmesa-default" "sm-osmesa") ("sm-osmesa" "osmesa-sys") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.1.3 (c (n "surfman") (v "0.1.3") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "130rrcmadlj88zb998z2qqjz47z812xc9fw3hxwxij610ai8s90h") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-osmesa-default" "sm-osmesa") ("sm-osmesa" "osmesa-sys") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.1.4 (c (n "surfman") (v "0.1.4") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "0gf64pwn3npcjl05yfq2bynhnh4sh97iq2an36jsm65d88v09gs3") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-osmesa-default" "sm-osmesa") ("sm-osmesa" "osmesa-sys") ("sm-no-wgl" "sm-angle-default") ("sm-angle-flush") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.2.0 (c (n "surfman") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.13") (d #t) (k 2)) (d (n "gl_generator") (r "^0.11") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "< 0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(any(not(unix), target_os = \"macos\", target_os = \"android\"))") (k 0)))) (h "0jhdfh9hkzybsp17d09hc1x37qms9mmqv2b1rvy6ab4vn8qlk2yj") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.3.0 (c (n "surfman") (v "0.3.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "<0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1ax1wypmy1ia2c5rihh8l0gylx00y0kldh55vn9npdlixgq5pn53") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.3.1 (c (n "surfman") (v "0.3.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "<0.19.4") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "09kll952c9xqhzaj5lz6sj2qk2ynw492b3lcahsg370gy7abqig4") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.4.0 (c (n "surfman") (v "0.4.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1wyb606xalw6ps8nrynjizzkprk0vwfivmrlcfalppdbfizqv2c4") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.4.1 (c (n "surfman") (v "0.4.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.2") (f (quote ("egl"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "0n0sds3mi0s9phs5npmry42iq53acbq00smhj5vwn99zhxzkpgxv") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.4.2 (c (n "surfman") (v "0.4.2") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1zpk1ys7pxra5sba01291qpwm0z3j429kls8546f5qxdkx8pj5v8") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.4.3 (c (n "surfman") (v "0.4.3") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "021n5jn7vz0lqiff4ngnr1hrjazkpcqas83fi7018j074qyp4jky") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.4.4 (c (n "surfman") (v "0.4.4") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.20") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "11a9k7fnjzh99bc4fankjpa0nbk70r547as482sbgvkqygx6j3p7") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.5.0 (c (n "surfman") (v "0.5.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.18") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "png") (r "^0.15") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.3.3") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.24") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1fx4qk665kpgxpnlj7sfpw4ia6d3cvwaa6pzvbngd92pw4zk2vmb") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.6.0 (c (n "surfman") (v "0.6.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "winerror" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "0gyvkndxzzvjcwvg3yz6k2m97i2alhy9fcp22gvr37m49fjxzsy4") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.7.0 (c (n "surfman") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "winerror" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "09la90ladhmhl8xd77badlyqpkli1pwg5zygk773mhkpp6ybnb8c") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit"))))))

(define-public crate-surfman-0.7.1 (c (n "surfman") (v "0.7.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "winerror" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "18h1a8gizn3zgp3fh9qyfdi1vjznqqncfn819as33j6l0kzdrlyv") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit" "sm-raw-window-handle"))))))

(define-public crate-surfman-0.7.2 (c (n "surfman") (v "0.7.2") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "winerror" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1sc6aymckasgzxf6nb3m9jyk0x05fss3lfw84d9kbj001k97gkr3") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit" "sm-raw-window-handle"))))))

(define-public crate-surfman-0.8.0 (c (n "surfman") (v "0.8.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.3") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "wingdi" "winuser" "winerror" "libloaderapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "0f53h58w2wbyn0z0symq7d90ajkcr2g5lii36dfpq926z7xbwffa") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit" "sm-raw-window-handle") ("chains" "fnv" "sparkle"))))))

(define-public crate-surfman-0.8.1 (c (n "surfman") (v "0.8.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.4") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "libloaderapi" "winbase" "winerror" "wingdi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.28.1") (o #t) (d #t) (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "0s1m00g1ip4afkf3n0424vgh86ffvr9331wgibmxc4cl4a044bnv") (f (quote (("sm-x11" "x11") ("sm-winit" "winit") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-winit" "sm-raw-window-handle") ("chains" "fnv" "sparkle"))))))

(define-public crate-surfman-0.9.0 (c (n "surfman") (v "0.9.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.4") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "libloaderapi" "winbase" "winerror" "wingdi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1qnhk1291b12pb8gyksyak936sdbq4r6n4ssxgkfjld0rcsj4di9") (f (quote (("sm-x11" "x11") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-raw-window-handle") ("chains" "fnv" "sparkle"))))))

(define-public crate-surfman-0.9.1 (c (n "surfman") (v "0.9.1") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.22") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.4") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "libloaderapi" "winbase" "winerror" "wingdi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1pqbj9psk0frxgyvdwb8w0f13wj2vmq195q8l4zpb0v58ffaf41a") (f (quote (("sm-x11" "x11") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle" "raw-window-handle") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-raw-window-handle") ("chains" "fnv" "sparkle"))))))

(define-public crate-surfman-0.9.2 (c (n "surfman") (v "0.9.2") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.4") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "libloaderapi" "winbase" "winerror" "wingdi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "0aff8f6d1mhck7nlwdhkwrwmapax70jw4p7disacgz3x1gjgjpdk") (f (quote (("sm-x11" "x11") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle-generic") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-raw-window-handle-06") ("chains" "fnv" "sparkle")))) (s 2) (e (quote (("sm-raw-window-handle-06" "dep:rwh_06") ("sm-raw-window-handle-05" "dep:rwh_05"))))))

(define-public crate-surfman-0.9.3 (c (n "surfman") (v "0.9.3") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cgl") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "cocoa") (r "^0.25") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.23") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "gl") (r "^0.14") (d #t) (k 2)) (d (n "gl_generator") (r "^0.14") (d #t) (k 1)) (d (n "io-surface") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mach2") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "metal") (r "^0.24") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mozangle") (r "^0.4") (f (quote ("egl" "build_dlls"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "osmesa-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "png") (r "^0.17") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rwh_05") (r "^0.5.2") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (d #t) (t "cfg(target_os = \"android\")") (k 0) (p "raw-window-handle")) (d (n "rwh_06") (r "^0.6") (f (quote ("std"))) (o #t) (d #t) (k 0) (p "raw-window-handle")) (d (n "servo-display-link") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sparkle") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "wayland-sys") (r "^0.30") (f (quote ("client" "dlopen" "egl"))) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("d3d11" "libloaderapi" "winbase" "winerror" "wingdi" "winuser"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winit") (r "^0.29") (d #t) (k 2)) (d (n "wio") (r "^0.2") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.3.0") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\"))))") (k 0)))) (h "1mjq7nyw8hr5sy9b4ilqz48p5ls0kvd18cdq1bpyhfrp2pyrjfyl") (f (quote (("sm-x11" "x11") ("sm-wayland-default") ("sm-test") ("sm-raw-window-handle-generic") ("sm-no-wgl" "sm-angle-default") ("sm-angle-default" "sm-angle") ("sm-angle-builtin" "mozangle") ("sm-angle") ("default" "sm-raw-window-handle-06") ("chains" "fnv" "sparkle")))) (s 2) (e (quote (("sm-raw-window-handle-06" "dep:rwh_06") ("sm-raw-window-handle-05" "dep:rwh_05"))))))

