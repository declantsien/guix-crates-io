(define-module (crates-io su ra suraft) #:use-module (crates-io))

(define-public crate-suraft-0.1.0 (c (n "suraft") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "fail") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "prost") (r "^0.11.9") (d #t) (k 0)) (d (n "prost-build") (r "^0.11.9") (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 2)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 2)) (d (n "slog-envlogger") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.1.0") (d #t) (k 2)) (d (n "slog-stdlog") (r "^4.1.1") (o #t) (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 2)) (d (n "slog-term") (r "^2.9.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1kx1y33b1hbjzpw44s5msmg70f3fzz6ir2a0nmjya2mghdb4m8z7") (f (quote (("failpoints" "fail/failpoints") ("default-logger" "slog-stdlog" "slog-envlogger" "slog-term") ("default" "default-logger"))))))

