(define-module (crates-io su da sudachiclone) #:use-module (crates-io))

(define-public crate-sudachiclone-0.1.0 (c (n "sudachiclone") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "succinct") (r "^0.5.2") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.11") (d #t) (k 0)))) (h "1z7hmj5fyvsnf1lamr0ha8l666yqapw75n0h0xmlls58p4h2qai6")))

(define-public crate-sudachiclone-0.1.1 (c (n "sudachiclone") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "succinct") (r "^0.5.2") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.11") (d #t) (k 0)))) (h "1kxzi1rc0cdr5mqzg982yrwgj0dd7jvl1kmnhwq26zps0np7xy3w")))

(define-public crate-sudachiclone-0.2.0 (c (n "sudachiclone") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.11") (d #t) (k 0)))) (h "1rbjq19l6zgv1l65drmm18ar5sqkcp67c46flbjgnzxxhy9rmkvy") (f (quote (("wasm-bindgen" "rand/wasm-bindgen"))))))

(define-public crate-sudachiclone-0.2.1 (c (n "sudachiclone") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "csv") (r "^1.1.2") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8.22") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "symlink") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.11") (d #t) (k 0)))) (h "0r4qcj6922xhqjy1h828g7yrcl29yvrn4b7fwr4cvaf0qh9qxy87") (f (quote (("wasm-bindgen" "rand/wasm-bindgen"))))))

