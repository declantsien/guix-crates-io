(define-module (crates-io su rr surrealdb-core-nightly) #:use-module (crates-io))

(define-public crate-surrealdb-core-nightly-1.3.20240206 (c (n "surrealdb-core-nightly") (v "1.3.20240206") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1a6zk0plqqahhpi3zg1b9v57nbw0ggrxq7hmy2fmsdqvyffb842j") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240207 (c (n "surrealdb-core-nightly") (v "1.3.20240207") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ppxlv3rvm02l355s9p6yy8amiq1ndgx4cqqhr17czgi28l9zm2n") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240208 (c (n "surrealdb-core-nightly") (v "1.3.20240208") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "05mnh4fvxc6p4izsv9hli6130r04rr4v4717j46dmy9k1jz2j7jz") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240209 (c (n "surrealdb-core-nightly") (v "1.3.20240209") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "ml1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "ml2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1pyszyq53kw4ap9f8gwcjmrpqq31sbzx5k7pbg21h0drv27qxmi5") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:ml2" "dep:ndarray") ("ml" "dep:ml1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240211 (c (n "surrealdb-core-nightly") (v "1.3.20240211") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "ml1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "ml2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1948ccmdd7cd7hj0ansvgg5n726zakqj0n3589g8g13ysqw9qji4") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:ml2" "dep:ndarray") ("ml" "dep:ml1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240212 (c (n "surrealdb-core-nightly") (v "1.3.20240212") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dn6pc47nsk3mxlhaaidmncz65xhc95l2lmb02qbgfinhx427gaz") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240213 (c (n "surrealdb-core-nightly") (v "1.3.20240213") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ms6ji8i6784cyfz5f6jgc8ph2gwl9sb3a3566qyraibq728nl7b") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240214 (c (n "surrealdb-core-nightly") (v "1.3.20240214") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14dij4v69yzzdi0aqn5xxvwk2rdlspgn3yxnc2pq172h2vmljv61") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240216 (c (n "surrealdb-core-nightly") (v "1.3.20240216") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0iafw5k8wvn2abdcj8dgjxn0nf0j373df71s82akjgkyh3kzx7qh") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240219 (c (n "surrealdb-core-nightly") (v "1.3.20240219") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09imjaxkpwa75yvksh0i0acj8p0a801hfwrxnn8b3ckqhql7ghhg") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240220 (c (n "surrealdb-core-nightly") (v "1.3.20240220") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1qprb8jnqcavdbcyvak1izqj05szgfag74jsxzaylv4gjjyr868y") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240222 (c (n "surrealdb-core-nightly") (v "1.3.20240222") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ri6dbqyx1qsalrpy4q9is48x4kf6abnhw1ld55sq9hzirq1blw5") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240226 (c (n "surrealdb-core-nightly") (v "1.3.20240226") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0whqs0i1cprc015b8g82hsszxy0k8sw22givymcmp1p26i0lz2k8") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240227 (c (n "surrealdb-core-nightly") (v "1.3.20240227") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mzp6m0v6iipqsp5r5iw0w4kc5chjw0j8jdd5zf41y09i0120ykb") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240228 (c (n "surrealdb-core-nightly") (v "1.3.20240228") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19spdn3zg2q0xpa5yh11m765wxldmbyn2s6pskfna3a2dsxzb4rv") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240229 (c (n "surrealdb-core-nightly") (v "1.3.20240229") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ib8db9w6pcsklwq9rpgmm4sg32dbh5iqi7l8fjm56h19zb44xiq") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240301 (c (n "surrealdb-core-nightly") (v "1.3.20240301") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0hc5kkg83mbb86ppawpxnvybp0wnbaad7gm10sm58z67wfjrwzlz") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240304 (c (n "surrealdb-core-nightly") (v "1.3.20240304") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "149mylwbsi11qmm432rlrpjwb9xbn5r621f9q4rvgjgp30m4mrf2") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240305 (c (n "surrealdb-core-nightly") (v "1.3.20240305") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06ihcfrqqm0ww4s3l17j92ffa7brd2m125gszv9izhpwr2wjr9lv") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.3.20240306 (c (n "surrealdb-core-nightly") (v "1.3.20240306") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "159sv5y7zfl5mkb7xnhbk4z53siknqha7iydxbanllxh74x48y7g") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.4.20240307 (c (n "surrealdb-core-nightly") (v "1.4.20240307") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "11v48a8nly0py8mpagar2f51jj9mg76f43j86y5w4xifh19piiga") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-1.4.20240308 (c (n "surrealdb-core-nightly") (v "1.4.20240308") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1qqzmjhsbhl6cvjh0pfwgxfhzhyzgvvc9m5s1r3idbj2qnwsaxwr") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.4.20240315 (c (n "surrealdb-core-nightly") (v "2.0.0-1.4.20240315") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zxjk56h639jhpm5izrjr9nw6slic5060r0mlj117f600gkmv0rw") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.4.20240318 (c (n "surrealdb-core-nightly") (v "2.0.0-1.4.20240318") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1akbirwcpgb9am84iy4xd9bc5cq2kvgz6h06xj15jid1s8cxsdwg") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.4.20240319 (c (n "surrealdb-core-nightly") (v "2.0.0-1.4.20240319") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0rqpg9f0nvyp6v1wi7zffyxjbfpxvrd3iba4raaqjrrkvs2d8qsc") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240320 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240320") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1dygvf9pxxlzib2zv2cmf5hyrjg515njbf6m018p65a3kdxkwchr") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240321 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240321") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1xljjmz70khgywy9kz05726q5iydhgwlhh99rizpy9i1f6r4l8ir") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240327 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240327") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1j0sgcdllah2wjn5jvazz2r4a3qa4zgz3fm4xfsyab70ccc5wwrr") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240328 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240328") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0y507scaaqqbbxn2d1z629sxh6pd2i28aabsa5y2hn411h38k7hs") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240330 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240330") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ajbm3v8k0d104jym9s8iz5lilwdn9csghgajp3899265idnnmix") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240403 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240403") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0qkavazcwdg9yrcjxz7p1q5xzcc8m59xzi8qg6s61j4rr52mkkim") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240405 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240405") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "01rrgh8r1y645x52hisay0n71crjz8w4s17vq68pfhwfacmrsmal") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240406 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240406") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1z5cn0xmsrfkwh55fzav9g3n47hkqrrbblf8m4xldjixpb05ldxg") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240409 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240409") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wm54p8nij6d0crwg7qxpmg75zh8rvjhj599ynfjc2wq7a9v06qd") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240412 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240412") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1r71gs43hyz4i522zvgh1j0x2lx940lr4vgfxlfgwlc2018nzwj2") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240415 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240415") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1g4fvf1q22f1n31s77a60zl5w8yxv68ylvkic3blra9j1ws12745") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240416 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240416") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1b6v2zmvf4nsy14jn07ah8a1xyg5ln7w2lby41qqgi9fibr6gd8k") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240417 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240417") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04v7vsrrykidnf5y48fd4pgzcmx4llqp5wsadkshmwnmm2xsxjji") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240425 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240425") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.3") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12ybc118hizmm24jgx2j8r58j7npl10mnh7ycav089dhqngp6w8m") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240426 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240426") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.3") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wz2inqrnczwkp456232vxbbvs63n84ama2xdy6n7hkjhyl6x523") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240430 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240430") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.3") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0pr0r1kzy15hlbylbs3hjr4ppcnf8j5cb71id9lxqd8qj37pv1wv") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240508 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240508") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ckavr3750qhqzklx3nhgc1a6x7i1l6nsy39jbl94nl3dx7ry2za") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240509 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240509") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19an1w8nz01xs9z5gsvhfgcav9nj7a2xif10dnjhl8gr1nh4zx5n") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.5.20240510 (c (n "surrealdb-core-nightly") (v "2.0.0-1.5.20240510") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06ks9r6dlwa13ajrv8vlffw1w0kjsvk6i11svawgvsk8vx8v7ijz") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240510 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240510") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0aswc1hbkvpkqyxh4vdqnf7cg29b2xxqb89gmavih0r59315lwql") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240513 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240513") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0v72gmzj9cjyy4bk7f36an0kgj9dvls90dq8rv414805sqp77w6n") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240514 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240514") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1vs5wdjv8n9vwfvxg4mz3prp20fshkzxp3jn1xsgf4n4zjp8y90n") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240516 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240516") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0r7dw7fhyazbmcmwfxbb1vkx9i9sqhz0i9wwl5qj8xdzijxswkhy") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240522 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240522") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16n84nlaj1z6a3r5imbkmczsy00psxlf7cnfhhblzpdds1jamysx") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240523 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240523") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bff1x53vgkkxpfjvbbbvk8mqysqanx3pcnvn4zbfaa0vh4ggafc") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240524 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240524") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yrfy7nwcgdv5zm0chc57dgvhmfgq4mgz4c6yhz3z5iggskbb3dc") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240527 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240527") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1163k2cbr9a0f9ly4aw880ir7swjrmwkphrz4m60gwxf0m4ma4jm") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240528 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240528") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0pkx03n8f9icbrgg6fak88ngyiys35hvcvh5b6bg1r4pby6d55d8") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-2.0.20240529 (c (n "surrealdb-core-nightly") (v "2.0.0-2.0.20240529") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1iahii8g9qhicabffi1j61qadvb7sl0645mx2adalanby99cdm0q") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.6.20240522 (c (n "surrealdb-core-nightly") (v "2.0.0-1.6.20240522") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0az5yal4fz6gg3413gy1xrb7wm9y4xrgk7nadasy319pvy4yb9y3") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-nightly-2.0.0-1.6.20240531 (c (n "surrealdb-core-nightly") (v "2.0.0-1.6.20240531") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "10ph7n3kxh0zyhzk3pilsnnd22f8w52hc0pp5scc80vq3zi82hq0") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

