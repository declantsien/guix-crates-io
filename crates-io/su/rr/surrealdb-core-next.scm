(define-module (crates-io su rr surrealdb-core-next) #:use-module (crates-io))

(define-public crate-surrealdb-core-next-2.0.20240416 (c (n "surrealdb-core-next") (v "2.0.20240416") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1plfkvsvpc4vcpnqspd8hnqjcjpmikp5fpc9qkjfmjq1sjb00b9r") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml" "dep:ndarray") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240510 (c (n "surrealdb-core-next") (v "2.0.20240510") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03r3s7133p3hcsy2v6nkd0nx1xpfxa7czcid0i4sz60ncw5a1zdg") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240513 (c (n "surrealdb-core-next") (v "2.0.20240513") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ysg4zk11i4naygcw83i0m0ph62nwsivykkmyac84gvksisdxd0m") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240514 (c (n "surrealdb-core-next") (v "2.0.20240514") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14vji9v8vjrwwg5zmwjy4x0bg01iaabfsrkwhj9rr8wh9szsm2gj") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240515 (c (n "surrealdb-core-next") (v "2.0.20240515") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0lc70chisnj6bapcllixbxpj4zd8hnb281ifi3ix0579w9zaid68") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240516 (c (n "surrealdb-core-next") (v "2.0.20240516") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0lmm0vxzq4mhf3rrlwdsm0i66km4ysqc4qs97w9qw84n7kmycpy1") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240522 (c (n "surrealdb-core-next") (v "2.0.20240522") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0rwb9w8d0bx5vrn67fjaqyvji38aj5l6w1q485q687aiv5n1n1pj") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240523 (c (n "surrealdb-core-next") (v "2.0.20240523") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1nq5196wmkjzssgnjpczgq0330cy48gn5vjq7lq9iph1819zyx1d") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240524 (c (n "surrealdb-core-next") (v "2.0.20240524") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0m141p2c19pgb1l8gylzl7ml2wr8ga19d40mn8yq2rc1rnz8mmkz") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240527 (c (n "surrealdb-core-next") (v "2.0.20240527") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1iw19s1x8qjnvl0vg1r3yswa6z6qxrczhpjqygc6n6wp6sbsar1i") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240528 (c (n "surrealdb-core-next") (v "2.0.20240528") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1nbyd78c6q84rp6qsmfsa5nd9pwfkjgv6fbgy2qygcplz1ff0r3s") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240529 (c (n "surrealdb-core-next") (v "2.0.20240529") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1w9bmj3fjpz0wr3mipsy516kq036ndkx37sggw65smd8p7fim0hh") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240530 (c (n "surrealdb-core-next") (v "2.0.20240530") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0z03yrlvgq057sgjd0vxnwa8svhh9d0gzrbl2i7xxm9bxc8fad54") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-next-2.0.20240531 (c (n "surrealdb-core-next") (v "2.0.20240531") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.6.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.5.1") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.5") (f (quote ("tree"))) (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zwsalkrjmsgqjp9r8yam0f4km1z9l1fyddppb2mpi8w9q7dq84i") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

