(define-module (crates-io su rr surrealml-core) #:use-module (crates-io))

(define-public crate-surrealml-core-0.0.1 (c (n "surrealml-core") (v "0.0.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0a654v3k51nis64cpr2saacdc7v1yfq6klkkihbr4yvh65gk96fz")))

(define-public crate-surrealml-core-0.0.2 (c (n "surrealml-core") (v "0.0.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "04nxr6mqfrvln6ch7mmi7xjczzyjcr4hlh39s2izgmkk9b2f7ara")))

(define-public crate-surrealml-core-0.0.3 (c (n "surrealml-core") (v "0.0.3") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1zrzzhkgi2g1b2wcr7j3pbxpr9p4c2ia2zzy598qynmhs3p4rpkc")))

(define-public crate-surrealml-core-0.0.4 (c (n "surrealml-core") (v "0.0.4") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0d53zy9zmyf24pm0cjk3p0n3mwd9rvvblgikfhq4v3d98xmh7cww")))

(define-public crate-surrealml-core-0.0.5 (c (n "surrealml-core") (v "0.0.5") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "19f613dvkds646cngmw63x94jfi21xn1fg4hmprb2wz3ils1clk2")))

(define-public crate-surrealml-core-0.0.6 (c (n "surrealml-core") (v "0.0.6") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0rb4zs24y9lj7gbc66253m97avi23n6k310kqrk2a5g858v5wki2")))

(define-public crate-surrealml-core-0.0.7 (c (n "surrealml-core") (v "0.0.7") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "16pmdn60fgpi5qm9f9f4cma9hvclm0d2lic258ascfbdc1xah51n")))

(define-public crate-surrealml-core-0.0.8 (c (n "surrealml-core") (v "0.0.8") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1jnl1pvn5wb2i3w365rr51qb2hsi3hqj8s6j7f7c85cfd0p4xi8j")))

(define-public crate-surrealml-core-0.1.0 (c (n "surrealml-core") (v "0.1.0") (d (list (d (n "actix-web") (r "^4.5.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0s139qvfhp1ydli6w388jlca5yp1zm1y0i3lrn4smvl8z53k9dy4") (f (quote (("default") ("axum-feature" "axum") ("actix-feature" "actix-web"))))))

(define-public crate-surrealml-core-0.1.1 (c (n "surrealml-core") (v "0.1.1") (d (list (d (n "actix-web") (r "^4.5.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "0yg2fm7r7nbp54r58gl2ngfxan68lh9s9lv66d3xf6vssmjk7xas") (f (quote (("default") ("axum-feature" "axum") ("actix-feature" "actix-web"))))))

(define-public crate-surrealml-core-0.1.2 (c (n "surrealml-core") (v "0.1.2") (d (list (d (n "actix-web") (r "^4.5.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1n9iynp0cjgkqmv6y6j64z8mvbgmkkb13dcnz8wm5n4cyijpkqy7") (f (quote (("default") ("axum-feature" "axum") ("actix-feature" "actix-web"))))))

(define-public crate-surrealml-core-0.1.3 (c (n "surrealml-core") (v "0.1.3") (d (list (d (n "actix-web") (r "^4.5.1") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ort") (r "^1.16.2") (f (quote ("load-dynamic"))) (k 0)) (d (n "ort") (r "^1.16.2") (d #t) (k 1)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.12.0") (f (quote ("full"))) (d #t) (k 2)))) (h "1wh3bar25037hzgvvyizmxhcdl97qfvf3b38k3qidcm50aakdnfl") (f (quote (("torch-tests") ("tensorflow-tests") ("sklearn-tests") ("onnx-tests") ("default") ("axum-feature" "axum") ("actix-feature" "actix-web"))))))

