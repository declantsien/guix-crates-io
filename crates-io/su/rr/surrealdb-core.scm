(define-module (crates-io su rr surrealdb-core) #:use-module (crates-io))

(define-public crate-surrealdb-core-1.1.1 (c (n "surrealdb-core") (v "1.1.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1r9781jsxrfnjz0li53rzyn128dhfm12w18h0j71jk5w7j1p3460") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:hex" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("http" "dep:reqwest")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.1.2 (c (n "surrealdb-core") (v "1.1.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0crnm1rdqg0xhs0gai1wwkxz40wd15dva52wipd083qqxl7924zq") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:hex" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("http" "dep:reqwest")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.1.3 (c (n "surrealdb-core") (v "1.1.3") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0l5d8vbx9c59yavfrkmryb6lcij7y4n5jr4gv33x2ws29zzzaffx") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:hex" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("http" "dep:reqwest")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-alpha.1 (c (n "surrealdb-core") (v "2.0.0-alpha.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1d9vcwrx88m9hmn9ibc4bz3b6szb8ixsxxsabcg81ik4yljfmdar") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.1.4 (c (n "surrealdb-core") (v "1.1.4") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1lv7nn6lh6959rpi67n9v6nb454m4r7g048k28xy487gqa4w4gx4") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:hex" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("http" "dep:reqwest")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-alpha.2 (c (n "surrealdb-core") (v "2.0.0-alpha.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.7") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1cgjdj24gzqinrj71hc2j7yb8dr0imk8drliq2bnvsjkmx9dm9ks") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.1.5 (c (n "surrealdb-core") (v "1.1.5") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.2") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.1") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04q8n865bb7r3pa4pqis863mwcwl737q9y2xkl6i6x6jx39v4kpl") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core" "dep:hex" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("http" "dep:reqwest")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.2.0 (c (n "surrealdb-core") (v "1.2.0") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jmir2axzysxdfyvwv90kq8rnacgafkvslq9al6v4sd0hmj10zis") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.2.1 (c (n "surrealdb-core") (v "1.2.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.4.3") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "023fdvkrb49zsvxi61693sazqqk7z2c83lq2npx8k01lqb5krwzw") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.2.2 (c (n "surrealdb-core") (v "1.2.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.7") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "surrealml-core2") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0yz76nbhfm6drq9f8hj00vchhrx78wvv985spvy6n0qvy6iir84b") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml2" "dep:surrealml-core2" "dep:ndarray") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.3.0 (c (n "surrealdb-core") (v "1.3.0") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19nxvin48xxr91461bl2cjjvd462lcp7p1w9lawajzbn1f1nrdi4") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.3.1 (c (n "surrealdb-core") (v "1.3.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "18z1wzq0hfk3hmhzzh6i7fq21df6hg4s5595hy5nscbagziw9khg") (f (quote (("sql2") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest" "sql2") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.3.2 (c (n "surrealdb-core") (v "1.3.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mp9xm9gj7dmnggbjn1425h62w9pcplh0c36azn2gqlhzrivxhg7") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.4.0 (c (n "surrealdb-core") (v "1.4.0") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07gdixgwr4spykhwbwqyxshidnalw1g011j0vzfxwgd2hjvwhvx1") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-1.4.0 (c (n "surrealdb-core") (v "2.0.0-1.4.0") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0riacgzh152nh0gmwvv8195vyk8nidjrsigcmf8bicih4v92hzr8") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-1.4.1 (c (n "surrealdb-core") (v "2.0.0-1.4.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1yk0jrpqirk9vxr5yb3bz19zpvxnj8df1n8myf24r0h3h91xbk13") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.4.1 (c (n "surrealdb-core") (v "1.4.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.5.0") (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bs4bw75j69w2v5zyabihlwcr89062v01bckr8h2sgp54zbigaci") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-1.4.2 (c (n "surrealdb-core") (v "1.4.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03pkdy355vmwbpfq937813rz2m0lzzw380zr0hs0w7knp8yl0bvs") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-1.4.2 (c (n "surrealdb-core") (v "2.0.0-1.4.2") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.0.8") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14gnnqn1avzc7ry1q5lr9q9aws1w53vn8qn6226j7iw93374cg62") (f (quote (("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb") ("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1" "dep:ndarray") ("kv-tikv" "dep:tikv") ("kv-surrealkv" "dep:surrealkv" "tokio/time") ("kv-speedb" "dep:speedb" "tokio/time") ("kv-rocksdb" "dep:rocksdb" "tokio/time") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.70.0")))

(define-public crate-surrealdb-core-2.0.0-1.5.0 (c (n "surrealdb-core") (v "2.0.0-1.5.0") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1y4bdd55cr4mpm7na93lbimdsk1sd42i6b26kmk3rhi17cir0z3s") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

(define-public crate-surrealdb-core-2.0.0-1.5.1 (c (n "surrealdb-core") (v "2.0.0-1.5.1") (d (list (d (n "addr") (r "^0.15.6") (f (quote ("std"))) (k 0)) (d (n "ahash") (r "^0.8.11") (d #t) (k 0)) (d (n "arbitrary") (r "^1.3.2") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "argon2") (r "^0.5.2") (d #t) (k 0)) (d (n "ascii") (r "^0.3.2") (d #t) (k 0) (p "any_ascii")) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "base64_lib") (r "^0.21.5") (d #t) (k 0) (p "base64")) (d (n "bcrypt") (r "^0.15.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cedar-policy") (r "^2.4.2") (d #t) (k 0)) (d (n "channel") (r "^1.9.0") (d #t) (k 0) (p "async-channel")) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive") (r "^0.12.0") (d #t) (k 0) (p "surrealdb-derive")) (d (n "deunicode") (r "^1.4.1") (d #t) (k 0)) (d (n "dmp") (r "^0.2.0") (d #t) (k 0)) (d (n "echodb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "executor") (r "^1.8.0") (d #t) (k 0) (p "async-executor")) (d (n "ext-sort") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 2)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (k 0)) (d (n "fst") (r "^0.4.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3.7") (d #t) (k 0)) (d (n "geo") (r "^0.27.0") (f (quote ("use-serde"))) (d #t) (k 0)) (d (n "geo-types") (r "^0.7.12") (f (quote ("arbitrary"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "indxdb") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.9.0") (d #t) (k 0)) (d (n "js") (r "^0.5.1") (f (quote ("array-buffer" "bindgen" "classes" "futures" "loader" "macro" "parallel" "properties" "rust-alloc"))) (o #t) (d #t) (k 0) (p "rquickjs")) (d (n "jsonwebtoken") (r "^8.3.0-surreal.1") (d #t) (k 0) (p "surrealdb-jsonwebtoken")) (d (n "lexicmp") (r "^0.1.0") (d #t) (k 0)) (d (n "linfa-linalg") (r "=0.1.0") (d #t) (k 0)) (d (n "md-5") (r "^0.10.6") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "=0.15.6") (d #t) (k 0)) (d (n "ndarray-stats") (r "=0.5.1") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "object_store") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (f (quote ("simple"))) (d #t) (k 0)) (d (n "pharos") (r "^0.5.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros" "unicase"))) (o #t) (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.13") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "quick_cache") (r "^0.4.0") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reblessive") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (f (quote ("arbitrary"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("json" "stream" "multipart"))) (o #t) (k 0)) (d (n "revision") (r "^0.7.0") (f (quote ("chrono" "geo" "roaring" "regex" "rust_decimal" "uuid"))) (d #t) (k 0)) (d (n "ring") (r "^0.17.7") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rmpv") (r "^1.0.1") (d #t) (k 0)) (d (n "roaring") (r "^0.10.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rocksdb") (r "^0.21.0") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.33.1") (f (quote ("maths" "serde-str"))) (d #t) (k 0)) (d (n "scrypt") (r "^0.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "sha1") (r "^0.10.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "speedb") (r "^0.0.4") (f (quote ("lz4" "snappy"))) (o #t) (d #t) (k 0)) (d (n "storekey") (r "^0.5.0") (d #t) (k 0)) (d (n "surrealkv") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "surrealml-core1") (r "^0.1.1") (o #t) (d #t) (k 0) (p "surrealml-core")) (d (n "temp-dir") (r "^0.1.11") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.13") (f (quote ("trace"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tikv") (r "^0.2.0-surreal.2") (o #t) (k 0) (p "surrealdb-tikv-client")) (d (n "time") (r "^0.3.30") (f (quote ("serde"))) (d #t) (k 2)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "io-util" "io-std" "fs" "rt-multi-thread" "time" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt" "sync"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trice") (r "^0.4.0") (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "unicase") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "v4" "v7"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("serde" "js" "v4" "v7"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.39") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasmtimer") (r "^0.2.0") (f (quote ("tokio"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wiremock") (r "^0.5.22") (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12bwf12b31vgbsfaw4rzp303jvg8hc28gh920xwj7a8d0j7visx6") (f (quote (("kv-fdb" "tokio/time") ("default" "kv-mem")))) (s 2) (e (quote (("scripting" "dep:js") ("ml" "dep:surrealml-core1") ("kv-tikv" "dep:tikv" "dep:tempfile" "dep:ext-sort") ("kv-surrealkv" "dep:surrealkv" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-speedb" "dep:speedb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-rocksdb" "dep:rocksdb" "tokio/time" "dep:tempfile" "dep:ext-sort") ("kv-mem" "dep:echodb" "tokio/time") ("kv-indxdb" "dep:indxdb") ("kv-fdb-7_1" "foundationdb/fdb-7_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-7_0" "foundationdb/fdb-7_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_3" "foundationdb/fdb-6_3" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_2" "foundationdb/fdb-6_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_1" "foundationdb/fdb-6_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-6_0" "foundationdb/fdb-6_0" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_2" "foundationdb/fdb-5_2" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("kv-fdb-5_1" "foundationdb/fdb-5_1" "kv-fdb" "dep:tempfile" "dep:ext-sort") ("jwks" "dep:reqwest") ("http" "dep:reqwest") ("experimental-parser" "dep:phf" "dep:unicase") ("arbitrary" "dep:arbitrary" "dep:regex-syntax" "rust_decimal/rust-fuzz" "geo-types/arbitrary" "uuid/arbitrary")))) (r "1.77.0")))

