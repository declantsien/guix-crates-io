(define-module (crates-io hd f5 hdf5) #:use-module (crates-io))

(define-public crate-hdf5-0.0.1 (c (n "hdf5") (v "0.0.1") (h "1piwvkcl5c1jfm8pxf94qywy55qplbi7sz4n2dws1dz6xb3s4s4q") (y #t)))

(define-public crate-hdf5-0.1.0 (c (n "hdf5") (v "0.1.0") (d (list (d (n "hdf5-sys") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (o #t) (d #t) (k 0)) (d (n "temporary") (r "*") (d #t) (k 2)))) (h "1khdx0qph7h7jcyirynvpi93zpy2c8l207k7kw290d5ykccv8nba") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.2.0 (c (n "hdf5") (v "0.2.0") (d (list (d (n "hdf5-sys") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (o #t) (d #t) (k 0)) (d (n "temporary") (r "*") (d #t) (k 2)))) (h "03qvwpsajx2gfg2x3xnnibr7j8la7jlrsb756ly251x8d9314k2x") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.2.1 (c (n "hdf5") (v "0.2.1") (d (list (d (n "hdf5-sys") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (o #t) (d #t) (k 0)) (d (n "temporary") (r "*") (d #t) (k 2)))) (h "0ybshfxbilc8wxgclm5ksi6lcalcgz82dvd0msgpnblc9qlmg63j") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.3.0 (c (n "hdf5") (v "0.3.0") (d (list (d (n "hdf5-sys") (r "*") (d #t) (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "*") (o #t) (d #t) (k 0)) (d (n "temporary") (r "*") (d #t) (k 2)))) (h "0aaqs7hih5l0rwk52vzrkv6h1xjr2aah94y85xxlaclhhnm19ikr") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.3.1 (c (n "hdf5") (v "0.3.1") (d (list (d (n "hdf5-sys") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "temporary") (r "^0.5") (d #t) (k 2)))) (h "1fknnqrxyy3p68ib5zap6517irkwaih3bky7nl59g6gchz701xnj") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.3.2 (c (n "hdf5") (v "0.3.2") (d (list (d (n "hdf5-sys") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "temporary") (r "^0.5") (d #t) (k 2)))) (h "17wxshax231m8hx4fxcgixbagahyx9bhyiqkh7i8p40r3zf10556") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.4.0 (c (n "hdf5") (v "0.4.0") (d (list (d (n "hdf5-sys") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "temporary") (r "^0.6") (d #t) (k 2)))) (h "1yxbjpzxjcxgfqqmxx2vwahgp5m1sfgfg3zwl7vx96ydqqdwyifg") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.4.1 (c (n "hdf5") (v "0.4.1") (d (list (d (n "hdf5-sys") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "temporary") (r "^0.6") (d #t) (k 2)))) (h "0kq381sq7x8cqzs77qhi5vkmsavxc5ln3dm172qqsf94ccb9kva0") (f (quote (("serialize" "rustc-serialize") ("default" "serialize")))) (y #t)))

(define-public crate-hdf5-0.5.0 (c (n "hdf5") (v "0.5.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.0") (d #t) (k 1)) (d (n "hdf5-types") (r "^0.5.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.1") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0r3ixlkfcglfnpi8aj2my3r2vb33bn6fbh8ccp5d3b0difly7sz2") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.5.1 (c (n "hdf5") (v "0.5.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.5.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.1") (d #t) (k 1)) (d (n "hdf5-types") (r "^0.5.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.1") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "14q0a5g89cq09m5wv2daar1yadgm6yzb5sh6y3khydxhbgyiqwbc") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.5.2 (c (n "hdf5") (v "0.5.2") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.5.2") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.2") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.5.2") (d #t) (k 1)) (d (n "hdf5-types") (r "^0.5.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.1") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0a5hwmd0k61x0akz06qck28cjnv2gkki4yrc205hdc2ykyj7y2qw") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.6.0 (c (n "hdf5") (v "0.6.0") (d (list (d (n "bitflags") (r "^1.1") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.6.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.6.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.6.0") (d #t) (k 1)) (d (n "hdf5-types") (r "^0.6.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.1") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0zjgjvpzp0sjfnnw7brq6dkh68myk4p77xf7y3awjh6bc8zqc9c9") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.6.1 (c (n "hdf5") (v "0.6.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.6.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.6.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.6.1") (d #t) (k 1)) (d (n "hdf5-types") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0pipmfrkv06f748pqhn8mpy912h7dshjlwjsl4hbg8pray4284hg") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.7.0 (c (n "hdf5") (v "0.7.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.7.0") (d #t) (k 0)) (d (n "hdf5-types") (r "^0.7.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1") (d #t) (k 2)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "07szv69di2b89db6dh85g04ydyazddnxfk7zvwmkgkpnaqazyyvh") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.7.1 (c (n "hdf5") (v "0.7.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.7.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.7.1") (d #t) (k 0)) (d (n "hdf5-types") (r "^0.7.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r ">=0.13, <0.15") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)))) (h "1c1x0z1lq5dmcyihzy2kqb25qh9k0hw3w3cy424b3p1831mkjqx8") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("default"))))))

(define-public crate-hdf5-0.8.0 (c (n "hdf5") (v "0.8.0") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "blosc-sys") (r "^0.1.1") (o #t) (d #t) (k 0) (p "blosc-src")) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "errno") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.0") (d #t) (k 0)) (d (n "hdf5-types") (r "^0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lzf-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)))) (h "1avlglr7fvpvfr3hgpgl1s4k0cqz4gm9pa94m4qyybn5k6w1phxm") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("lzf" "lzf-sys" "errno") ("default") ("blosc" "blosc-sys"))))))

(define-public crate-hdf5-0.8.1 (c (n "hdf5") (v "0.8.1") (d (list (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "blosc-sys") (r "^0.1.1") (o #t) (d #t) (k 0) (p "blosc-src")) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "errno") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hdf5-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "hdf5-sys") (r "^0.8.1") (d #t) (k 0)) (d (n "hdf5-types") (r "^0.8.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lzf-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "mpi-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)))) (h "040sfkpmzjl7rw581vqn8shrchg7sdixrl46nckvhyyn3w9rpkdx") (f (quote (("mpio" "mpi-sys" "hdf5-sys/mpio") ("lzf" "lzf-sys" "errno") ("default") ("blosc" "blosc-sys"))))))

