(define-module (crates-io mq tt mqttrust_core) #:use-module (crates-io))

(define-public crate-mqttrust_core-0.2.0 (c (n "mqttrust_core") (v "0.2.0") (d (list (d (n "defmt") (r "^0.2") (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "mqttrs") (r "^0.4.1") (k 0)) (d (n "mqttrust") (r "^0.2.0") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "1qf9q6d2ii8ckydgzih4hgwf18qm063m8a44qfy2xfq90xjl7gjb") (f (quote (("defmt-warn") ("defmt-trace") ("defmt-info") ("defmt-error") ("defmt-default") ("defmt-debug") ("default"))))))

(define-public crate-mqttrust_core-0.4.0 (c (n "mqttrust_core") (v "0.4.0") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.4.0") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "1jq4g7wjcn160hkhqnkz415fh0c7r7z6879ap86gw2c18rsz8nwk") (f (quote (("defmt-warn" "defmt-impl") ("defmt-trace" "defmt-impl") ("defmt-info" "defmt-impl") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl") ("defmt-error" "defmt-impl") ("defmt-default" "defmt-impl") ("defmt-debug" "defmt-impl") ("default"))))))

(define-public crate-mqttrust_core-0.4.1 (c (n "mqttrust_core") (v "0.4.1") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.4") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "embedded-time") (r "^0.11.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.4.1-alpha.0") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "0l04wm72f45yh7zy6rqqhkjm3dfjf4675xxigx7nf45w0iqv204a") (f (quote (("defmt-warn" "defmt-impl") ("defmt-trace" "defmt-impl") ("defmt-info" "defmt-impl") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl") ("defmt-error" "defmt-impl") ("defmt-default" "defmt-impl") ("defmt-debug" "defmt-impl") ("default"))))))

(define-public crate-mqttrust_core-0.5.0 (c (n "mqttrust_core") (v "0.5.0") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.5.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "1ikm9rafmd0sxm5y2jwphrgizv99gwvj490h19cqfg02r56vi7ng") (f (quote (("std") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl" "fugit/defmt") ("default"))))))

(define-public crate-mqttrust_core-0.5.1 (c (n "mqttrust_core") (v "0.5.1") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (f (quote ("defmt"))) (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.5.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "0wmhvcmz01jaaqj2g1i9wz3szv19bv73qq7qvmivbj3aqiidgglw") (f (quote (("std") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl" "fugit/defmt") ("default"))))))

(define-public crate-mqttrust_core-0.5.2 (c (n "mqttrust_core") (v "0.5.2") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.5.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "1477gid3rh0x2b157ccq4vlflanc3dqkg3asf6a01yqjw4rx0r45") (f (quote (("std") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl" "fugit/defmt") ("default"))))))

(define-public crate-mqttrust_core-0.6.0 (c (n "mqttrust_core") (v "0.6.0") (d (list (d (n "bbqueue") (r "^0.5") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.3") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 2)) (d (n "embedded-nal") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "fugit") (r "^0.3") (d #t) (k 0)) (d (n "fugit-timer") (r "^0.1.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (f (quote ("serde" "x86-sync-pool"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "mqttrust") (r "^0.6.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)))) (h "1ld9wqayzkvcmy4mk0lr87qxgc504f3yxcmfaxkvzkr19zdwvl8m") (f (quote (("std") ("defmt-impl" "defmt" "mqttrust/defmt-impl" "heapless/defmt-impl" "fugit/defmt") ("default"))))))

