(define-module (crates-io mq tt mqtt-protocol) #:use-module (crates-io))

(define-public crate-mqtt-protocol-0.1.0 (c (n "mqtt-protocol") (v "0.1.0") (d (list (d (n "byteorder") (r "^0.3.13") (d #t) (k 0)) (d (n "clap") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.1.17") (d #t) (k 2)))) (h "17qj96ws3r402cflyf49hg5dnnpkc4cw2xr3vpqvfczxffsk70kl")))

(define-public crate-mqtt-protocol-0.1.1 (c (n "mqtt-protocol") (v "0.1.1") (d (list (d (n "byteorder") (r "^0.3.13") (d #t) (k 0)) (d (n "clap") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.1.17") (d #t) (k 2)))) (h "0i23dmmv355yi2is0f7az54pva1bwr9qrlakkg41g1n1h6cfvi9v")))

(define-public crate-mqtt-protocol-0.2.0 (c (n "mqtt-protocol") (v "0.2.0") (d (list (d (n "byteorder") (r "^0.3.13") (d #t) (k 0)) (d (n "clap") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.1.17") (d #t) (k 2)))) (h "0ia4ha0nx7hi8jn33f5yksc6zhzdcixf9gcd06kl8b3c06znblvc")))

(define-public crate-mqtt-protocol-0.3.0 (c (n "mqtt-protocol") (v "0.3.0") (d (list (d (n "byteorder") (r "^0.3.13") (d #t) (k 0)) (d (n "clap") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.1.17") (d #t) (k 2)))) (h "1nplnvi0lraxiw5xgv7fbalwna8j7jnjy1jl11k75bl3z7rzq1zf")))

(define-public crate-mqtt-protocol-0.3.1 (c (n "mqtt-protocol") (v "0.3.1") (d (list (d (n "byteorder") (r "^0.3.13") (d #t) (k 0)) (d (n "clap") (r "^1.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.3.1") (d #t) (k 2)) (d (n "log") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.1.17") (d #t) (k 2)))) (h "1r0q1d0vc7ndi3j5cw3vqwk1cldm38826ig7zcgx33zac5fjc8h3")))

(define-public crate-mqtt-protocol-0.4.0 (c (n "mqtt-protocol") (v "0.4.0") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.4") (f (quote ("v4"))) (d #t) (k 2)))) (h "1qmkh3nh4jdnhx62npj9zijbqd22bg3d58iwb4n0c593ypk155q9")))

(define-public crate-mqtt-protocol-0.4.1 (c (n "mqtt-protocol") (v "0.4.1") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.4") (f (quote ("v4"))) (d #t) (k 2)))) (h "0xk0s7i5ch7sckq03yryijn05gm15ya2kj2fdsh24vlka1z1yjyh")))

(define-public crate-mqtt-protocol-0.4.2 (c (n "mqtt-protocol") (v "0.4.2") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.4") (f (quote ("v4"))) (d #t) (k 2)))) (h "1sk21pzdwmk9f0c3y6890wi8hbpa6iv8n9y4b5zl7nlpd0sw7fzs")))

(define-public crate-mqtt-protocol-0.5.0 (c (n "mqtt-protocol") (v "0.5.0") (d (list (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^2.23") (d #t) (k 2)) (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "futures") (r "^0.1.22") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.1.7") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1.7") (d #t) (k 0)) (d (n "uuid") (r "^0.4") (f (quote ("v4"))) (d #t) (k 2)))) (h "0vx1dmlppg6n1y06la633w85hfl3zpp65liizwmw2c5ar5spn9w8")))

(define-public crate-mqtt-protocol-0.6.0 (c (n "mqtt-protocol") (v "0.6.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 2)))) (h "0d7cp55d42b9w2k8kzx6d0zkqny0ccq3ii63h4425869kr5ngnmb")))

(define-public crate-mqtt-protocol-0.6.1 (c (n "mqtt-protocol") (v "0.6.1") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 2)))) (h "1h8z5vdsr7h8s3m6siwhzxdvi9jpg4y3n7vfn1g4csz4f1wh6qkc")))

(define-public crate-mqtt-protocol-0.7.0 (c (n "mqtt-protocol") (v "0.7.0") (d (list (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.5") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 2)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("v4"))) (d #t) (k 2)))) (h "1f16d3m3b8ixh0v65mffmrmkq8q368zpwb6ri946h5pmn5rqa5sf")))

(define-public crate-mqtt-protocol-0.8.0 (c (n "mqtt-protocol") (v "0.8.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-threaded" "net" "time" "io-util" "stream"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1wk8cqp3yfwdfwd8cs5did74573ivkc855rv67f3djxbzhkb2p2d") (f (quote (("default") ("async" "tokio"))))))

(define-public crate-mqtt-protocol-0.8.1 (c (n "mqtt-protocol") (v "0.8.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-threaded" "net" "time" "io-util" "stream"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0n40hjwfhxdqlna69ijjbi1a27x0s34hmwrm3x76c5vr3nyjgm8a") (f (quote (("default") ("async" "tokio"))))))

(define-public crate-mqtt-protocol-0.9.0 (c (n "mqtt-protocol") (v "0.9.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util" "stream"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "06palf15gi7kwln042pkzrnzbdzaj435dapzhdg4sr4cw7j4gk9v") (f (quote (("default") ("async" "tokio"))))))

(define-public crate-mqtt-protocol-0.10.0 (c (n "mqtt-protocol") (v "0.10.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1ga0adpx8q7x0rymls5h4js8agjnwvk3dzry7yqfbqvjy5mrxxys") (f (quote (("default") ("async" "tokio"))))))

(define-public crate-mqtt-protocol-0.11.0 (c (n "mqtt-protocol") (v "0.11.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1plsmjkajmkcqykk0vwspdwh4bk8n0zli3r419np61q6299mbrr8") (f (quote (("tokio-codec" "tokio" "tokio-util" "bytes") ("default"))))))

(define-public crate-mqtt-protocol-0.11.1 (c (n "mqtt-protocol") (v "0.11.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "15ck4qixxkdkpgijarhbx349ig2lzca4239nvw556b9mccql3z31") (f (quote (("tokio-codec" "tokio" "tokio-util" "bytes") ("default"))))))

(define-public crate-mqtt-protocol-0.11.2 (c (n "mqtt-protocol") (v "0.11.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "1b07p0m7kc65h3ss2zd5hfx2hl7523yqr0k7z7svr7y61lw1f2ya") (f (quote (("tokio-codec" "tokio" "tokio-util" "bytes") ("default"))))))

(define-public crate-mqtt-protocol-0.12.0 (c (n "mqtt-protocol") (v "0.12.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread" "net" "time" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 2)))) (h "0yvld07a172hcy9a5v90c5p51809rp4g42nanwhbnr5dhsqf2mb0") (f (quote (("tokio-codec" "tokio" "tokio-util" "bytes") ("default"))))))

