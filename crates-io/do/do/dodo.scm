(define-module (crates-io do do dodo) #:use-module (crates-io))

(define-public crate-dodo-0.1.0 (c (n "dodo") (v "0.1.0") (d (list (d (n "dodo-derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "err-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.48") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "0aadw2s776av40p6fxyygvwl9kk6ha9li4hmd746n7b396d2l5rf") (f (quote (("yaml" "serde_yaml") ("json" "serde_json") ("directory") ("derive" "dodo-derive") ("default" "derive" "directory" "json"))))))

(define-public crate-dodo-0.1.1 (c (n "dodo") (v "0.1.1") (d (list (d (n "dodo-derive") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.8") (d #t) (k 2)))) (h "1x6mikx3w68x3z09waif57wkrib3xi07s2hr98ylc7gf4wjdr1ng") (f (quote (("yaml" "serde_yaml") ("json" "serde_json") ("directory") ("derive" "dodo-derive") ("default" "derive" "directory" "json"))))))

(define-public crate-dodo-0.2.0 (c (n "dodo") (v "0.2.0") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "dodo-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1f840c2xbj4kbynj7l3ygvzigkg8jkz83n0h1rpcarj9wgmj5m5d") (f (quote (("yaml" "serde_yaml") ("json" "serde_json") ("directory") ("derive" "dodo-derive") ("default" "derive" "directory" "json"))))))

(define-public crate-dodo-0.3.0 (c (n "dodo") (v "0.3.0") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "dodo-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1nsf8aq56c6vj1xhvrcycf475kv8vidrp0kwhvd8yngrk162dq96") (f (quote (("yaml" "serde_yaml") ("json" "serde_json") ("directory") ("derive" "dodo-derive") ("default" "derive" "directory" "json"))))))

(define-public crate-dodo-0.3.1 (c (n "dodo") (v "0.3.1") (d (list (d (n "doc-comment") (r "^0.3") (d #t) (k 0)) (d (n "dodo-derive") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "0x2zvqp5hsp7dklja0rynpz72qyjis3zlb4f871liarw5gkkafd0") (f (quote (("yaml" "serde_yaml") ("json" "serde_json") ("directory_locks" "directory" "fs2") ("directory") ("derive" "dodo-derive") ("default" "derive" "directory" "json"))))))

