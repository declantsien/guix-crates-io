(define-module (crates-io do ub doublets) #:use-module (crates-io))

(define-public crate-doublets-0.1.0-alpha.1 (c (n "doublets") (v "0.1.0-alpha.1") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1h15pfrair2va4yh92s06xisgskaki76i7441g8n0li74bph5czl")))

(define-public crate-doublets-0.1.0-alpha.2 (c (n "doublets") (v "0.1.0-alpha.2") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1vd273ygidp9xqcmrhysvsga66z9isikis0yllpkqaib16p50mqq")))

(define-public crate-doublets-0.1.0-alpha.3 (c (n "doublets") (v "0.1.0-alpha.3") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1issbglrhyysrl1dzky25p43by8gfpvs14fmkn3i2azf0963mjxz")))

(define-public crate-doublets-0.1.0-alpha.4 (c (n "doublets") (v "0.1.0-alpha.4") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "09gmb474bfv8n66h1147i2l73n18j09vd7dik1w2wikr4nnr1r53")))

(define-public crate-doublets-0.1.0-alpha.5 (c (n "doublets") (v "0.1.0-alpha.5") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1z35ykgp35vb3km2qmxq8ydvmk9nb3ikahq45b9rkmdqbs7yv26w") (y #t)))

(define-public crate-doublets-0.1.0-alpha.6 (c (n "doublets") (v "0.1.0-alpha.6") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "18k40zq5d3wn5rrhnsb8vlnp5kxhqc07rm6kh3ryyy31my60xihj") (y #t)))

(define-public crate-doublets-0.1.0-alpha.7 (c (n "doublets") (v "0.1.0-alpha.7") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "011n23nn6dvdvls5nmmjcjvpgdjy87jkkv789iprqxhr2mdm6xij")))

(define-public crate-doublets-0.1.0-alpha.8 (c (n "doublets") (v "0.1.0-alpha.8") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1w1zqab5hlf4ckh2hnz1a78g031bv8mybzr9ygwpvajppb40n1jd") (y #t)))

(define-public crate-doublets-0.1.0-alpha.9 (c (n "doublets") (v "0.1.0-alpha.9") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1kpc4npd8nn21ldsg16alv578fxyq5g1kpavrm89fspdl2bbwnq1") (y #t)))

(define-public crate-doublets-0.1.0-alpha.10 (c (n "doublets") (v "0.1.0-alpha.10") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1hskiv31z2bayd6yjnwxf88ynbi7kd0l5iss7x0si5y15a30sydk")))

(define-public crate-doublets-0.1.0-alpha.11 (c (n "doublets") (v "0.1.0-alpha.11") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1nq7n7x5gh328a9yp8s1rwnmc8401yc2fjc1sh6f9pvinv17785r") (y #t)))

(define-public crate-doublets-0.1.0-alpha.13 (c (n "doublets") (v "0.1.0-alpha.13") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "04nd9s2xfv8lx3gj2sa2zalc74jfhfp9f5jg7k24437zr7sbcdc6")))

(define-public crate-doublets-0.1.0-alpha.14 (c (n "doublets") (v "0.1.0-alpha.14") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "15cbcssw8yqnqb98vwpw18a288rfryhlfgbg0zq0qibgamcpk78h")))

(define-public crate-doublets-0.1.0-alpha.15 (c (n "doublets") (v "0.1.0-alpha.15") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1n83ghvajgawn4nzla6wdnaxp4mz9qzxd9lxirn0yaddr1n03n7k")))

(define-public crate-doublets-0.1.0-alpha.16 (c (n "doublets") (v "0.1.0-alpha.16") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1gc3xvxkpnlvvlz82j2rzh8iqmjyxap50mxb83mvrq1ryvjww9mn") (f (quote (("num") ("mem") ("full" "mem" "num" "data") ("data"))))))

(define-public crate-doublets-0.1.0-alpha.17 (c (n "doublets") (v "0.1.0-alpha.17") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0myli2732nv59xfzv4icg6cp15669b6cz975kn7km11dyyg22642") (f (quote (("num") ("mem") ("full" "mem" "num" "data") ("data"))))))

(define-public crate-doublets-0.1.0-alpha.18 (c (n "doublets") (v "0.1.0-alpha.18") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0bmg7aig4zmvcs57hxrsqlq7xsgpyw5ylzcxiz0kb7c126q24va3") (f (quote (("num") ("mem") ("full" "mem" "num" "data") ("data"))))))

(define-public crate-doublets-0.1.0-alpha.19 (c (n "doublets") (v "0.1.0-alpha.19") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0j1bma63k3cs1grnb1gbnhqk3n1z5na1hzwm0xs8mqqkwq94w3hz") (f (quote (("num") ("mem") ("full" "mem" "num" "data") ("data"))))))

(define-public crate-doublets-0.1.0-alpha.20 (c (n "doublets") (v "0.1.0-alpha.20") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0vagcrdhwsfqww9cz9ymnxrgg53438rl1idg985h2qqlrbar1xq7") (f (quote (("num") ("mem") ("full" "mem" "num" "data") ("data"))))))

(define-public crate-doublets-0.1.0-beta.1 (c (n "doublets") (v "0.1.0-beta.1") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1lmc9y5vrz90zck943bvjxmdmvkkaw7wd6l7vs4685f178bvjv9y") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.2 (c (n "doublets") (v "0.1.0-beta.2") (d (list (d (n "bumpalo") (r "^3.8.0") (f (quote ("allocator_api"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (f (quote ("release_max_level_info" "max_level_info"))) (d #t) (k 0)) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "17dzc31j39mmkl4j7ln078z9cg28drd9vnb0c3j15r7kpak2aqg8") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.3 (c (n "doublets") (v "0.1.0-beta.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1dhgpavcskym0fl3x46g7n9s5mj9ycdgsb0dr0xxny107hdyfsmq") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.4 (c (n "doublets") (v "0.1.0-beta.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-data")) (d (n "mem") (r "^0.1.0-alpha.5") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.0") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1n1v1l03cypmg2rl01jbzcrp1v0r5b1bf7iyxmbgcmgjdv3x9wiy") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.5 (c (n "doublets") (v "0.1.0-beta.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0ax9s6ki8j7hf5x5d31yg9fcbf8yjlyfcqw3r5phvv5xq4rnfdc0") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data")))) (y #t)))

(define-public crate-doublets-0.1.0-beta.6 (c (n "doublets") (v "0.1.0-beta.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "182gdscvxxj4krkm1ms19kdhjk4brcfskbwrrm8wxx3shyi2k1na") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.7 (c (n "doublets") (v "0.1.0-beta.7") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.1") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "04gzwqs6y3cq65vh7ci86759c4d1wyp4a7picc2219g6j719g3ll") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.8 (c (n "doublets") (v "0.1.0-beta.8") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "yield-iter") (r "^0.1.0") (d #t) (k 0)))) (h "0srsp54apfa18q11srr304lsl5mdpj7smn66hpj3n9hl3nzn0xfd") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.9 (c (n "doublets") (v "0.1.0-beta.9") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "yield-iter") (r "^0.1.0") (d #t) (k 0)))) (h "00p857bw0cq2hrq34dh796g8b3jz32aaczy7q6vb0wjzl53zssrw") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.10 (c (n "doublets") (v "0.1.0-beta.10") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "yield-iter") (r "^0.1.0") (d #t) (k 0)))) (h "1qcnkn3kzml1fjaazc4vxhdjzpam8cg6awszca8aqix4vadh0dh3") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.11 (c (n "doublets") (v "0.1.0-beta.11") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "yield-iter") (r "^0.1.0") (d #t) (k 0)))) (h "08dbvih1gs4ykqsh9dd6cpzmq31xaqbh0yr5889vm078sldv0qc6") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.12 (c (n "doublets") (v "0.1.0-beta.12") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "yield-iter") (r "^0.1.0") (d #t) (k 0)))) (h "1i2x3fmnd6xzgp6shdi0k6bvf03g1jvxplf2nfd3qlvyk6axqan3") (f (quote (("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.13 (c (n "doublets") (v "0.1.0-beta.13") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1a5mm40cb1hcrmpxl1r0i7x1yi1z0cwpg9rqspabq7in76hkmcds") (f (quote (("smallvec-optimization" "smallvec") ("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform" "smallvec-optimization") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-beta.14 (c (n "doublets") (v "0.1.0-beta.14") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "12km416s301ii10abzz8rf991val1m3r855rkw9k63y4d249hmxn") (f (quote (("smallvec-optimization" "smallvec") ("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform" "smallvec-optimization") ("default" "platform") ("data"))))))

(define-public crate-doublets-0.1.0-pre+beta.15 (c (n "doublets") (v "0.1.0-pre+beta.15") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "data") (r "^0.1.0-beta.1") (d #t) (k 0) (p "platform-data")) (d (n "leak_slice") (r "^0.2") (d #t) (k 0)) (d (n "mem") (r "^0.1.0-pre") (d #t) (k 0) (p "platform-mem")) (d (n "methods") (r "^0.1.0-alpha.2") (d #t) (k 0) (p "platform-treesmethods")) (d (n "num") (r "^0.1.0-alpha.1") (d #t) (k 0) (p "platform-num")) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1y2llcanwazjhznph4v6qcvfb3jwp8gv0aq4q662ki0b91znd0xg") (f (quote (("smallvec-optimization" "smallvec") ("platform" "mem" "num" "data") ("num") ("mem") ("full" "platform" "smallvec-optimization") ("default" "platform") ("data"))))))

