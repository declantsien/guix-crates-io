(define-module (crates-io ja il jail) #:use-module (crates-io))

(define-public crate-jail-0.0.0 (c (n "jail") (v "0.0.0") (d (list (d (n "errno") (r "^0.2.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "1mzshwgmkrfpqc1ncjbn0334mbjmikbh3cnlv73f43f1gdnzg3i5") (y #t)))

(define-public crate-jail-0.0.0-alpha1 (c (n "jail") (v "0.0.0-alpha1") (d (list (d (n "errno") (r "^0.2.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "1637ha3y78lr9h01an72q33bw9bzwijnhzviarfnmmrd0d0542f8")))

(define-public crate-jail-0.0.0-alpha2 (c (n "jail") (v "0.0.0-alpha2") (d (list (d (n "errno") (r "^0.2.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "000djbkd12wvqriz9sx4pbdfi8mm5gszlhgzc0agv9mr20szxsir")))

(define-public crate-jail-0.0.0-alpha3 (c (n "jail") (v "0.0.0-alpha3") (d (list (d (n "errno") (r "^0.2.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "0iqzh3bns8kkh52as5zjx3vqqnh0nkj1na43kp9440q0wb1w1kjs")))

(define-public crate-jail-0.0.0-alpha4 (c (n "jail") (v "0.0.0-alpha4") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)))) (h "0j3028fb7avpwpk7gx4sqkhxc5agnpi98q2fmrbmgi12iz51cvaa")))

(define-public crate-jail-0.0.1 (c (n "jail") (v "0.0.1") (d (list (d (n "backtrace-sys") (r "= 0.1.19") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "sysctl") (r "^0.2") (d #t) (k 0)))) (h "0cdyij692ahsqbw0d2c2ib5d1n41lbpx35dvhv3dbddbhkqjyi6d")))

(define-public crate-jail-0.0.2 (c (n "jail") (v "0.0.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (k 0)) (d (n "sysctl") (r "~0.2.0") (d #t) (k 0)))) (h "00ajxqh9g1p5ckb76mb0lijqxjgqnsa7chksgb3dfw1b02wp4fqw")))

(define-public crate-jail-0.0.3 (c (n "jail") (v "0.0.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (k 0)) (d (n "sysctl") (r "~0.2.0") (d #t) (k 0)))) (h "1b3cwh8q0yws70nbfzhjfsagc4jg1r456dnfj53ya28k8nl7ylkb")))

(define-public crate-jail-0.0.4 (c (n "jail") (v "0.0.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.7.0") (d #t) (k 2)) (d (n "sysctl") (r "~0.2.0") (d #t) (k 0)))) (h "0qcdz2v2nwxhl3r2r186dgfq1yxqxwr964dzc2xg1r4fs0237mh7")))

(define-public crate-jail-0.0.5 (c (n "jail") (v "0.0.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "nix") (r "^0.11.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.7.0") (d #t) (k 2)) (d (n "rctl") (r "^0.0.2") (d #t) (k 0)) (d (n "sysctl") (r "~0.2.0") (d #t) (k 0)))) (h "055gzxy9pcgdncc82kf9swhy508qbgqjjz3rns6mr4zd5hyi6rn5")))

(define-public crate-jail-0.0.6 (c (n "jail") (v "0.0.6") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 2)) (d (n "rctl") (r "^0.0.5") (d #t) (k 0)) (d (n "sysctl") (r "~0.2.0") (d #t) (k 0)))) (h "1mc74sa5caig0ls4z0f10shggi5aw9kinf87mblhh73gn11xy947")))

(define-public crate-jail-0.1.0 (c (n "jail") (v "0.1.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.14.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 2)) (d (n "rctl") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.15.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.15.0") (d #t) (k 0)) (d (n "sysctl") (r "~0.3.0") (d #t) (k 0)))) (h "0mp45idg5az5041h1jpmkq5vfyiw6abd9i5r6rknxn6v9aa5y71r") (f (quote (("serialize" "serde" "serde_json" "rctl/serialize"))))))

(define-public crate-jail-0.1.1 (c (n "jail") (v "0.1.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "failure") (r "~0.1.1") (d #t) (k 0)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.14.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 2)) (d (n "prettytable-rs") (r "^0.8.0") (d #t) (k 2)) (d (n "rctl") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.16.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.15.0") (d #t) (k 0)) (d (n "sysctl") (r "~0.4.0") (d #t) (k 0)))) (h "1qgpazasfm18kv3hqsgjf9klf3lnyj89zabwq9y8p94w72cvxnhg") (f (quote (("serialize" "serde" "serde_json" "rctl/serialize"))))))

(define-public crate-jail-0.2.0 (c (n "jail") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.3") (d #t) (k 0)) (d (n "cli-table") (r "^0.4") (f (quote ("derive"))) (k 2)) (d (n "libc") (r "~0.2.41") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nix") (r "^0.22.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rctl") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21.1") (d #t) (k 0)) (d (n "sysctl") (r "~0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "065bm3fn81d9399vb6m3zvd63g15w1k44al7vmlnjn9q8vykx59n") (f (quote (("serialize" "serde" "serde_json" "rctl/serialize"))))))

