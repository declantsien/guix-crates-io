(define-module (crates-io ba st bastion) #:use-module (crates-io))

(define-public crate-bastion-0.1.0 (c (n "bastion") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.19") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.10") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0klc747h3kf534kfnnqf1cd93cgxnkwrpdrd6m3hi2l35xzqcg4r")))

(define-public crate-bastion-0.1.1 (c (n "bastion") (v "0.1.1") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.19") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.10") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1331fmh5vd7z82a3cmacjg7x8j1dgzpfba6nsn1amlxzwvfkqbz1")))

(define-public crate-bastion-0.1.2 (c (n "bastion") (v "0.1.2") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.19") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.10") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0hs59h94qx8kajd0qv9iri1d2hyzw8qgrr9q09mqdhzd5qgpa95l")))

(define-public crate-bastion-0.1.3 (c (n "bastion") (v "0.1.3") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.19") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.10") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0qazbqh9gypj7c6fpqkybsdg6bmn38ih85d9danl4pk8yidl1gsy")))

(define-public crate-bastion-0.1.4-alpha.1 (c (n "bastion") (v "0.1.4-alpha.1") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.19") (d #t) (k 2)) (d (n "signal-hook") (r "^0.1.10") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "17q1cli6rwi26s8vvznc44rawajp7s7rxfqzhlivfggxsswpysws")))

(define-public crate-bastion-0.2.0 (c (n "bastion") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3.32") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "ego-tree") (r "^0.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.28") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.7") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "ratelimit") (r "^0.4.4") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-executor") (r "^0.1.8") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1.15") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0s2mx9mx0m23jcxki0qd3pmv0hfjgdp25ijvvjsbdzil95n9a5ng")))

(define-public crate-bastion-0.3.0-alpha.1 (c (n "bastion") (v "0.3.0-alpha.1") (d (list (d (n "bastion-executor") (r "= 0.3.0-alpha.1") (d #t) (k 0)) (d (n "bastion-qutex") (r "^0.2") (f (quote ("async_await"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightproc") (r "= 0.3.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "09giilw7ad4y4lvzqpbk60szwl027jrg3svmy6nan2mgpzf46k8n") (f (quote (("unstable" "bastion-executor/unstable"))))))

(define-public crate-bastion-0.3.0 (c (n "bastion") (v "0.3.0") (d (list (d (n "bastion-executor") (r "= 0.3.0") (d #t) (k 0)) (d (n "bastion-qutex") (r "^0.2") (f (quote ("async_await"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightproc") (r "= 0.3.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "12i1cv86blcvvd2cxcvn1xv73kd47d1f722m32nirj0j5bsxga4w") (f (quote (("unstable" "bastion-executor/unstable"))))))

(define-public crate-bastion-0.3.1 (c (n "bastion") (v "0.3.1") (d (list (d (n "bastion-executor") (r "= 0.3.0") (d #t) (k 0)) (d (n "bastion-qutex") (r "^0.2") (f (quote ("async_await"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightproc") (r "= 0.3.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0mgi8fbwcpgiwfn0nrc99mnqrmh9lqw1347aj3zmz5pdiz1p7mnp") (f (quote (("unstable" "bastion-executor/unstable"))))))

(define-public crate-bastion-0.3.4 (c (n "bastion") (v "0.3.4") (d (list (d (n "bastion-executor") (r "= 0.3.4") (d #t) (k 0)) (d (n "bastion-qutex") (r "^0.2") (f (quote ("async_await"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightproc") (r "= 0.3.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vaj7rn75cafr5q2pqlb560w9f2jan8q03znnw7lxxzwsv3qg7lw") (f (quote (("unstable" "bastion-executor/unstable"))))))

(define-public crate-bastion-0.3.5-alpha (c (n "bastion") (v "0.3.5-alpha") (d (list (d (n "bastion-executor") (r "= 0.3.5-alpha") (d #t) (k 0)) (d (n "bastion-qutex") (r "^0.2") (f (quote ("async_await"))) (d #t) (k 0)) (d (n "dashmap") (r "^3.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightproc") (r "= 0.3.5-alpha.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^0.9") (d #t) (k 2)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j958kvff0n89f9gv8z8vkywgik5jcisj10clphf6g22z5bp9vg6") (f (quote (("unstable" "bastion-executor/unstable"))))))

(define-public crate-bastion-0.3.5 (c (n "bastion") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.5") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.8") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "11akxy8wl7qb9alha70v6ahmkmxdw6ss30n436ppm40xgfns6387") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.3.6 (c (n "bastion") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.5") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.8") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "17zghv01lfc1v4afg0dm253z65g81nz1y899jw3z2sdklghxkl35") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.0 (c (n "bastion") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.5") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.8") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j1pld9cdjw94b4hnrk72gjw11g7nn3x6g6bpiqfvf7v47q0ax2b") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.1-alpha.1 (c (n "bastion") (v "0.4.1-alpha.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.5") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zgvxgqqiw61xn8ids2rkddv0x0qw4qcnjca573qvwbbllr9fzwf") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.1 (c (n "bastion") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.5") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zdhyc1sq35fmjs4j0blwrsan1rbvjvmnj6g94v0sq49830f4j73") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.2 (c (n "bastion") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.3.6") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1m859nhifk3bbjb9jdmak5gng23i0zby5gw6idbkc5ag5xfzja9m") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.3 (c (n "bastion") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.4.0") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.2.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1.1-alpha.11") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1.2-alpha.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1v2n6z66n5h0b7pp8567sf6zss57pp197xhq5wcpcm16lkh28wv5") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.4 (c (n "bastion") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.4") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1") (d #t) (k 0)) (d (n "lightproc") (r "^0.3.5") (d #t) (k 0)) (d (n "nuclei") (r "^0.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wvidfvz61kz01lvg7xn1v365wihxng6hnvfqgv1f4v3ydm47x4q") (f (quote (("unstable" "bastion-executor/unstable") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

(define-public crate-bastion-0.4.5 (c (n "bastion") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "artillery-core") (r "^0.1.2-alpha.3") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1.1") (d #t) (k 0)) (d (n "bastion-executor") (r "^0.4.2") (d #t) (k 0)) (d (n "bastion-utils") (r "^0.3.2") (d #t) (k 2)) (d (n "crossbeam-queue") (r "^0.3.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "lasso") (r "^0.6") (f (quote ("multi-threaded"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lever") (r "^0.1") (d #t) (k 0)) (d (n "lightproc") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nuclei") (r "^0.1") (d #t) (t "cfg(not(windows))") (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 2)) (d (n "pin-utils") (r "^0.1") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.3.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("time" "macros"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1vp0kwa37j88y71psjj1sb167kn2nwkab18b1lr2v8430vpmzhpv") (f (quote (("unstable" "bastion-executor/unstable") ("tokio-runtime" "bastion-executor/tokio-runtime") ("scaling") ("docs" "distributed" "scaling" "default") ("distributed" "artillery-core") ("default"))))))

