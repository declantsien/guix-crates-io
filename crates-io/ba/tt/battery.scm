(define-module (crates-io ba tt battery) #:use-module (crates-io))

(define-public crate-battery-0.0.1 (c (n "battery") (v "0.0.1") (h "11i81s628a6z59gbhampdsy0bdksybrg24w4vsgi8zlgf6wsbp3i")))

(define-public crate-battery-0.1.0 (c (n "battery") (v "0.1.0") (d (list (d (n "lazy-init") (r "^0.3") (d #t) (k 0)))) (h "0w48py0545s6yq6y4awvbb4xs56q294l554jj6v1k43rf98sj5z2")))

(define-public crate-battery-0.1.1 (c (n "battery") (v "0.1.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (k 0)))) (h "1a42dqhf7cl4vxxk6anlnzzzchs7ip7yk8danwp5wvwhpz979w2i")))

(define-public crate-battery-0.2.0 (c (n "battery") (v "0.2.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "plist") (r "^0.4.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "1sj1x1pj2lzs23bp1sk8800l5lpw9msms2j1d6naar2bpq6hdj1z")))

(define-public crate-battery-0.3.0 (c (n "battery") (v "0.3.0") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "0d6x68hyd12xq1ljrmfq5cx57117cmcxgg3xrc3iswjkhy3l8dn7")))

(define-public crate-battery-0.3.1 (c (n "battery") (v "0.3.1") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)))) (h "0pkdlap9sjmg1aikp28qnc6g31486ny1l5pv6kf1ychypajppr20")))

(define-public crate-battery-0.4.0 (c (n "battery") (v "0.4.0") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fqcsm9bikz61zs5g71swhg0ag6rykdlplgkc4jlpihisn773y19")))

(define-public crate-battery-0.4.1 (c (n "battery") (v "0.4.1") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "humantime") (r "^1.2.0") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "156zj5la8hb88vwmjfg0zyxcm24fhyd2a3y9rmg49lhx01md9sar")))

(define-public crate-battery-0.5.0 (c (n "battery") (v "0.5.0") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1fwqpmlw7fl6jhyhjsymffc8jc3d727l02j9rclnq0gw4wqpghz0")))

(define-public crate-battery-0.6.0 (c (n "battery") (v "0.6.0") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1z4b4gb6iq3srn40s5vypib58719wrklx4vkc8d6z52pyvmbm5sb")))

(define-public crate-battery-0.6.1 (c (n "battery") (v "0.6.1") (d (list (d (n "CoreFoundation-sys") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "IOKit-sys") (r "^0.1.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i1cwcrdpmm0s7yiqm0f46qf29cfczjwqlrn6qkzc8qg26jv2s51")))

(define-public crate-battery-0.6.2 (c (n "battery") (v "0.6.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy-init") (r "^0.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.1.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1m7lac6x079hn2ds8mi0yjrcjln79lgm73h5d4jh6j7fczvdk6lw")))

(define-public crate-battery-0.7.0 (c (n "battery") (v "0.7.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "uom") (r "^0.21.1") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0cbfvisdr38yq5nbkf0iqg13gaglxma43qzz77ngkqncghym3hdg")))

(define-public crate-battery-0.7.1 (c (n "battery") (v "0.7.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "uom") (r "^0.22.1") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0fh0qpi0zk2r3bq5z33gz2j0937jhhrfj618mx8dhin98nriz5hi")))

(define-public crate-battery-0.7.2 (c (n "battery") (v "0.7.2") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "uom") (r "^0.23.0") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mwpqlp47ixwdcjsdrg8g2cdnz56barcpxwd7rb4mvjnwslppsl4")))

(define-public crate-battery-0.7.3 (c (n "battery") (v "0.7.3") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.51") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.13.0") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.23") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mfyh8p53q0ksi45xw45mbw6xv1m94p6kbl7cq3gg4sinmvmimw7")))

(define-public crate-battery-0.7.4 (c (n "battery") (v "0.7.4") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.23") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0yq4dzicqvxr3dca4qcfxj44n861wky9mn3w480fjj80cgjnyvbs")))

(define-public crate-battery-0.7.5 (c (n "battery") (v "0.7.5") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "mach") (r "^0.2.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.15") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.26") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.7") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01srwjgbddlmpbbsfd9yi30lnbjypyc5k0aak4c5sjh297j9i9in")))

(define-public crate-battery-0.7.6 (c (n "battery") (v "0.7.6") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "core-foundation") (r "~0.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "lazycell") (r "~1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.29") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "~0.3") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0bx7lc0bm0xcf7dvvnl8lv9kasb36bb87hqwq73rm369ar4vwxc7")))

(define-public crate-battery-0.7.7 (c (n "battery") (v "0.7.7") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "~0.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "lazycell") (r "~1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.30") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "~0.3") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0arxc1qxjj3rmgjrgsinjmmjpddszifci1bs3ppwcw7csfmq3fp3")))

(define-public crate-battery-0.7.8 (c (n "battery") (v "0.7.8") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "core-foundation") (r "~0.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "lazycell") (r "~1.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "libc") (r "~0.2") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "~0.19") (d #t) (t "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\"))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "uom") (r "^0.30") (f (quote ("autoconvert" "f32" "si"))) (d #t) (k 0)) (d (n "winapi") (r "~0.3") (f (quote ("impl-default" "devguid" "winbase" "ioapiset" "ntdef" "setupapi" "handleapi" "errhandlingapi" "winerror"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1r1641dyks76p39i1iihswhc6iz5z51pihmpxniy1h1pi4k29dml")))

