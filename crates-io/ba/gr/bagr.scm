(define-module (crates-io ba gr bagr) #:use-module (crates-io))

(define-public crate-bagr-0.1.0 (c (n "bagr") (v "0.1.0") (h "0k75dn4kf774jc9n1f0kmsilyjajsjnxz22sp4xdri0hrkvpg0xz")))

(define-public crate-bagr-0.2.0 (c (n "bagr") (v "0.2.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "trycmd") (r "^0.12") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1dh2vi1dgv7za29nv7n7zaz1rx8a65fj3j48l2rhia0i88ximk1k")))

(define-public crate-bagr-0.3.0 (c (n "bagr") (v "0.3.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "sha-1") (r "^0.10") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "snafu") (r "^0.7") (d #t) (k 0)) (d (n "strum") (r "^0.23") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23") (d #t) (k 0)) (d (n "trycmd") (r "^0.12") (d #t) (k 2)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zb79k6z4axp4nazc74skg91c6zj5kxb0nxmlk3gadwqd4bxxjsa")))

