(define-module (crates-io ba ll ballista) #:use-module (crates-io))

(define-public crate-ballista-0.1.0 (c (n "ballista") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.5") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tower-hyper") (r "^0.1") (d #t) (k 0)) (d (n "tower-service") (r "^0.2") (d #t) (k 0)) (d (n "tower-util") (r "^0.1") (d #t) (k 0)))) (h "09c40wyb8d3bpmxbsbb03x2wdppcjq3wgkj8mdp4m6my83mvibqq")))

(define-public crate-ballista-0.1.2 (c (n "ballista") (v "0.1.2") (d (list (d (n "arrow") (r "^0.14.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "datafusion") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.5") (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "gtmpl") (r "^0.5.6") (d #t) (k 0)) (d (n "gtmpl_derive") (r "^0.3.3") (d #t) (k 0)) (d (n "gtmpl_value") (r "^0.3.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tower-grpc") (r "^0.1.0") (f (quote ("tower-hyper"))) (d #t) (k 0)) (d (n "tower-grpc-build") (r "^0.1.0") (f (quote ("tower-hyper"))) (d #t) (k 1)) (d (n "tower-hyper") (r "^0.1") (d #t) (k 0)) (d (n "tower-request-modifier") (r "^0.1.0") (d #t) (k 0)) (d (n "tower-service") (r "^0.2") (d #t) (k 0)) (d (n "tower-util") (r "^0.1") (d #t) (k 0)))) (h "03s013x9mm7d7vzlqwd26ln2vnlfd1kp33wbhfb7xcg8ib3b7j6l")))

(define-public crate-ballista-0.2.0 (c (n "ballista") (v "0.2.0") (d (list (d (n "arrow") (r "^0.17") (d #t) (k 0)) (d (n "arrow-flight") (r "^0.17") (d #t) (k 0)) (d (n "datafusion") (r "^0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.1.1") (d #t) (k 0)))) (h "0gjsyrc6jdfzpca3ini2vypy3p3kdinq43n4a25vg5h6gxwz8651")))

(define-public crate-ballista-0.2.2 (c (n "ballista") (v "0.2.2") (d (list (d (n "arrow") (r "^0.17") (d #t) (k 0)) (d (n "arrow-flight") (r "^0.17") (d #t) (k 0)) (d (n "datafusion") (r "^0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.1.1") (d #t) (k 0)))) (h "1rxqvknlhf1xi219qgyrq4n2jr42qbg4rc8pv1zswcmlwrbn38cf")))

(define-public crate-ballista-0.2.3 (c (n "ballista") (v "0.2.3") (d (list (d (n "arrow") (r "^0.17") (d #t) (k 0)) (d (n "arrow-flight") (r "^0.17") (d #t) (k 0)) (d (n "datafusion") (r "^0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.1.1") (d #t) (k 0)))) (h "15q7glaga5qi5cwbg7gs84grzlbcczm085fvrx2qakpjwrcq7jgz")))

(define-public crate-ballista-0.2.4 (c (n "ballista") (v "0.2.4") (d (list (d (n "arrow") (r "^0.17") (d #t) (k 0)) (d (n "arrow-flight") (r "^0.17") (d #t) (k 0)) (d (n "datafusion") (r "^0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.1.1") (d #t) (k 0)))) (h "1icqg0p7l9xbyx5v0fja28wq2yvh9qsp32spkfcyahjh0q67r3ad")))

(define-public crate-ballista-0.2.5 (c (n "ballista") (v "0.2.5") (d (list (d (n "arrow") (r "^0.17") (d #t) (k 0)) (d (n "arrow-flight") (r "^0.17") (d #t) (k 0)) (d (n "datafusion") (r "^0.17") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.4.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.14") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.1.1") (d #t) (k 0)))) (h "11ccar7523whsd4z6qv17v0s9vnqp8mwkm9nalvwc9brlbb997n1")))

(define-public crate-ballista-0.3.0-alpha-1 (c (n "ballista") (v "0.3.0-alpha-1") (d (list (d (n "arrow") (r "^1.0.0") (d #t) (k 0)) (d (n "arrow-flight") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "etcd-client") (r "^0.5") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.8.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.35") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parquet") (r "^1.0.0") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "random-fast-rng") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "smol") (r "^0.1.18") (f (quote ("tokio02"))) (d #t) (k 0)) (d (n "sqlparser") (r "^0.2.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0mwhwrdxa2cgp9z2ja3gz77a9f2waqq3fzmvydkv6yyxnfvspyki")))

(define-public crate-ballista-0.3.0-alpha-2 (c (n "ballista") (v "0.3.0-alpha-2") (d (list (d (n "arrow") (r "^1.0.0") (d #t) (k 0)) (d (n "arrow-flight") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "etcd-client") (r "^0.5") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.8.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.35") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parquet") (r "^1.0.0") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "random-fast-rng") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "smol") (r "^0.1.18") (f (quote ("tokio02"))) (d #t) (k 0)) (d (n "sqlparser") (r "^0.2.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0nlx6nhl05kpgz1mvybv49c3wh8gk5jspyrsajqkpd8gcch1h58f")))

(define-public crate-ballista-0.3.0 (c (n "ballista") (v "0.3.0") (d (list (d (n "arrow") (r "^1.0.0") (f (quote ("simd"))) (d #t) (k 0)) (d (n "arrow-flight") (r "^1.0.0") (d #t) (k 0)) (d (n "async-channel") (r "^1.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (k 0)) (d (n "etcd-client") (r "^0.5") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "k8s-openapi") (r "^0.8.0") (f (quote ("v1_13"))) (d #t) (k 0)) (d (n "kube") (r "^0.35") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parquet") (r "^1.0.0") (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "random-fast-rng") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.18") (d #t) (k 0)) (d (n "smol") (r "^0.1.18") (f (quote ("tokio02"))) (d #t) (k 0)) (d (n "sqlparser") (r "^0.2.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0jd300rvgmq3r2lj03sh1sslkxfv2p0g8drga6wm2cz85hysc6f6")))

(define-public crate-ballista-0.5.0 (c (n "ballista") (v "0.5.0") (d (list (d (n "ballista-core") (r "^0.5.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^5.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1j32ls15a5d61m9fv6w6228v7vqnxq6syw1kfh3yxxbka34dj8hy") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("default"))))))

(define-public crate-ballista-0.6.0 (c (n "ballista") (v "0.6.0") (d (list (d (n "ballista-core") (r "^0.6.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^6.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1mc15acz02kxq5wa36rv4i64hxw9ccpsx47rj1dx4vsks9alcpn3") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("default")))) (r "1.56")))

(define-public crate-ballista-0.7.0 (c (n "ballista") (v "0.7.0") (d (list (d (n "ballista-core") (r "^0.7.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^8.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.17") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "0c64ln4pzqdgw26irwln0cbjj0xradckfwqr563dfn950ib1ir1z") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("default")))) (r "1.59")))

(define-public crate-ballista-0.8.0 (c (n "ballista") (v "0.8.0") (d (list (d (n "ballista-core") (r "^0.8.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^12.0.0") (d #t) (k 0)) (d (n "datafusion-proto") (r "^12.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.23") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1v5spyx3n5cg7yxxknrzdwjs9flns68z53947xsis8yxsz2zwgwn") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("default")))) (r "1.59")))

(define-public crate-ballista-0.9.0 (c (n "ballista") (v "0.9.0") (d (list (d (n "ballista-core") (r "^0.9.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^13.0.0") (d #t) (k 0)) (d (n "datafusion-proto") (r "^13.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.25") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "12hadn5cxzp11mjc28yy825w8y83zh6lridi397c0l6yywcd5ih5") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("s3" "ballista-core/s3") ("hdfs" "ballista-core/hdfs") ("default")))) (r "1.59")))

(define-public crate-ballista-0.10.0 (c (n "ballista") (v "0.10.0") (d (list (d (n "ballista-core") (r "^0.10.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^14.0.0") (d #t) (k 0)) (d (n "datafusion-proto") (r "^14.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.26") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1474z5myjv3j5j86zqxv6cpilbvv68fjjqa021qhszyd5c0pfkz0") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("s3" "ballista-core/s3") ("hdfs3" "ballista-core/hdfs3") ("hdfs" "ballista-core/hdfs") ("default")))) (r "1.63")))

(define-public crate-ballista-0.11.0 (c (n "ballista") (v "0.11.0") (d (list (d (n "ballista-core") (r "^0.11.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^18.0.0") (d #t) (k 0)) (d (n "datafusion-proto") (r "^18.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "1kqsc2bfwyb7x1r205ccqz0c4ymga5y39w6rwgcp3l3w02316w1n") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("s3" "ballista-core/s3") ("hdfs3" "ballista-core/hdfs3") ("hdfs" "ballista-core/hdfs") ("default") ("azure" "ballista-core/azure")))) (r "1.63")))

(define-public crate-ballista-0.12.0 (c (n "ballista") (v "0.12.0") (d (list (d (n "ballista-core") (r "^0.12.0") (d #t) (k 0)) (d (n "ballista-executor") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "ballista-scheduler") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "datafusion") (r "^35.0.0") (d #t) (k 0)) (d (n "datafusion-proto") (r "^35.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "sqlparser") (r "^0.41.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (d #t) (k 0)))) (h "07540r4v8srimrvjy6amdgg1gr52p6p072n4w5x7hplk2brq7p4i") (f (quote (("standalone" "ballista-executor" "ballista-scheduler") ("s3" "ballista-core/s3") ("hdfs3" "ballista-core/hdfs3") ("hdfs" "ballista-core/hdfs") ("default") ("azure" "ballista-core/azure")))) (r "1.63")))

