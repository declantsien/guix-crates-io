(define-module (crates-io ba ll balloon-hash) #:use-module (crates-io))

(define-public crate-balloon-hash-0.1.0 (c (n "balloon-hash") (v "0.1.0") (d (list (d (n "crypto-bigint") (r "^0.3") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.3") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)))) (h "1w2pb7ya083wr40ffmij165yhizj6k448qbn9aqbr0hwn5i1gaci") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.56")))

(define-public crate-balloon-hash-0.1.1 (c (n "balloon-hash") (v "0.1.1") (d (list (d (n "crypto-bigint") (r "^0.3") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10.3") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.3") (o #t) (k 0)) (d (n "rayon") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)))) (h "07d31q3f6chgv3j069lnpa49jwxqckcbhfly9n19phamr593dv69") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.56")))

(define-public crate-balloon-hash-0.2.0 (c (n "balloon-hash") (v "0.2.0") (d (list (d (n "crypto-bigint") (r "^0.3") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10.3") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.4") (o #t) (k 0)) (d (n "rayon") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)))) (h "0faniikayzrqimxy3jbk3lkigm96nr9vnc335414cnrki5h8hwsc") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.57")))

(define-public crate-balloon-hash-0.2.1 (c (n "balloon-hash") (v "0.2.1") (d (list (d (n "crypto-bigint") (r "^0.4") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10.3") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.4") (o #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "04knmdf2zgm46sjl2i3k8acadj49xqp0yy5q62xg4nam5szkwlbw") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.57")))

(define-public crate-balloon-hash-0.3.0 (c (n "balloon-hash") (v "0.3.0") (d (list (d (n "crypto-bigint") (r "^0.4") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10.3") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.4") (o #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "18f9vjr9pgah9v792nicnj90szj74d3szpxma31agq3nqzcaznqz") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.57")))

(define-public crate-balloon-hash-0.4.0 (c (n "balloon-hash") (v "0.4.0") (d (list (d (n "crypto-bigint") (r "^0.5") (f (quote ("generic-array"))) (k 0)) (d (n "digest") (r "^0.10.6") (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "password-hash") (r "^0.5") (o #t) (k 0)) (d (n "rayon") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1g5sp9ksd0fsl7wwqcmzfnizpdxdmgxlmvzzwg06s494vbsf9y8v") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc")))) (r "1.65")))

(define-public crate-balloon-hash-0.5.0-pre.0 (c (n "balloon-hash") (v "0.5.0-pre.0") (d (list (d (n "crypto-bigint") (r "=0.6.0-pre.12") (f (quote ("hybrid-array"))) (k 0)) (d (n "digest") (r "=0.11.0-pre.8") (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "password-hash") (r "^0.5") (o #t) (k 0)) (d (n "rayon") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "sha2") (r "=0.11.0-pre.3") (d #t) (k 2)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0657vni7c6sri7hsis7l93wx5y547k33v4gyapn4bwsl7wcr26rp") (f (quote (("std" "alloc" "password-hash/std") ("rand" "password-hash/rand_core") ("parallel" "rayon" "std") ("default" "alloc" "password-hash" "rand") ("alloc" "password-hash/alloc")))) (r "1.73")))

