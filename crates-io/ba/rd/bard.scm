(define-module (crates-io ba rd bard) #:use-module (crates-io))

(define-public crate-bard-0.1.0 (c (n "bard") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "tera") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "17m0lnjpqiph70wisy55xf4xp0qqvdrhz750rvyzkg842brp04z8")))

(define-public crate-bard-0.9.0-alpha (c (n "bard") (v "0.9.0-alpha") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "base64") (r "^0.12.0") (d #t) (k 0)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "colored") (r "^1.9.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.7") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "tera") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 0)))) (h "1sq0msrnsd3m023qh24886wbm0cywvzfdb4l0x91qj0ccz9m57bn")))

(define-public crate-bard-1.0.0 (c (n "bard") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.10.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0r0hdzc5b6m0ki1qgm7kwgs8kiznywkfjmhgiw15yyzj53r3ng2l")))

(define-public crate-bard-1.0.1 (c (n "bard") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.10.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1x6qglnzj8v40zxkck6h911b9qcs2bf1syr182hdwjqdqngrqla3")))

(define-public crate-bard-1.0.2 (c (n "bard") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.10.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0l4yp8acxsj50d6xqvk3c54s20da84jasmfkq9qy6vcqh9pn74r1")))

(define-public crate-bard-1.0.3 (c (n "bard") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.10.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "01va3yirjb2wpzxn9c7jz9gy06bp3w43zb6pgyjjb1a46qqlxic0")))

(define-public crate-bard-1.1.0 (c (n "bard") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.10.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0kbphlp59kkph3qhlyi4rgxqbh77nvjjnravdc31vr6n51zkaxdf")))

(define-public crate-bard-1.2.1 (c (n "bard") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.11.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "04aklfhfyi0rfcn5a46mjl7acs2712d05hihm06xy3ki1appxqld")))

(define-public crate-bard-1.3.0 (c (n "bard") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.11.0") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "handlebars") (r "^3.5.3") (d #t) (k 0)) (d (n "image") (r "^0.23.14") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0fwaql8cq7ik8r5wy2kmwn037ra1jqlnghdp4vnhid7wb0pj93ki")))

(define-public crate-bard-2.0.0-alpha1 (c (n "bard") (v "2.0.0-alpha1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "camino") (r "^1.0.7") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "comrak") (r "^0.14.0") (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "globset") (r "^0.4.8") (d #t) (k 0)) (d (n "handlebars") (r "^4.3.3") (d #t) (k 0)) (d (n "html5ever") (r "^0.26.0") (d #t) (k 0)) (d (n "image") (r "^0.24.1") (f (quote ("png" "jpeg"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "notify") (r "^4.0.13") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "1xa56gw0r6q9spk3v3pgs0j0vagmkk5wiaw01pd7x1wni9iljs3v")))

(define-public crate-bard-2.0.0-alpha3 (c (n "bard") (v "2.0.0-alpha3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "comrak") (r "^0.18.0") (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "globset") (r "^0.4.10") (d #t) (k 0)) (d (n "handlebars") (r "^4.3.3") (d #t) (k 0)) (d (n "html5ever") (r "^0.26.0") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png" "jpeg"))) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.0") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tectonic") (r "^0.14.1") (f (quote ("external-harfbuzz"))) (o #t) (d #t) (k 0)) (d (n "tectonic_bridge_core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)))) (h "1xp23r7m4ggqrmkli85jqwfgfdrjr1z6k5i2k850sd4ic9psnhc9") (s 2) (e (quote (("tectonic" "dep:tectonic" "dep:tectonic_bridge_core")))) (r "1.64")))

(define-public crate-bard-2.0.0 (c (n "bard") (v "2.0.0") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "comrak") (r "^0.18.0") (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "globset") (r "^0.4.10") (d #t) (k 0)) (d (n "handlebars") (r "^4.3.3") (d #t) (k 0)) (d (n "html5ever") (r "^0.26.0") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png" "jpeg"))) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.0") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tectonic") (r "^0.14.1") (f (quote ("external-harfbuzz"))) (o #t) (d #t) (k 0)) (d (n "tectonic_bridge_core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)))) (h "1xp939k6c947w5hsyjbzaxh0cxkid3649ij5zjykbzz3mz7186ix") (y #t) (s 2) (e (quote (("tectonic" "dep:tectonic" "dep:tectonic_bridge_core")))) (r "1.64")))

(define-public crate-bard-2.0.1 (c (n "bard") (v "2.0.1") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 2)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context" "suggestions" "derive"))) (k 0)) (d (n "comrak") (r "^0.18.0") (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.0") (d #t) (k 0)) (d (n "fs_extra") (r "^1.2.0") (d #t) (k 2)) (d (n "globset") (r "^0.4.10") (d #t) (k 0)) (d (n "handlebars") (r "^4.3.3") (d #t) (k 0)) (d (n "html5ever") (r "^0.26.0") (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png" "jpeg"))) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 2)) (d (n "lexical-sort") (r "^0.3.1") (d #t) (k 0)) (d (n "nix") (r "^0.26.0") (d #t) (k 0)) (d (n "notify") (r "^6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.29.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "strum") (r "^0.24") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tectonic") (r "^0.14.1") (f (quote ("external-harfbuzz"))) (o #t) (d #t) (k 0)) (d (n "tectonic_bridge_core") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.14") (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)))) (h "00jhj97d493ia1264b4lq5vqslkclzinyrlx0b0xm7w513ik9273") (s 2) (e (quote (("tectonic" "dep:tectonic" "dep:tectonic_bridge_core")))) (r "1.64")))

