(define-module (crates-io ba ya bayard-rest) #:use-module (crates-io))

(define-public crate-bayard-rest-0.7.0 (c (n "bayard-rest") (v "0.7.0") (d (list (d (n "bayard-client") (r "^0.7.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "iron") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logger") (r "^0.4.0") (d #t) (k 0)) (d (n "persistent") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "urlencoded") (r "^0.6.0") (d #t) (k 0)))) (h "0jasqj57cbj15ghgklc0bkhp71ly0q471dxx3i4s7lw3sacs9hzl")))

(define-public crate-bayard-rest-0.7.2 (c (n "bayard-rest") (v "0.7.2") (d (list (d (n "bayard-client") (r "^0.7.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "iron") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logger") (r "^0.4.0") (d #t) (k 0)) (d (n "persistent") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "urlencoded") (r "^0.6.0") (d #t) (k 0)))) (h "0l5pk601l2ph0cdwyd4xcbrsjixk9bn76g71qcdpzpgk90a4pgzf")))

(define-public crate-bayard-rest-0.7.3 (c (n "bayard-rest") (v "0.7.3") (d (list (d (n "bayard-client") (r "^0.7.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "iron") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logger") (r "^0.4.0") (d #t) (k 0)) (d (n "persistent") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "urlencoded") (r "^0.6.0") (d #t) (k 0)))) (h "1spzlk54nigh2fszi8xbl6xqb7arr4d2blwkzh8r14abcamymb75")))

(define-public crate-bayard-rest-0.8.0 (c (n "bayard-rest") (v "0.8.0") (d (list (d (n "bayard-client") (r "^0.8.0") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (f (quote ("termination"))) (d #t) (k 0)) (d (n "iron") (r "^0.6.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logger") (r "^0.4.0") (d #t) (k 0)) (d (n "persistent") (r "^0.4.0") (d #t) (k 0)) (d (n "router") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "urlencoded") (r "^0.6.0") (d #t) (k 0)))) (h "0r6i29v76wrhs3w8py6a2mixxyfjiglsbj94n82gipspyn4s7g5c")))

(define-public crate-bayard-rest-0.8.1 (c (n "bayard-rest") (v "0.8.1") (d (list (d (n "bayard-client") (r "^0.8.1") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (f (quote ("termination"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.5") (d #t) (k 0)) (d (n "hyper") (r "^0.13.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "serde_qs") (r "^0.5.2") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)))) (h "0p9rnilmr4q3wxqqxmsqfq0hdjzwbwg17lyfmmixk5gak64wnavn")))

(define-public crate-bayard-rest-0.8.2 (c (n "bayard-rest") (v "0.8.2") (d (list (d (n "actix") (r "^0.9.0") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2.0") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0.3") (d #t) (k 0)) (d (n "actix-web") (r "^2.0.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8.1") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.3") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.4") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rustls") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6.1") (d #t) (k 0)))) (h "0fnlyj6m83649zgvjv5j4cpr5yxc9ny1wdnxdkq35ncl1kdzrb8n")))

(define-public crate-bayard-rest-0.8.3 (c (n "bayard-rest") (v "0.8.3") (d (list (d (n "actix") (r "^0.9") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0") (d #t) (k 0)) (d (n "actix-web") (r "^2.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rustls") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6") (d #t) (k 0)))) (h "1w2qalxymmsln0zhfxfz636bnnic2y4sr1vp1h14qs58j68m4hr0")))

(define-public crate-bayard-rest-0.8.4 (c (n "bayard-rest") (v "0.8.4") (d (list (d (n "actix") (r "^0.9") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0") (d #t) (k 0)) (d (n "actix-web") (r "^2.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rustls") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6") (d #t) (k 0)))) (h "1dwzdk5yil9d6a6f54iwk6rmz8ga92yzlrxw96xql04zcdgikvrz")))

(define-public crate-bayard-rest-0.8.5 (c (n "bayard-rest") (v "0.8.5") (d (list (d (n "actix") (r "^0.9") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0") (d #t) (k 0)) (d (n "actix-web") (r "^2.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rustls") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6") (d #t) (k 0)))) (h "1bfjsgn83isj6x33qf12jybwcddcnd6wrhifn4cnsk9nw4bv8f1q")))

(define-public crate-bayard-rest-0.8.6 (c (n "bayard-rest") (v "0.8.6") (d (list (d (n "actix") (r "^0.9") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0") (d #t) (k 0)) (d (n "actix-web") (r "^2.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8.6") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8.6") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rustls") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6") (d #t) (k 0)))) (h "04hrxah2xx7gahprkfwxzl7srkl0vgypmrq43iak8k0p15xf0078")))

(define-public crate-bayard-rest-0.8.7 (c (n "bayard-rest") (v "0.8.7") (d (list (d (n "actix") (r "^0.9") (d #t) (k 0)) (d (n "actix-cors") (r "^0.2") (d #t) (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 0)) (d (n "actix-server") (r "^1.0") (d #t) (k 0)) (d (n "actix-web") (r "^2.0") (f (quote ("rustls"))) (d #t) (k 0)) (d (n "bayard-client") (r "^0.8.7") (d #t) (k 0)) (d (n "bayard-common") (r "^0.8.7") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "rustls") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_qs") (r "^0.6") (d #t) (k 0)))) (h "1lw2vv3kricilqp2fwl7lkx38vb4f9qqxgfa3kqj22lgaszvy146")))

