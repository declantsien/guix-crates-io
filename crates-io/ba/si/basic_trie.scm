(define-module (crates-io ba si basic_trie) #:use-module (crates-io))

(define-public crate-basic_trie-0.0.1 (c (n "basic_trie") (v "0.0.1") (d (list (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "148ns806hq1kpj9l31pipfq7ywxfygdq1f42ip1sqz48zjpxkpga")))

(define-public crate-basic_trie-0.1.0 (c (n "basic_trie") (v "0.1.0") (d (list (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)))) (h "1b4z4y70zdw235a9j83p8qgn5r7va40xmh968pxnsn4iixi2fh6s")))

(define-public crate-basic_trie-0.1.1 (c (n "basic_trie") (v "0.1.1") (d (list (d (n "unicode-segmentation") (r "^1.10.1") (o #t) (d #t) (k 0)))) (h "1qwsdk5iwik84ja2jvnxzza9p173mxvx670bakrvbsfiz7zzckp6") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-0.2.0 (c (n "basic_trie") (v "0.2.0") (d (list (d (n "unicode-segmentation") (r "^1.10.1") (o #t) (d #t) (k 0)))) (h "0a66b63x85xfwkpqs8l8qn2qqkfqhqshgcszkaw5xxc7jhgv2qv4") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-0.2.1 (c (n "basic_trie") (v "0.2.1") (d (list (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "0c52xh6b5bf5d0ihdr6qr6ifffixghc37zblzfvazr063hjfyjd3") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-1.0.0 (c (n "basic_trie") (v "1.0.0") (d (list (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "19bhap157dkmhs8q02x6hr3ghq1wy6hl9ihf5ppqbx4r8hgfrdpa") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-1.0.1 (c (n "basic_trie") (v "1.0.1") (d (list (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "0p2smxk4j5amhsrx2pgz9i0f5wsfj0yvvjaw1gppgyzdmjr8vzlc") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-1.0.2 (c (n "basic_trie") (v "1.0.2") (d (list (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "1w8wkfx1gka2ifppc0rr4rpia2kb5dk8m47wwvzagc50k4fb1qg0") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode"))))))

(define-public crate-basic_trie-1.0.3 (c (n "basic_trie") (v "1.0.3") (d (list (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "0bv55kpydgnfgns9agv1br2dk46r7l4v85fa2y4jyy1xw39x7q9h") (f (quote (("unicode" "unicode-segmentation") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.1.0 (c (n "basic_trie") (v "1.1.0") (d (list (d (n "cbor") (r "^0.4.1") (d #t) (k 2)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "08vkrlg2gyscv9dj1d7rz1iwnhd56p9scg4bmxps5rvwbi577qyx") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.1.1 (c (n "basic_trie") (v "1.1.1") (d (list (d (n "cbor") (r "^0.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "1v0s672kdjlxl9car4mi20693lanxzg6wmls1j837lnl1gd27pb8") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.2.0 (c (n "basic_trie") (v "1.2.0") (d (list (d (n "cbor") (r "0.4.*") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "1ngf16z8ym3nm7cfb9ar90xx8pj999g11gnbjb15ggj79d561vyv") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.2.1 (c (n "basic_trie") (v "1.2.1") (d (list (d (n "cbor") (r "0.4.*") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "183q4yknv0h5wn13kwd8frh1yc1b1z22j9dglxa9b6lk062fq446") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.2.2 (c (n "basic_trie") (v "1.2.2") (d (list (d (n "cbor") (r "0.4.*") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "1fxwbj3lr8b1c29vw9jllg9xlm7xsm1xf0xkq1fy6n4farmj4xly") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-1.2.3 (c (n "basic_trie") (v "1.2.3") (d (list (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "cbor") (r "0.4.*") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "thin-vec") (r "^0.2.12") (d #t) (k 0)) (d (n "unicode-segmentation") (r "1.10.*") (o #t) (d #t) (k 0)))) (h "0qlcgjg70c0kgi9isbv4id6bbpaaxfghvnfdvw3g80ngk4wknpd6") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate" "thin-vec/serde" "arrayvec/serde") ("default" "unicode" "data") ("data"))))))

(define-public crate-basic_trie-2.0.0 (c (n "basic_trie") (v "2.0.0") (d (list (d (n "arrayvec") (r "^0.7.4") (d #t) (k 0)) (d (n "fixedstr") (r "^0.5.5") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "growable-bloom-filter") (r "^2.1.0") (d #t) (k 2)) (d (n "peak_alloc") (r "^0.2.0") (d #t) (k 2)) (d (n "randomizer") (r "^0.1.2") (d #t) (k 2)) (d (n "serde-pickle") (r "1.1.*") (d #t) (k 2)) (d (n "serde_crate") (r "1.0.*") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "1.0.*") (d #t) (k 2)) (d (n "thin-vec") (r "^0.2.12") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (o #t) (d #t) (k 0)))) (h "1gv4gihjma10msrs6aabg63bmkhrsdz994qzc8fbzc0danlipa4v") (f (quote (("unicode" "unicode-segmentation") ("serde" "serde_crate" "thin-vec/serde" "arrayvec/serde") ("default" "unicode" "data") ("data"))))))

