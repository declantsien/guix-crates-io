(define-module (crates-io ba si basispoort-sync-client) #:use-module (crates-io))

(define-public crate-basispoort-sync-client-0.1.0 (c (n "basispoort-sync-client") (v "0.1.0") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("test-util" "macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1laxj4hr1yycmyc3d8wkws635zwl0ijprkhrn2h0d0hz5gdxjgsh")))

(define-public crate-basispoort-sync-client-0.2.0 (c (n "basispoort-sync-client") (v "0.2.0") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("test-util" "macros" "fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0s2p23s7gsssddrk6wsfrmyw1p9rp1ydfwjqgqlfkia89aqb4ssn")))

(define-public crate-basispoort-sync-client-0.2.1 (c (n "basispoort-sync-client") (v "0.2.1") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("test-util" "macros" "fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "14dg22gyi9bgx9lxlbacpnzvz9mf3lnk501ps2jkar44v6yqkpb1")))

(define-public crate-basispoort-sync-client-0.2.2 (c (n "basispoort-sync-client") (v "0.2.2") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1vydfhimccf8l1izcxkhxrhy81ws3jdrnqjx7w0ngm4989l6l0zc")))

(define-public crate-basispoort-sync-client-0.3.0 (c (n "basispoort-sync-client") (v "0.3.0") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kjxmpw6wwh4zzag16fikjfrs3v48zynnhgmhbbnxsxx2hfrqimg") (f (quote (("institutions") ("hosted-license-provider") ("default" "institutions" "hosted-license-provider"))))))

(define-public crate-basispoort-sync-client-0.3.1 (c (n "basispoort-sync-client") (v "0.3.1") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0iivcydw163yp08by9gbxziqzsbldw2fa6s0m16zgg56sn10fm4w") (f (quote (("institutions") ("hosted-license-provider") ("default" "institutions" "hosted-license-provider"))))))

(define-public crate-basispoort-sync-client-0.4.0 (c (n "basispoort-sync-client") (v "0.4.0") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("clock" "serde"))) (o #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util" "sync" "parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "010mbiqcs5q19nr44fr6jffwl74gl4k230cn1md7fazy1capqx03") (f (quote (("hosted-license-provider") ("default" "institutions" "hosted-license-provider")))) (s 2) (e (quote (("institutions" "dep:chrono"))))))

(define-public crate-basispoort-sync-client-0.5.0 (c (n "basispoort-sync-client") (v "0.5.0") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("clock" "serde"))) (o #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util" "sync" "parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ck68390dpn012k1azzms9pd0h6pszmmk966iwb5vkfg7a04qxyg") (f (quote (("hosted-license-provider") ("default" "institutions" "hosted-license-provider")))) (s 2) (e (quote (("institutions" "dep:chrono"))))))

(define-public crate-basispoort-sync-client-0.5.1 (c (n "basispoort-sync-client") (v "0.5.1") (d (list (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("clock" "serde"))) (o #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.6") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.23.1") (f (quote ("test-util" "macros" "fs" "io-util" "sync" "parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1irg5ymlc6pcfvs33ih7fq5n3hjam0dgax8nhfsyplji59vbq9dh") (f (quote (("hosted-license-provider") ("default" "institutions" "hosted-license-provider")))) (s 2) (e (quote (("institutions" "dep:chrono"))))))

(define-public crate-basispoort-sync-client-0.6.0 (c (n "basispoort-sync-client") (v "0.6.0") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (f (quote ("clock" "serde"))) (o #t) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.12.2") (f (quote ("rustls-tls" "json" "charset" "http2" "macos-system-configuration" "gzip" "brotli"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("test-util" "macros" "fs" "io-util" "sync" "parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "017s7jgh2pvkf0v45i3fqdczfbzbify1lz3vkqckqgnxf0diw1bj") (f (quote (("hosted-license-provider") ("default" "institutions" "hosted-license-provider")))) (s 2) (e (quote (("institutions" "dep:chrono"))))))

(define-public crate-basispoort-sync-client-0.6.1 (c (n "basispoort-sync-client") (v "0.6.1") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.37") (f (quote ("clock" "serde"))) (o #t) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 2)) (d (n "dotenvy") (r "^0.15.7") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.12.2") (f (quote ("rustls-tls" "json" "charset" "http2" "macos-system-configuration" "gzip" "brotli"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "alloc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("fs" "io-util"))) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("test-util" "macros" "fs" "io-util" "sync" "parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "05gh1lf4rghqji55lhy9gkbj5mi762qgm7gxra0j8bdhfjacwjak") (f (quote (("hosted-license-provider") ("default" "institutions" "hosted-license-provider")))) (s 2) (e (quote (("institutions" "dep:chrono"))))))

