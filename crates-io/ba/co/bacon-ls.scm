(define-module (crates-io ba co bacon-ls) #:use-module (crates-io))

(define-public crate-bacon-ls-0.1.0 (c (n "bacon-ls") (v "0.1.0") (d (list (d (n "httparse") (r "^1.8") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37") (f (quote ("macros" "rt-multi-thread" "io-std" "io-util" "fs" "time"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 0)))) (h "0fvnpdcp5r91wai1fpm809xfa5gca13m2003qr1nvc7wmriyhliq")))

(define-public crate-bacon-ls-0.2.0 (c (n "bacon-ls") (v "0.2.0") (d (list (d (n "httparse") (r "^1.8") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37") (f (quote ("macros" "rt-multi-thread" "io-std" "io-util" "fs" "time"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 0)))) (h "0krw8x2izh46vfbw9lkdn20ay0638hxd62rs42i6lc6lxf74dgg5")))

(define-public crate-bacon-ls-0.3.0 (c (n "bacon-ls") (v "0.3.0") (d (list (d (n "httparse") (r "^1.8") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37") (f (quote ("macros" "rt-multi-thread" "io-std" "io-util" "fs" "time"))) (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 0)))) (h "0vpcdjaqca9zpzk78ib0m4y8dn7frv0gqday81aq2bykbh2nfd2f")))

