(define-module (crates-io ba co bacon-sci) #:use-module (crates-io))

(define-public crate-bacon-sci-0.1.0 (c (n "bacon-sci") (v "0.1.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0n037b79hxv9ay820w52sp3zx2m1qsyka0a7g1jl9rc6981d1010") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.0 (c (n "bacon-sci") (v "0.2.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1npvxnj91vn5z34d3k45bpi7145awgy7d0fj56skdacjhnqnlwld") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.1 (c (n "bacon-sci") (v "0.2.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0p07nmw60camarg65m14s1d77c68ly8dnvkj137lb956pm3g5jjx") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.2 (c (n "bacon-sci") (v "0.2.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1fbdpffrqhrp80pizkych24darryhns3bwbl0qlncxa18qx5ykh9") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.3 (c (n "bacon-sci") (v "0.2.3") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "02rddjs2g8pbpgffr9vqr5y7vvd3la27xa71asdl98fspz11p2z9") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.4 (c (n "bacon-sci") (v "0.2.4") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "14whhrp6sagp0nv40c50qai7kdksr8czd6mrbgmw5h1d5mrsymf8") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.5 (c (n "bacon-sci") (v "0.2.5") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "02mnlsbjb85n0lkgn65z9597ga51c9hnfjmsg71x6zks558bpy6b") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.6 (c (n "bacon-sci") (v "0.2.6") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1zyba30qsvj9dh95pnim7lqbrr6lia3knvlgr6y4kzca7q7ya38z") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.2.7 (c (n "bacon-sci") (v "0.2.7") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1p3ndg6vm6997a63d3xnwdka14pdn5mgdmy5bs03hg69x6j4cil8") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.3.0 (c (n "bacon-sci") (v "0.3.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1chj5jcvvb7niky938ilvrkcp6pc7gg122hp87k6qh2naskls62m") (f (quote (("serialize" "serde")))) (y #t)))

(define-public crate-bacon-sci-0.3.1 (c (n "bacon-sci") (v "0.3.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1y46s4c56ckrlp1j6sq5ng3dy5mxflk713fpl3mzjv2avhc2bhvy") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.3.2 (c (n "bacon-sci") (v "0.3.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1jmh73s4syai8x4yd6kv9zwyyjfplr5wywb3k47r7w54jv99vr0s") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.4.0 (c (n "bacon-sci") (v "0.4.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0fh6afx1fjxs8ig0nnqykplxq8j9gf2qcnyxdafh7glczxdy5l6v") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.5.0 (c (n "bacon-sci") (v "0.5.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "032mhlfrjmgf25r5vvjcvgarqvzrxi270hzizxsmm3pgdjn5y20x") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.5.1 (c (n "bacon-sci") (v "0.5.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0r9ky521h15lm8f5ha00c3nlhvs2q272l73fim7almwj7j9583fp") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.5.2 (c (n "bacon-sci") (v "0.5.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "169axg6xigrb8pdh9p62nz6bc2qhvm37z00rj6g62m6pixrnx13x") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.6.0 (c (n "bacon-sci") (v "0.6.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "16993p91v7rzgnzj4mxrqnwzxz72g2asg6vlrz9silrm6ff4vld6") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.7.0 (c (n "bacon-sci") (v "0.7.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1k94ilvi53k861ismzn2pfzg87q56qn5px5si8q8kc4dln9y3zjr") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.7.1 (c (n "bacon-sci") (v "0.7.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "04c626qnxbg8b07zhpqw5yr1yz2643bwk2in6j8xzhghk5a7g0l2") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.7.2 (c (n "bacon-sci") (v "0.7.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1vfjyxlbyrf5figw8rm76s3vhkysyn2cxbbkxpm24n6y10m10nxr") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.8.0 (c (n "bacon-sci") (v "0.8.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0hqsircr8pzzrj3r3v7b2cx09kys51d99irlfh3p6qnv3z04mcpd") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.8.1 (c (n "bacon-sci") (v "0.8.1") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0vr86jsx84z8m8ygdi7dp75m0zpgv5yp664561qrdpqycwg5av6n") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.8.2 (c (n "bacon-sci") (v "0.8.2") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1is5pjk9wrppk9216b6jz9v9cm8r6xami4bqy5aw9mfwj4j2gcbq") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.8.3 (c (n "bacon-sci") (v "0.8.3") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "068y9mq2ahrn2nz5ffpmqhpkhzpa13d43prqw34pijzr6mpipddw") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.8.4 (c (n "bacon-sci") (v "0.8.4") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "14w5rmwcd44niyp2q25awdj8yqpfw2yspfim0d6dw5kf8434y361") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.9.0 (c (n "bacon-sci") (v "0.9.0") (d (list (d (n "alga") (r "^0.9") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0r6xw5dx29pivq0wnjms5dcqx2c9chpm1glfxq2s48rp5p12zfvb") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.10.0 (c (n "bacon-sci") (v "0.10.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "0n83jqlds2yjb782anirsv05dcvg626l2fkc4zj0i84r21cgbdsh") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.11.0 (c (n "bacon-sci") (v "0.11.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)))) (h "1g6akj1lp4m51rkxchi6mqybriavc3wzyym6r8j7vjn0dvc6img5") (f (quote (("serialize" "serde"))))))

(define-public crate-bacon-sci-0.12.0 (c (n "bacon-sci") (v "0.12.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0id23kj4b3dnnkv07j7ix79cx9cl1rnid5gs6cvf9y2za6qx29k5")))

(define-public crate-bacon-sci-0.13.0 (c (n "bacon-sci") (v "0.13.0") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "=0.29.0") (d #t) (k 0)) (d (n "num-complex") (r "=0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "=0.2.14") (d #t) (k 0)) (d (n "phf") (r "=0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "typenum") (r "=1.14") (d #t) (k 0)))) (h "09x62mcyj5jj1iy36fpn4w40152lw9xy3ma3j8v1mwgg5b5nxch1")))

(define-public crate-bacon-sci-0.13.1 (c (n "bacon-sci") (v "0.13.1") (d (list (d (n "float-cmp") (r "^0.8") (d #t) (k 2)) (d (n "nalgebra") (r "=0.29.0") (d #t) (k 0)) (d (n "num-complex") (r "=0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "=0.2.14") (d #t) (k 0)) (d (n "phf") (r "=0.8") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.8") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "typenum") (r "=1.14") (d #t) (k 0)))) (h "0kpk2zrnf1583p845yqkd8pwpf105rn6q0rj0djzrv4rs3w99rrh")))

(define-public crate-bacon-sci-0.14.0 (c (n "bacon-sci") (v "0.14.0") (d (list (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "typenum") (r "^1.14") (d #t) (k 0)))) (h "1av632gb62ql89dyynwgmpqq9f5a45qbgrgmw5mzkygjvv637ksq")))

(define-public crate-bacon-sci-0.15.0 (c (n "bacon-sci") (v "0.15.0") (d (list (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.17") (d #t) (k 0)))) (h "0cgksyayxsc7b9nrn4hl1c38gyrq690dk1qwl83zf1sngyri0l1r")))

(define-public crate-bacon-sci-0.16.0 (c (n "bacon-sci") (v "0.16.0") (d (list (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.17") (d #t) (k 0)))) (h "1dsgbybmjmhcqb5nhaxxr74l040agp497s98m2clv2zb8k2yaryd")))

(define-public crate-bacon-sci-0.16.1 (c (n "bacon-sci") (v "0.16.1") (d (list (d (n "float-cmp") (r "^0.9") (d #t) (k 2)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "phf") (r "^0.11") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "typenum") (r "^1.17") (d #t) (k 0)))) (h "1a8cnlz9nfkn22rihwcwi1yfpqsxm0dd4p0kxqdj6xd5zm3mrhjd")))

