(define-module (crates-io ba nd bandsocks-sand) #:use-module (crates-io))

(define-public crate-bandsocks-sand-0.1.0 (c (n "bandsocks-sand") (v "0.1.0") (d (list (d (n "compiler_builtins") (r "^0.1.36") (f (quote ("compiler-builtins" "mem"))) (d #t) (k 0)) (d (n "memoffset") (r "^0.5.6") (d #t) (k 0)) (d (n "sc") (r "^0.2.3") (d #t) (k 0)) (d (n "seccomp-tiny") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "ssmarshal") (r "^1.0.0") (k 0)))) (h "0b486cinhnkfzmnwz53z9sy4sfsvjf470lqa68iwykb50x1jw1pk") (y #t)))

(define-public crate-bandsocks-sand-0.2.0 (c (n "bandsocks-sand") (v "0.2.0") (d (list (d (n "as-slice") (r "^0.1") (d #t) (k 0)) (d (n "compiler_builtins") (r "^0.1") (f (quote ("compiler-builtins" "mem"))) (d #t) (k 0)) (d (n "file_limit") (r "^0.0") (d #t) (k 2)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "goblin") (r "^0.2") (f (quote ("elf64"))) (k 0)) (d (n "hash32") (r "^0.1") (d #t) (k 0)) (d (n "hash32-derive") (r "^0.1") (d #t) (k 0)) (d (n "heapless") (r "^0.5") (d #t) (k 0)) (d (n "memoffset") (r "^0.5") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "raw-cpuid") (r "^8.1") (d #t) (k 0)) (d (n "sc") (r "^0.2") (d #t) (k 0)) (d (n "seccomp-tiny") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "smalloca") (r "^0.1") (k 0)) (d (n "twoway") (r "^0.2") (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)))) (h "0rcfnmh06zn21bzjzgk2lzk7qfx3hmkzzmh6b8ch6yvclss5vvpr")))

