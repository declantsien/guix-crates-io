(define-module (crates-io ba nd bandersnatch) #:use-module (crates-io))

(define-public crate-bandersnatch-0.1.0 (c (n "bandersnatch") (v "0.1.0") (d (list (d (n "ark-algebra-test-templates") (r "^0.3.0") (k 2)) (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("curve"))) (k 2)) (d (n "ark-bls12-381") (r "^0.3.0") (f (quote ("scalar_field"))) (k 0)) (d (n "ark-bls12-381") (r "^0.3.0") (f (quote ("curve"))) (k 2)) (d (n "ark-curve-constraint-tests") (r "^0.3.0") (k 2)) (d (n "ark-ec") (r "^0.3.0") (k 0)) (d (n "ark-ed-on-bls12-377") (r "^0.3.0") (k 2)) (d (n "ark-ed-on-bls12-381") (r "^0.3.0") (k 2)) (d (n "ark-ff") (r "^0.3.0") (k 0)) (d (n "ark-groth16") (r "^0.3.0") (f (quote ("r1cs"))) (k 2)) (d (n "ark-r1cs-std") (r "^0.3.0") (k 0)) (d (n "ark-relations") (r "^0.3.0") (k 2)) (d (n "ark-serialize") (r "^0.3.0") (k 2)) (d (n "ark-std") (r "^0.3.0") (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "blst") (r "^0.3.4") (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (k 0)) (d (n "rand_chacha") (r "^0.3.0") (k 2)))) (h "0isj1nmla56v8i4sl96wkip9219ywj4kddb49qhvfv8qafszncxg") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-ec/std" "ark-bls12-381/std") ("default") ("asm" "ark-ff/asm"))))))

(define-public crate-bandersnatch-0.1.1 (c (n "bandersnatch") (v "0.1.1") (d (list (d (n "ark-algebra-test-templates") (r "^0.3.0") (k 2)) (d (n "ark-bls12-377") (r "^0.3.0") (f (quote ("curve"))) (k 2)) (d (n "ark-bls12-381") (r "^0.3.0") (f (quote ("scalar_field"))) (k 0)) (d (n "ark-bls12-381") (r "^0.3.0") (f (quote ("curve"))) (k 2)) (d (n "ark-curve-constraint-tests") (r "^0.3.0") (k 2)) (d (n "ark-ec") (r "^0.3.0") (k 0)) (d (n "ark-ed-on-bls12-377") (r "^0.3.0") (k 2)) (d (n "ark-ed-on-bls12-381") (r "^0.3.0") (k 2)) (d (n "ark-ff") (r "^0.3.0") (k 0)) (d (n "ark-groth16") (r "^0.3.0") (f (quote ("r1cs"))) (k 2)) (d (n "ark-r1cs-std") (r "^0.3.0") (k 0)) (d (n "ark-relations") (r "^0.3.0") (k 2)) (d (n "ark-serialize") (r "^0.3.0") (k 2)) (d (n "ark-std") (r "^0.3.0") (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "blst") (r "^0.3.4") (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (k 0)) (d (n "rand_chacha") (r "^0.3.0") (k 2)))) (h "0ff02yric1k0bwlc4y8nxx0d4ayrqalilsirhl2mi3jcdp2a99l8") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-ec/std" "ark-bls12-381/std") ("default") ("asm" "ark-ff/asm"))))))

