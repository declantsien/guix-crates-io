(define-module (crates-io ba ny banyanfs) #:use-module (crates-io))

(define-public crate-banyanfs-0.1.0 (c (n "banyanfs") (v "0.1.0") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "blake3") (r "^1") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crdts") (r "^7") (f (quote ("merkle" "num"))) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("signing" "verifying"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("ecdh" "sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jwt-simple") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "p384") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "json" "stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat" "io"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v7" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("File" "FileSystemDirectoryHandle" "FileSystemFileHandle" "FileSystemGetFileOptions" "FileSystemGetDirectoryOptions" "FileSystemWritableFileStream" "Navigator" "Storage" "StorageManager" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("derive" "std"))) (d #t) (k 0)))) (h "14b9gw2ppplcwd51dl1ag9x2g3ii0dd1d7jxq65cki49gbq2vsdx") (f (quote (("tomb-compat" "banyan-api") ("strict") ("pem" "p384/pem" "p384/pkcs8") ("default" "banyan-api" "pem" "strict" "tomb-compat") ("banyan-api" "async-trait" "jwt-simple" "reqwest" "serde" "serde_json" "url"))))))

(define-public crate-banyanfs-0.2.0 (c (n "banyanfs") (v "0.2.0") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "blake3") (r "^1") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crdts") (r "^7") (f (quote ("merkle" "num"))) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("signing" "verifying"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("ecdh" "sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jwt-simple") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "p384") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "json" "stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat" "io"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v7" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("File" "FileSystemDirectoryHandle" "FileSystemFileHandle" "FileSystemGetFileOptions" "FileSystemGetDirectoryOptions" "FileSystemWritableFileStream" "Navigator" "Storage" "StorageManager" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("derive" "std"))) (d #t) (k 0)))) (h "0zhpw8bzfid7pv0wnxza7p2skr4dy23k30an10h85szmix3lxzqk") (f (quote (("tomb-compat" "banyan-api") ("strict") ("pem" "p384/pem" "p384/pkcs8") ("default" "banyan-api" "pem" "strict" "tomb-compat") ("banyan-api" "async-trait" "jwt-simple" "reqwest" "serde" "serde_json" "url"))))))

(define-public crate-banyanfs-0.2.1 (c (n "banyanfs") (v "0.2.1") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "blake3") (r "^1") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crdts") (r "^7") (f (quote ("merkle" "num"))) (k 0)) (d (n "ecdsa") (r "^0.16") (f (quote ("signing" "verifying"))) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13") (f (quote ("ecdh" "sec1"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "jwt-simple") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "p384") (r "^0.13") (f (quote ("ecdh" "ecdsa"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "json" "stream"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time") (r "^0.3") (f (quote ("formatting"))) (d #t) (k 1)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat" "io"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v7" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("File" "FileSystemDirectoryHandle" "FileSystemFileHandle" "FileSystemGetFileOptions" "FileSystemGetDirectoryOptions" "FileSystemWritableFileStream" "Navigator" "Storage" "StorageManager" "Window"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.6") (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("derive" "std"))) (d #t) (k 0)))) (h "1rp552v729gxcy7zd49m8rlb47cdpdplp2b0k5bbhdnwwjjma5mh") (f (quote (("tomb-compat" "banyan-api") ("strict") ("pem" "p384/pem" "p384/pkcs8") ("default" "banyan-api" "pem" "strict" "tomb-compat") ("banyan-api" "async-trait" "jwt-simple" "reqwest" "serde" "serde_json" "url"))))))

