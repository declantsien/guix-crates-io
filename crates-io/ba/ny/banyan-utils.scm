(define-module (crates-io ba ny banyan-utils) #:use-module (crates-io))

(define-public crate-banyan-utils-0.1.0 (c (n "banyan-utils") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "banyan") (r "^0.8.2") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.3.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "salsa20") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.6.0") (d #t) (k 0)))) (h "1n2m0blnqkp9m860yv9pccfz0m6f28bdpgawa9imvxsvx24vsbbr")))

(define-public crate-banyan-utils-0.2.0 (c (n "banyan-utils") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "banyan") (r "^0.9.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.3.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "salsa20") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.6.0") (d #t) (k 0)))) (h "0iw7vjs53cg1b7x3iygnipxa3clazlrwzs2x1bnb8f23yhcgciqc")))

(define-public crate-banyan-utils-0.2.1 (c (n "banyan-utils") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "banyan") (r "^0.9.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.3.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "salsa20") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.6.0") (d #t) (k 0)))) (h "1a0z8drnwls9ywy2gd9yk8d81l2c85v58f9sk5y3257yrbna21s6")))

(define-public crate-banyan-utils-0.2.2 (c (n "banyan-utils") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "banyan") (r "^0.9.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.3.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.0") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "salsa20") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.62") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.6.0") (d #t) (k 0)))) (h "172305ydsmgrwrnjq9985xm1l1599bm74fpij4vx5605id8zsjb3")))

(define-public crate-banyan-utils-0.3.0 (c (n "banyan-utils") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.10.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.5.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "salsa20") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "1d6afqq0glkzlhiqlvsy4ylhq7zvcak5k2akg46r74cikxwzs5ss")))

(define-public crate-banyan-utils-0.5.0 (c (n "banyan-utils") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.12.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.5.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "121y2vwqmp0zd0qc1a5kcz4bxfprfkxsk7aa0ys49p6gzp94v4qq")))

(define-public crate-banyan-utils-0.6.0-rc.1 (c (n "banyan-utils") (v "0.6.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.13.0-rc.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.5.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "0wq13zfbf0kygxm0njxzi2pz21mgxrfxp9siqdy773lb3f79mps8")))

(define-public crate-banyan-utils-0.6.0-rc.2 (c (n "banyan-utils") (v "0.6.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.5.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "0hmdwq4yyh6b6zvsgddggzhi0blx5sp0sazdd2nbi1mz81palcm4")))

(define-public crate-banyan-utils-0.6.1 (c (n "banyan-utils") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.13.0-rc.2") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.5.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.11.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.13.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "090i93gx3rb1anp1qfcvi7822sz31a4q89ama92yalij24jdm8is")))

(define-public crate-banyan-utils-0.7.0 (c (n "banyan-utils") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.14.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.6.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.12.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "18rg6zqsj6dv6pf4i7hwj4rfjc7s1fhlmdlc74nc7azx26m4sf97")))

(define-public crate-banyan-utils-0.8.0 (c (n "banyan-utils") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.15.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.6.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.12.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.7.0") (d #t) (k 0)))) (h "1amzig296qsal9dvacqbnjfh4w0aavdc6wsrbbsf5id4yqa826hk")))

(define-public crate-banyan-utils-0.9.0 (c (n "banyan-utils") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "banyan") (r "^0.16.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.7.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.13") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.6.1") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.12.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.6.5") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.3") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tokio") (r "^1.5.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.17") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.9.0") (d #t) (k 0)))) (h "0vd52fnrznahd6hqjld49832msmk9dr1pkfbmj9shmi8hyjv30hg")))

(define-public crate-banyan-utils-0.10.0 (c (n "banyan-utils") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "banyan") (r "^0.17.0") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.8.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.10.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.12.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.7.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.8") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.5") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.9.2") (d #t) (k 0)))) (h "0l994bfa9x4y4d0kdhlxapps9zkra6g445ccbqcyhhg958rgwhmh") (y #t)))

(define-public crate-banyan-utils-0.10.1 (c (n "banyan-utils") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "banyan") (r "^0.17.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chacha20") (r "^0.8.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dot") (r "^0.1.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "ipfs-sqlite-block-store") (r "^0.10.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(target_env = \"musl\")") (k 0)) (d (n "libipld") (r "^0.12.0") (f (quote ("unleashed"))) (d #t) (k 0)) (d (n "lru") (r "^0.7.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "multihash") (r "^0.14.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.2") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "reduce") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.8") (f (quote ("blocking" "json" "multipart" "rustls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.21") (f (quote ("serde"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.5") (d #t) (k 0)) (d (n "vec-collections") (r "^0.3.5") (d #t) (k 0)) (d (n "zstd") (r "^0.9.2") (d #t) (k 0)))) (h "0s8xsjzci81jnsq2izbrzprw109bgi5w6m2rxhmlylmpd75m5w11")))

