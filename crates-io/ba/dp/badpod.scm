(define-module (crates-io ba dp badpod) #:use-module (crates-io))

(define-public crate-badpod-0.1.0 (c (n "badpod") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)))) (h "1h5h41wxjz9m8x1c1syfam3bwb1yciqj17h4g9qadhic8lanim0a")))

(define-public crate-badpod-0.2.0 (c (n "badpod") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)))) (h "1brhzzk3x8n2p7m337g7qmpskfal48lsbqkz30d353132lmwzbn3")))

(define-public crate-badpod-0.2.1 (c (n "badpod") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)))) (h "1c0v4azlzppbidymj6jbd6v0ggqsmby5wgbi4dywf5qngdvny31x")))

(define-public crate-badpod-0.2.2 (c (n "badpod") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)))) (h "1bvxiafc1a0a3ix5s80i79l600fxsz1hxlnrwnnryzd7ly1wbjzh")))

(define-public crate-badpod-0.2.3 (c (n "badpod") (v "0.2.3") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)))) (h "0h7h584nqid5gwsxia8mqhyjhdiy96m27qlcg2f655n97xgjmb5y")))

(define-public crate-badpod-0.2.4 (c (n "badpod") (v "0.2.4") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10.3") (d #t) (k 0)))) (h "16i1s3vwp2jg6idqxk02cgpxgijphwk3r8vhpghqmggixvpm7yki")))

(define-public crate-badpod-0.3.0 (c (n "badpod") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10.3") (d #t) (k 0)))) (h "0ana41jvzap8b71kz6xi1y9ngd5mpk3skn6x35snw0l8r5zrk9qm")))

(define-public crate-badpod-0.3.1 (c (n "badpod") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10.3") (d #t) (k 0)))) (h "1lx3268ffhrh9s65hlszv3hapx58srzj2flg56glzspam7hj6sb9")))

(define-public crate-badpod-0.3.2 (c (n "badpod") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.145") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "xml_serde") (r "^1.4.1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10.3") (d #t) (k 0)))) (h "0vf2fcnzp7iwr4ki0gl19fb38942zsi3l9j59j83i3i76sfxfldh")))

(define-public crate-badpod-0.4.0 (c (n "badpod") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (d #t) (k 0)))) (h "03nnh2g08havrvl1cbpigd22kf65qjc1lcqyqsfdnxbbvx58277d")))

(define-public crate-badpod-0.5.0 (c (n "badpod") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "02249v42c0zxygr6a8qc5fb041n4a3x5xi7hrllrbz2hcc5zz7v0")))

(define-public crate-badpod-0.6.0 (c (n "badpod") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "04lmksw7mcd1z0bc7hypiajjdg6gkqqrwmik1sf7c4322p8smsi4")))

(define-public crate-badpod-0.7.0 (c (n "badpod") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1q8v6m1wrcfpcrr9xnghbwc2k78796w0yxwpdlv8l0xx5wp7sqmb")))

(define-public crate-badpod-0.7.1 (c (n "badpod") (v "0.7.1") (d (list (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "122jz7dnn1q7r3v4w0nxlkii4kp8h5mm4vn9bymd82wnkjbwsdym")))

(define-public crate-badpod-0.7.2 (c (n "badpod") (v "0.7.2") (d (list (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1wv5sfv5vs6gj9zmnx9g40dvc7d8xbpi5lh8vmnm962q1jyqb5qv")))

(define-public crate-badpod-0.7.3 (c (n "badpod") (v "0.7.3") (d (list (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "time") (r "^0.3.21") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0wkimisb59m44iwgyk0yb1mfwzrp68kpf5m9n4rss8x0jhx9h7v1")))

(define-public crate-badpod-0.7.4 (c (n "badpod") (v "0.7.4") (d (list (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0adxzd0rhbvy8a53j5cjq8sq8jbhzchb1c6g7gkr3p81bwgn3pc3")))

(define-public crate-badpod-0.8.0 (c (n "badpod") (v "0.8.0") (d (list (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "strum") (r "^0.26.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0d7s5mh09gafbpin231zz5v4i6alc1qn2k9gka3j44yqcbqijw0b")))

(define-public crate-badpod-0.8.1 (c (n "badpod") (v "0.8.1") (d (list (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "strum") (r "^0.26.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "1c8knmh9k98g71v0qllmg6bb2x83f0a8dwhigkggw6rsm72mn5c4")))

(define-public crate-badpod-0.8.2 (c (n "badpod") (v "0.8.2") (d (list (d (n "chrono") (r "^0.4.33") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "strum") (r "^0.26.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "1ss96ksxk4czrfcq7ajwzk39c4h2bf5r35minmrmw2pagh60cxr5")))

(define-public crate-badpod-0.8.3 (c (n "badpod") (v "0.8.3") (d (list (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "strum") (r "^0.26.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.2") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0qf7hwk4by26aipz6b100y32bl9j89k3s7fs10y4divjj4ddagbv")))

