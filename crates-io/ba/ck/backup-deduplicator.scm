(define-module (crates-io ba ck backup-deduplicator) #:use-module (crates-io))

(define-public crate-backup-deduplicator-0.1.0 (c (n "backup-deduplicator") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "file-id") (r "^0.2.1") (d #t) (k 0)) (d (n "filetime") (r "^0.2.23") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha1") (r "^0.11.0-pre.3") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sysinfo") (r "^0.30.5") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.10") (f (quote ("xxh32" "xxh64"))) (d #t) (k 0)))) (h "11hvflssw5sgmzfng17rds5s3s7hwmlfkxqnrphk3liq4ra4r4f8")))

(define-public crate-backup-deduplicator-0.2.0 (c (n "backup-deduplicator") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "file-id") (r "^0.2.1") (d #t) (k 0)) (d (n "filetime") (r "^0.2.23") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha1") (r "^0.11.0-pre.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.10") (f (quote ("xxh32" "xxh64"))) (o #t) (d #t) (k 0)))) (h "1i0cdlg15h7g4gcmkbwi6vkcyh4vgf9gvvkw16wv7v6apy3kb7w8") (f (quote (("default" "hash-sha1" "hash-sha2" "hash-xxh")))) (s 2) (e (quote (("hash-xxh" "dep:xxhash-rust") ("hash-sha2" "dep:sha2") ("hash-sha1" "dep:sha1"))))))

(define-public crate-backup-deduplicator-0.3.0 (c (n "backup-deduplicator") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2.32") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (d #t) (k 0)) (d (n "file-id") (r "^0.2.1") (d #t) (k 0)) (d (n "filetime") (r "^0.2.23") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "sha1") (r "^0.11.0-pre.3") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.10") (f (quote ("xxh32" "xxh64"))) (o #t) (d #t) (k 0)))) (h "1yz6lx52brkk6fc7yfp003a5kfa8liwlnfvhhybgajckp0z8h63p") (f (quote (("default" "hash-sha1" "hash-sha2" "hash-xxh")))) (s 2) (e (quote (("hash-xxh" "dep:xxhash-rust") ("hash-sha2" "dep:sha2") ("hash-sha1" "dep:sha1"))))))

