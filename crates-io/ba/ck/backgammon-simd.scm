(define-module (crates-io ba ck backgammon-simd) #:use-module (crates-io))

(define-public crate-backgammon-simd-0.1.0 (c (n "backgammon-simd") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backgammon") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fixed-map") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)))) (h "1lfac1ligpd7byj3sfkrkmh1yz87pvj1aqrnacdi2wfkib06n0xg") (f (quote (("time")))) (s 2) (e (quote (("backgammon-compat" "dep:backgammon"))))))

(define-public crate-backgammon-simd-0.1.1 (c (n "backgammon-simd") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "backgammon") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "fixed-map") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)))) (h "1iz572rqk47xjbv23x2vwfvffrnf6lf87n7jmyb0jg8j9rhx54sr") (f (quote (("time")))) (s 2) (e (quote (("backgammon-compat" "dep:backgammon"))))))

