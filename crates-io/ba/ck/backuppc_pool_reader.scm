(define-module (crates-io ba ck backuppc_pool_reader) #:use-module (crates-io))

(define-public crate-backuppc_pool_reader-0.1.0 (c (n "backuppc_pool_reader") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (d #t) (k 0)))) (h "1kx06g7wvavxgzl80q73rab5jhwdv425crrbxb8v9qd0sk6b107c")))

(define-public crate-backuppc_pool_reader-1.0.0 (c (n "backuppc_pool_reader") (v "1.0.0") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (d #t) (k 0)))) (h "1639mz498j5hiivc70zfxrqaadczsifsi0y164kwv1mrry1sx5nr")))

(define-public crate-backuppc_pool_reader-1.0.1 (c (n "backuppc_pool_reader") (v "1.0.1") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "19kf2rvjpksrcgsksx2kzwm5xa2knc9ww7xbsh4b3bhys6l96x0r") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:lru" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.0.2 (c (n "backuppc_pool_reader") (v "1.0.2") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "0w1f3jb1swq9m7yf3mrpwk43zsgs4wlpa6skxr29nids4kh2l89x") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:lru" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.1.0 (c (n "backuppc_pool_reader") (v "1.1.0") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "10glp49wz1m2xcwq5089cgzl4gr6mxpvyzrakrgf7sc161cklz76") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.1.1 (c (n "backuppc_pool_reader") (v "1.1.1") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "0akx3460468g6gnvngm3v55sbxanp75sxjyyjcb7ylb0m0ca0vag") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.1.2 (c (n "backuppc_pool_reader") (v "1.1.2") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "1nhi5l0crvim4h9nyxykwlk2wsdyq89cqvnfmhi52fq9n68pk9hn") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.2.0 (c (n "backuppc_pool_reader") (v "1.2.0") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "1xcbjzmnfx4a7zrzrh2nl385hfd1bni5r041xxk63ifywws2gj65") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

(define-public crate-backuppc_pool_reader-1.2.1 (c (n "backuppc_pool_reader") (v "1.2.1") (d (list (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.18") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.28") (f (quote ("zlib-ng"))) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "flate2") (r "^1.0.28") (d #t) (k 0)) (d (n "fuser") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "lru") (r "^0.12.3") (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.6.3") (o #t) (d #t) (k 0)))) (h "1ps9sr6pb9h2g3fn5crfkj58dg3glrj4s6k488xwr6fyf8mfsbih") (s 2) (e (quote (("fuse" "dep:fuser" "dep:libc" "dep:twox-hash" "dep:rand") ("cli" "dep:clap" "dep:env_logger" "fuse"))))))

