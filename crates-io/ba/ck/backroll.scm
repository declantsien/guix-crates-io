(define-module (crates-io ba ck backroll) #:use-module (crates-io))

(define-public crate-backroll-0.1.0 (c (n "backroll") (v "0.1.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.1") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "084z3yaldkms4gslq7a876b8hazi78pif5f36ff5pr0bny4l6rsx") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

(define-public crate-backroll-0.2.0 (c (n "backroll") (v "0.2.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.1") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "026205z01ympbhfx6bk8rglafi141bxv3c1djxygwxps52lw6ypq") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

(define-public crate-backroll-0.3.0 (c (n "backroll") (v "0.3.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.2") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "0za4g083hh4mhj40haqjyqbnq6n7qkvpyzvzx1j7ii9x0srsbvsy") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

(define-public crate-backroll-0.4.0 (c (n "backroll") (v "0.4.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.2") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "1l03fcqwg5i3s4b6xfy4jbznfilcl894g07mvfg2mwmghwsn27ib") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

(define-public crate-backroll-0.5.0 (c (n "backroll") (v "0.5.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.2") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "0hd9aqaw01y3sdda4sqafs3467w7pzvr4qacfrp04yqikwmzdq7r") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

(define-public crate-backroll-0.6.0 (c (n "backroll") (v "0.6.0") (d (list (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "backroll_transport") (r "^0.2") (d #t) (k 0)) (d (n "bevy_tasks") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await"))) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "varinteger") (r "^1.0") (d #t) (k 0)))) (h "1nafslfg0pwsq1xffpzqh9k0l0z4pz114p1x0ax3cmzk8yczk3fm") (f (quote (("default" "bevy") ("bevy" "bevy_tasks"))))))

