(define-module (crates-io iz ih izihawa-tantivy) #:use-module (crates-io))

(define-public crate-izihawa-tantivy-0.20.2 (c (n "izihawa-tantivy") (v "0.20.2") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker4x"))) (k 0)) (d (n "brotli") (r "^3.3.4") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fs4") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "izihawa-fst") (r "^0.4.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "murmurhash32") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.20.0") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "snap") (r "^1.0.5") (o #t) (d #t) (k 0)) (d (n "sstable") (r "^0.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.4") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.1") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.12") (f (quote ("experimental"))) (o #t) (k 0)))) (h "18jkav6qkijmy39h86bxm85vl026pzz5x1vppq09rc7hqjjvfzcx") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("snappy-compression" "snap") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("brotli-compression" "brotli")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.21.0 (c (n "izihawa-tantivy") (v "0.21.0") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "izihawa-fst") (r "^0.4.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "murmurhash32") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.0") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "12y7hbq0339imd8yljkafc5zkylcz57jfdzwnka9wsf866zm4h1m") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.21.1 (c (n "izihawa-tantivy") (v "0.21.1") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "izihawa-fst") (r "^0.4.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "murmurhash32") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.0") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "03hfj6jvwm4cdcqsrxpd1kzm42xhsxwzcmnq500pjzabfsalarrl") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.21.2 (c (n "izihawa-tantivy") (v "0.21.2") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.8.4") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "izihawa-fst") (r "^0.4.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "murmurhash32") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.0") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1qk9har1zwar3in1vz3bqmw86p3hnw75hj6d9pn1x7d7c6z44hy0") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.0-dev (c (n "izihawa-tantivy") (v "0.22.0-dev") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.0-dev") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1b7mp2zwajckzdr6wqam67d9qwmnpx1v8g6hqiibigzxa1wcrmp5") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.1 (c (n "izihawa-tantivy") (v "0.22.1") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.0-dev") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "00c8xzmgxg2hp561vdy9zjawsz2gaqlralj1r12wiczd9isn0w2n") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict") ("quickwit" "sstable" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.2 (c (n "izihawa-tantivy") (v "0.22.2") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.1") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.24") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1gi6shi54lj2zp7byvx46qa3462nf9jy83y7nkcg981lsbjzm11g") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict" "sstable") ("quickwit" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.3 (c (n "izihawa-tantivy") (v "0.22.3") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.0") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.1") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "0vnbcih00cgm9l3alrb1vx2rmgzaqa5fdfk6dh4b22cb4dljnr7a") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict" "sstable") ("quickwit" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.4 (c (n "izihawa-tantivy") (v "0.22.4") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.2") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.1") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known" "macros"))) (d #t) (k 2)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1hvpb0gb7r4krac2ynd9avxxgyhhs515w2w7w84haj03phxy7cmp") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict" "sstable") ("quickwit" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.5 (c (n "izihawa-tantivy") (v "0.22.5") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.2") (d #t) (k 0)) (d (n "columnar") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.6.1") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.21.1") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.2.1") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.2.1") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.5") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known" "macros"))) (d #t) (k 2)) (d (n "tokenizer-api") (r "^0.2") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.35.1") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1zaz8ik3l5s3skh1m62vbi1ccbbk7fvncv1kx724km30bnx65mpi") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict" "sstable") ("quickwit" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.62")))

(define-public crate-izihawa-tantivy-0.22.6 (c (n "izihawa-tantivy") (v "0.22.6") (d (list (d (n "aho-corasick") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bitpacking") (r "^0.9.2") (f (quote ("bitpacker4x"))) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "census") (r "^0.4.2") (d #t) (k 0)) (d (n "columnar") (r "^0.3") (d #t) (k 0) (p "izihawa-tantivy-columnar")) (d (n "common") (r "^0.7") (d #t) (k 0) (p "izihawa-tantivy-common")) (d (n "crc32fast") (r "^1.3.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (t "cfg(not(windows))") (k 2)) (d (n "crossbeam-channel") (r "^0.5.4") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "fail") (r "^0.5.0") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "fastdivide") (r "^0.4.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "fs4") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "htmlescape") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "levenshtein_automata") (r "^0.2.1") (d #t) (k 0)) (d (n "lockfree-object-pool") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "matches") (r "^0.1.9") (d #t) (k 2)) (d (n "measure_time") (r "^0.8.2") (d #t) (k 0)) (d (n "memmap2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "more-asserts") (r "^0.3.1") (d #t) (k 2)) (d (n "num_cpus") (r "^1.13.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "oneshot") (r "^0.1.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "postcard") (r "^1.0.4") (f (quote ("use-std"))) (k 2)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "query-grammar") (r "^0.22") (d #t) (k 0) (p "izihawa-tantivy-query-grammar")) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rust-stemmers") (r "^1.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "sketches-ddsketch") (r "^0.2.1") (f (quote ("use_serde"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "sstable") (r "^0.3") (o #t) (d #t) (k 0) (p "izihawa-tantivy-sstable")) (d (n "stacker") (r "^0.3") (d #t) (k 0) (p "izihawa-tantivy-stacker")) (d (n "tantivy-bitpacker") (r "^0.6") (d #t) (k 0) (p "izihawa-tantivy-bitpacker")) (d (n "tantivy-fst") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known"))) (d #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde-well-known" "macros"))) (d #t) (k 2)) (d (n "tokenizer-api") (r "^0.3") (d #t) (k 0) (p "izihawa-tantivy-tokenizer-api")) (d (n "tokio") (r "^1.37") (f (quote ("fs" "io-util"))) (o #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("v4" "serde"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (d #t) (t "cfg(windows)") (k 0)) (d (n "zstd") (r "^0.13") (f (quote ("experimental"))) (o #t) (k 0)))) (h "1v6xpvga1ygw2c163a21cclb0v614ndy7bv08zp2pn59qizkw87g") (f (quote (("zstd-compression" "zstd") ("wasm" "zstd/thin" "zstd/wasm") ("unstable") ("stopwords") ("sstable-termdict" "sstable") ("quickwit" "futures-util" "common/quickwit") ("mmap" "fs4" "tempfile" "memmap2" "tokio") ("lz4-compression" "lz4_flex") ("failpoints" "fail" "fail/failpoints") ("default" "mmap" "stopwords" "lz4-compression") ("compare_hash_only" "stacker/compare_hash_only")))) (r "1.63")))

