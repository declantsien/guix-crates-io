(define-module (crates-io dy ne dynec) #:use-module (crates-io))

(define-public crate-dynec-0.1.0 (c (n "dynec") (v "0.1.0") (d (list (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "dynec-codegen") (r "^0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "replace_with") (r "^0.1.7") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "0p8c7j53mk27dmnpkdc4bkj7spr5b5pqd6mv6z42cysj4x2grzb8") (f (quote (("release-entity-rc") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

(define-public crate-dynec-0.2.0-alpha.1 (c (n "dynec") (v "0.2.0-alpha.1") (d (list (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dynec-codegen") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "12j5wcy4s64qd74qg4q65whzmhx0nkbz7rx6vkiglan47hi2lcll") (f (quote (("release-entity-rc") ("internal-bench" "env_logger" "strum") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

(define-public crate-dynec-0.2.0-alpha.2 (c (n "dynec") (v "0.2.0-alpha.2") (d (list (d (n "auto_enums") (r "^0.8.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive-trait") (r "^0.0.4") (d #t) (k 0)) (d (n "dynec-codegen") (r "^0.2.0-alpha.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "14frgwl7b219v3wwb5kvxnyk983mv5lbg9dzp58xg0a024v3gv8g") (f (quote (("tuple-impl-8-zip") ("tuple-impl-8-init-fn") ("tuple-impl-32-zip" "tuple-impl-24-zip") ("tuple-impl-32-init-fn" "tuple-impl-24-init-fn") ("tuple-impl-24-zip" "tuple-impl-16-zip") ("tuple-impl-24-init-fn" "tuple-impl-16-init-fn") ("tuple-impl-16-zip" "tuple-impl-8-zip") ("tuple-impl-16-init-fn" "tuple-impl-8-init-fn") ("release-entity-rc") ("internal-bench" "env_logger" "strum" "tuple-impl-8-zip") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

(define-public crate-dynec-0.2.0-alpha.3 (c (n "dynec") (v "0.2.0-alpha.3") (d (list (d (n "auto_enums") (r "^0.8.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive-trait") (r "^0.0.4") (d #t) (k 0)) (d (n "dynec-codegen") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "0i4m2avvngvjnap34ka1ifrwxnki0l8dd09y7d05cm49ijbjz9az") (f (quote (("tuple-impl-8-zip") ("tuple-impl-8-init-fn") ("tuple-impl-32-zip" "tuple-impl-24-zip") ("tuple-impl-32-init-fn" "tuple-impl-24-init-fn") ("tuple-impl-24-zip" "tuple-impl-16-zip") ("tuple-impl-24-init-fn" "tuple-impl-16-init-fn") ("tuple-impl-16-zip" "tuple-impl-8-zip") ("tuple-impl-16-init-fn" "tuple-impl-8-init-fn") ("release-entity-rc") ("internal-bench" "env_logger" "strum" "tuple-impl-8-zip") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

(define-public crate-dynec-0.2.0 (c (n "dynec") (v "0.2.0") (d (list (d (n "auto_enums") (r "^0.8.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive-trait") (r "^0.0.4") (d #t) (k 0)) (d (n "dynec-codegen") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "14l0ikg3nz2icnakwmc3d3pm524yf7rq8m9x7k9wk8bmmf2maj1g") (f (quote (("tuple-impl-8-zip") ("tuple-impl-8-init-fn") ("tuple-impl-32-zip" "tuple-impl-24-zip") ("tuple-impl-32-init-fn" "tuple-impl-24-init-fn") ("tuple-impl-24-zip" "tuple-impl-16-zip") ("tuple-impl-24-init-fn" "tuple-impl-16-init-fn") ("tuple-impl-16-zip" "tuple-impl-8-zip") ("tuple-impl-16-init-fn" "tuple-impl-8-init-fn") ("release-entity-rc") ("internal-bench" "env_logger" "strum" "tuple-impl-8-zip") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

(define-public crate-dynec-0.2.1 (c (n "dynec") (v "0.2.1") (d (list (d (n "auto_enums") (r "^0.8.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive-trait") (r "^0.0.4") (d #t) (k 0)) (d (n "dynec-codegen") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "indexmap") (r "^1.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("owning_ref" "arc_lock" "send_guard"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (d #t) (k 2)) (d (n "xias") (r "^0.3.0") (d #t) (k 0)))) (h "0v7f7vaifl3lqyn4sh0ckz5pa8f0y0lpa169rqfw2k1hl4j0xh2q") (f (quote (("tuple-impl-8-zip") ("tuple-impl-8-init-fn") ("tuple-impl-32-zip" "tuple-impl-24-zip") ("tuple-impl-32-init-fn" "tuple-impl-24-init-fn") ("tuple-impl-24-zip" "tuple-impl-16-zip") ("tuple-impl-24-init-fn" "tuple-impl-16-init-fn") ("tuple-impl-16-zip" "tuple-impl-8-zip") ("tuple-impl-16-init-fn" "tuple-impl-8-init-fn") ("release-entity-rc") ("internal-bench" "env_logger" "strum" "tuple-impl-8-zip") ("default" "debug-entity-rc") ("debug-entity-rc"))))))

