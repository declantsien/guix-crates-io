(define-module (crates-io dy dx dydx-v3-blocking) #:use-module (crates-io))

(define-public crate-dydx-v3-blocking-1.0.0 (c (n "dydx-v3-blocking") (v "1.0.0") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "pyo3") (r "^0.16.4") (f (quote ("auto-initialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readonly") (r "^0.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v5"))) (d #t) (k 0)) (d (n "speculate") (r "^0.1.2") (d #t) (k 2)))) (h "1463crzfshnizbvxviw53ljklg0wwdq36k8qbp296c0qxw83zyf8")))

