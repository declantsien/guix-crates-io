(define-module (crates-io dy na dynasty) #:use-module (crates-io))

(define-public crate-dynasty-0.1.1 (c (n "dynasty") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (f (quote ("fuzzy-select"))) (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0-rc.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("socks" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1kl02za1zx2rgyfik69jks3iph8nsg2cn2ycrd2jzi04cq7m4nsy")))

(define-public crate-dynasty-0.1.2 (c (n "dynasty") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (f (quote ("fuzzy-select"))) (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.0-rc.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("socks" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1f5ajk98bgsilh48yxm26qijf53v7q3anb6s5j9ixbwnzz66kmbf")))

(define-public crate-dynasty-1.0.0 (c (n "dynasty") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)))) (h "05qvh2czxp4xb1z7w5r6cyw8jy6r3rqnpljay5zhgmmmmgrw57x8")))

(define-public crate-dynasty-1.1.0 (c (n "dynasty") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)))) (h "11wvv4lvfjfkypzcnafd1ahm1fqqi8p0ylzgnkf0p1by8s967665")))

(define-public crate-dynasty-1.2.0 (c (n "dynasty") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "15vg49rn61rxdsgca5l3wdfwmj6cl994lrka933knaypqiaas3vy") (f (quote (("default" "archive-all") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("archive-zip" "dep:zip") ("archive-pdf" "dep:printpdf" "dep:image"))))))

(define-public crate-dynasty-1.3.0 (c (n "dynasty") (v "1.3.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.8") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "1nd28a483aqg7ic38yrf0wk5iz8mahvgqfzj8765vy4w4byv5q7a") (f (quote (("default" "archive-all") ("archiver") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("archive-zip" "archiver" "dep:zip") ("archive-tar" "archiver" "dep:tar") ("archive-pdf" "archiver" "dep:printpdf" "dep:image"))))))

(define-public crate-dynasty-1.3.1 (c (n "dynasty") (v "1.3.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.8") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^0.1.0") (d #t) (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "160gd67pbn4rxzn0g634rzj2r4qh9rlhr81lxwj93m6jcgbzwc1k") (f (quote (("default" "archive-all") ("archiver") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("archive-zip" "archiver" "dep:zip") ("archive-tar" "archiver" "dep:tar") ("archive-pdf" "archiver" "dep:printpdf" "dep:image"))))))

(define-public crate-dynasty-1.3.2 (c (n "dynasty") (v "1.3.2") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "clap") (r "^4.0.8") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^1.0.0") (d #t) (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "004q3sgvrnmvq0m54kvvg9j07kic1rhlmnmwsyg6sxinfg2ccwg8") (f (quote (("default" "archive-all") ("archiver") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("archive-zip" "archiver" "dep:zip") ("archive-tar" "archiver" "dep:tar") ("archive-pdf" "archiver" "dep:printpdf" "dep:image"))))))

(define-public crate-dynasty-1.4.0 (c (n "dynasty") (v "1.4.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "clap") (r "^4.0.8") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (o #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^1.1.0") (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (o #t) (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "1ppgcg2774wcizgr2c803hiywjrddyi7h0vmdck3v1z166y8yjmv") (f (quote (("default" "archive-all" "search") ("archiver") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("search" "dep:dialoguer" "dep:terminal_size" "dynasty-api/search") ("archive-zip" "archiver" "dep:zip") ("archive-tar" "archiver" "dep:tar") ("archive-pdf" "archiver" "dep:printpdf" "dep:image"))))))

(define-public crate-dynasty-1.4.1 (c (n "dynasty") (v "1.4.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "clap") (r "^4.0.8") (f (quote ("cargo" "derive" "wrap_help"))) (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "dialoguer") (r "^0.10.2") (o #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dynasty-api") (r "^1.1.0") (k 0)) (d (n "image") (r "^0.24.4") (f (quote ("jpeg" "png" "webp"))) (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "printpdf") (r "^0.5.3") (f (quote ("webp" "jpeg_rayon"))) (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("socks"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (o #t) (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt-multi-thread" "fs" "macros"))) (d #t) (k 0)) (d (n "tryhard") (r "^0.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (o #t) (k 0)))) (h "0nd5i1iw580r3jhxacb1aqpl7g9mmilvqmh0va6zfjd7dvwc8ihk") (f (quote (("default" "archive-all" "search") ("archiver") ("archive-all" "archive-zip" "archive-pdf")))) (s 2) (e (quote (("search" "dep:dialoguer" "dep:terminal_size" "dynasty-api/search") ("archive-zip" "archiver" "dep:zip") ("archive-tar" "archiver" "dep:tar") ("archive-pdf" "archiver" "dep:printpdf" "dep:image"))))))

