(define-module (crates-io dy li dylint) #:use-module (crates-io))

(define-public crate-dylint-0.1.0-pre.1 (c (n "dylint") (v "0.1.0-pre.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_building") (r "=0.1.0-pre.1") (d #t) (k 0)) (d (n "dylint_env") (r "=0.1.0-pre.1") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)))) (h "0wafq4ydrihqlkhyl3s7y1lcg2b7xxzab8f5a0snsxq6diq7j403") (f (quote (("local_dylint_driver") ("default" "local_dylint_driver"))))))

(define-public crate-dylint-0.1.0-pre.2 (c (n "dylint") (v "0.1.0-pre.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_building") (r "=0.1.0-pre.2") (d #t) (k 0)) (d (n "dylint_env") (r "=0.1.0-pre.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)))) (h "0b7al0md27d0p9cf8d32qg65niimlqda9227v2n8d58mpnjysmrf") (f (quote (("local_dylint_driver") ("default"))))))

(define-public crate-dylint-0.1.0-pre.3 (c (n "dylint") (v "0.1.0-pre.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.3") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)))) (h "18jzggzlhfx4x5prv8q3gwnyp8y9khwkg798576jxxwv7596inxr") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.5 (c (n "dylint") (v "0.1.0-pre.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.5") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0q9kfxyihns5cq6fbrzx6439mn9d0yb6k41fvh496v7kif0ws9b0") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.6 (c (n "dylint") (v "0.1.0-pre.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.6") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "08pxcmnqihnm24dixbcc7cxvrfwiv2dd3f38xrdna7vb1kganw7x") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.7 (c (n "dylint") (v "0.1.0-pre.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.7") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0wxr5amahhs06ga7qz9yyhcawwvh5fayzflh594qadrrmacwham7") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.8 (c (n "dylint") (v "0.1.0-pre.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.8") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "051mrbqcs3r6fny015xpmcp1zfvw1pdnmagv3k1vifalwqp4vdbl") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.9 (c (n "dylint") (v "0.1.0-pre.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.9") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0ivdhab7jqf3x967849mf860mbg3ymc8v7k546piv6sllw65m4ar") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.10 (c (n "dylint") (v "0.1.0-pre.10") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.10") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0cr0fl97dm12syqyhx12w37xfys3rl86bpbyixvwv02z26mx0ish") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.11 (c (n "dylint") (v "0.1.0-pre.11") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.11") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1dy14yhw1847c0c8ljj4kninkzlmddqz0ihgynw4f8ijk9ickzzb") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.12 (c (n "dylint") (v "0.1.0-pre.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.12") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "09gk1c62lq2xk3vli74vk5y326ssll0xv5vvn90s5hixlxwhh5x9") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.13 (c (n "dylint") (v "0.1.0-pre.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.13") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0dc4and3jggha5s1x35d9x71sbgqppzizs6srj3bc4qasiz1ch7v") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0-pre.14 (c (n "dylint") (v "0.1.0-pre.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0-pre.14") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0-pre.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0kd0nd4p6iwsiz0vlscg59cfpq806wgqcnkn1lmgjmq6w8prq9i2") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.0 (c (n "dylint") (v "0.1.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.0") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1g25ibf8678chrayfply0ag0gxb4967cxx2adhf4lnvs10bawd2c") (f (quote (("dylint_driver_remote") ("default"))))))

(define-public crate-dylint-0.1.2 (c (n "dylint") (v "0.1.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.2") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "1kbcvqlqnv46nrb8mggmd2xlb7gjib2f18wick06jr9jfvvvjr20") (f (quote (("dylint_driver_local") ("default"))))))

(define-public crate-dylint-0.1.3 (c (n "dylint") (v "0.1.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.2") (d #t) (k 0)) (d (n "dylint_examples") (r "=0.1.3") (d #t) (k 2)) (d (n "dylint_internal") (r "=0.1.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.6") (d #t) (k 2)))) (h "0s2w43gf09h9pjnwsi72b4sqkq40l02i5r01kf9w9mwfpk938dds") (f (quote (("dylint_driver_local") ("default"))))))

(define-public crate-dylint-1.0.0 (c (n "dylint") (v "1.0.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "cargo") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "1yy61gzc112as7lmdw9k99img5r3pxs7k2g94hj5y65ndfmyzl23") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "cargo_metadata" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.1 (c (n "dylint") (v "1.0.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "cargo") (r "^0.54.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.4") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "16ddr1ckykxww24jlmay2w7zr6lj4y3jmvgg4iikcvnm8kmawsg3") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "cargo_metadata" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.2 (c (n "dylint") (v "1.0.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "cargo") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "0arp8632c338fsim08zk1wrknhmaqac88c6cgf8gmgvxvdkjr7j5") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "cargo_metadata" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.3 (c (n "dylint") (v "1.0.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cargo") (r "^0.55.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.128") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "0jhqvhdknk1hl10w8vd5xv730fq0pfijhd0rf91h4gidm7ykd1g3") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "cargo_metadata" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.4 (c (n "dylint") (v "1.0.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "14alqsm0cvkh8ps3pz8hcp15c5az5mcfbjj0pd35jiirzqbr91x3") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.5 (c (n "dylint") (v "1.0.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)))) (h "07p1wcpn51kivf8zbrssc089i4a3bygycnnjy1gmba1zclavg3hn") (f (quote (("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.6 (c (n "dylint") (v "1.0.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1mza3v8w7cl1lqqbr229x82mwhcy18yj07as66iqak103vv5y4s6") (f (quote (("package_options" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.7 (c (n "dylint") (v "1.0.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1vihbvdac3nphf6hc4wfiax7a47ji8j63jv0nzazi0sxjd0m21pz") (f (quote (("package_options" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.8 (c (n "dylint") (v "1.0.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "cargo") (r "^0.57.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.7") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1f4bngcqjg8i3ki1hbm5jv50rjmvksn0gh86iiv3h3jsdd89ra38") (f (quote (("package_options" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.9 (c (n "dylint") (v "1.0.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo") (r "^0.58.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.3.3") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1i1sxaav8ari4c1dcan5lxw20w26pk23wqbpgzqj84q75hv90cdn") (f (quote (("package_options" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.10 (c (n "dylint") (v "1.0.10") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo") (r "^0.58.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "06szil6bvsgr2p18d59jriz34azqnwaybr2scf7vr2jjypylcghq") (f (quote (("package_options" "chrono" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.11 (c (n "dylint") (v "1.0.11") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "cargo") (r "^0.58.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.11") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "16s0gdqk85x1278b7izq0jr71rhr5pwl65b7zil61k8rr1w9hdf0") (f (quote (("package_options" "chrono" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.12 (c (n "dylint") (v "1.0.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "cargo") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.135") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0y972xxi6nldij48if68gyjjlw4x1n93a0a5di8wg0s40131iqrb") (f (quote (("package_options" "chrono" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.13 (c (n "dylint") (v "1.0.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.59.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0ix0gdhwambsdai7dx79r8wyk3hafpddj985wpjn48z25lam0c49") (f (quote (("package_options" "chrono" "git2" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-1.0.14 (c (n "dylint") (v "1.0.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.60.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=1.0.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "semver") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "toml_edit") (r "^0.13.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1k1hshs4dmrdx0bvirw07kyidyl6jlizhkl9vzyvc72wrzyl128v") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.0 (c (n "dylint") (v "2.0.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.60.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.8") (d #t) (k 2)) (d (n "toml_edit") (r "^0.13.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0x7xhipp06bq7pd6yz23xii1n1i15xrbzprdsrq2v2wmk9g8pmml") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.1 (c (n "dylint") (v "2.0.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "05dbq4x5wylrgmaddbsvdsfbkvzsibdnfwgv6vkfd96264pc5dza") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.2 (c (n "dylint") (v "2.0.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.2") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1pkq0hi7q5jldp4llq4pblzb8wyd1nf44zdrqagpmq6fk158qb37") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.3 (c (n "dylint") (v "2.0.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.11.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1wacaifh0byjg41ij4jcakzy2awnyy3p9xp4nh17nrd1prj2vgl5") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.4 (c (n "dylint") (v "2.0.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0wza5vspll8g1v9dhzb5j9m7k4ikckr5vj59zpanxizranza5568") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.5 (c (n "dylint") (v "2.0.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0hgg32madhkdhf8hdf3dx2lq1dw0xz3b5m0d0x2nf4svrmd3ixag") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.6 (c (n "dylint") (v "2.0.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "068xw7km1hp3nb7rx0slwr389pmfznvb1w6cpkgrzkvv31p40d0z") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.7 (c (n "dylint") (v "2.0.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "01hgcdxdmxsy8f5y3dnr7cwznvsf7l7cw2xp3i512l0aglg4cmcr") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.8 (c (n "dylint") (v "2.0.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "14m7hqpyns0zvvlhmh0f5pm1c0s2x6gwkam7v43w9n1yyc2ypvz6") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.9 (c (n "dylint") (v "2.0.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.61.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.139") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0gaxmn0mc0gqxpha0rxygj662dxmx761pm66g6l08qqpvm8lmlbx") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git2") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("dylint_driver_local") ("default" "metadata"))))))

(define-public crate-dylint-2.0.10 (c (n "dylint") (v "2.0.10") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.63.1") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.10") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.10") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.0.10") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1v0apwkjsx0l911jsvlzmpwa9r6277iw918dxcjc5ml07fbqc0bp") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.0.11 (c (n "dylint") (v "2.0.11") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.63.1") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.11") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.11") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.0.11") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0fjn3vflvdkc22kvj05ivazvm03wsn45561rks9nkza828h00mx9") (f (quote (("package_options" "chrono" "git2" "toml_edit" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.0.12 (c (n "dylint") (v "2.0.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.61") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.64.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.12") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.12") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.0.12") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "serde") (r "^1.0.143") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1sw0js2kdvqsrj5m42q3gdfhws80ksjjg8aldmcv4855vjq69r8p") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.0.13 (c (n "dylint") (v "2.0.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.13") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.13") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.0.13") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "05wz498n5vb4j22jalp2bj55ayajjxd0nm0hy6njgl3x8as8kr67") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.0.14 (c (n "dylint") (v "2.0.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.14") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.0.14") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.0.14") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0x9p00j32axyg651mg55gahlpkk33iv1vhdcxbgpgjkgk4ffhfcj") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.0 (c (n "dylint") (v "2.1.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.88") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1w8pyhnp3j0k6c2snrxkxz5nma6w6lzvaqvivbsb886i2w54ymww") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.1 (c (n "dylint") (v "2.1.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "cargo") (r "^0.65.0") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.1") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.1") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4.0") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0jphshigk3pq69cyywgjd4yqd2mk7abn9nbpi07bfc01syy6nx0y") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.2 (c (n "dylint") (v "2.1.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.65") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.2") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.2") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.2") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1jwff9k3gc8wl0cdrkxfhi2yawd5dr40wkvy58gl20rb667lgq48") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.3 (c (n "dylint") (v "2.1.3") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.3") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.3") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.3") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "194zpiizk5xvpw2gv58sh68aqj4q2wwqzr3khbgmynsz0ahy1gyd") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.4 (c (n "dylint") (v "2.1.4") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.4") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.4") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.4") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1diz72p0m5i1fyhryawgf22146xw2x70lz71p90lvn2gsx3w3xs1") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.5 (c (n "dylint") (v "2.1.5") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.5") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.5") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.5") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1dcabhzslxp7jhq9q55kw7fx642aadnw9llq8lkl50imglkr4h5p") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.6 (c (n "dylint") (v "2.1.6") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.67") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.6") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.6") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.6") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "18lc1c67f38p7kcpiknhl7ilccp0xihsjcd3mbg3kdw5gxygaqg1") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.7 (c (n "dylint") (v "2.1.7") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.69") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.7") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.7") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.7") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.4") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "0vxxysbnwc3ih9qp9cn8i4fr91lk5hfhagv9r3rbr78y623n8qys") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain") ("default" "metadata"))))))

(define-public crate-dylint-2.1.8 (c (n "dylint") (v "2.1.8") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.70") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.8") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.8") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.8") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1l0xp443n3nrlncj2y4gf6r9zsygahijnqmrkz1pmhm6v137401v") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.1.9 (c (n "dylint") (v "2.1.9") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.70") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.9") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.9") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.9") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.5") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (d #t) (k 2)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "14n9ifggcar8ncjmdh7158z0svv8pz3y9q2qv11j4g38ycp80sig") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.1.10 (c (n "dylint") (v "2.1.10") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "cargo") (r "^0.70") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.10") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.10") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.10") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "16yi8q657zq6cxpqp72xqh1m17pi0d4zafp4yw8vlms1hny1afai") (f (quote (("package_options" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.1.11 (c (n "dylint") (v "2.1.11") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.71") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.11") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.11") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.11") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.6") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "0vqy3kp9db9bcc7cz6hwl9ndshahqdg961987b0jxryyspfig60p") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.1.12 (c (n "dylint") (v "2.1.12") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.72") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.12") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.1.12") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.1.12") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "=0.1.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.7") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "1gis75v41hzf2fmpipi6v37cy2yznv1nqvb19jhbbg3hl9vwqccr") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.2.0 (c (n "dylint") (v "2.2.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.72") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.2.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.2.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.2.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "0rp87wba2hb4s0myws25rpk8xijg2m2mb0fv4qlqrx8hv4vgcn6k") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.3.0 (c (n "dylint") (v "2.3.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.72") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.3.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.3.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.3.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.3") (d #t) (k 0)))) (h "024b030mgh4g2jkypl69frnsdxsrbl0ncyyza3n04lk5mlzqwhh1") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.64")))

(define-public crate-dylint-2.4.0 (c (n "dylint") (v "2.4.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.72") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.4.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "1gng1y9qp21kbanrd9psnv59734vzrpbky5h5z60kyarm3zxzcy8") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.4.1 (c (n "dylint") (v "2.4.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.73") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.1") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.4.1") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0ilz3gwggmqv7sz6vl5f2bryr3ia5aj3a6764ss15097fs252fji") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.4.2 (c (n "dylint") (v "2.4.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.73") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.2") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.2") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.4.2") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "01vvxgpw7571zp0zc5r0ss3z9asf0gklr52gz5kpndwzv118mgxy") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.4.3 (c (n "dylint") (v "2.4.3") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.73") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.3") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.3") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.4.3") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0727sdk6ppq9qcg2w7xlx2csz8rs0ri53gplfl9kc7m71whn0y5a") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "curl-sys" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.4.4 (c (n "dylint") (v "2.4.4") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.73") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.4") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.4.4") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.4.4") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0g2mkpry9rrpjdvd6kr765dkq8njhk2kzzbpzkw4g9w7ddhjmmhp") (f (quote (("package_options" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "curl-sys" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.5.0 (c (n "dylint") (v "2.5.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.73") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.5.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.5.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.5.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0lsh6mz3lfqzhac9lgsjksyjs4xc2klvf6ainys209ndhkmryfv8") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "cargo" "cargo-platform" "cargo-util" "curl-sys" "glob" "if_chain" "toml") ("default" "metadata")))) (r "1.68")))

(define-public crate-dylint-2.6.0 (c (n "dylint") (v "2.6.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.6.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "07al757rs9k277cqs5m6bcpdns0hj788w17h09a944xb02wbgzbi") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "__metadata_cargo") ("default" "metadata") ("__metadata_cli" "cargo-util" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url") ("__metadata_cargo" "cargo" "cargo-platform" "cargo-util" "curl-sys" "glob" "if_chain" "serde-untagged" "toml")))) (r "1.72")))

(define-public crate-dylint-2.6.1 (c (n "dylint") (v "2.6.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.1") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=2.6.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=2.6.1") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.4") (d #t) (k 0)))) (h "0ic1q07c3w9iddjhqdqy24kj6i5v32cs99ng9m9h14zh9p7mjqjd") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("metadata" "__metadata_cargo") ("default" "metadata") ("__metadata_cli" "cargo-util" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url") ("__metadata_cargo" "cargo" "cargo-platform" "cargo-util" "curl-sys" "glob" "if_chain" "serde-untagged" "toml")))) (r "1.72")))

(define-public crate-dylint-3.0.0 (c (n "dylint") (v "3.0.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.0") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=3.0.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "0yq6h3nw39l15hnx1g4n6z8j953wyj3gs0315n6hb714rgp3fzcj") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("library_packages" "__cargo_cli") ("default") ("__cargo_lib" "cargo" "cargo-platform" "cargo-util" "curl-sys" "dunce" "glob" "if_chain" "serde-untagged" "toml") ("__cargo_cli" "cargo-util" "dunce" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url")))) (r "1.72")))

(define-public crate-dylint-3.0.1 (c (n "dylint") (v "3.0.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.1") (f (quote ("git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.0.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=3.0.1") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "1p5cm71vdhz5r6rrfvkrc2yd11qx4anbb3rs0br5y96ky1xlzdax") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("library_packages" "__cargo_cli") ("default") ("__cargo_lib" "cargo" "cargo-platform" "cargo-util" "curl-sys" "dunce" "glob" "if_chain" "serde-untagged" "toml") ("__cargo_cli" "cargo-util" "dunce" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url")))) (r "1.73")))

(define-public crate-dylint-3.1.0 (c (n "dylint") (v "3.1.0") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.0") (f (quote ("config" "git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.0") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=3.1.0") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "0mms1dk57ff832k5wqpa5srv2hhhq54c8sxb6z8rlxyxizqj0rsc") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("library_packages" "__cargo_cli") ("default") ("__cargo_lib" "cargo" "cargo-platform" "cargo-util" "curl-sys" "dunce" "glob" "if_chain" "serde-untagged" "toml") ("__cargo_cli" "cargo-util" "dunce" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url")))) (r "1.73")))

(define-public crate-dylint-3.1.1 (c (n "dylint") (v "3.1.1") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.1") (f (quote ("config" "git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.1") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=3.1.1") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "1msjy1xvrvf54mac3g2wxcz1naqas7alvrbhdyqh7xxs3ifnlldz") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("library_packages" "__cargo_cli") ("default") ("__cargo_lib" "cargo" "cargo-platform" "cargo-util" "curl-sys" "dunce" "glob" "if_chain" "serde-untagged" "toml") ("__cargo_cli" "cargo-util" "dunce" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url")))) (r "1.73")))

(define-public crate-dylint-3.1.2 (c (n "dylint") (v "3.1.2") (d (list (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo") (r "^0.75") (o #t) (d #t) (k 0)) (d (n "cargo-platform") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (d #t) (k 0)) (d (n "curl-sys") (r "^0.4") (f (quote ("force-system-lib-on-osx"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.2") (f (quote ("config" "git" "packaging" "rustup" "sed"))) (d #t) (k 0)) (d (n "dylint_internal") (r "=3.1.2") (f (quote ("cargo"))) (d #t) (k 1)) (d (n "dylint_internal") (r "=3.1.2") (f (quote ("examples"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fs_extra") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heck") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde-untagged") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "walkdir") (r "^2.5") (d #t) (k 0)))) (h "15227c0756058a3j4slllgic0ydd8hc1530c8w6l1nxn8cvi8369") (f (quote (("package_options" "heck" "if_chain" "dylint_internal/clippy_utils" "dylint_internal/git") ("library_packages" "__cargo_cli") ("default") ("__cargo_lib" "cargo" "cargo-platform" "cargo-util" "curl-sys" "dunce" "glob" "if_chain" "serde-untagged" "toml") ("__cargo_cli" "cargo-util" "dunce" "fs_extra" "glob" "hex" "home" "if_chain" "serde-untagged" "toml" "url")))) (r "1.73")))

