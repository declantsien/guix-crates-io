(define-module (crates-io dy li dylint_internal) #:use-module (crates-io))

(define-public crate-dylint_internal-0.1.0-pre.3 (c (n "dylint_internal") (v "0.1.0-pre.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1wxqcck7yv06d8gf9jz2kj6r3smxdm3lnr4qn7kk5a8wwq5zlz4h")))

(define-public crate-dylint_internal-0.1.0-pre.4 (c (n "dylint_internal") (v "0.1.0-pre.4") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1js1iqqspam4yhxc5asq6ha1a30id8k7jvmr982x7imgxcnc6r1a")))

(define-public crate-dylint_internal-0.1.0-pre.5 (c (n "dylint_internal") (v "0.1.0-pre.5") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1vvid2s1rr9396wwi0jic13vlvwmd9hkk37mr1vfwylrv5bfw0h0")))

(define-public crate-dylint_internal-0.1.0-pre.6 (c (n "dylint_internal") (v "0.1.0-pre.6") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "0i6g35xrgzblc7wi2pa8ly2lfy8fvmqa0x6k24zgyngiyi5ajk4m")))

(define-public crate-dylint_internal-0.1.0-pre.7 (c (n "dylint_internal") (v "0.1.0-pre.7") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1lpfikvjp9k816xfx8k35nm2hac1f3vassjsxwhldr16636q7cx0")))

(define-public crate-dylint_internal-0.1.0-pre.8 (c (n "dylint_internal") (v "0.1.0-pre.8") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "12xznic4izc6nilcc6cysyjrzkg7r1n7yzkbmhxxnymidlmffzrs")))

(define-public crate-dylint_internal-0.1.0-pre.9 (c (n "dylint_internal") (v "0.1.0-pre.9") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1mlajjf7kb0js4n7fxxqnc8ihn26iqn0n39nibv4l60rn0mycgpk")))

(define-public crate-dylint_internal-0.1.0-pre.10 (c (n "dylint_internal") (v "0.1.0-pre.10") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "06ikbbg3af8s53rddn7g43p57vbk3ssl29api3kmxlpdz9hb7ksc")))

(define-public crate-dylint_internal-0.1.0-pre.11 (c (n "dylint_internal") (v "0.1.0-pre.11") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "0lmlii7z96qja977m5hfpq5qcxdqmhsqz5yjwj37flnj1cadawqg")))

(define-public crate-dylint_internal-0.1.0-pre.12 (c (n "dylint_internal") (v "0.1.0-pre.12") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1g2x7hdfsjfwqsfdwvw9w3958wz35wl45lqn1b5vlmab2slnkz65")))

(define-public crate-dylint_internal-0.1.0-pre.13 (c (n "dylint_internal") (v "0.1.0-pre.13") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "149h0h7p7gxdj0ik15x52a3m1c97b75lgl4d4915k0alwkf0ilab")))

(define-public crate-dylint_internal-0.1.0-pre.14 (c (n "dylint_internal") (v "0.1.0-pre.14") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1bwsgxf7j9b72clzn5s2qri471y1s95d4kf8x74f9s469wmp1s32")))

(define-public crate-dylint_internal-0.1.0 (c (n "dylint_internal") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1znm87425lz0gs1bpfpm80vcn3ambrbfkb8kzb9w456p1argbcyk")))

(define-public crate-dylint_internal-0.1.2 (c (n "dylint_internal") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.17") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1gd4b0cclv7g2xgmhv0g38m9nnccilalp0r02l7p7v8msmcfyvf1")))

(define-public crate-dylint_internal-0.1.3 (c (n "dylint_internal") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "git2") (r "^0.13.20") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1nvg3pz03nsrw8h18li5i5xcqbfnpksdw0h1hpgh2fw6c6ld08bx")))

(define-public crate-dylint_internal-1.0.0 (c (n "dylint_internal") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.41") (d #t) (k 0)) (d (n "git2") (r "^0.13.20") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "0j44ps1va4g31w2fbns3yn0v5c3g5rqlp035kgg520jhi9l64y0q")))

(define-public crate-dylint_internal-1.0.1 (c (n "dylint_internal") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "git2") (r "^0.13.20") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)))) (h "1hrvzsfj63nx7zixq7pkz58ypxd8b4divxssgj0h5b48zkrcqm14")))

(define-public crate-dylint_internal-1.0.2 (c (n "dylint_internal") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.42") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.20") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "11650n6vf82r8gq59vis24f9avyqw5bvq37yr32sphkaiv8cnfhp")))

(define-public crate-dylint_internal-1.0.3 (c (n "dylint_internal") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0.43") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.21") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "0gm4dxpwybs7lkyjzp6pv4b64b3myn3c5lbzn1zc3k91mf9xsgc1")))

(define-public crate-dylint_internal-1.0.4 (c (n "dylint_internal") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.22") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "1sxvx1ddm5plsxlhl5ihmcxa9cg77b3az44q2knsbvmw38hpas5c")))

(define-public crate-dylint_internal-1.0.5 (c (n "dylint_internal") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.22") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "0vl8wndxpknpqm0vynvxc9zdsy3cc43nbh7kw7il582pmkg5i9xq")))

(define-public crate-dylint_internal-1.0.6 (c (n "dylint_internal") (v "1.0.6") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "0rmz2hzx4n9d58g823dffkz2sm02jg5b58cydz52q5cgvss0fgvj")))

(define-public crate-dylint_internal-1.0.7 (c (n "dylint_internal") (v "1.0.7") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "1lsp2v5xg3vij4bpylvndaygmc0xp0bxb61rs3mapwqd0j9g1yi8")))

(define-public crate-dylint_internal-1.0.8 (c (n "dylint_internal") (v "1.0.8") (d (list (d (n "anyhow") (r "^1.0.45") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.23") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.4") (d #t) (k 0)))) (h "1q4zhmf3d4h0fv446p1qc1b49131xy7jm3207zj5xbd97ypp57dz")))

(define-public crate-dylint_internal-1.0.9 (c (n "dylint_internal") (v "1.0.9") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "18c8kp4lf7mp33dxm2zjw79wmf26z9x7izfk2ssma5hyr09bg30w")))

(define-public crate-dylint_internal-1.0.10 (c (n "dylint_internal") (v "1.0.10") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "08zyv3fw7l0v5c5iq6m0hzzmmyfkmwnscps8n860rjvismaphbvn")))

(define-public crate-dylint_internal-1.0.11 (c (n "dylint_internal") (v "1.0.11") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "1lslzplyvmz8zrga7dmxcrrnrrviwhl59jxj8fy08pqq7r6mfwn0")))

(define-public crate-dylint_internal-1.0.12 (c (n "dylint_internal") (v "1.0.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "0dz2hbpllf87bxkrajyjnb2m697hnxsw8hk5kmv8x5vbydz6ab7s")))

(define-public crate-dylint_internal-1.0.13 (c (n "dylint_internal") (v "1.0.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "14jq7vsqz95185nrakp6cwccq3fcb2r9m5cnf39qj3aijmsy6asj")))

(define-public crate-dylint_internal-1.0.14 (c (n "dylint_internal") (v "1.0.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "09nblg3sjbvs6i2z1lngfmlf6dcfym474qziz4bzarl4f7ljp2bv")))

(define-public crate-dylint_internal-2.0.0 (c (n "dylint_internal") (v "2.0.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "0rlbvckwb68qigcgvm0idyf5ip8340ldqvwwvrbwkin9p28p8rww")))

(define-public crate-dylint_internal-2.0.1 (c (n "dylint_internal") (v "2.0.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "14vmzywdgalja18kysbg5ihhqbcayxnjzgxd1wm48hmhkiiq6vbr")))

(define-public crate-dylint_internal-2.0.2 (c (n "dylint_internal") (v "2.0.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "016nfr9j74yrky9rl3npbvbvm4bsj69cvz3b2mxjgd7z5vf49jzm")))

(define-public crate-dylint_internal-2.0.3 (c (n "dylint_internal") (v "2.0.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)))) (h "1vh2g4jp2x122ldkq42ih1gzwkwmfx2c9p4w0xyv0phmpn7fjdh0")))

(define-public crate-dylint_internal-2.0.4 (c (n "dylint_internal") (v "2.0.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1jfvl3kd1jkblh0fnjqp4lqzh0hhgamrsbfihf0lsmzhbb6l0czm")))

(define-public crate-dylint_internal-2.0.5 (c (n "dylint_internal") (v "2.0.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0w0n3hcdk9g1vrxqdc9ndbad3bfjnygib1k8dyrrn06vha0fag9n")))

(define-public crate-dylint_internal-2.0.6 (c (n "dylint_internal") (v "2.0.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.2") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0m74mrqg3s5kcl3czf1hiw73cpf9ihyz963v286p8aspfnyjq55q")))

(define-public crate-dylint_internal-2.0.7 (c (n "dylint_internal") (v "2.0.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0wbmjb3qjdnimvmk7m4394rx9cc50isi0sf9v4w9kamc7kx4wl65")))

(define-public crate-dylint_internal-2.0.8 (c (n "dylint_internal") (v "2.0.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "1pc6v0dcqayyqqsp2j05lnh44vppagh7cb0i0ps9gi7ivg6inbd1")))

(define-public crate-dylint_internal-2.0.9 (c (n "dylint_internal") (v "2.0.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (d #t) (k 0)) (d (n "git2") (r "^0.13.25") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)))) (h "0dsq32wn8hz7nqc584awnzzr5ak7vb218cpmf369w29sy1cyvyy7")))

(define-public crate-dylint_internal-2.0.10 (c (n "dylint_internal") (v "2.0.10") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "0nxq2dqi6ksprfrm7x0kvbs638p88v47h46qvqffwb4xqxqj00xw") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("cargo" "ansi_term" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.0.11 (c (n "dylint_internal") (v "2.0.11") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.60") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "1cmxlwshdfwi3rghnk197qbw5xnb13smp5gnbpbsprkld8miq4xb") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("cargo" "ansi_term" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.0.12 (c (n "dylint_internal") (v "2.0.12") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.61") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "09jcgvw6wp5k32slk965vjh5yay5p355i5cv7x9ni5mabl3dhkrc") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.0.13 (c (n "dylint_internal") (v "2.0.13") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.1") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "1l87ca9bqlainp039bc6q74kxzibi66y51k9cwdl516xc5vv8svi") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.0.14 (c (n "dylint_internal") (v "2.0.14") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.1") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "00xlxklxr2s7ix6bd4spkbryxmkbl85pf90zpd4gy0a4rs8z7vsb") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.0 (c (n "dylint_internal") (v "2.1.0") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "1gni53bxp3301a0snr18mlqxrz6yi722d2sax7waykph9fhb4j36") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.1 (c (n "dylint_internal") (v "2.1.1") (d (list (d (n "ansi_term") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4.2") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "11s2v2q2k645b1pzc7893sw213h55076msdwmjyl0x3sfw0vxag0") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.2 (c (n "dylint_internal") (v "2.1.2") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.14") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "05j37a4cdzc5nix9jm2wn8x9x14rj2a0d3z0g82qw2cm5xwjydsw") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.3 (c (n "dylint_internal") (v "2.1.3") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "1cqyzj11631zn72zl2y75m9lqgsbjip6wwlmzrhc8xmc636ir89b") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.4 (c (n "dylint_internal") (v "2.1.4") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "08576nzjnbb4shv0w7kkj3iapw8ld7hajsxl6ssgwyaw8p7nx8ja") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs"))))))

(define-public crate-dylint_internal-2.1.5 (c (n "dylint_internal") (v "2.1.5") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "16cfx71mk7if7a1x9ja93yavwrs0jqy1pg5zhj13yg8207pv2gv3") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs" "home"))))))

(define-public crate-dylint_internal-2.1.6 (c (n "dylint_internal") (v "2.1.6") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.6") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.17") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "0j5pr140qa6cj3p2x5jwdwbhjd17rm9p841xhsspdc4wydzyklgq") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs" "home"))))))

(define-public crate-dylint_internal-2.1.7 (c (n "dylint_internal") (v "2.1.7") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.6") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "0mpq70vl15yf312g541vzvzqrjykwc2vqqz27mnmnzfzf37kp02z") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "dirs" "home"))))))

(define-public crate-dylint_internal-2.1.8 (c (n "dylint_internal") (v "2.1.8") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.6") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "040lrf5018p9xcahrs74vcsi07g9gffh2ajmngf1wwmn94p1r017") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "home"))))))

(define-public crate-dylint_internal-2.1.9 (c (n "dylint_internal") (v "2.1.9") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.6") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "13wzgz1zmbbfjnnnbaaila2xjjrpld0c559zlgi08p2y1gmy31cx") (f (quote (("testing" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "home"))))))

(define-public crate-dylint_internal-2.1.10 (c (n "dylint_internal") (v "2.1.10") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.7") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "1m1nnmkfsx768ry110z9bq9qhj97nmkbj3fvkyj6a2xmkywh8v2m") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "atty" "cargo_metadata" "command" "home"))))))

(define-public crate-dylint_internal-2.1.11 (c (n "dylint_internal") (v "2.1.11") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.8") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "1w071c0xsc5543d31sy6a05r2b6jf1k4746ngmg8h2f7d2p1c1hg") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.1.12 (c (n "dylint_internal") (v "2.1.12") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.8") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "0hb8wkm32jwbazv52phkhhikb0kqkvmgcgc10nd9g3la90y6r2cf") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.2.0 (c (n "dylint_internal") (v "2.2.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.8") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "1wmmkba6x5rxqld1dqzfqpb6jsv55qdr6ppjz4vqj75dbps2q1dq") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.3.0 (c (n "dylint_internal") (v "2.3.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.8") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.3") (o #t) (d #t) (k 0)))) (h "1hga1j36l51kq2kpv4c6yw5x6f7kfkcn35gfi7nn4p8589dc02si") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.4.0 (c (n "dylint_internal") (v "2.4.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^6.8") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "05x7p7fchs5b8qgmacbypf8qigc9lripjxbrinh6dhik2qlwb40v") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.4.1 (c (n "dylint_internal") (v "2.4.1") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "0ggx2gxradkmck6f6pvy13pbl9p23hlpgk2w080caw4dzmkr0pd5") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.4.2 (c (n "dylint_internal") (v "2.4.2") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "0ysijr0a6p6ynqph8hl3saw818vq6pzjrr7cnkh56y73awlv2gy5") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.4.3 (c (n "dylint_internal") (v "2.4.3") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "0v7wphmya815vm44vdzx91qb4panxgqfg5bb5l68sl2vddxr83lq") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.4.4 (c (n "dylint_internal") (v "2.4.4") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "0y528rnv1flfdp879jqvkbdrw3chzam6zhakihn9ifibnfv3spic") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2") ("examples" "cargo" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.5.0 (c (n "dylint_internal") (v "2.5.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.0") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.20") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "1gkjg4f0fvpxkz3y520wqa7k5j7gvr6xrmrfp4ckmwk1j8nripjf") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal"))))))

(define-public crate-dylint_internal-2.6.0 (c (n "dylint_internal") (v "2.6.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.2") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "0wzg67i5znrcv2hja1xq3p596vzmg5sfbsjlbzvnjapf5gddlm2i") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-2.6.1 (c (n "dylint_internal") (v "2.6.1") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.2") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "sedregex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (d #t) (k 2)) (d (n "walkdir") (r "^2.4") (o #t) (d #t) (k 0)))) (h "15f0n6gbv1b2yps5p7hm2bmjhd0f2md2512xnyqwcwgskw64404l") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "sedregex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-3.0.0 (c (n "dylint_internal") (v "3.0.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.4") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.3") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.21") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (o #t) (d #t) (k 0)))) (h "06y4bimd0hbj867fg2cwk1hwxcsy75fib65wk8n0sqaszmb21hyl") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "regex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-3.0.1 (c (n "dylint_internal") (v "3.0.1") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.3") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (o #t) (d #t) (k 0)))) (h "0bv4g7cqkabbv7fqx2h1j2nncqp4p2f0ji9fgrqgq0j89fcjm85q") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "regex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-3.1.0 (c (n "dylint_internal") (v "3.1.0") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.3") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (o #t) (d #t) (k 0)))) (h "0vq0bp056mvs230afdlphvgp401xjjc28i0vz4z118y1iglasp9r") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "regex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("config" "cargo_metadata" "serde" "thiserror" "toml") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-3.1.1 (c (n "dylint_internal") (v "3.1.1") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (o #t) (d #t) (k 0)))) (h "0r6c1zn4j20mqjcv1l2znx0zp2r5qbbqcbshvgdg9679qk3kxm3h") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "regex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("config" "cargo_metadata" "serde" "thiserror" "toml") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

(define-public crate-dylint_internal-3.1.2 (c (n "dylint_internal") (v "3.1.2") (d (list (d (n "ansi_term") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.5") (o #t) (d #t) (k 0)) (d (n "cargo-util") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "git2") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "home") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "rust-embed") (r "^8.4") (f (quote ("include-exclude"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "toml_edit") (r "^0.22") (d #t) (k 2)) (d (n "walkdir") (r "^2.5") (o #t) (d #t) (k 0)))) (h "1hy7j28dq8h47a36w3yzna1c0yish6jbyjmyl93rpmxsjpjna1ww") (f (quote (("testing" "ctor" "env_logger" "packaging") ("sed" "regex") ("rustup" "command") ("packaging" "cargo" "rust-embed") ("git" "command" "git2" "if_chain") ("examples" "cargo" "cargo-util" "rustup" "walkdir") ("config" "cargo_metadata" "serde" "thiserror" "toml") ("command" "log") ("clippy_utils" "semver" "toml_edit") ("cargo" "ansi_term" "bitflags" "cargo_metadata" "command" "home" "is-terminal" "once_cell"))))))

