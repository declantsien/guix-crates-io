(define-module (crates-io py el pyella) #:use-module (crates-io))

(define-public crate-pyella-0.1.0 (c (n "pyella") (v "0.1.0") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.0") (f (quote ("pyo3"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)))) (h "1rlybizf16a45kb9mqcyiljwhxf54cj703qa50jl2l4sx2zdvbxx") (f (quote (("default" "mimalloc"))))))

(define-public crate-pyella-0.1.1 (c (n "pyella") (v "0.1.1") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.1") (f (quote ("pyo3"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)))) (h "00brz6pvhyshlxms78i7vn36m2a9zjq1bkai79j6ba94lnh60q3a") (f (quote (("default" "mimalloc"))))))

(define-public crate-pyella-0.1.2 (c (n "pyella") (v "0.1.2") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.2") (f (quote ("pyo3"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)))) (h "1axg6by3ckv47iwsr3wf2s48lr0m838dnc5ifwfm4y8wi69izxx8") (f (quote (("default" "mimalloc"))))))

(define-public crate-pyella-0.1.3 (c (n "pyella") (v "0.1.3") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.3") (f (quote ("pyo3"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)))) (h "07dg7nkrwb1zz68gva44zi57vlw7bgqca09xl81i1cbrznd3sdws") (f (quote (("default" "mimalloc"))))))

(define-public crate-pyella-0.1.4 (c (n "pyella") (v "0.1.4") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.4") (f (quote ("pyo3"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)))) (h "1a9ppdpgy1hm04ydi9kxbbkb8slyrhyy788c0mpcp6kdh9vwr424") (f (quote (("default" "mimalloc"))))))

(define-public crate-pyella-0.1.5 (c (n "pyella") (v "0.1.5") (d (list (d (n "arrow") (r "^42.0.0") (f (quote ("pyarrow"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "ella") (r "^0.1.5") (f (quote ("pyo3"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.37") (o #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 0)))) (h "0x1lk4nnjadw5a6pj1y6qmp7jw1jiyml68fsmnh8k4y31b61hcl2") (f (quote (("protobuf" "ella/protobuf") ("metrics" "ella/metrics") ("default" "mimalloc" "metrics" "protobuf"))))))

