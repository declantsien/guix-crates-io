(define-module (crates-io py o3 pyo3-opentelemetry) #:use-module (crates-io))

(define-public crate-pyo3-opentelemetry-0.1.0 (c (n "pyo3-opentelemetry") (v "0.1.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)))) (h "0i0ssckp7v8g0hsx16lwl15p2fw4mrs9637xr2y6dzdvc23b8swk") (f (quote (("extension-module" "pyo3/extension-module") ("default" "extension-module")))) (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.2.0-rc.0 (c (n "pyo3-opentelemetry") (v "0.2.0-rc.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (d #t) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)))) (h "0qdcsr55lqdbcdv7qnsj4g7p4jh54gwza5k0d3k4an4z2b792yrh") (f (quote (("extension-module" "pyo3/extension-module") ("default" "extension-module")))) (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.2.0 (c (n "pyo3-opentelemetry") (v "0.2.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.18.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.18.0") (d #t) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.18.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.16") (d #t) (k 2)))) (h "13zm7b01xismc9ys5xcnjl24z83pnxxvc5spl0g97a369asdphqs") (f (quote (("extension-module" "pyo3/extension-module") ("default" "extension-module")))) (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.0-rc.2 (c (n "pyo3-opentelemetry") (v "0.3.0-rc.2") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.19.0") (f (quote ("macros"))) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "0rxf6jyab0ib46hxj4xf3x28215rvlmanavfdhhkmwznf3l9c489") (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.0 (c (n "pyo3-opentelemetry") (v "0.3.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("macros"))) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "1maq7vi163s1ihns2vr3bb2lgrhng2341yw2897q0vj6jmvgjc76") (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.1-rc.0 (c (n "pyo3-opentelemetry") (v "0.3.1-rc.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("macros"))) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.3.1-rc.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "0q5j8l3qs44ylgsxxf42dmsy44jswz6c5w7sagl7mr78kp0cpd8k") (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.1-rc.1 (c (n "pyo3-opentelemetry") (v "0.3.1-rc.1") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("macros"))) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "0p3c7ixl7fzhmadzkhi8pgyjdlz60503094ipgwlvff1qmk74zg4") (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.1 (c (n "pyo3-opentelemetry") (v "0.3.1") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("macros"))) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.3.1") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "1l4njs6009n16mkghka8292k2v1p946bn1dygyclwgvh3h1ilayg") (r "1.65.0")))

(define-public crate-pyo3-opentelemetry-0.3.2-rc.0 (c (n "pyo3-opentelemetry") (v "0.3.2-rc.0") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (f (quote ("trace" "rt-tokio"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20.0") (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("macros" "extension-module"))) (d #t) (k 0)) (d (n "pyo3-opentelemetry-macros") (r "^0.3.2-rc.0") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("sync" "parking_lot" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.21.0") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "0pf7rn73j4ax68k6iycf5x4ckbabgamxfga95f5p0y49m372y60i") (r "1.65.0")))

