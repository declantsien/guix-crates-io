(define-module (crates-io py o3 pyo3) #:use-module (crates-io))

(define-public crate-pyo3-0.1.0 (c (n "pyo3") (v "0.1.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0sn55pgaqs6ag4qicd213sm2137rjnfnibgy4cfiynvn4k53f1yd") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.0 (c (n "pyo3") (v "0.2.0") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1mnwxx5zgyprlgqyfkpn402csqh6s4ha7j4m8cpqp6q4x16zjqz8") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.1 (c (n "pyo3") (v "0.2.1") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1r25n25kkjfakxp50ddx52a79l3ijc5qb67ymh1aq45k76wvj4qj") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.2 (c (n "pyo3") (v "0.2.2") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1sqx89g0ldmpq8nggzd3cxfj2vhxaq195jfbnsqm0vzn40wd8890") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.3 (c (n "pyo3") (v "0.2.3") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0ws30rv58p4gkiiva817zcflm2vchkkfrkwhh3xwmq0dh70h772k") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.4 (c (n "pyo3") (v "0.2.4") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0jy8lr6pkjvw8ghn33y8kz8clz60vvf9bz9za0baqnqij39pll5k") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.5 (c (n "pyo3") (v "0.2.5") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "1kdgzmmj2n55knw2a5cfvj64mggiv0vsj0anplkk8j80fp3vs6ip") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.6 (c (n "pyo3") (v "0.2.6") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.1") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "0fv3aaakk8nm109hjfs71a5909fhmichgf0p4mnwq4yp23lc6x0y") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.2.7 (c (n "pyo3") (v "0.2.7") (d (list (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.2.7") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1") (d #t) (k 1)))) (h "096dir1fd36lp3lrhhbgmffml474pjsmyi4acinvx7ss1sgvb6vl") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.3.0 (c (n "pyo3") (v "0.3.0") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "0ahw2jmgj0x8nx20y3wai7sjhfdpyh81a1zpix77xy0xijq6ldw1") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.3.1 (c (n "pyo3") (v "0.3.1") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "1z710xvrwcgmayj64iglyfv4lvg8wxhgc5hqdxhvkxzhn163q9dy") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.3.2 (c (n "pyo3") (v "0.3.2") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.3.2") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "1hzf3dg3l8nmang7zsdj9rf8wvrrc20hx8ag0xmjgvl8hvxnfjgq") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.4.0 (c (n "pyo3") (v "0.4.0") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "mashup") (r "^0.1.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pyo3cls") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.0") (d #t) (k 1)) (d (n "spin") (r "^0.4.6") (d #t) (k 0)) (d (n "version_check") (r "^0.1.3") (d #t) (k 1)))) (h "116fybw3phzk9dbchy65ixh8aa66fl0b84cm4mmj6svhamp3wwwy") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.4.1 (c (n "pyo3") (v "0.4.1") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.5") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.4.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.2") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.4") (d #t) (k 1)))) (h "1dfs6l8zwrrxhmzlnfwfwhrlx8a74pk6z6a1ari0w517f9qiz952") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.0-alpha.1 (c (n "pyo3") (v "0.5.0-alpha.1") (d (list (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.5") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.4") (d #t) (k 1)))) (h "1r8wi4gqsq5pd65lp71437i9clzjmf7apcs4q7svvgysfwljvgmh") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.0-alpha.2 (c (n "pyo3") (v "0.5.0-alpha.2") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.0-alpha.2") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "0y487xhs5h2pyw1d2zxnj5mclzn5c0i842a3mrlnwjy341g2zggh") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.0-alpha.3 (c (n "pyo3") (v "0.5.0-alpha.3") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.0-alpha.3") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "0wnmki2sx86vx3wjql447wnhzxq9zgij3kyx2mmrara0z43inx6y") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.0 (c (n "pyo3") (v "0.5.0") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.2.8") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1n57y68332ng9pf84wysblibhxk6a03dnvbbbs12rl6mfgyhgdkj") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.1 (c (n "pyo3") (v "0.5.1") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.2.8") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1i3yrybn34r2as948ih9lac5irmc7f8k6k7r59dzb8466v9dhpcp") (f (quote (("python3") ("python2") ("extension-module") ("default")))) (y #t)))

(define-public crate-pyo3-0.5.2 (c (n "pyo3") (v "0.5.2") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.2.8") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.2") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1rs72168yjvhqjncg769s1ypq29irz6d5i5k3wpavy6a0gv84fg8") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.3 (c (n "pyo3") (v "0.5.3") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.2.8") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "19dhfbxbniqr02wv3733xa72nxfqhw43r25rdi18f6saqrjq89x6") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.6.0-alpha.1 (c (n "pyo3") (v "0.6.0-alpha.1") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.6.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "14zsmdlrazpxjyj10g9qs0gn2dp6gw65f2qcib31r5q5i255xn74") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.6.0-alpha.2 (c (n "pyo3") (v "0.6.0-alpha.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.6.0-alpha.2") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "0s3g6ywsq93arx86v7ahkksjg0wlhkljxfmpfkjisrwd2zwc099l") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.5.4 (c (n "pyo3") (v "0.5.4") (d (list (d (n "assert_approx_eq") (r "^1.0.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.2.8") (d #t) (k 2)) (d (n "libc") (r "^0.2.43") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 1)) (d (n "spin") (r "^0.4.9") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1bmgv2gsk69l9rc878wyc9zw6a15k3dbvxx6759570y9gfl9za9j") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.6.0-alpha.3 (c (n "pyo3") (v "0.6.0-alpha.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.6.0-alpha.2") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "0wx3f0r7dik08kp5g079swdclf1k15h695y5km4sp4c4zs3a9n6n") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.6.0-alpha.4 (c (n "pyo3") (v "0.6.0-alpha.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.6.0-alpha.4") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1cxbdl9nhqq3pgpfsa604mjqprylz8liz1fglsrb9lbx2mjsdm80") (f (quote (("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.6.0 (c (n "pyo3") (v "0.6.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "1s770b9gwz2y6zq8rl525f630vz8v79d1cmja4hl4gsdpm0kjcfb") (f (quote (("test-doc") ("python3") ("python2") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.7.0-alpha.1 (c (n "pyo3") (v "0.7.0-alpha.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "docmatic") (r "^0.1.2") (d #t) (k 2)) (d (n "indoc") (r "^0.3.1") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.7.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "13v0j03kyfl1qkxd8j2m71sbhm5hyhqv6q0iq0sbadvrj93qkdmg") (f (quote (("test-doc") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.7.0 (c (n "pyo3") (v "0.7.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.3") (d #t) (k 2)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "libc") (r "^0.2.53") (d #t) (k 0)) (d (n "mashup") (r "^0.1.9") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 1)) (d (n "spin") (r "^0.5.0") (d #t) (k 0)) (d (n "version_check") (r "^0.1.5") (d #t) (k 1)))) (h "11k04zrbgw0zhnbk0vmid03p6gkn7vh6by4lys51mbm57wnnx7nh") (f (quote (("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.0 (c (n "pyo3") (v "0.8.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-complex") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.11") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "03qwsi7mnzlrjac4f008lzfr9j5ncikvadpsp52icnbnql3a2qjq") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.1 (c (n "pyo3") (v "0.8.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0i1jb3n54rxfpg0l2980c1v5k3w1y4nhdbckgpdq4h5y5qqrc3x0") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.2 (c (n "pyo3") (v "0.8.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.2") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0s3lyd47bsn4fhmg7d2n5kz1vnxf3d5mk9z7ikqx58079p3nh2g0") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.3 (c (n "pyo3") (v "0.8.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.3") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "1jnaw0j3ff22w00z7ah8lkd3ga8zqx9z9r4n34s8nsafb0wq2cwb") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.4 (c (n "pyo3") (v "0.8.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.4") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0dki0z8m2v70aflmp1xyxafw0pmp1f9kpkwrqygaby6xim3g37bz") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.8.5 (c (n "pyo3") (v "0.8.5") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "spin") (r "^0.5.1") (d #t) (k 0)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0dcz7y5dbgdrr7i47gvk10yjbm37l4a7z4bd57hzndk4b1by5gz1") (f (quote (("unsound-subclass" "pyo3cls/unsound-subclass") ("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.9.0-alpha.1 (c (n "pyo3") (v "0.9.0-alpha.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">= 0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.9.0-alpha.1") (d #t) (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 1)) (d (n "serde") (r "^1.0.99") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 1)) (d (n "trybuild") (r "^1.0.14") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "1pqik8pq0blbp5v6j2d08hdayapayyap0x1jpgfvlhh9q49dc4wl") (f (quote (("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.9.0 (c (n "pyo3") (v "0.9.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.9.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0hnwcnnmszswhwqldxkk3kpzdpi5zx3nq6x40ahnvsa9y9qsh26f") (f (quote (("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.9.1 (c (n "pyo3") (v "0.9.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.9.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "1w686a3dfxz7vbgmyqz5jvlqn46p5sbq30mcxm24kn42v42yyzrr") (f (quote (("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.9.2 (c (n "pyo3") (v "0.9.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.9.2") (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0n0c8p3q4c4s2l7jpb3fn3v7w1q4wrnyhci936k8ir7ihr0dya3h") (f (quote (("python3") ("extension-module") ("default"))))))

(define-public crate-pyo3-0.10.0 (c (n "pyo3") (v "0.10.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.10.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "1xz74ml69rnry5fcg7j8rpcjdr4zwyjmsgjm970nv02iwn16g7vw") (f (quote (("python3") ("macros" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros")))) (y #t)))

(define-public crate-pyo3-0.10.1 (c (n "pyo3") (v "0.10.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "= 0.10.1") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "version_check") (r "^0.9.1") (d #t) (k 1)))) (h "0cwdiibqjhh7v977g2lhi6gc74pca3byjgwcf9rdwgzss4wqad40") (f (quote (("python3") ("macros" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros"))))))

(define-public crate-pyo3-0.11.0 (c (n "pyo3") (v "0.11.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.11.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0c66f8pgm80vdbbajp7vvy14as2wwr2wqxlbpagq4n2hgq4a1rbj") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros"))))))

(define-public crate-pyo3-0.11.1 (c (n "pyo3") (v "0.11.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.11.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0zbbxbbnbr3xr4lzv9w25b20swbw4v266f4a5akcj4c2z87p3a4w") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros"))))))

(define-public crate-pyo3-0.12.0 (c (n "pyo3") (v "0.12.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.12.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0x5azi4pcq934y0dn0wd17mrxs4mnvl5rwlrywxzv46yamkfvrsg") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros")))) (y #t)))

(define-public crate-pyo3-0.12.1 (c (n "pyo3") (v "0.12.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.12.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0b55d2j0x943j37lczvilnbx7i6zf66p5lxsc3z0pwha757kjrdh") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros")))) (y #t)))

(define-public crate-pyo3-0.12.2 (c (n "pyo3") (v "0.12.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.12.2") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "17dlfzv20j4ssdcd0r24s17gkslg2d4sb8ycc023lzn5rb84vypl") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros")))) (y #t)))

(define-public crate-pyo3-0.12.3 (c (n "pyo3") (v "0.12.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.12.3") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0g2y2hh81v8ad2jl3xnds8zhf94463x3ip8g2jdz5fs2fmihvfd9") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros")))) (y #t)))

(define-public crate-pyo3-0.12.4 (c (n "pyo3") (v "0.12.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "pyo3cls") (r "=0.12.4") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0bm7rb78kmix8c8qrrc8g464ybq1xc25v3kjndh945qdyzlbnsxz") (f (quote (("python3") ("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3cls" "unindent") ("extension-module") ("default" "macros"))))))

(define-public crate-pyo3-0.13.0 (c (n "pyo3") (v "0.13.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-macros") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0djl6imp3ka3izbljws7373d6b1c3bx7a25brvrx37biqaj03paw") (f (quote (("nightly") ("macros" "ctor" "indoc" "inventory" "paste" "pyo3-macros" "unindent") ("extension-module") ("default" "macros") ("abi3-py39" "abi3") ("abi3-py38" "abi3-py39") ("abi3-py37" "abi3-py38") ("abi3-py36" "abi3-py37") ("abi3"))))))

(define-public crate-pyo3-0.13.1 (c (n "pyo3") (v "0.13.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-macros") (r "=0.13.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0k3m7fibz4hp293d2wflfy4jj8w2335xcpjkkdcqmmdcyd667jh0") (f (quote (("nightly") ("macros" "pyo3-macros" "ctor" "indoc" "inventory" "paste" "unindent") ("extension-module") ("default" "macros" "auto-initialize") ("auto-initialize") ("abi3-py39" "abi3") ("abi3-py38" "abi3-py39") ("abi3-py37" "abi3-py38") ("abi3-py36" "abi3-py37") ("abi3"))))))

(define-public crate-pyo3-0.13.2 (c (n "pyo3") (v "0.13.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "ctor") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-macros") (r "=0.13.2") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1hq965lgi25dn578fpn9hjva6zjr1c8rl7lxywijq44aw7lbhds8") (f (quote (("nightly") ("macros" "pyo3-macros" "ctor" "indoc" "inventory" "paste" "unindent") ("extension-module") ("default" "macros" "auto-initialize") ("auto-initialize") ("abi3-py39" "abi3") ("abi3-py38" "abi3-py39") ("abi3-py37" "abi3-py38") ("abi3-py36" "abi3-py37") ("abi3"))))))

(define-public crate-pyo3-0.14.0 (c (n "pyo3") (v "0.14.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.0") (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "13ca2kbdh7zk6yackawhxb1v6ramzm3i76a5xkdcqvklkddywbqb") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.14.1 (c (n "pyo3") (v "0.14.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.1") (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.23") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1v4afysg4kspw6kiqkdgpij2b65wmay1zj88cpvxf7z104vpz3rk") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.14.2 (c (n "pyo3") (v "0.14.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.2") (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.44") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "15nximp8zr1d5y5qqjvqd0rqwkk481xab89ggbrckvk5p9i5f85g") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.14.3 (c (n "pyo3") (v "0.14.3") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.3") (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.3") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.44") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "14ai3mzhxi43rpq8cbysa723hkiplm7hwnx2adrnks9m5c5yiq2c") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.14.4 (c (n "pyo3") (v "0.14.4") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.4") (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.4") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.44") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0w9z8hig2ix40qa2qxzygqc8wz3wwbrsfsf9cg343fbb6l3cv4m1") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.14.5 (c (n "pyo3") (v "0.14.5") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.14.5") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.14.5") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.44") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1j70b9bkncgpgnfxjxyvp4mk40rp55lk6qmacxm5c2k78y9hy41m") (f (quote (("nightly") ("multiple-pymethods" "inventory") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3" "pyo3-build-config/abi3"))))))

(define-public crate-pyo3-0.15.0 (c (n "pyo3") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.15.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0my5r1p6zpr6pk2xs3l1l1c1fnyn9bjznh79nyw5jni8rq2lark4") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310") ("abi3" "pyo3-build-config/abi3")))) (l "python")))

(define-public crate-pyo3-0.15.1 (c (n "pyo3") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.15.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "082p014xd8ipwnfsq1ln871wkslxmbrxd7kpqwa0mbq53jzivw3w") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310") ("abi3" "pyo3-build-config/abi3")))) (l "python")))

(define-public crate-pyo3-0.16.0 (c (n "pyo3") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1yr1ah0rwb09c2k4d6cyzgbhyr32j1hdj2y0z9adjnxrbks3s6lx") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (l "python")))

(define-public crate-pyo3-0.16.1 (c (n "pyo3") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1dyc86jx19h3lnafq8zpnippwpxfba25xnk7xbyc12i5pfbmw3n0") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (l "python")))

(define-public crate-pyo3-0.16.2 (c (n "pyo3") (v "0.16.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "00w7v5xcaqr2vbzn58b27z2gs98wzwn89sdgnlazvanwbxyp4y53") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3"))))))

(define-public crate-pyo3-0.16.3 (c (n "pyo3") (v "0.16.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.3") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.3") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "05gj575gbri7lf7n9sn4mlpg80bq3w6bfhjv6vyf9477qg29jgkb") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.15.2 (c (n "pyo3") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "bitflags") (r "=1.2.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "=2.33") (d #t) (k 2)) (d (n "criterion") (r "=0.3.4") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "half") (r "=1.7.1") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.12") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "paste") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.15.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-macros") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "0ljp3m1frg8y50al4cbadwxfwwrgsvslmljclp4cf20y4ykm07fl") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "paste" "unindent") ("extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37") ("abi3-py36" "abi3-py37" "pyo3-build-config/abi3-py36") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310") ("abi3" "pyo3-build-config/abi3")))) (l "python")))

(define-public crate-pyo3-0.16.4 (c (n "pyo3") (v "0.16.4") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.4") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.4") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)))) (h "1chp8jglaay8nqr4ipsbz1bbqvd6rp6qd8nlnlzvysgdflwm31nd") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-abi3-import-lib" "pyo3-build-config/python3-dll-a") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-build-config/extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.16.5 (c (n "pyo3") (v "0.16.5") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.5") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.5") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "1p5kjsj3jdw2gnahdjrzljmi93w3nxdp11qq8x3i80b0a3l04qqy") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.16.6 (c (n "pyo3") (v "0.16.6") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.16.6") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.16.6") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "1jn6nhp9a8i5kfwds6fzy3hzb938qim8bajp8gfkkcn9892c8802") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "multiple-pymethods" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros" "pyproto") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.17.0 (c (n "pyo3") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.17.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.17.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.17.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "03k7czy04bqznsidzp9pjbqjbk251pjr939ldrkyk01xaj06lx38") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.17.1 (c (n "pyo3") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.17.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.17.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.17.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "1q9ir2n75l3fa1xh12gdzp1sp25xir8sd1h9i8wr21r3l0w2bxqj") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.17.2 (c (n "pyo3") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.17.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.17.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.17.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0cldwcv9f78pxdqlsgmjhprgrwyb3wn1frgy8pwz4sspwn3nh6r0") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.17.3 (c (n "pyo3") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.13") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <1.8") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.6.5") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.17.3") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.17.3") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.17.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.49") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0hx5bfwpr1ghh3s618ind5r0g33ncms36lj0n7r87hc36p3y12r6") (f (quote (("pyproto" "pyo3-macros/pyproto") ("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("generate-abi3-import-lib" "generate-import-lib") ("full" "macros" "pyproto" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow") ("extension-module" "pyo3-ffi/extension-module") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py310" "abi3" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.18.0 (c (n "pyo3") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.18.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.18.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.18.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0xs2havf0rib7qn4axivcvsmqmi7mhnrdqdl4ab0jx9rijf19m6c") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.18.1 (c (n "pyo3") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.18.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.18.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.18.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0ixihs42743hy8zb0652wjigvpwngg5k6x1l160p7ckalkldi8q6") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.18.2 (c (n "pyo3") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.18.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.18.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.18.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "00c53gw2361a664kmq5asx7l6rb0xlwsbw6xxfljdy9q0kw4if6g") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.18.3 (c (n "pyo3") (v "0.18.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.18.3") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.18.3") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.18.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "02914yszvcg7qzh1kkrhiz8qqi0p9pbzi1cpmbyk9fii6xdsrcg3") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.19.0 (c (n "pyo3") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.14") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.19.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.19.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1.8.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0p48p38c24vbcl06v6n3xxx34w1hrj7rnp99mwdilfzcfhpzbzng") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.19.1 (c (n "pyo3") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.19.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.19.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.19.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1.8.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0nca4p22jxwcg5dvg907j9m9618bvi8lmb20vvy4nsrhbzh8mf7z") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.19.2 (c (n "pyo3") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^1.0.3") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^0.10.1") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.19.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.19.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.19.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1.8.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0f1aqx947mzsrk05zdm9w2702lj5k9s97y9w9lxwkp2avk7sd0g6") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3"))))))

(define-public crate-pyo3-0.20.0 (c (n "pyo3") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.20.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.20.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "rust_decimal") (r "^1.8.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0jxwqf2npihc3db8dlcbk1sfnczcsgix93hcwz1q1r4gclxlbs04") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "serde" "indexmap" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py311" "abi3" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.20.1 (c (n "pyo3") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "^0.20.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.20.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.20.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "1qhlbq3hqpx1vi30s1mvrdgw9f9pfcca8js6qdq9q74rw66djap8") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "smallvec" "serde" "indexmap" "either" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.20.2 (c (n "pyo3") (v "0.20.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.20.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.20.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "1q3g7ppg2qskigbgqg3w9280klkil5is9hhyps1ykl2hb1xdr2cs") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "chrono" "num-bigint" "num-complex" "hashbrown" "smallvec" "serde" "indexmap" "either" "eyre" "anyhow" "experimental-inspect" "rust_decimal") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3" "pyo3-macros/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.20.3 (c (n "pyo3") (v "0.20.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.20.3") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.20.3") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (d #t) (k 2)))) (h "0cw2pgab0pq5gd98nhv18xgxvyigygspla6c8mfycmwisjbbpgak") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "anyhow" "chrono" "either" "experimental-inspect" "eyre" "hashbrown" "indexmap" "num-bigint" "num-complex" "rust_decimal" "serde" "smallvec") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.21.0-beta.0 (c (n "pyo3") (v "0.21.0-beta.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "chrono-tz") (r ">=0.6, <0.9") (o #t) (k 0)) (d (n "chrono-tz") (r ">=0.6, <0.9") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.21.0-beta.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.21.0-beta.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.21.0-beta.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "1lfgnk86rvzl3fsr56dixm1hlal2189xmml6j7rya8pqk7c4232x") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("gil-refs") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "anyhow" "chrono" "chrono-tz" "either" "experimental-async" "experimental-declarative-modules" "experimental-inspect" "eyre" "hashbrown" "indexmap" "num-bigint" "num-complex" "rust_decimal" "serde" "smallvec") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("experimental-declarative-modules" "pyo3-macros/experimental-declarative-modules" "macros") ("experimental-async" "macros" "pyo3-macros/experimental-async") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.21.0 (c (n "pyo3") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "chrono-tz") (r ">=0.6, <0.9") (o #t) (k 0)) (d (n "chrono-tz") (r ">=0.6, <0.9") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.21.0") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.21.0") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.21.0") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "1kcmpp0c20dx8r89njhsj21apl4adhfmx1bprv4dpjklgshqham0") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("gil-refs") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "anyhow" "chrono" "chrono-tz" "either" "experimental-async" "experimental-declarative-modules" "experimental-inspect" "eyre" "hashbrown" "indexmap" "num-bigint" "num-complex" "rust_decimal" "serde" "smallvec") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("experimental-declarative-modules" "pyo3-macros/experimental-declarative-modules" "macros") ("experimental-async" "macros" "pyo3-macros/experimental-async") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.21.1 (c (n "pyo3") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "chrono-tz") (r ">=0.6, <0.9") (o #t) (k 0)) (d (n "chrono-tz") (r ">=0.6, <0.9") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.21.1") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.21.1") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.21.1") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "0sx17rgkxf8v607nwibqyv2imggq7nhhirnmd0bpc66h1fcv3a57") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("gil-refs") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "anyhow" "chrono" "chrono-tz" "either" "experimental-async" "experimental-declarative-modules" "experimental-inspect" "eyre" "hashbrown" "indexmap" "num-bigint" "num-complex" "rust_decimal" "serde" "smallvec") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("experimental-declarative-modules" "pyo3-macros/experimental-declarative-modules" "macros") ("experimental-async" "macros" "pyo3-macros/experimental-async") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (r "1.56")))

(define-public crate-pyo3-0.21.2 (c (n "pyo3") (v "0.21.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.25") (o #t) (k 0)) (d (n "chrono") (r "^0.4.25") (d #t) (k 2)) (d (n "chrono-tz") (r ">=0.6, <0.9") (o #t) (k 0)) (d (n "chrono-tz") (r ">=0.6, <0.9") (d #t) (k 2)) (d (n "either") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "eyre") (r ">=0.4, <0.7") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "hashbrown") (r ">=0.9, <0.15") (o #t) (d #t) (k 0)) (d (n "indexmap") (r ">=1.6, <3") (o #t) (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "inventory") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "memoffset") (r "^0.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-complex") (r ">=0.2, <0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11, <0.13") (d #t) (k 0)) (d (n "portable-atomic") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "pyo3-build-config") (r "=0.21.2") (f (quote ("resolve-config"))) (d #t) (k 1)) (d (n "pyo3-ffi") (r "=0.21.2") (d #t) (k 0)) (d (n "pyo3-macros") (r "=0.21.2") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.0.0") (o #t) (k 0)) (d (n "send_wrapper") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.61") (d #t) (k 2)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r ">=1.0.70") (d #t) (k 2)) (d (n "unindent") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "1n39y183jfqbyvimscqr0ysxxa6804pn46ivw048ww91lnb0pq55") (f (quote (("nightly") ("multiple-pymethods" "inventory" "pyo3-macros/multiple-pymethods") ("macros" "pyo3-macros" "indoc" "unindent") ("gil-refs") ("generate-import-lib" "pyo3-ffi/generate-import-lib") ("full" "macros" "anyhow" "chrono" "chrono-tz" "either" "experimental-async" "experimental-declarative-modules" "experimental-inspect" "eyre" "hashbrown" "indexmap" "num-bigint" "num-complex" "rust_decimal" "serde" "smallvec") ("extension-module" "pyo3-ffi/extension-module") ("experimental-inspect") ("experimental-declarative-modules" "pyo3-macros/experimental-declarative-modules" "macros") ("experimental-async" "macros" "pyo3-macros/experimental-async") ("default" "macros") ("auto-initialize") ("abi3-py39" "abi3-py310" "pyo3-build-config/abi3-py39" "pyo3-ffi/abi3-py39") ("abi3-py38" "abi3-py39" "pyo3-build-config/abi3-py38" "pyo3-ffi/abi3-py38") ("abi3-py37" "abi3-py38" "pyo3-build-config/abi3-py37" "pyo3-ffi/abi3-py37") ("abi3-py312" "abi3" "pyo3-build-config/abi3-py312" "pyo3-ffi/abi3-py312") ("abi3-py311" "abi3-py312" "pyo3-build-config/abi3-py311" "pyo3-ffi/abi3-py311") ("abi3-py310" "abi3-py311" "pyo3-build-config/abi3-py310" "pyo3-ffi/abi3-py310") ("abi3" "pyo3-build-config/abi3" "pyo3-ffi/abi3")))) (r "1.56")))

