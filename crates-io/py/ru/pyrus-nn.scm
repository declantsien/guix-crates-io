(define-module (crates-io py ru pyrus-nn) #:use-module (crates-io))

(define-public crate-pyrus-nn-0.2.0 (c (n "pyrus-nn") (v "0.2.0") (d (list (d (n "float-cmp") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("serde-1"))) (k 0)) (d (n "ndarray-parallel") (r "^0.9") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pyo3") (r "^0.5.2") (f (quote ("extension-module"))) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "0vjvyh00cilj32rkrzl948fp0irbp98rrb0cak220qivlnzaqgz7")))

(define-public crate-pyrus-nn-0.2.1 (c (n "pyrus-nn") (v "0.2.1") (d (list (d (n "float-cmp") (r "^0.4.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12") (f (quote ("serde-1"))) (k 0)) (d (n "ndarray-parallel") (r "^0.9") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.9") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "pyo3") (r "^0.5.2") (f (quote ("extension-module"))) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)))) (h "09g7bm1g7kiscr2nc286pphc9075z8xicpp89mhi86yhvcq3jjzj")))

