(define-module (crates-io py me pymedusa-zip) #:use-module (crates-io))

(define-public crate-pymedusa-zip-0.0.1 (c (n "pymedusa-zip") (v "0.0.1") (d (list (d (n "libmedusa-zip") (r "^0.0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1dsvxjpww4s51sxbsmhyra65m086sby0l7nmnq73ajaxdnh789g7") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.2 (c (n "pymedusa-zip") (v "0.0.2") (d (list (d (n "libmedusa-zip") (r "^0.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0896qq833nn8yxkndfls7zhs7f1pvh39k58pxpwbdplnsx8za2hi") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.3 (c (n "pymedusa-zip") (v "0.0.3") (d (list (d (n "libmedusa-zip") (r "^0.0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "08sa3yqrfyvb4yfjr25sxi18yqmsxydkca0kp5npx11pg76chfai") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.4 (c (n "pymedusa-zip") (v "0.0.4") (d (list (d (n "libmedusa-zip") (r "^0.0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1xvr00hxa6vwiccf3w0bign35qdnf4kbryyww22ph7cyjgcv1ryz") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.6 (c (n "pymedusa-zip") (v "0.0.6") (d (list (d (n "libmedusa-zip") (r "^0.0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0d9sbvailj27n5c77li6fyn3k2akrf50m22vwscmjqxszgqwg80h") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.7 (c (n "pymedusa-zip") (v "0.0.7") (d (list (d (n "libmedusa-zip") (r "^0.0.7") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "197nqr0k9ci3gnrkas9ilhkapl40zlr0rl25nz6z7fjj0fih1hxk") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.8 (c (n "pymedusa-zip") (v "0.0.8") (d (list (d (n "libmedusa-zip") (r "^0.0.8") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "04f11pflnqhg81zl44jjzxp1w1sb6rbwv0ifpfpi056fj9rbmcwb") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

(define-public crate-pymedusa-zip-0.0.9 (c (n "pymedusa-zip") (v "0.0.9") (d (list (d (n "libmedusa-zip") (r "^0.0.9") (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "pyo3") (r "^0.19") (f (quote ("extension-module"))) (d #t) (k 0)) (d (n "pyo3-asyncio") (r "^0.19") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0v7g7y6s7y67af93kg112q5v35h190bfh8kkqfjpma9axnnvkrp3") (f (quote (("sync" "once_cell") ("default" "asyncio" "sync") ("asyncio" "pyo3-asyncio"))))))

