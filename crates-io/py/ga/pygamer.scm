(define-module (crates-io py ga pygamer) #:use-module (crates-io))

(define-public crate-pygamer-0.2.0 (c (n "pygamer") (v "0.2.0") (d (list (d (n "atsamd-hal") (r "~0.6") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-graphics") (r "~0.4") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.1") (d #t) (k 2)) (d (n "st7735-lcd") (r "~0.4") (d #t) (k 0)) (d (n "ws2812-timer-delay") (r "~0.1") (f (quote ("slow"))) (d #t) (k 2)))) (h "0wnaag7q6ly5g8pmf6a3zkwzmhw0kyz7lqprfyr128qzpqp22hln") (f (quote (("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51j19a-rt") ("default" "rt" "atsamd-hal/samd51j19a" "atsamd-hal/samd51"))))))

(define-public crate-pygamer-0.3.0 (c (n "pygamer") (v "0.3.0") (d (list (d (n "atsamd-hal") (r "~0.7") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "~0.3") (d #t) (k 2)) (d (n "embedded-graphics") (r "~0.4") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "panic-semihosting") (r "~0.5") (d #t) (k 2)) (d (n "panic_rtt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "~0.1") (d #t) (k 2)) (d (n "st7735-lcd") (r "~0.5") (d #t) (k 0)) (d (n "ws2812-timer-delay") (r "~0.1") (f (quote ("slow"))) (d #t) (k 2)))) (h "0s42g7bsqw54bq21gjk0valiqdwhvvygdfz5k077k3za4fi1v9ii") (f (quote (("unproven" "atsamd-hal/unproven") ("rt" "cortex-m-rt" "atsamd-hal/samd51j19a-rt") ("default" "rt" "atsamd-hal/samd51j19a" "atsamd-hal/samd51"))))))

(define-public crate-pygamer-0.4.0 (c (n "pygamer") (v "0.4.0") (d (list (d (n "atsamd-hal") (r "~0.8") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtfm") (r "~0.4") (d #t) (k 2)) (d (n "embedded-graphics") (r "~0.4") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "~0.5") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.2.0") (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "~0.3") (o #t) (d #t) (k 0)))) (h "1yph7k6qmw349f1lh9msr6p4sihw3s89xfmdb68qd4hqrglk5i9n") (f (quote (("ws2812-timer" "ws2812-timer-delay") ("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j19a-rt") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j19a" "atsamd-hal/samd51"))))))

(define-public crate-pygamer-0.5.0 (c (n "pygamer") (v "0.5.0") (d (list (d (n "atsamd-hal") (r "~0.9") (k 0)) (d (n "cortex-m") (r "~0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "~0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "~0.5.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "~0.2.3") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "~0.1") (d #t) (k 0)) (d (n "panic-halt") (r "~0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.7") (d #t) (k 0)) (d (n "usb-device") (r "~0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "~0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.2.0") (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "~0.3") (d #t) (k 0)))) (h "1qv5q7bzvg7gf62xa96ksnaznw5lag8nw9q6mg48kqbwrwdk008z") (f (quote (("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j19a-rt") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j19a" "atsamd-hal/samd51" "unproven"))))))

(define-public crate-pygamer-0.5.1 (c (n "pygamer") (v "0.5.1") (d (list (d (n "atsamd-hal") (r "^0.10") (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.7") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.2.0") (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "^0.3") (d #t) (k 0)))) (h "1i41mhscn3zyxyhgfps91bmsfwqngx750174zhm7azrbr4r00grk") (f (quote (("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j-rt") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j" "atsamd-hal/samd51" "unproven"))))))

(define-public crate-pygamer-0.6.0 (c (n "pygamer") (v "0.6.0") (d (list (d (n "atsamd-hal") (r "^0.11") (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.7") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.2.0") (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "^0.3") (d #t) (k 0)))) (h "0qc0nj6sw93z0dyd3q34qd5s289maw0r0f5708jwgbh2k6ffh9vg") (f (quote (("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j-rt") ("panic_led") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j" "atsamd-hal/samd51" "unproven"))))))

(define-public crate-pygamer-0.7.0 (c (n "pygamer") (v "0.7.0") (d (list (d (n "atsamd-hal") (r "^0.12") (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.6.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.7") (d #t) (k 0)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.4.0") (f (quote ("mosi_idle_high"))) (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "^0.3") (d #t) (k 0)))) (h "1mav676pmpzfnh4dgng3icv7q3zp10nlla37bgcfv10aqb7ww4h5") (f (quote (("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j-rt") ("panic_led") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j" "atsamd-hal/samd51" "unproven"))))))

(define-public crate-pygamer-0.8.0 (c (n "pygamer") (v "0.8.0") (d (list (d (n "atsamd-hal") (r "^0.13") (k 0)) (d (n "cortex-m") (r "^0.6") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.12") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (d #t) (k 0)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.8.1") (d #t) (k 0)) (d (n "tinybmp") (r "^0.3.1") (d #t) (k 2)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ws2812-spi") (r "^0.4.0") (f (quote ("mosi_idle_high"))) (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "^0.3") (d #t) (k 0)))) (h "1j413gk9val2bdgdxfpiy1dg5zrmphgcrw0jmdlnhwlx49wzzhnq") (f (quote (("usb" "atsamd-hal/usb" "usb-device" "usbd-serial") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j-rt") ("panic_led") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j" "atsamd-hal/samd51" "unproven"))))))

(define-public crate-pygamer-0.9.0 (c (n "pygamer") (v "0.9.0") (d (list (d (n "atsamd-hal") (r "^0.14") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^1.0") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-sdmmc") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "lis3dh") (r "^0.1.0") (d #t) (k 2)) (d (n "micromath") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "panic-halt") (r "^0.2") (d #t) (k 2)) (d (n "smart-leds") (r "^0.3") (d #t) (k 2)) (d (n "st7735-lcd") (r "^0.8.1") (d #t) (k 0)) (d (n "tinybmp") (r "^0.3.1") (d #t) (k 2)) (d (n "usb-device") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "usbd-serial") (r "^0.1") (d #t) (k 2)) (d (n "ws2812-spi") (r "^0.4.0") (f (quote ("mosi_idle_high"))) (d #t) (k 2)) (d (n "ws2812-timer-delay") (r "^0.3") (d #t) (k 0)))) (h "143h2xp1h4xkwh9svdvp5j8czgjq83sw13mj13wbrgi5gyh85i73") (f (quote (("usb" "atsamd-hal/usb" "usb-device") ("unproven" "atsamd-hal/unproven") ("sd-card" "embedded-sdmmc") ("rt" "cortex-m-rt" "atsamd-hal/samd51j-rt") ("panic_led") ("math" "micromath") ("default" "rt" "atsamd-hal/samd51j" "atsamd-hal/samd51" "unproven"))))))

