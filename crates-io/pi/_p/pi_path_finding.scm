(define-module (crates-io pi _p pi_path_finding) #:use-module (crates-io))

(define-public crate-pi_path_finding-0.1.0 (c (n "pi_path_finding") (v "0.1.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_heap") (r "^0.1") (d #t) (k 0)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1rvys5g9r3hiws2np1qiyqqz5vfxjvydbzhpzzdwik40a8fhpw0c")))

(define-public crate-pi_path_finding-0.2.1 (c (n "pi_path_finding") (v "0.2.1") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "matrixcompare") (r "^0.3") (d #t) (k 2)) (d (n "nalgebra") (r "^0.30") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_heap") (r "^0.1") (d #t) (k 0)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1vk9hdkjhx93d7fjp6qkis7qpbfadq3ir2css7kj1fvnx57js3s8")))

(define-public crate-pi_path_finding-0.2.2 (c (n "pi_path_finding") (v "0.2.2") (d (list (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "1jmp60z6kx9829lmgi5rl1psvb3mcsy4i5yvn5ijpmkaghvgppbb")))

(define-public crate-pi_path_finding-0.2.3 (c (n "pi_path_finding") (v "0.2.3") (d (list (d (n "nalgebra") (r "^0.31") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "12jaw821as7p506w5hpb01042kyd9w401c1mkz8l6lmzm480v673")))

(define-public crate-pi_path_finding-0.3.0 (c (n "pi_path_finding") (v "0.3.0") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "0synkwqvcc5lc0zsyxzr1c3vwnikdb25w88fng6pzi2l2lyw95q6")))

(define-public crate-pi_path_finding-0.3.1 (c (n "pi_path_finding") (v "0.3.1") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "12yppk3pn047pwx9v8ij3lpam6h7bz1hfw7rb1rbrhglylrwhdhc")))

(define-public crate-pi_path_finding-0.3.2 (c (n "pi_path_finding") (v "0.3.2") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "0ck1xfg79bi19kz7xgh0zzp5b72k5bcslcr9r2qfwsiwm1sn2rxr")))

(define-public crate-pi_path_finding-0.3.3 (c (n "pi_path_finding") (v "0.3.3") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "1p5fmklyyab2zz0dh862wc86qr143rh2v0xnhas3xzxniwi94skl")))

(define-public crate-pi_path_finding-0.3.4 (c (n "pi_path_finding") (v "0.3.4") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "15z1yvrs9z43n3y34msp278hajfhcgfq74nh12bnvab0cpmgqg34")))

(define-public crate-pi_path_finding-0.3.5 (c (n "pi_path_finding") (v "0.3.5") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)))) (h "00a3k94i7grcmlnx5xv7w3vhlp9biap8ja9dmd8m4c5gjqq7dl6s")))

(define-public crate-pi_path_finding-0.3.6 (c (n "pi_path_finding") (v "0.3.6") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_orca") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0sch5cif3a0l2asjr8fllricclpfba6kcax27lh0am4j5qagg5rl")))

(define-public crate-pi_path_finding-0.3.7 (c (n "pi_path_finding") (v "0.3.7") (d (list (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "pi_orca") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "pi_spatial") (r "^0.4") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0k358i9qz62826dz0dv6hzs6bawkajww1nk8hzxl9bb8xb9nk99c")))

(define-public crate-pi_path_finding-0.4.0 (c (n "pi_path_finding") (v "0.4.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0rjc58z5v020n92rwmq7d8m57qxqc6wd4wx034qfdk0xn51w94yq")))

(define-public crate-pi_path_finding-0.4.2 (c (n "pi_path_finding") (v "0.4.2") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0rbdxm4q4x8rv9a9mwp3zx1fkljibbykcmhisqs38ykm6jr7wj4a")))

(define-public crate-pi_path_finding-0.4.4 (c (n "pi_path_finding") (v "0.4.4") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1gg3j298m3pxx0dk5j99bdrarizn218xqgwzdbkqyv1cm33jdj0m")))

(define-public crate-pi_path_finding-0.4.5 (c (n "pi_path_finding") (v "0.4.5") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0bfvax24a8x3kdg43j5pgz8q1v0nwbciqi5x6cc9dh5ppwf2wpdk")))

(define-public crate-pi_path_finding-0.4.6 (c (n "pi_path_finding") (v "0.4.6") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1vrmv6dbjd4cinzfn1sasmpr3jd4d1lamv656vlcxcxy3bljgxlz")))

(define-public crate-pi_path_finding-0.4.7 (c (n "pi_path_finding") (v "0.4.7") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0zxkx9ly8gi0y2lmrh9n5hsk3xcpdn19kbr8gn3yb4x660n24aqn")))

(define-public crate-pi_path_finding-0.5.0 (c (n "pi_path_finding") (v "0.5.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1ygk3cbd1k5jyp66c3bn3qaarirc2irdswj6d81x8ygvy0sh293j")))

(define-public crate-pi_path_finding-0.5.1 (c (n "pi_path_finding") (v "0.5.1") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0pi0qafh1d63qqfyi388ain9lnnd0f24irpwfmyz9wwp33ahrpnw")))

(define-public crate-pi_path_finding-0.5.2 (c (n "pi_path_finding") (v "0.5.2") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0ivngybxrzv6c0a84qbm4z1xf7yn2lq0qq5ipd2k7fszrnmafy06")))

(define-public crate-pi_path_finding-0.5.3 (c (n "pi_path_finding") (v "0.5.3") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1mxgl9m9fphycv9v1pxns13nhscf0ligji0jxn9l3m51gnsl0p4p")))

(define-public crate-pi_path_finding-0.5.4 (c (n "pi_path_finding") (v "0.5.4") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1hzin9iyig7ig4gxq2x1r2l54aa1la65l1mgricrgv9zqsg8pmdr")))

(define-public crate-pi_path_finding-0.5.6 (c (n "pi_path_finding") (v "0.5.6") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0dckyi1pq248x59376c616cj52qx0zwcv4igh8h350nfihfk5f1z")))

(define-public crate-pi_path_finding-0.5.7 (c (n "pi_path_finding") (v "0.5.7") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0p9zvm6h1p9czkphkrrb96c9f87d2x06r9qrn5c7bl6ary7f44ip")))

(define-public crate-pi_path_finding-0.6.0 (c (n "pi_path_finding") (v "0.6.0") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "07f49sylf3aznbnk795rwivybfgy7plcs9q39gql65gmyzf8dsh9")))

(define-public crate-pi_path_finding-0.6.1 (c (n "pi_path_finding") (v "0.6.1") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0hg4ibblmhhpfhx4qr5sciagpy7ppki35gv3cf2q0p842zrxaiyq")))

(define-public crate-pi_path_finding-0.6.2 (c (n "pi_path_finding") (v "0.6.2") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "1ffab4xa88vv6z1r62gr6s3gjlg1hnr2dn7s223kxqi6x62lz8x5")))

(define-public crate-pi_path_finding-0.6.3 (c (n "pi_path_finding") (v "0.6.3") (d (list (d (n "bitvec") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pcg_rand") (r "^0.13") (d #t) (k 2)) (d (n "pi_null") (r "^0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 2)) (d (n "raqote") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.5") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (k 0)))) (h "0dqbymf2crpc1i6ah536xxm04vn5m9dnwmw2fq9in1ppyrgpqkqb")))

