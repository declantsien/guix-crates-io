(define-module (crates-io pi ju pijul-identity) #:use-module (crates-io))

(define-public crate-pijul-identity-0.0.1 (c (n "pijul-identity") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dateparser") (r "^0.1") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0") (d #t) (k 0)) (d (n "keyring") (r "^2.0") (d #t) (k 0)) (d (n "libpijul") (r "^1.0.0-beta.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pijul-config") (r "^0.0.1") (d #t) (k 0)) (d (n "pijul-interaction") (r "^0.0.1") (d #t) (k 0)) (d (n "pijul-repository") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "thrussh-keys") (r "^0.21") (d #t) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "validator") (r "^0.15") (k 0)) (d (n "whoami") (r "^1.4") (d #t) (k 0)))) (h "1hpsw5k3s47nf8hxmi7pb6552ld3xz688hqldz57n9v7d7k660m1") (f (quote (("openssl" "thrussh-keys/openssl") ("default" "openssl"))))))

