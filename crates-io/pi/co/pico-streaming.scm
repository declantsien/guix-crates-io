(define-module (crates-io pi co pico-streaming) #:use-module (crates-io))

(define-public crate-pico-streaming-0.1.1 (c (n "pico-streaming") (v "0.1.1") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "double_decker") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-derive") (r "^0.3") (d #t) (k 0)) (d (n "mockall") (r "^0.8.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pico-common") (r "^0.1.1") (d #t) (k 0)) (d (n "pico-device") (r "^0.1.1") (d #t) (k 0)) (d (n "pico-driver") (r "^0.1.1") (d #t) (k 0)))) (h "0vm00s0yif4z325jhl6906jpy5vw18qlv7rgfj2d9brz3qkmrwx3")))

(define-public crate-pico-streaming-0.1.2 (c (n "pico-streaming") (v "0.1.2") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "double_decker") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-derive") (r "^0.3") (d #t) (k 0)) (d (n "mockall") (r "^0.8.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pico-common") (r "^0.1.2") (d #t) (k 0)) (d (n "pico-device") (r "^0.1.2") (d #t) (k 0)) (d (n "pico-driver") (r "^0.1.2") (d #t) (k 0)))) (h "0skj4gihgga5fimjrq5523djx527b72qi6gxffci35kzf1abla36")))

(define-public crate-pico-streaming-0.1.4 (c (n "pico-streaming") (v "0.1.4") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "double_decker") (r "^0.0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log-derive") (r "^0.3") (d #t) (k 0)) (d (n "mockall") (r "^0.8.1") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pico-common") (r "^0.1.4") (d #t) (k 0)) (d (n "pico-device") (r "^0.1.4") (d #t) (k 0)) (d (n "pico-driver") (r "^0.1.4") (d #t) (k 0)))) (h "0qk143c1sr9rpyrvskrkma5h8f5bgsl8ip117pl7208zl1y7vhp3")))

(define-public crate-pico-streaming-0.2.0 (c (n "pico-streaming") (v "0.2.0") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "mockall") (r "^0.9") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pico-common") (r "^0.2.0") (d #t) (k 0)) (d (n "pico-device") (r "^0.2.0") (d #t) (k 0)) (d (n "pico-driver") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "183gf4gl8b0nmj0q6m1f65pswzy29f4m1yzbf2jl92l0fiy71rwx")))

(define-public crate-pico-streaming-0.2.1 (c (n "pico-streaming") (v "0.2.1") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "mockall") (r "^0.9") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pico-common") (r "^0.2.1") (d #t) (k 0)) (d (n "pico-device") (r "^0.2.1") (d #t) (k 0)) (d (n "pico-driver") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "0mvs6dky135cxb7cmhsmj51njra4c66a9sflpr6864xb0jijkk8s")))

(define-public crate-pico-streaming-0.3.0 (c (n "pico-streaming") (v "0.3.0") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "mockall") (r "^0.9") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pico-common") (r "^0.3.0") (d #t) (k 0)) (d (n "pico-device") (r "^0.3.0") (d #t) (k 0)) (d (n "pico-driver") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "06vxwczr3hpyrn0bpgnkns1xc7dlknxn5r4m5x1549a3rq9s38wy")))

(define-public crate-pico-streaming-0.3.1 (c (n "pico-streaming") (v "0.3.1") (d (list (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "mockall") (r "^0.9") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pico-common") (r "^0.3.1") (d #t) (k 0)) (d (n "pico-device") (r "^0.3.1") (d #t) (k 0)) (d (n "pico-driver") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)))) (h "1nncas0sd5g44mrrcrbcvv3zmrv9mg903nvz6g6xd9zm51lmximx")))

