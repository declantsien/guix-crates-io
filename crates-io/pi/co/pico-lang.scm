(define-module (crates-io pi co pico-lang) #:use-module (crates-io))

(define-public crate-pico-lang-0.0.1 (c (n "pico-lang") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hashcow") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nats") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0") (d #t) (k 0)) (d (n "serde_regex") (r "^0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3") (d #t) (k 0)) (d (n "warp") (r "^0.2.4") (d #t) (k 0)))) (h "0a9ajwy8kbfh9p9dd7ppqkc5ppn5n0y40iddw5ppqpb56daapyvq")))

(define-public crate-pico-lang-0.0.3 (c (n "pico-lang") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "hashcow") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nats") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0") (d #t) (k 0)) (d (n "serde_regex") (r "^0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "valico") (r "^3") (d #t) (k 0)) (d (n "warp") (r "^0.2.4") (d #t) (k 0)))) (h "0gwkiicsdrmjlx5ba74r5sf040fi558qkgybfjx9gxc49viil041") (f (quote (("srv_nats") ("default"))))))

(define-public crate-pico-lang-0.0.4 (c (n "pico-lang") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "itertools") (r "^0") (d #t) (k 0)) (d (n "jsonpath_lib") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nats") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tinytemplate") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.2.4") (d #t) (k 0)))) (h "02yai6sgz2qf36i1508zl5ckg1xwic2bnbdgsixfl0gpcv6p4d8b") (f (quote (("srv_nats") ("default"))))))

