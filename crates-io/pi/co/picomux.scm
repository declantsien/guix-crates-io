(define-module (crates-io pi co picomux) #:use-module (crates-io))

(define-public crate-picomux-0.1.0 (c (n "picomux") (v "0.1.0") (d (list (d (n "ahash") (r "^0.8.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "argh") (r "^0.1") (d #t) (k 2)) (d (n "async-dup") (r "^1.2.4") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-io") (r "^2.3.1") (d #t) (k 0)) (d (n "async-task") (r "^4.7.0") (d #t) (k 0)) (d (n "async_io_stream") (r "^0.3.3") (d #t) (k 0)) (d (n "bipe") (r "^0.2.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("derive" "min_const_generics"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.1") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-lite") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("io"))) (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "recycle-box") (r "^0.2.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sillad") (r "^0.1") (d #t) (k 0)) (d (n "smol") (r "^2") (d #t) (k 2)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.4") (d #t) (k 0)) (d (n "socksv5") (r "^0.3") (d #t) (k 2)) (d (n "tachyonix") (r "^0.2.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 0)))) (h "0x5db6sqw97zj7jzfah5yi0h10q7q1z1yinmq59wmyfp38ag41g9")))

(define-public crate-picomux-0.1.1 (c (n "picomux") (v "0.1.1") (d (list (d (n "ahash") (r "^0.8.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "argh") (r "^0.1") (d #t) (k 2)) (d (n "async-channel") (r "^2.2.0") (d #t) (k 0)) (d (n "async-dup") (r "^1.2.4") (d #t) (k 0)) (d (n "async-event") (r "^0.1.0") (d #t) (k 0)) (d (n "async-io") (r "^2.3.1") (d #t) (k 0)) (d (n "async-task") (r "^4.7.0") (d #t) (k 0)) (d (n "async_io_stream") (r "^0.3.3") (d #t) (k 0)) (d (n "bipe") (r "^0.2.2") (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("derive" "min_const_generics"))) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.1") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-lite") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (f (quote ("io"))) (d #t) (k 0)) (d (n "oneshot") (r "^0.1.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "recycle-box") (r "^0.2.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sillad") (r "^0.1") (d #t) (k 0)) (d (n "smol") (r "^2") (d #t) (k 2)) (d (n "smol-timeout") (r "^0.6.0") (d #t) (k 0)) (d (n "smolscale") (r "^0.4.4") (d #t) (k 0)) (d (n "socksv5") (r "^0.3") (d #t) (k 2)) (d (n "tachyonix") (r "^0.2.1") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 0)))) (h "17r8y8s2sdz04ha34bdxjj2zzl05z6y4zq7ralmjxdjil68kx4vi")))

