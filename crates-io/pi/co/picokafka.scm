(define-module (crates-io pi co picokafka) #:use-module (crates-io))

(define-public crate-picokafka-0.1.0 (c (n "picokafka") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "17m80ws88arzjbhx36jfry57421a0z4291xxlb4jq9qg89inj6bn")))

(define-public crate-picokafka-0.1.1 (c (n "picokafka") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.28") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1wjmq4wa85bqq84z9kfwwvdsmpscd25q0n1mq88vnyiwhkfkscqs")))

(define-public crate-picokafka-0.1.2 (c (n "picokafka") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "07zdx5dffi7vm0vij29b41smjwxd8jmn776x3m0kmdmpjyi00xg2")))

(define-public crate-picokafka-0.1.3 (c (n "picokafka") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1zdm46xdqrwzkyyqjgpgdglpqvl1pagg2c9zfxv5wphh57vfcqpv")))

(define-public crate-picokafka-0.1.4 (c (n "picokafka") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "00ffdxdydly4bz68qayjv5x0q5pa4cnzmpgsp5gy11xsqqd7srlz")))

(define-public crate-picokafka-0.1.5 (c (n "picokafka") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build" "sasl" "ssl"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "0w5g7516jwibcl00y1pxk2i9yd3igbwi2l5lxf7nbjwd2xjlakpa")))

(define-public crate-picokafka-0.1.6 (c (n "picokafka") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "0il6jyagz7s57ff6na879cw0fqli0dk5q5zgcqgwvvxgy1z3jv44") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.2.0 (c (n "picokafka") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "tarantool") (r "^2.0.0") (f (quote ("picodata"))) (d #t) (k 0)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1igf261kjd57l88vjap3fqxfwwwr8ckx3p8jcgh39m9halz3ihgx") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.1.7 (c (n "picokafka") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "0gvgmrgndzn455ip1gpsaargdf4xv5689hqbm4mj0man91jxg8h0") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.1.8 (c (n "picokafka") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "0f2ncpzd0jr20xz37048mbjgq4sd06mb9pqlm0nhnf3y6877j3ap") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.1.9 (c (n "picokafka") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "10awazc13285zj2hx9g65r2jmajhb4ngzbjplfch175bm3511gkr") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.1.10 (c (n "picokafka") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "1vz6rygfxfhql2i1a6vcfnjgd7k57jwzan52ksss255m3bv2fj99") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.1.11 (c (n "picokafka") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.64") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.2") (d #t) (k 2)) (d (n "benchman") (r "^0.2.6") (d #t) (k 2)) (d (n "clap") (r "^3.2.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.35.0") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.144") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "00sx03xyyhn2vp423qxslssgyr5f8ipjk1myq1qbspj49r7wx6dx") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

(define-public crate-picokafka-0.3.0 (c (n "picokafka") (v "0.3.0") (d (list (d (n "async-stream") (r "^0.3.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rdkafka") (r "^0.36.2") (f (quote ("cmake-build"))) (d #t) (k 0)) (d (n "tarantool") (r "^4.0.0") (f (quote ("picodata"))) (d #t) (k 0)) (d (n "tokio") (r "^1.7.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)))) (h "0rl84s3wsdhpfn15x4abdiv5q5ja87d63hxk7sj0v9ms8hcflx48") (f (quote (("ssl" "rdkafka/ssl" "rdkafka/sasl"))))))

