(define-module (crates-io pi pr pipr) #:use-module (crates-io))

(define-public crate-pipr-0.0.8 (c (n "pipr") (v "0.0.8") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "config") (r "^0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.14") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "tui") (r "^0.8") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^3.1.1") (d #t) (k 0)))) (h "13qndm0vf8xgzlafx2zrqlvlg2b93blqn8j2fni0crkspdy7cx3y")))

(define-public crate-pipr-0.0.9 (c (n "pipr") (v "0.0.9") (d (list (d (n "config") (r "^0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^3.1.1") (d #t) (k 0)))) (h "0h1fafnvqsjagd5p6qjrbbgg5l7aigq9p23lb475bcdyp53zfs3f")))

(define-public crate-pipr-0.0.10 (c (n "pipr") (v "0.0.10") (d (list (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^3.1.1") (d #t) (k 0)))) (h "0hr37cwg32rf951rxfi17na35f45d5wp8112n06rxdmrs5309g5z")))

(define-public crate-pipr-0.0.11 (c (n "pipr") (v "0.0.11") (d (list (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^3.1.1") (d #t) (k 0)))) (h "0n624y9qzrdfsa2y9f1826kysdwcda8k51v0phfxfdfbiaivq6y3")))

(define-public crate-pipr-0.0.12 (c (n "pipr") (v "0.0.12") (d (list (d (n "ansi-parser") (r "^0.6") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.9") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "dirs") (r "^2.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.9") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^3.1.1") (d #t) (k 0)))) (h "03dip16qfa10j0f6i93imzh1f9c8n7pimaid4markg4wkplwyl3g")))

(define-public crate-pipr-0.0.13 (c (n "pipr") (v "0.0.13") (d (list (d (n "ansi-parser") (r "^0.6") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.10") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.10") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0mrzs3i33q5k4xvd84q219vmdqcpglwcrkcw8721r12i5kkia2q4")))

(define-public crate-pipr-0.0.14 (c (n "pipr") (v "0.0.14") (d (list (d (n "ansi-parser") (r "^0.6") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.10") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.10") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "084716s6xx1dz6kg704fazhc03zn7a1v1g7mafn9hfqyjahy2n4p")))

(define-public crate-pipr-0.0.15 (c (n "pipr") (v "0.0.15") (d (list (d (n "ansi-parser") (r "^0.6") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.10") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.10") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "0gdpficz4b4hrmz5h5cd7hhb2n040p6kxsa7sp9nhgjjp15iv923")))

(define-public crate-pipr-0.0.16 (c (n "pipr") (v "0.0.16") (d (list (d (n "ansi-parser") (r "^0.6") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "config") (r "^0.10") (f (quote ("toml"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.17") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "failure") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "syntect") (r "^4.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tui") (r "^0.10") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "which") (r "^4.0") (d #t) (k 0)))) (h "1pbwx9p96638vyzlwkz4mp9lkj1jwxvk47by7pi61gzcbnzxscpl")))

