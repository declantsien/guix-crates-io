(define-module (crates-io pi ng pingora) #:use-module (crates-io))

(define-public crate-pingora-0.0.0 (c (n "pingora") (v "0.0.0") (h "08wkp4sm870g7884lj98bql0r52fb4g9mclf9mn6i434xib4hppd")))

(define-public crate-pingora-0.1.0 (c (n "pingora") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 2)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "http") (r "^1.0.0") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (d #t) (k 2)) (d (n "hyperlocal") (r "^0.8") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "pingora-cache") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pingora-core") (r "^0.1.0") (d #t) (k 0)) (d (n "pingora-http") (r "^0.1.0") (d #t) (k 0)) (d (n "pingora-load-balancing") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pingora-proxy") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "pingora-timeout") (r "^0.1.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls"))) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 2)))) (h "179hawxx533zic3pa6psjnn7mjk1nwgj6hcay0dqspn0rm0li6yn") (f (quote (("proxy" "pingora-proxy") ("openssl" "pingora-core/openssl") ("lb" "pingora-load-balancing" "proxy") ("default" "openssl") ("cache" "pingora-cache") ("boringssl" "pingora-core/boringssl"))))))

(define-public crate-pingora-0.1.1 (c (n "pingora") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 2)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "http") (r "^1.0.0") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (d #t) (k 2)) (d (n "hyperlocal") (r "^0.8") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "pingora-cache") (r "^0.1.1") (o #t) (k 0)) (d (n "pingora-core") (r "^0.1.1") (k 0)) (d (n "pingora-http") (r "^0.1.1") (d #t) (k 0)) (d (n "pingora-load-balancing") (r "^0.1.1") (o #t) (k 0)) (d (n "pingora-proxy") (r "^0.1.1") (o #t) (k 0)) (d (n "pingora-timeout") (r "^0.1.1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls"))) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 2)))) (h "0grh54hmldk49k5a3s0q7vrszh2c12c7dazh4mi1pzniha4gafxf") (f (quote (("proxy" "pingora-proxy") ("lb" "pingora-load-balancing" "proxy") ("default" "openssl") ("cache" "pingora-cache")))) (s 2) (e (quote (("openssl" "pingora-core/openssl" "pingora-proxy?/openssl" "pingora-cache?/openssl" "pingora-load-balancing?/openssl") ("boringssl" "pingora-core/boringssl" "pingora-proxy?/boringssl" "pingora-cache?/boringssl" "pingora-load-balancing?/boringssl"))))))

(define-public crate-pingora-0.2.0 (c (n "pingora") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 2)) (d (n "bytes") (r "^1.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "http") (r "^1.0.0") (d #t) (k 2)) (d (n "hyper") (r "^0.14") (d #t) (k 2)) (d (n "hyperlocal") (r "^0.8") (d #t) (k 2)) (d (n "jemallocator") (r "^0.5") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "pingora-cache") (r "^0.2.0") (o #t) (k 0)) (d (n "pingora-core") (r "^0.2.0") (k 0)) (d (n "pingora-http") (r "^0.2.0") (d #t) (k 0)) (d (n "pingora-load-balancing") (r "^0.2.0") (o #t) (k 0)) (d (n "pingora-proxy") (r "^0.2.0") (o #t) (k 0)) (d (n "pingora-timeout") (r "^0.2.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls"))) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 2)))) (h "0f2f6g9a3cyql0xb4yvn3jkz9a896drhysbi7r1n4s3hf712xwcl") (f (quote (("proxy" "pingora-proxy") ("lb" "pingora-load-balancing" "proxy") ("default" "openssl") ("cache" "pingora-cache")))) (s 2) (e (quote (("openssl" "pingora-core/openssl" "pingora-proxy?/openssl" "pingora-cache?/openssl" "pingora-load-balancing?/openssl") ("boringssl" "pingora-core/boringssl" "pingora-proxy?/boringssl" "pingora-cache?/boringssl" "pingora-load-balancing?/boringssl"))))))

