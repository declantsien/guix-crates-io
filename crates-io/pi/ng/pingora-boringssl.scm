(define-module (crates-io pi ng pingora-boringssl) #:use-module (crates-io))

(define-public crate-pingora-boringssl-0.1.0 (c (n "pingora-boringssl") (v "0.1.0") (d (list (d (n "boring") (r "^4.5") (f (quote ("pq-experimental"))) (d #t) (k 0)) (d (n "boring-sys") (r "^4.5") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "1fcky3w2294kf6jj9awgm4ddsc9h0vcpi90iyv855xd4mm1g6r35") (f (quote (("read_uninit") ("pq_use_second_keyshare") ("default"))))))

(define-public crate-pingora-boringssl-0.1.1 (c (n "pingora-boringssl") (v "0.1.1") (d (list (d (n "boring") (r "^4.5") (f (quote ("pq-experimental"))) (d #t) (k 0)) (d (n "boring-sys") (r "^4.5") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0dana8i8i867zp5b98sfxxn0qfnyv78ai28iz44wnccgfxcklg0i") (f (quote (("read_uninit") ("pq_use_second_keyshare") ("default"))))))

(define-public crate-pingora-boringssl-0.2.0 (c (n "pingora-boringssl") (v "0.2.0") (d (list (d (n "boring") (r "^4.5") (f (quote ("pq-experimental"))) (d #t) (k 0)) (d (n "boring-sys") (r "^4.5") (d #t) (k 0)) (d (n "foreign-types-shared") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "libc") (r "^0.2.70") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)))) (h "0a14df6s7gj0jn0yqbbnv13598545zmicd720k3blq7974lxdlkr") (f (quote (("read_uninit") ("pq_use_second_keyshare") ("default"))))))

