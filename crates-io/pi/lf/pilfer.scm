(define-module (crates-io pi lf pilfer) #:use-module (crates-io))

(define-public crate-pilfer-0.3.2 (c (n "pilfer") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.67") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "discord-rich-presence") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "todel") (r "^0.3.2") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.2") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0scargjl9a06wrz7v2whp8w2hd2l8p597qy68akwswkh5rfk4ggs")))

(define-public crate-pilfer-0.3.3 (c (n "pilfer") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0.67") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (d #t) (k 0)) (d (n "discord-rich-presence") (r "^0.2.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "notify-rust") (r "^4.5.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "todel") (r "^0.3.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.17.2") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1sq83h34gap5w10mbmcnljxjg26mf4zpvj93zy4x5mwy8vgyq36a")))

