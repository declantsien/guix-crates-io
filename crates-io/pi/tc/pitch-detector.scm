(define-module (crates-io pi tc pitch-detector) #:use-module (crates-io))

(define-public crate-pitch-detector-0.1.0 (c (n "pitch-detector") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "apodize") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fitting") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.74") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 2)))) (h "0bjsl1gjjvpyq88hl3fncmcg589g838y4xvw0shz6fmdrvfmq6la") (f (quote (("test_utils" "serde" "serde_json"))))))

(define-public crate-pitch-detector-0.3.0 (c (n "pitch-detector") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "apodize") (r "^1.0.0") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.7") (d #t) (k 0)) (d (n "fitting") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "peak_finder") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.74") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 2)))) (h "1jigalqqk8gc77f0zdc3vdywfwfjdkxxh4piyl01j3znzccisl2h") (f (quote (("test_utils" "serde" "serde_json") ("plot" "plotters") ("hinted" "peak_finder"))))))

(define-public crate-pitch-detector-0.3.1 (c (n "pitch-detector") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "apodize") (r "^1.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "fitting") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "float-cmp") (r "^0.9.0") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "peak_finder") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rustfft") (r "^6.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.74") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 2)))) (h "0yxh3jdlgdpr0z6m333h1grls8g717rs9k4fy441lh9qz7cfc5cc") (f (quote (("test_utils" "serde" "serde_json" "float-cmp") ("plot" "plotters") ("hinted" "peak_finder"))))))

