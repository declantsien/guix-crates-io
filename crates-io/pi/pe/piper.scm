(define-module (crates-io pi pe piper) #:use-module (crates-io))

(define-public crate-piper-0.1.0 (c (n "piper") (v "0.1.0") (h "0zmaddis8sldx82d68ryg5qsrplad13a8c1jpnkkg7nmf1x470sz")))

(define-public crate-piper-0.1.1 (c (n "piper") (v "0.1.1") (d (list (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (k 0)))) (h "1apbb3kjh0r1cq8kgqvhhsfbf6c251xr4xa42laj5n07lip2mmn6")))

(define-public crate-piper-0.1.2 (c (n "piper") (v "0.1.2") (d (list (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (k 2)) (d (n "futures-io") (r "^0.3.5") (f (quote ("std"))) (k 0)) (d (n "futures-sink") (r "^0.3.5") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (k 0)))) (h "1j3asvjdsqb3snhq36ikkksipjr37yz8sskwmal3p1vfyijyn3bb")))

(define-public crate-piper-0.1.3 (c (n "piper") (v "0.1.3") (d (list (d (n "crossbeam-utils") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (k 2)) (d (n "futures-io") (r "^0.3.5") (f (quote ("std"))) (k 0)) (d (n "futures-sink") (r "^0.3.5") (f (quote ("std"))) (k 0)) (d (n "futures-util") (r "^0.3.5") (f (quote ("std"))) (k 0)))) (h "062zdv9w7l5037g113bh7r72wmygz92ajzr0z41v3bqdd3x8nq01")))

(define-public crate-piper-0.2.0 (c (n "piper") (v "0.2.0") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (k 2)) (d (n "async-io") (r "^1.13.0") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "easy-parallel") (r "^3.2.0") (d #t) (k 2)) (d (n "fastrand") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "futures-io") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")))) (h "0f8x39dwy3vy5pbbn40sxiraaihc407wp6bcszbfkvf366ax6gjn") (f (quote (("std" "fastrand" "futures-io") ("portable-atomic" "atomic-waker/portable-atomic" "portable_atomic_crate" "portable-atomic-util") ("default" "std")))) (r "1.36")))

(define-public crate-piper-0.2.1 (c (n "piper") (v "0.2.1") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (k 2)) (d (n "async-io") (r "^1.13.0") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "easy-parallel") (r "^3.2.0") (d #t) (k 2)) (d (n "fastrand") (r "^2.0.0") (k 0)) (d (n "futures-io") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")))) (h "1m45fkdq7q5l9mv3b0ra10qwm0kb67rjp2q8y91958gbqjqk33b6") (f (quote (("std" "fastrand/std" "futures-io") ("portable-atomic" "atomic-waker/portable-atomic" "portable_atomic_crate" "portable-atomic-util") ("default" "std")))) (r "1.36")))

(define-public crate-piper-0.2.2 (c (n "piper") (v "0.2.2") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (k 2)) (d (n "async-io") (r "^2.0.0") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "easy-parallel") (r "^3.2.0") (d #t) (k 2)) (d (n "fastrand") (r "^2.0.0") (k 0)) (d (n "futures-io") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "portable-atomic-util") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")))) (h "1bxgm1b56qbpfvyazixdw676bmddqkgcqlylnpmi6ywicp3b0ka6") (f (quote (("std" "fastrand/std" "futures-io") ("portable-atomic" "atomic-waker/portable-atomic" "portable_atomic_crate" "portable-atomic-util") ("default" "std")))) (r "1.37")))

(define-public crate-piper-0.2.3 (c (n "piper") (v "0.2.3") (d (list (d (n "async-channel") (r "^2.0.0") (d #t) (k 2)) (d (n "async-executor") (r "^1.5.1") (d #t) (k 2)) (d (n "async-io") (r "^2.0.0") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "easy-parallel") (r "^3.2.0") (d #t) (k 2)) (d (n "fastrand") (r "^2.0.0") (k 0)) (d (n "futures-io") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "portable-atomic-util") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")))) (h "14a3kgpj4lpsa09z9a4dwk1p9nf793bh7mcg7q6hfvw7r5s5q7df") (f (quote (("std" "fastrand/std" "futures-io") ("portable-atomic" "atomic-waker/portable-atomic" "portable_atomic_crate" "portable-atomic-util") ("default" "std")))) (r "1.36")))

