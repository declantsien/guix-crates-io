(define-module (crates-io pi pe pipewire-wrapper) #:use-module (crates-io))

(define-public crate-pipewire-wrapper-0.1.0 (c (n "pipewire-wrapper") (v "0.1.0") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "09dzn9j6s7gx7ravv50fjcimj69pzbar4vx0nzpfyxkcg36yv8nr")))

(define-public crate-pipewire-wrapper-0.1.1 (c (n "pipewire-wrapper") (v "0.1.1") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "0j868v6bhcfiyp2n15kw1icd5qwadkf144zkfb7d64782gszn4as")))

(define-public crate-pipewire-wrapper-0.1.2 (c (n "pipewire-wrapper") (v "0.1.2") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0.1.1") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "18mq04f2x8dvi8yphpl4l3ni69xfhf5v7cl03912ni13fllkw7zb")))

(define-public crate-pipewire-wrapper-0.1.3 (c (n "pipewire-wrapper") (v "0.1.3") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0.1.1") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "05l009prpxxn82p30iaigff7rdmmrcnic2fajj6cg1rl6230bkaw") (f (quote (("spa-pod-object-info") ("spa-pod-object-builders") ("default" "spa-pod-object-info" "spa-pod-object-builders"))))))

(define-public crate-pipewire-wrapper-0.1.4 (c (n "pipewire-wrapper") (v "0.1.4") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0.1.1") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0.1.1") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "01016iwha76nrndpnqmbn90nrb2gxslm31498290jy6nf0g3z2nx") (f (quote (("spa-pod-object-info") ("spa-pod-object-builders") ("default" "spa-pod-object-info" "spa-pod-object-builders"))))))

(define-public crate-pipewire-wrapper-0.1.5 (c (n "pipewire-wrapper") (v "0.1.5") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0.1.2") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "0wl8vbvrl0chcm3lrqi8m85fkxv5mmmrhnx71idchpwzyw5ci3d4") (f (quote (("spa-pod-object-info") ("spa-pod-object-builders") ("default" "spa-pod-object-info" "spa-pod-object-builders"))))))

(define-public crate-pipewire-wrapper-0.1.6 (c (n "pipewire-wrapper") (v "0.1.6") (d (list (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "pipewire-wrapper-macro-impl") (r "^0.1.2") (d #t) (k 0)) (d (n "pipewire-wrapper-proc-macro") (r "^0.1.2") (d #t) (k 0)) (d (n "pw_sys") (r "^0.6.0") (d #t) (k 0) (p "pipewire-sys")) (d (n "signal-hook") (r "^0.3.15") (d #t) (k 2)) (d (n "spa_sys") (r "^0.6.0") (d #t) (k 0) (p "libspa-sys")))) (h "0svdn7wjbryxza2dqa7kb9f515g4sx2qhbv7851ansafsgv3j7j5") (f (quote (("state") ("spa-pod-object-info") ("spa-pod-object-builders") ("default" "spa-pod-object-info" "spa-pod-object-builders"))))))

