(define-module (crates-io pi qe piqel) #:use-module (crates-io))

(define-public crate-piqel-0.202107.2 (c (n "piqel") (v "0.202107.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bat") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (f (quote ("serde"))) (k 0)) (d (n "parse-display") (r "^0.5.0") (d #t) (k 0)) (d (n "polars") (r "^0.14.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_partiql") (r "^1.1.64") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1dpykndf5rp7rxwxyhicqdwdfs3vl386k36zcwbq65fjmiy9yq6m") (f (quote (("table" "polars") ("default") ("cli" "bat" "structopt"))))))

(define-public crate-piqel-0.202107.3 (c (n "piqel") (v "0.202107.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bat") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (f (quote ("serde"))) (k 0)) (d (n "parse-display") (r "^0.5.0") (d #t) (k 0)) (d (n "polars") (r "^0.14.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_partiql") (r "^1.1.64") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "0wb5lilrkldd2ic7vk2g0lkn5lnkavyhgxzf1489zywal3af61al") (f (quote (("table" "polars") ("default") ("cli" "bat" "structopt"))))))

(define-public crate-piqel-0.202107.4 (c (n "piqel") (v "0.202107.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bat") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "collect-mac") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (f (quote ("serde"))) (k 0)) (d (n "parse-display") (r "^0.5.0") (d #t) (k 0)) (d (n "polars") (r "^0.14.2") (f (quote ("json"))) (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_partiql") (r "^1.1.64") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.17") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)))) (h "1hkzlk6rcl0mngnpiaqqxavmxccpp3aqbs70wf8g00aik66cmlkn") (f (quote (("table" "polars") ("default") ("cli" "bat" "structopt"))))))

