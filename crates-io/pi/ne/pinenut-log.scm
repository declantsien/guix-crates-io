(define-module (crates-io pi ne pinenut-log) #:use-module (crates-io))

(define-public crate-pinenut-log-0.0.1 (c (n "pinenut-log") (v "0.0.1") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("clock" "std"))) (k 0)) (d (n "cipher") (r "^0.4.4") (f (quote ("block-padding"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("alloc" "ecdh"))) (k 0)) (d (n "pinenut-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (k 0)))) (h "0p2r1xz4ppld5hvcd1g5m1ja39mz5fxi9f416s5ych3j0cyzz00x")))

(define-public crate-pinenut-log-0.0.2 (c (n "pinenut-log") (v "0.0.2") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 0)) (d (n "base64") (r "^0.21.3") (f (quote ("alloc"))) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("clock" "std"))) (k 0)) (d (n "cipher") (r "^0.4.4") (f (quote ("block-padding"))) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 0)) (d (n "p256") (r "^0.13.2") (f (quote ("alloc" "ecdh"))) (k 0)) (d (n "pinenut-derive") (r "^0.0.1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (f (quote ("getrandom"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "zstd-safe") (r "^7.0.0") (k 0)))) (h "10b7q8hs1b588axgcabzkh90gnrpd4qs5bj6v4m0il0pvdyssfy1")))

