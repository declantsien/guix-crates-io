(define-module (crates-io pi _e pi_ecs) #:use-module (crates-io))

(define-public crate-pi_ecs-0.1.0 (c (n "pi_ecs") (v "0.1.0") (d (list (d (n "fixedbitset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^0.1") (d #t) (k 0)) (d (n "pi_any") (r "^0.1") (d #t) (k 0)) (d (n "pi_async") (r "^0.1") (d #t) (k 0)) (d (n "pi_async_graph") (r "^0.1") (d #t) (k 0)) (d (n "pi_atom") (r "^0.1") (d #t) (k 0)) (d (n "pi_debug_info") (r "^0.1") (d #t) (k 0)) (d (n "pi_dirty") (r "^0.1") (d #t) (k 0)) (d (n "pi_ecs_macros") (r "^0.1") (d #t) (k 0)) (d (n "pi_graph") (r "^0.1") (d #t) (k 0)) (d (n "pi_hash") (r "^0.1") (d #t) (k 0)) (d (n "pi_listener") (r "^0.1") (d #t) (k 0)) (d (n "pi_map") (r "^0.1") (d #t) (k 0)) (d (n "pi_share") (r "^0.1") (d #t) (k 0)) (d (n "pi_slab") (r "^0.1") (d #t) (k 0)) (d (n "pi_slotmap") (r "^0.1") (d #t) (k 0)) (d (n "pi_time") (r "^0.1") (d #t) (k 0)) (d (n "pi_tree") (r "^0.1") (d #t) (k 0)) (d (n "pi_wy_rng") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09ic1ia7hcfxbs0lph9122fv432hl2xrc7j4laxk1xc9j6f18jjd")))

