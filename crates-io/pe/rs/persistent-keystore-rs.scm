(define-module (crates-io pe rs persistent-keystore-rs) #:use-module (crates-io))

(define-public crate-persistent-keystore-rs-0.0.0 (c (n "persistent-keystore-rs") (v "0.0.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tokio") (r "^1.14.0") (f (quote ("rt-multi-thread" "net" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "08599dyvhbwhm4wz55jwp3jvcx2grv8l5sxd26aznr4xi8a8jh0f") (y #t)))

(define-public crate-persistent-keystore-rs-0.0.1 (c (n "persistent-keystore-rs") (v "0.0.1") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "16bkpiycaigljkxhmagw4222kgd8x5xqg87i5fbjdcw2dkkkl48l")))

(define-public crate-persistent-keystore-rs-0.0.2 (c (n "persistent-keystore-rs") (v "0.0.2") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "1wvlzbmbld6py08a6l9mj5zq030b5fcafv7bxn9cf533f10wljil")))

(define-public crate-persistent-keystore-rs-0.0.3 (c (n "persistent-keystore-rs") (v "0.0.3") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "01n8x5hiqx6042axwqdv5anr59x64ca9nhkfm64ir70mcy0hh20p") (y #t)))

(define-public crate-persistent-keystore-rs-0.0.4 (c (n "persistent-keystore-rs") (v "0.0.4") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "0f42b8vkwykdac1h8q191px94sj4mi31sxwyapsk8nkd033sfngl")))

(define-public crate-persistent-keystore-rs-0.0.5 (c (n "persistent-keystore-rs") (v "0.0.5") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "1pmvgzvg854ycyal0hmvhdavz9zp1960vpfa1i8llzq48x3gnqgc") (f (quote (("mocks"))))))

(define-public crate-persistent-keystore-rs-0.0.6 (c (n "persistent-keystore-rs") (v "0.0.6") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "0xsr4palnbciclnv360m8d26iwafzmxsvv6wfgiryc8j55j4z319") (f (quote (("mocks" "mockall"))))))

(define-public crate-persistent-keystore-rs-0.0.7 (c (n "persistent-keystore-rs") (v "0.0.7") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "0kwdhybbfqsjy0hbprpglg8p7nslwqvv8khrqssgw667x96h8n96") (f (quote (("mocks" "mockall"))))))

(define-public crate-persistent-keystore-rs-0.0.8 (c (n "persistent-keystore-rs") (v "0.0.8") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.2") (f (quote ("safe-encode" "safe-decode" "checked-decode"))) (d #t) (k 0)) (d (n "mockall") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log-always"))) (d #t) (k 0)))) (h "1ic4qr7p0ccxs1fnmjsbmwiggmq7vrji2mwaw5ra5brr7y012l6s") (f (quote (("mocks" "mockall"))))))

