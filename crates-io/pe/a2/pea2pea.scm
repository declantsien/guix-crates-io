(define-module (crates-io pe a2 pea2pea) #:use-module (crates-io))

(define-public crate-pea2pea-0.1.0 (c (n "pea2pea") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "067vkkgizadnsh5knybzcfzcsrbhcbrqk2pbvl08yz2hw6jy31ra")))

(define-public crate-pea2pea-0.2.0 (c (n "pea2pea") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "tokio") (r "^0.3") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0zh2xgwn36var12bq03wvrr04dxi5qrk4rh0l46hcndfy2pb4aym")))

(define-public crate-pea2pea-0.3.0 (c (n "pea2pea") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0r78z3hhx09pqglx2ackiq9gnq4jry6960npxh9f3pclaw8zns05")))

(define-public crate-pea2pea-0.4.0 (c (n "pea2pea") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "12xp21mcb0jc5l5qmamjcqkxnhm88rlpk271nv8w3zc8cndlva3s")))

(define-public crate-pea2pea-0.5.0 (c (n "pea2pea") (v "0.5.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "1b8amcsxs892ckq043fyfzbabws1nrkkb9zcq16b31817s3p4lh0")))

(define-public crate-pea2pea-0.6.0 (c (n "pea2pea") (v "0.6.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0l5gk3hnw51m747flq9mhkfbi05y24niiaaipc7bmaaa2bln85vd")))

(define-public crate-pea2pea-0.7.0 (c (n "pea2pea") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0jhv4r8j2gy4k2bbamh38k3809scaday8gdq7hx8y685pvp0m1gp")))

(define-public crate-pea2pea-0.8.0 (c (n "pea2pea") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0vrwszqlhm01pss3j7ni0qcd2gslknzcxxxp6xwvhycj7h89z10z")))

(define-public crate-pea2pea-0.8.1 (c (n "pea2pea") (v "0.8.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0wz20795yljfcqpr7zvlnc4qwk6bia7kars53sri017jxyw7ibgp")))

(define-public crate-pea2pea-0.9.0 (c (n "pea2pea") (v "0.9.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0jwh7bsf0qhrjyjg9f6c23mp5g04ad72kwmav860llcdb3mhjkz4")))

(define-public crate-pea2pea-0.10.0 (c (n "pea2pea") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "1zj7xyzqc6z5aaxsyplfilprdjnpnbyndrk2val962qm3hbh3xmi")))

(define-public crate-pea2pea-0.11.0 (c (n "pea2pea") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0a54k30vkrknfv323vmn8238pcbp36jb423sixmai87r27vh1cbl")))

(define-public crate-pea2pea-0.12.0 (c (n "pea2pea") (v "0.12.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "1ardihrmmmhqhyndp8cmrjmnz7mf9s1qq7cwny2w9g1qrp3b29c0")))

(define-public crate-pea2pea-0.13.0 (c (n "pea2pea") (v "0.13.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "1klkjg167ygwmdmwbljsy3qqc9nzwl7vdyl2b4vq38p1wsbrbssd")))

(define-public crate-pea2pea-0.13.1 (c (n "pea2pea") (v "0.13.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0bmay804320cdcxghvqmbh67h2dpr5z8jq0nss6jmqi4q4baf6nq")))

(define-public crate-pea2pea-0.14.0 (c (n "pea2pea") (v "0.14.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0nr03ylw2kma4gvkhc7mvvvz3pprcdsyzgv2gzr4flviahl0d60i")))

(define-public crate-pea2pea-0.15.0 (c (n "pea2pea") (v "0.15.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0bx34c2hbgh7n5l2zf7f5vflv9cpgjg6aw4srfjz7vn7y11l3smi")))

(define-public crate-pea2pea-0.16.0 (c (n "pea2pea") (v "0.16.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0sxhlxrr80vg33jg1vgw5wjk5wx5z5j4m5snx2pd35wf9qk0qp2y")))

(define-public crate-pea2pea-0.16.1 (c (n "pea2pea") (v "0.16.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "10byvi32ln4g5zgrbbchskz2bnpqmn5jdw0l08739ry8ka0jlsyb")))

(define-public crate-pea2pea-0.16.2 (c (n "pea2pea") (v "0.16.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0nczwb40kwsbpmlld7dn3a92b8fg34wxcy10v734dk05ynxjpv5k")))

(define-public crate-pea2pea-0.16.3 (c (n "pea2pea") (v "0.16.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "077w3v34mv40xnw4n28y5bifzvxibnvnd6f2d6f56nw5fbjgd5dz")))

(define-public crate-pea2pea-0.16.4 (c (n "pea2pea") (v "0.16.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "0iy82pqpaa72f8ygaz4m77d232gn0dkymgqw9kzqzy04nhl3250a")))

(define-public crate-pea2pea-0.17.0 (c (n "pea2pea") (v "0.17.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (d #t) (k 2)))) (h "136vhnr3gr2yy7xw39q9677p1qpiadck71vpdvf0j8r2iymm7h4c")))

(define-public crate-pea2pea-0.17.1 (c (n "pea2pea") (v "0.17.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "chrono" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "19j17vbzzg583l5w7ialdj0zfqvxi8w2cp02m2zlb0v1pvc8xcih")))

(define-public crate-pea2pea-0.17.2 (c (n "pea2pea") (v "0.17.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0yjnrkc06wgn0wkxxkxv3b1fvmkclz0ll0gj91q47i5vaj6gy6li")))

(define-public crate-pea2pea-0.18.0 (c (n "pea2pea") (v "0.18.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0q2viy2y7zd402527n6fakn4cch5mxjk56dhi2nf1igv66siip6r")))

(define-public crate-pea2pea-0.18.1 (c (n "pea2pea") (v "0.18.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "06qk8bqc2m852iz4mwd4vnn0dc0lsxvcd03wdw6b88wi577mayf5")))

(define-public crate-pea2pea-0.19.0 (c (n "pea2pea") (v "0.19.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "11c91cpgq40isdifjp3xbrnmc2g8314131i7fzzb71y1c7b3rf15")))

(define-public crate-pea2pea-0.19.1 (c (n "pea2pea") (v "0.19.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "145fpmj6xxmdpc0w0657fa639zqnxf54dnb2zbapakk5lnbb9xjn")))

(define-public crate-pea2pea-0.20.0 (c (n "pea2pea") (v "0.20.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "086zz4s31ffv4bzqa9lcryp9q7i9rllvhk2rf2sj8r0mz7yrm5r3")))

(define-public crate-pea2pea-0.20.1 (c (n "pea2pea") (v "0.20.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0jsbjgqzbbcai79j5l019fxjqb5yfqirwcbcl0qiskc46c5zv8xm")))

(define-public crate-pea2pea-0.20.2 (c (n "pea2pea") (v "0.20.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1fj4zcxxkc9xfzpmh6980bkvjbpzjpaw8sxd5z41cl32m2l1d81h")))

(define-public crate-pea2pea-0.20.3 (c (n "pea2pea") (v "0.20.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1cggd6rqvijzwz55z9fkhqnhp77rh08w2s6n428rfjjcyc5f7dh0")))

(define-public crate-pea2pea-0.21.0 (c (n "pea2pea") (v "0.21.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1dzkakk6a1s0mpfz6b5cxjp6kdqsqhql8fhscwakznpc935az3cn")))

(define-public crate-pea2pea-0.21.1 (c (n "pea2pea") (v "0.21.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1s30nia6xzm9yxzrlj8r11mhlfzr4i46k81sfrhz7hd36cwjs1cv")))

(define-public crate-pea2pea-0.22.0 (c (n "pea2pea") (v "0.22.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1pa75yhk3zpgrs1pysri63xyk4hyxgg6jd68kpj0q7f8agks31k1")))

(define-public crate-pea2pea-0.23.0 (c (n "pea2pea") (v "0.23.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0pl0hmh2p4cmcinkf0hbci29bn838bj653af1gc4xd1iwjswa3rr") (f (quote (("test"))))))

(define-public crate-pea2pea-0.24.0 (c (n "pea2pea") (v "0.24.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1i3f7n8argy30x1h5s0wdg59rk85sfyndmlbjqwpyfb6xrf13nnk") (f (quote (("test"))))))

(define-public crate-pea2pea-0.25.0 (c (n "pea2pea") (v "0.25.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0zs4pgy0j8lizvl3gv65xlq1lrv5ilr503n9ldll9f3kh5s9icc0") (f (quote (("test"))))))

(define-public crate-pea2pea-0.26.0 (c (n "pea2pea") (v "0.26.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0afvvrf4svl6340n7wzh04p4lywhs6gwji2hpsf8b24hizx7vn58") (f (quote (("test"))))))

(define-public crate-pea2pea-0.26.1 (c (n "pea2pea") (v "0.26.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0wrwbi3aqkpzhxg7vmksvd8hlgs72s854zzqajdnhb58c8whfmv9") (f (quote (("test"))))))

(define-public crate-pea2pea-0.27.0 (c (n "pea2pea") (v "0.27.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1gp4qw09mzvhrxnsyyrcmg2qk5s94bks6bciprcck5v0phf38l13") (f (quote (("test"))))))

(define-public crate-pea2pea-0.27.1 (c (n "pea2pea") (v "0.27.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1y16pa7kaa4i40p73iv34893xyxbknpqwc216lby5p9ssip8ig20") (f (quote (("test"))))))

(define-public crate-pea2pea-0.28.0 (c (n "pea2pea") (v "0.28.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.10") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1axks68sswhi0wx04cmnn58qhzg6sbm90sql88f2pnifc7g6grvh") (f (quote (("test"))))))

(define-public crate-pea2pea-0.29.0 (c (n "pea2pea") (v "0.29.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0hfnymxpg6qq1r6rv4nwawr9w0f87almr4fk6n72iv1yy8299byj") (f (quote (("test"))))))

(define-public crate-pea2pea-0.30.0 (c (n "pea2pea") (v "0.30.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0bdxzqzr0nbj2bwqi7584h8s328l0j3rd9339rnb6wa21kyz9f6x") (f (quote (("test"))))))

(define-public crate-pea2pea-0.31.0 (c (n "pea2pea") (v "0.31.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0d5qhrn2yfid6xhm363bl601hdlfl7dxhg3l49kkg8f3pg30r1iq") (f (quote (("test"))))))

(define-public crate-pea2pea-0.32.0 (c (n "pea2pea") (v "0.32.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "17r82rrr2d2x1mks1jn6z1wzszj983bpf94bya9dzdbnn0iprc8f") (f (quote (("test"))))))

(define-public crate-pea2pea-0.33.0 (c (n "pea2pea") (v "0.33.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "04dxg30mi04yals9kalg9dlaaby70glh881cikqgwsm126if93rl") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.34.0 (c (n "pea2pea") (v "0.34.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0zhz745c58g3imwg6jr6hvnnp0b3wqs9xxyy4i721dhi6fpgx40d") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.35.0 (c (n "pea2pea") (v "0.35.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1isaph8jjdh02k7f34csyw6jklkg7izj4rgyfng1a44ws76myzlx") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.35.1 (c (n "pea2pea") (v "0.35.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "13sgg1i2pvigjddglfmy81x533xmi77m89b1w7kr2pa76sdida5s") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.36.0 (c (n "pea2pea") (v "0.36.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0fm6ji21cxgmbc9cscf4h13kgxp39zabx5avc2ar9f8s1752zwsw") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.37.0 (c (n "pea2pea") (v "0.37.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "04d5srf1vkvkkglms6ibp1h3j3d88ph61ilk0jyajg9x68wmknah") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.38.0 (c (n "pea2pea") (v "0.38.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0a9zi4fpp86a4j4jd4ljg46m52jpjmcxbfvk0vlqx5sbk6xgfav5") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.39.0 (c (n "pea2pea") (v "0.39.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1yqbs4sddhpxl1pn78j53nclkv9hf9l97yf1jwwqrhqw0f9cy48g") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.40.0 (c (n "pea2pea") (v "0.40.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46") (f (quote ("noise" "ping" "tcp-tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.10") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1a3hfjas90ffpcl2ra1dgm6zsspzb17ka3jdjig5mjzhi260vvdp") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.41.0 (c (n "pea2pea") (v "0.41.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0d8qdb7fh9ah184s6illaya9k303bxvlkzk1knfs7bzjk71i9vs4") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.42.0 (c (n "pea2pea") (v "0.42.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0j5py3b5lawqn18v3755nsy30zfpd7z1c4pygrb7naa2fvhahg6w") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.43.0 (c (n "pea2pea") (v "0.43.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0v2s72vqhgdz0ls61i4smpc121vj4z83mpxbz5jr6cp980khjaqz") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.44.0 (c (n "pea2pea") (v "0.44.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.14") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.14") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1l4ijy521af2xwl9gh60ggxkybbjm2ivhmfmhm893q4fgx9yyl4i") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.45.0 (c (n "pea2pea") (v "0.45.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.50") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "0hp3hj0lsgiz9kqj31vypgqp6jfwn8p318nj8zbpn3h1bqrpc270") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.46.0 (c (n "pea2pea") (v "0.46.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1wjm4kcyhx42prddkzqg78520xm2h7r7ckfwjdxr8w89ngv1y1di") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.47.0 (c (n "pea2pea") (v "0.47.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1l083x3ngw4yn4ywn1jc8r7zdfi233p4g7f9zck652vv7wc6sfby") (f (quote (("test")))) (r "1.56")))

(define-public crate-pea2pea-0.48.0 (c (n "pea2pea") (v "0.48.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)))) (h "1mqzfphgqbcm6j28plr38j4vrqw9rcbf4pxm7kphhc98xqa4xyig") (f (quote (("test")))) (r "1.70")))

(define-public crate-pea2pea-0.49.0 (c (n "pea2pea") (v "0.49.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "deadline") (r "^0.2") (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("sink"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("macros" "noise" "ping" "tcp" "tokio" "yamux"))) (k 2)) (d (n "native-tls") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "peak_alloc") (r "^0.2") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("getrandom" "small_rng"))) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "snow") (r "^0.9") (d #t) (k 2)) (d (n "test-cert-gen") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^1.24") (f (quote ("io-util" "net" "parking_lot" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-native-tls") (r "^0.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "parking_lot" "smallvec"))) (k 2)) (d (n "unsigned-varint") (r "^0.8") (f (quote ("codec" "futures"))) (d #t) (k 2)))) (h "14bi411ifl01j2b0kj5hh13lcnihr359b4yfkcvlqaid3p2vk3ch") (f (quote (("test")))) (r "1.75")))

