(define-module (crates-io pe pp peppi) #:use-module (crates-io))

(define-public crate-peppi-1.0.0-alpha (c (n "peppi") (v "1.0.0-alpha") (d (list (d (n "arrow") (r "^4.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "04s3bv5i7mvsjk8b9jlgw9hrbd8r0z854vm4rnwzih42nh6b7zbd")))

(define-public crate-peppi-1.0.0-alpha.1 (c (n "peppi") (v "1.0.0-alpha.1") (d (list (d (n "arrow") (r "^4.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0mrpfgl0nia57rcv3i476a4yvgdszkr886zvapxr9s3m3lz3fvsm")))

(define-public crate-peppi-1.0.0-alpha.2 (c (n "peppi") (v "1.0.0-alpha.2") (d (list (d (n "arrow") (r "^4.2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "peppi-arrow") (r "^0.1.0") (d #t) (k 0)) (d (n "peppi-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1zp5bxp3js1r2dscvmja0r6z3n4wa1zmg8i49bws34qwb3846qfi")))

(define-public crate-peppi-1.0.0-alpha.3 (c (n "peppi") (v "1.0.0-alpha.3") (d (list (d (n "arrow") (r "^4.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "peppi-arrow") (r "^0.2.0") (d #t) (k 0)) (d (n "peppi-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1vg260dhxqb50614kgjlrvh71pkgikhlsd1z4rs3nil4p2dnvipb")))

(define-public crate-peppi-1.0.0-alpha.4 (c (n "peppi") (v "1.0.0-alpha.4") (d (list (d (n "arrow") (r "^5.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "peppi-arrow") (r "^0.2.1") (d #t) (k 0)) (d (n "peppi-derive") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "07251nhxba5q1ga5dslcxy5qh45bz3l2ajh1vyffq6196g25h5gg")))

(define-public crate-peppi-1.0.0-alpha.5 (c (n "peppi") (v "1.0.0-alpha.5") (d (list (d (n "arrow") (r "^5.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "peppi-arrow") (r "^0.2.2") (d #t) (k 0)) (d (n "peppi-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "10ardvqdmb6032vmr91snp1xhw5r5mxzvmj4r6ijk3g8kqwdh540")))

(define-public crate-peppi-1.0.0-alpha.6 (c (n "peppi") (v "1.0.0-alpha.6") (d (list (d (n "arrow") (r "^6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "peppi-arrow") (r "^0.2.3") (d #t) (k 0)) (d (n "peppi-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1c5lrv638b7z0c0in6dn4kbqcvn9gn1i6c1q22al2sl19wmq3s6b")))

(define-public crate-peppi-2.0.0-alpha.1 (c (n "peppi") (v "2.0.0-alpha.1") (d (list (d (n "arrow2") (r "^0.18") (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 2)))) (h "1s7z09i7a3gmn93r8nn6rqz530llhvx19f9sk5hsw09j1h0qxjz5")))

(define-public crate-peppi-2.0.0-alpha.2 (c (n "peppi") (v "2.0.0-alpha.2") (d (list (d (n "arrow2") (r "^0.18") (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.8") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)))) (h "1f3bibdd7y4ixc26wwd90m9wgl98271babng4ql1q4v0n4j1h2hm")))

(define-public crate-peppi-2.0.0-alpha.3 (c (n "peppi") (v "2.0.0-alpha.3") (d (list (d (n "arrow2") (r "^0.18") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1hx9l6iipcrd5vx8gz4fpw9rw0zgj0bliv6c2xbh4gfpmn18c5bh")))

(define-public crate-peppi-2.0.0-alpha.4 (c (n "peppi") (v "2.0.0-alpha.4") (d (list (d (n "arrow2") (r "^0.18") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.18") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0za9gcvpznjl0a8syqlfpimgqzb55dmcskkrzsfkyvqaygkgg93a")))

(define-public crate-peppi-2.0.0-alpha.5 (c (n "peppi") (v "2.0.0-alpha.5") (d (list (d (n "arrow2") (r "^0.17") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.17") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "175m98sk2k43wv1y6wmp1lin2pa9h4czw6xz39pgmkd9s638wjbz")))

(define-public crate-peppi-2.0.0-alpha.6 (c (n "peppi") (v "2.0.0-alpha.6") (d (list (d (n "arrow2") (r "^0.17") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.17") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1r4x2h28pn2yx34nmj386r22gk4gil5x91q1cxc9yilf8n90aa63")))

(define-public crate-peppi-2.0.0 (c (n "peppi") (v "2.0.0") (d (list (d (n "arrow2") (r "^0.17") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.17") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "0w30gdmm8154sq7hc8h0dy9q0122rxl3knza2x5j9ndagmf9s4kv")))

(define-public crate-peppi-2.0.1 (c (n "peppi") (v "2.0.1") (d (list (d (n "arrow2") (r "^0.17") (f (quote ("io_ipc" "io_ipc_compression" "io_json"))) (d #t) (k 0)) (d (n "arrow2") (r "^0.17") (f (quote ("io_json"))) (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "encoding_rs") (r "^0.8") (d #t) (k 0)) (d (n "iai-callgrind") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ssbm-data") (r "^0.1") (d #t) (k 2)) (d (n "tar") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8") (f (quote ("xxh3"))) (d #t) (k 0)))) (h "1pm3wwb2sh3snqm19pfmklry194byyphaknp8sqqispvvs32n3f7")))

