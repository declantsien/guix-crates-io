(define-module (crates-io pe ta petal-clustering) #:use-module (crates-io))

(define-public crate-petal-clustering-0.1.0 (c (n "petal-clustering") (v "0.1.0") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "02j1jkzf6hww6xridpizdyqfnyx2s1c8hs13rwzb53spbvh33cw7")))

(define-public crate-petal-clustering-0.2.0 (c (n "petal-clustering") (v "0.2.0") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0jhk6j103z2h8vh1fpl4bxs7sr11b30cf10sv382y807x6b105b1")))

(define-public crate-petal-clustering-0.2.1 (c (n "petal-clustering") (v "0.2.1") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0d0xvfwd95yzh9gbwb10a14rqpv340yp6hicll9hqavijpmjv7qy")))

(define-public crate-petal-clustering-0.2.2 (c (n "petal-clustering") (v "0.2.2") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0rkggp09a9g0sjhfsbrr4g5lzjyqmh492pj9729bj9lvdfsg93gd")))

(define-public crate-petal-clustering-0.2.3 (c (n "petal-clustering") (v "0.2.3") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.14") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.5.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "028sprw1l67ls2fvc9mryjk5rs46wcb2ciwmgniw1fwfvs9131gj")))

(define-public crate-petal-clustering-0.3.0 (c (n "petal-clustering") (v "0.3.0") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "0gs1bfc3h0p01vdq957hwgwxrxw7xy9pj46baszhkivmp175wvx2")))

(define-public crate-petal-clustering-0.4.0 (c (n "petal-clustering") (v "0.4.0") (d (list (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.7.1") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)))) (h "1djidab7p0lad4xna1c1wxm5ypkclkw1q2dl581fjmpkhyzcb75b")))

(define-public crate-petal-clustering-0.5.0 (c (n "petal-clustering") (v "0.5.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.8.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "succinct") (r "^0.5") (d #t) (k 0)))) (h "1fv2lvi7ibvn4n70ia9170cjsc3miair2ssqgr9dmlmzrbsikqi0")))

(define-public crate-petal-clustering-0.5.1 (c (n "petal-clustering") (v "0.5.1") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.8.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "succinct") (r "^0.5") (d #t) (k 0)))) (h "1f9ri99kziv7chkmz2rf27d9vfsgrk46h52g8brmcjcihpfgkmb8")))

(define-public crate-petal-clustering-0.6.0 (c (n "petal-clustering") (v "0.6.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.9.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "succinct") (r "^0.5") (d #t) (k 0)))) (h "0pbh3d3245pcp21pa7mzcaa8k3sqv3mp16bi6xx2jzxcrx96ynwb") (r "1.64")))

(define-public crate-petal-clustering-0.7.0 (c (n "petal-clustering") (v "0.7.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "succinct") (r "^0.5") (d #t) (k 0)))) (h "0rm1c518zv0mf9lb4dk40d0zj5gk8za5wdzixz7q0kkny4h8hg60") (r "1.70")))

(define-public crate-petal-clustering-0.8.0 (c (n "petal-clustering") (v "0.8.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (d #t) (k 0)) (d (n "ndarray-rand") (r "^0.14.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "petal-neighbors") (r "^0.10.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "succinct") (r "^0.5") (d #t) (k 0)))) (h "14k58fcpm7psapp8q6l06mvqz8ygl823w0zxghy5gb9wv022ls9s") (r "1.74")))

