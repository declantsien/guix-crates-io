(define-module (crates-io hs -h hs-hackathon) #:use-module (crates-io))

(define-public crate-hs-hackathon-0.1.0 (c (n "hs-hackathon") (v "0.1.0") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hs-hackathon-car") (r "^0.1.0") (d #t) (k 0)) (d (n "hs-hackathon-drone") (r "^0.1.0") (d #t) (k 0)) (d (n "hs-hackathon-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "hs-hackathon-vision") (r "^0.1.0") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1i4fd1r5iijrai0snqxwpm3sxaqw7r8drwhrm7bphkklc4izq7yc")))

(define-public crate-hs-hackathon-0.1.2 (c (n "hs-hackathon") (v "0.1.2") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hs-hackathon-car") (r "^0.1.2") (d #t) (k 0)) (d (n "hs-hackathon-drone") (r "^0.1.2") (d #t) (k 0)) (d (n "hs-hackathon-macros") (r "^0.1.2") (d #t) (k 0)) (d (n "hs-hackathon-vision") (r "^0.1.2") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0glg1cm1bifsla6wzba6ka47xraidwxn732gxmj2mrsfbcxczpkq")))

(define-public crate-hs-hackathon-0.1.3 (c (n "hs-hackathon") (v "0.1.3") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hs-hackathon-car") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-drone") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-macros") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-vision") (r "^0.1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "13ki23k45fnd25n1plz7bw2dbhk57x6wip9wx1fjmycm5k1hi0b1")))

(define-public crate-hs-hackathon-0.1.4 (c (n "hs-hackathon") (v "0.1.4") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hs-hackathon-car") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-drone") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-macros") (r "^0.1.3") (d #t) (k 0)) (d (n "hs-hackathon-vision") (r "^0.1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1bk2csh7g19hvi5b17i8xwcyky3iqc9arbz5i7alw1bp6dar232z")))

