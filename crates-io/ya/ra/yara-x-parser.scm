(define-module (crates-io ya ra yara-x-parser) #:use-module (crates-io))

(define-public crate-yara-x-parser-0.1.0 (c (n "yara-x-parser") (v "0.1.0") (d (list (d (n "annotate-snippets") (r "^0.11.1") (d #t) (k 0)) (d (n "ascii_tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bitmask") (r "^0.5.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 2)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)) (d (n "yara-x-macros") (r "^0.1.0") (d #t) (k 0)))) (h "08sa5rn28c1c0smqs0ll8l7vjw610av3rhm1m50ad9cinmz3wash") (f (quote (("ascii-tree" "ascii_tree")))) (r "1.74.0")))

(define-public crate-yara-x-parser-0.2.0 (c (n "yara-x-parser") (v "0.2.0") (d (list (d (n "annotate-snippets") (r "^0.11.1") (d #t) (k 0)) (d (n "ascii_tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bitmask") (r "^0.5.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 2)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)) (d (n "yara-x-macros") (r "^0.2.0") (d #t) (k 0)))) (h "0yndx8d7233hn9k163qr89c2frljvl48ljr1g1vmlbbmsij28g5s") (f (quote (("ascii-tree" "ascii_tree")))) (r "1.74.0")))

(define-public crate-yara-x-parser-0.3.0 (c (n "yara-x-parser") (v "0.3.0") (d (list (d (n "annotate-snippets") (r "^0.11.1") (d #t) (k 0)) (d (n "ascii_tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bitmask") (r "^0.5.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (d #t) (k 0)) (d (n "pest") (r "^2.7.8") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.8") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 2)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)) (d (n "yara-x-macros") (r "^0.3.0") (d #t) (k 0)))) (h "1y6pjsh1yhp9pgb03a9pr101nswfzqd27j12pkxxb0jhs6ppjqcf") (f (quote (("ascii-tree" "ascii_tree")))) (r "1.74.0")))

(define-public crate-yara-x-parser-0.4.0 (c (n "yara-x-parser") (v "0.4.0") (d (list (d (n "annotate-snippets") (r "^0.11.2") (d #t) (k 0)) (d (n "ascii_tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "bitmask") (r "^0.5.0") (d #t) (k 0)) (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "indenter") (r "^0.3.3") (f (quote ("std"))) (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (d #t) (k 0)) (d (n "pest") (r "^2.7.10") (d #t) (k 0)) (d (n "pest_derive") (r "^2.7.10") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (d #t) (k 2)) (d (n "yansi") (r "^1.0.1") (d #t) (k 0)) (d (n "yara-x-macros") (r "^0.4.0") (d #t) (k 0)))) (h "1nkf7irl3zvni8fzdn719z7bmigfir289wf0yfsfskaajqmm82rw") (f (quote (("ascii-tree" "ascii_tree")))) (r "1.74.0")))

