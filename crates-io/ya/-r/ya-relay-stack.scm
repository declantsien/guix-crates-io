(define-module (crates-io ya -r ya-relay-stack) #:use-module (crates-io))

(define-public crate-ya-relay-stack-0.2.0 (c (n "ya-relay-stack") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "managed") (r "^0.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "smoltcp") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "rt-util" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "rt-util" "sync" "time"))) (d #t) (k 2)))) (h "1gpc6mjqcnsh5mjfv5i2pcz7r20k5ypkkzfnn0nybzdxis7qqlm1")))

(define-public crate-ya-relay-stack-0.3.0 (c (n "ya-relay-stack") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "managed") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "smoltcp") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "rt-util" "stream" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-core" "rt-util" "sync" "time"))) (d #t) (k 2)))) (h "0sv5r1rrjd8720vlsdv0ifanvjcrk421l4dsxm8z6znyy7xsnbv6")))

(define-public crate-ya-relay-stack-0.4.1 (c (n "ya-relay-stack") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "managed") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync" "time"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "ya-relay-util") (r "^0.1") (d #t) (k 0)) (d (n "ya-smoltcp") (r "^0.1") (d #t) (k 0)))) (h "0bvlg03y2akk3ajgmk53jkp1ysyj8kkx3rqpylc1gqwiwrx6k9k0") (f (quote (("test-suite"))))))

(define-public crate-ya-relay-stack-0.5.0 (c (n "ya-relay-stack") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "managed") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync" "time"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "ya-relay-util") (r "^0.1") (d #t) (k 0)) (d (n "ya-smoltcp") (r "^0.1") (d #t) (k 0)))) (h "0i76s0dpnv8cks5frvdpiv61gi1zac954m5qc8xzfzmr1fvl8pg7") (f (quote (("test-suite") ("stack-verbose" "ya-smoltcp/verbose"))))))

(define-public crate-ya-relay-stack-0.5.1 (c (n "ya-relay-stack") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "managed") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "smoltcp") (r "^0.10") (f (quote ("std" "log" "medium-ethernet" "medium-ip" "medium-ieee802154" "phy-raw_socket" "phy-tuntap_interface" "proto-ipv4" "proto-igmp" "proto-dhcpv4" "proto-ipv6" "proto-ipv4-fragmentation" "proto-sixlowpan-fragmentation" "proto-sixlowpan" "socket-raw" "socket-icmp" "socket-udp" "socket-tcp" "socket-dhcpv4" "async"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync" "time"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "ya-relay-util") (r "^0.1") (d #t) (k 0)))) (h "1d2mjyy1wawzxy4lpglji86jhv9gxx9hdxiq52xky27g79mzvk2q") (f (quote (("test-suite") ("stack-verbose" "smoltcp/verbose"))))))

