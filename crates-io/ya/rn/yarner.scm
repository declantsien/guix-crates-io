(define-module (crates-io ya rn yarner) #:use-module (crates-io))

(define-public crate-yarner-0.5.1 (c (n "yarner") (v "0.5.1") (d (list (d (n "blake3") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "yarner-lib") (r "^0.5.1") (d #t) (k 0)))) (h "07px6h1z3hpfc6yacb4w7hia29f09p5577iymb5iss5zs14qar7q")))

(define-public crate-yarner-0.5.2 (c (n "yarner") (v "0.5.2") (d (list (d (n "blake3") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "yarner-lib") (r "^0.5.2") (d #t) (k 0)))) (h "0xpw6zy9khzk9dikjfs5iapz3ik9782mjnsdp2lzcw92b2mch76a")))

(define-public crate-yarner-0.6.0 (c (n "yarner") (v "0.6.0") (d (list (d (n "blake3") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "yarner-lib") (r "^0.6.0") (d #t) (k 0)))) (h "05xinvzy0ci9pha79rz7f93s5s0yqmdvd3x7pvjm7mziq5yms1yr")))

(define-public crate-yarner-0.6.1 (c (n "yarner") (v "0.6.1") (d (list (d (n "blake3") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "path-clean") (r "^0.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "yarner-lib") (r "^0.6.1") (d #t) (k 0)))) (h "11y4sfhw4azidnkl5dwa7lgq451aabmlxmrivxnkkymskiwz6xcb")))

