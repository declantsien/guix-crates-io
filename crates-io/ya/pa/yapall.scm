(define-module (crates-io ya pa yapall) #:use-module (crates-io))

(define-public crate-yapall-0.1.1 (c (n "yapall") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ascent") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dhat") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "llvm-ir") (r "^0.9") (f (quote ("llvm-14"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (f (quote ("std"))) (k 0)))) (h "1qgwg8w110psaj4fan2pl5pq9nmlr3gpkv2bb0hw0p2i60h4habx") (f (quote (("rule") ("relation") ("precompute") ("par") ("default" "precompute" "rule") ("count")))) (s 2) (e (quote (("dhat-heap" "dep:dhat"))))))

(define-public crate-yapall-0.1.2 (c (n "yapall") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "ascent") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "dashmap") (r "^5") (d #t) (k 0)) (d (n "dhat") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "llvm-ir") (r "^0.9") (f (quote ("llvm-14"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "triomphe") (r "^0.1") (f (quote ("std"))) (k 0)))) (h "1byhsg0q51qr1jbc96a1h4drdx44l6m5iaw5wawcz8xlw72z6752") (f (quote (("rule") ("relation") ("precompute") ("par") ("default" "precompute" "rule") ("count")))) (s 2) (e (quote (("dhat-heap" "dep:dhat"))))))

