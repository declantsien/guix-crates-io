(define-module (crates-io ya zi yazi-fm) #:use-module (crates-io))

(define-public crate-yazi-fm-0.1.5 (c (n "yazi-fm") (v "0.1.5") (d (list (d (n "ansi-to-tui") (r "^3") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.1.5") (d #t) (k 0)) (d (n "yazi-config") (r "^0.1.5") (d #t) (k 0)) (d (n "yazi-core") (r "^0.1.5") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.1.5") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.1.5") (d #t) (k 0)))) (h "06skp1z3b1pslwiw5z5crmcfkr8dw9glb97pm13gmapjkkbnr721")))

(define-public crate-yazi-fm-0.2.0 (c (n "yazi-fm") (v "0.2.0") (d (list (d (n "ansi-to-tui") (r "^3") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-scheduler") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.0") (d #t) (k 0)))) (h "0qsdi95kvkm9snfr99gj9wn6wrg513xr5v1laq5zg5pifmvdd80g")))

(define-public crate-yazi-fm-0.2.1 (c (n "yazi-fm") (v "0.2.1") (d (list (d (n "ansi-to-tui") (r "^3") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-scheduler") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.1") (d #t) (k 0)))) (h "07awd22m0rcnc8mpp6sybg57zpxrl476v3g6rjyikqy70dxp61k9")))

(define-public crate-yazi-fm-0.2.2 (c (n "yazi-fm") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "syntect") (r "^5") (f (quote ("parsing" "plist-load" "regex-onig"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-scheduler") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.2") (d #t) (k 0)))) (h "027x95q6r09gx080qip972ss52adc02zdkyi1y8y9zhqjkdfpzs9")))

(define-public crate-yazi-fm-0.2.3 (c (n "yazi-fm") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "syntect") (r "^5") (f (quote ("parsing" "plist-load" "regex-onig"))) (k 0)) (d (n "tikv-jemallocator") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-scheduler") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.3") (d #t) (k 0)))) (h "113737qa1f05ww962v8l0rnl8fin7vci3nz1yr55251c5g7rlkgi")))

(define-public crate-yazi-fm-0.2.4 (c (n "yazi-fm") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "better-panic") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "^0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "syntect") (r "^5") (f (quote ("parsing" "plist-load" "regex-onig"))) (k 0)) (d (n "tikv-jemallocator") (r "^0") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"windows\")))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0") (d #t) (k 0)) (d (n "unicode-width") (r "^0") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-boot") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-proxy") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-scheduler") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.4") (d #t) (k 0)))) (h "0lm5jb65zcc6s3lam8jz65668d4w0ra51a8flpaan8m2l8jxz3xi")))

(define-public crate-yazi-fm-0.2.5 (c (n "yazi-fm") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "better-panic") (r "^0.3.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fdlimit") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (t "cfg(unix)") (k 0)) (d (n "mlua") (r "^0.9.7") (f (quote ("lua54" "vendored"))) (d #t) (k 0)) (d (n "ratatui") (r "=0.26.1") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "signal-hook-tokio") (r "^0.3.1") (f (quote ("futures-v0_3"))) (d #t) (t "cfg(unix)") (k 0)) (d (n "syntect") (r "^5.2.0") (f (quote ("parsing" "plist-load" "regex-onig"))) (k 0)) (d (n "tikv-jemallocator") (r "^0.5.4") (d #t) (t "cfg(all(not(target_os = \"macos\"), not(target_os = \"windows\")))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.10") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-boot") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-core") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-dds") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-proxy") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.5") (d #t) (k 0)))) (h "02vf0szv8k975zsqqj66d2mq4zcqgqzh16v0s5g21kbwhzlzgv52")))

