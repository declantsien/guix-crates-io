(define-module (crates-io ya zi yazi-scheduler) #:use-module (crates-io))

(define-public crate-yazi-scheduler-0.2.0 (c (n "yazi-scheduler") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^3") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.0") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.0") (d #t) (k 0)))) (h "178xwmdsbwwlapljfk6z78f6sjws71y2anqmqcm6vgxdl32y31nl")))

(define-public crate-yazi-scheduler-0.2.1 (c (n "yazi-scheduler") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^3") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.1") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.1") (d #t) (k 0)))) (h "0jd9zyx6f92n7yqbjrnrlnmar9gjz3i8mbv572gpfq62mymxrjhs")))

(define-public crate-yazi-scheduler-0.2.2 (c (n "yazi-scheduler") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^3") (d #t) (k 0)) (d (n "yazi-adaptor") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.2") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.2") (d #t) (k 0)))) (h "09fly6hvjzckg1b5wkc4b51b9r2wcqkm65qd9z3ywzmrik8c1fyi")))

(define-public crate-yazi-scheduler-0.2.3 (c (n "yazi-scheduler") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^3") (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "yazi-adaptor") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.3") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.3") (d #t) (k 0)))) (h "0nn0051jivbzg48w0jigknrj6yf5sx6x9pwzdzn9kvhvn06h7858")))

(define-public crate-yazi-scheduler-0.2.4 (c (n "yazi-scheduler") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0") (d #t) (k 0)) (d (n "base64") (r "^0") (d #t) (k 0)) (d (n "crossterm") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("parking_lot" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0") (d #t) (k 0)) (d (n "tracing") (r "^0") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^3") (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "yazi-adaptor") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-config") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-proxy") (r "^0.2.4") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.4") (d #t) (k 0)))) (h "02mb0rq12wgr3p1maxy2jmy6qw9n6gn3dxkph98fy5q9spkk4lk0")))

(define-public crate-yazi-scheduler-0.2.5 (c (n "yazi-scheduler") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "async-priority-channel") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (t "cfg(unix)") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "scopeguard") (r "^1.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("max_level_debug" "release_max_level_warn"))) (d #t) (k 0)) (d (n "trash") (r "^4.1.0") (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "yazi-config") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-dds") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-plugin") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-proxy") (r "^0.2.5") (d #t) (k 0)) (d (n "yazi-shared") (r "^0.2.5") (d #t) (k 0)))) (h "1k1i6dq8yxgxq1v02pqdnjba84hkwwf1jd3vhnyny7i63ajlzzih")))

