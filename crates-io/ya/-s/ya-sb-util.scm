(define-module (crates-io ya -s ya-sb-util) #:use-module (crates-io))

(define-public crate-ya-sb-util-0.1.0 (c (n "ya-sb-util") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tokio-bytes") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")))) (h "0lgrhk5s8plmfbnv2z0j5qzqbvn3agkch7gxw5zn1fyaxb7ygci0") (f (quote (("with-futures" "pin-project" "futures") ("with-bytes" "bytes" "tokio-bytes") ("default"))))))

(define-public crate-ya-sb-util-0.2.0 (c (n "ya-sb-util") (v "0.2.0") (d (list (d (n "actix") (r "^0.10") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tokio-bytes") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")))) (h "193klkkb5ghrradlb88ckjx5mfiifngl2fqbxgn3b0srs3csvpli") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes" "tokio-bytes") ("default"))))))

(define-public crate-ya-sb-util-0.3.0 (c (n "ya-sb-util") (v "0.3.0") (d (list (d (n "actix") (r "^0.13.0") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tokio-bytes") (r "^0.5") (o #t) (d #t) (k 0) (p "bytes")))) (h "19msk98jm2d1rz7q1l0vyiw6yj8h4f4d55c9p6gvddx3mwas4phs") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes" "tokio-bytes") ("default"))))))

(define-public crate-ya-sb-util-0.4.0 (c (n "ya-sb-util") (v "0.4.0") (d (list (d (n "actix") (r "^0.13") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)))) (h "09ynvi5xzrm4g5yq1vnzy8sqbv2g418w9viwrrlg05ywpwzlw5f5") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes") ("default"))))))

(define-public crate-ya-sb-util-0.4.1 (c (n "ya-sb-util") (v "0.4.1") (d (list (d (n "actix") (r "^0.13") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0zd3g3n4p248h5vddszfyfwv949vcq2l190hxwjkild7gi7m09f5") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes") ("default"))))))

(define-public crate-ya-sb-util-0.5.0 (c (n "ya-sb-util") (v "0.5.0") (d (list (d (n "actix") (r "^0.13") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (d #t) (k 0)) (d (n "rustls") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)))) (h "1ckh8q6hmykg893ynw77iicxdmi5m1gjfwlh2z7p1cljqrz88yss") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-tls" "rustls" "sha2" "hex") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes") ("default"))))))

(define-public crate-ya-sb-util-0.5.1 (c (n "ya-sb-util") (v "0.5.1") (d (list (d (n "actix") (r "^0.13") (o #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (d #t) (k 0)) (d (n "rustls") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)))) (h "00m71ad0wrryx40a2gawibfj8a0w2fdz36rvkal8a9y82n40ybva") (f (quote (("with-writer" "actix" "bitflags" "futures") ("with-tls" "rustls" "sha2" "hex") ("with-futures" "pin-project" "futures") ("with-bytes" "bytes") ("default"))))))

