(define-module (crates-io ti kv tikv-client-pd) #:use-module (crates-io))

(define-public crate-tikv-client-pd-0.0.99 (c (n "tikv-client-pd") (v "0.0.99") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("compat" "async-await" "thread-pool"))) (d #t) (k 0)) (d (n "grpcio") (r "^0.8") (f (quote ("secure" "prost-codec" "use-bindgen"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "tikv-client-common") (r "^0.0.99") (d #t) (k 0)) (d (n "tikv-client-proto") (r "^0.0.99") (d #t) (k 0)))) (h "090wd651fripgl7vv247dr3ry2f9apqgg3zyyxcv0kmgj2dbal4h")))

(define-public crate-tikv-client-pd-0.1.0 (c (n "tikv-client-pd") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("compat" "async-await" "thread-pool"))) (d #t) (k 0)) (d (n "grpcio") (r "^0.8") (f (quote ("secure" "prost-codec" "use-bindgen"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "tikv-client-common") (r "^0.1.0") (d #t) (k 0)) (d (n "tikv-client-proto") (r "^0.1.0") (d #t) (k 0)))) (h "0xw9803crv5m806bb9b90zwyjw9zy08q5a53v597jkixcgqxxjpq")))

