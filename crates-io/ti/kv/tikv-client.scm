(define-module (crates-io ti kv tikv-client) #:use-module (crates-io))

(define-public crate-tikv-client-0.0.0 (c (n "tikv-client") (v "0.0.0") (h "0ws3qwlj5sf8vqy3xhznyav2csg1jf7p0skc6pdh38hab99ji887")))

(define-public crate-tikv-client-0.0.99 (c (n "tikv-client") (v "0.0.99") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "fail") (r "^0.4") (d #t) (k 0)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "thread-pool"))) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "grpcio") (r "^0.8") (f (quote ("secure" "prost-codec" "use-bindgen" "openssl-vendored"))) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prometheus") (r "^0.12") (f (quote ("push" "process"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls-vendored"))) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.0") (d #t) (k 2)) (d (n "simple_logger") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tikv-client-common") (r "^0.0.99") (d #t) (k 0)) (d (n "tikv-client-pd") (r "^0.0.99") (d #t) (k 0)) (d (n "tikv-client-proto") (r "^0.0.99") (d #t) (k 0)) (d (n "tikv-client-store") (r "^0.0.99") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "0davxjhvfwm3f4sxmcy91b0apxlilwy7c30bhfcp86034yq5va43") (f (quote (("integration-tests") ("default"))))))

(define-public crate-tikv-client-0.1.0 (c (n "tikv-client") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "fail") (r "^0.4") (d #t) (k 0)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("async-await" "thread-pool"))) (d #t) (k 0)) (d (n "futures-timer") (r "^3.0") (d #t) (k 0)) (d (n "grpcio") (r "^0.8") (f (quote ("secure" "prost-codec" "use-bindgen" "openssl-vendored"))) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prometheus") (r "^0.12") (f (quote ("push" "process"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls-vendored"))) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.0") (d #t) (k 2)) (d (n "simple_logger") (r "^1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tikv-client-common") (r "^0.1.0") (d #t) (k 0)) (d (n "tikv-client-pd") (r "^0.1.0") (d #t) (k 0)) (d (n "tikv-client-proto") (r "^0.1.0") (d #t) (k 0)) (d (n "tikv-client-store") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 2)))) (h "0qvji5zmkb6r6rcjqg6i0vyw94sfdrz3j2v279dy4b55dhw4p416") (f (quote (("integration-tests") ("default"))))))

(define-public crate-tikv-client-0.2.0 (c (n "tikv-client") (v "0.2.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fail") (r "^0.4") (d #t) (k 0)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("push"))) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "prost") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls-vendored"))) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.0") (d #t) (k 2)) (d (n "simple_logger") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.9") (d #t) (k 1)) (d (n "tonic-disable-doctest") (r "^0.1.0") (d #t) (k 1)))) (h "0fvacnk23p6kc3a5hz0xvvicgwv3dr0211yhn4cgwdy9qw7516ly") (f (quote (("integration-tests") ("default" "prometheus/process"))))))

(define-public crate-tikv-client-0.3.0 (c (n "tikv-client") (v "0.3.0") (d (list (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "fail") (r "^0.4") (d #t) (k 0)) (d (n "fail") (r "^0.4") (f (quote ("failpoints"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.3") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("native-tls-vendored"))) (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.5.0") (d #t) (k 2)) (d (n "simple_logger") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3.6") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tonic") (r "^0.10") (f (quote ("tls"))) (d #t) (k 0)))) (h "0h2rs16dax08d9znfi7s0vi5lsscj4cwqw376irb8kfhwgj6i284") (f (quote (("prometheus" "prometheus/push" "prometheus/process") ("integration-tests") ("default" "prometheus"))))))

