(define-module (crates-io ti ny tiny-cid) #:use-module (crates-io))

(define-public crate-tiny-cid-0.1.0 (c (n "tiny-cid") (v "0.1.0") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.3.0") (k 0)) (d (n "tiny-multihash") (r "^0.3.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (d #t) (k 0)))) (h "0h7c138j6vr6xlxwx31kbz76ks949i0impsvw2lhz8npnp11h653") (f (quote (("test" "quickcheck" "rand") ("std" "tiny-multihash/std" "unsigned-varint/std") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.0 (c (n "tiny-cid") (v "0.2.0") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.4.0") (k 0)) (d (n "tiny-multihash") (r "^0.4.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (d #t) (k 0)))) (h "1ckmlf0hr1bck56d0105x6wjx2caj289mnjvgsdyv0qrb11jfgkj") (f (quote (("test" "quickcheck" "rand") ("std" "tiny-multihash/std" "unsigned-varint/std") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.1 (c (n "tiny-cid") (v "0.2.1") (d (list (d (n "multibase") (r "^0.8.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.4.2") (k 0)) (d (n "tiny-multihash") (r "^0.4.2") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "10zs55kzcifd730vd08d3g49gxrx6rcvim11qb3d54kr4ydr1968") (f (quote (("test" "quickcheck" "rand") ("std" "tiny-multihash/std" "unsigned-varint/std") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.2 (c (n "tiny-cid") (v "0.2.2") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.4.2") (k 0)) (d (n "tiny-multihash") (r "^0.4.2") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "1hydi7jrl4j6ikzgrpnxszrkg0cvfjmg2ja8xb2miryzvnqsxi8d") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.3 (c (n "tiny-cid") (v "0.2.3") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.4.2") (k 0)) (d (n "tiny-multihash") (r "^0.4.2") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "0mv4p4qp72chq4cdii38f3vyqg56l700b0mcy1ss6xn1c4x96xz5") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.4 (c (n "tiny-cid") (v "0.2.4") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "tiny-multihash") (r "^0.4.2") (k 0)) (d (n "tiny-multihash") (r "^0.4.2") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "0lp7q6p60x0kv946za7vjbdpk82d1kbgnb5mg5dfsxcgaagqsqyv") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.5 (c (n "tiny-cid") (v "0.2.5") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.115") (o #t) (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "004zv14l6b8l47q8ankvjanki25g3z8pmmiza9ji958d98hmsqqv") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "tiny-multihash/serde-codec") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.6 (c (n "tiny-cid") (v "0.2.6") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.115") (o #t) (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "036x89l0hsxznzwqmyifb4vs8brl2fwvm12pfkdagpd599abyn0a") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "tiny-multihash/serde-codec") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.7 (c (n "tiny-cid") (v "0.2.7") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.115") (o #t) (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "006w0vycp50m3s6qsy05b41kphfjc64hadcw6m7k29mri13f2yf3") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "tiny-multihash/serde-codec") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.2.8 (c (n "tiny-cid") (v "0.2.8") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.115") (o #t) (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (k 0)) (d (n "tiny-multihash") (r "^0.4.5") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.0") (k 0)))) (h "1af7xihj6nmyh06bzixdgal67dzmm50rfxvn75jlg42xg480zny8") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "tiny-multihash/serde-codec") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

(define-public crate-tiny-cid-0.3.0 (c (n "tiny-cid") (v "0.3.0") (d (list (d (n "multibase") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "tiny-multihash") (r "^0.5.0") (k 0)) (d (n "tiny-multihash") (r "^0.5.0") (f (quote ("test"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.5.1") (k 0)))) (h "10awc1x095jrp18p2hbdd6mrgck1jikhiqddq27s70y8jwaspmmd") (f (quote (("test" "quickcheck" "rand") ("std" "multibase" "tiny-multihash/std" "unsigned-varint/std") ("serde-codec" "serde" "tiny-multihash/serde-codec") ("scale-codec" "parity-scale-codec" "tiny-multihash/scale-codec") ("default" "std"))))))

