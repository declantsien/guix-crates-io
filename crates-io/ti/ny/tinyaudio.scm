(define-module (crates-io ti ny tinyaudio) #:use-module (crates-io))

(define-public crate-tinyaudio-0.1.0 (c (n "tinyaudio") (v "0.1.0") (d (list (d (n "aaudio") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "alsa-sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-sys") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Request" "Window" "Response" "AudioContext" "AudioBuffer" "AudioContextOptions" "AudioNode" "AudioBufferSourceNode" "AudioDestinationNode"))) (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwindef" "winnt" "windef" "winuser" "dsound" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1h110abck3jhdbgm5xicjdqcggq0cbx7d15vqsx3gmpa2mldwid5") (r "1.56")))

(define-public crate-tinyaudio-0.1.1 (c (n "tinyaudio") (v "0.1.1") (d (list (d (n "aaudio") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "alsa-sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-sys") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Request" "Window" "Response" "AudioContext" "AudioBuffer" "AudioContextOptions" "AudioNode" "AudioBufferSourceNode" "AudioDestinationNode"))) (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwindef" "winnt" "windef" "winuser" "dsound" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "122q70r790rv9gi7ad8gj7zh2q16wms5gn9xd9z6a6jvzzpz2x9i") (r "1.56")))

(define-public crate-tinyaudio-0.1.2 (c (n "tinyaudio") (v "0.1.2") (d (list (d (n "aaudio") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "alsa-sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-sys") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Request" "Window" "Response" "AudioContext" "AudioBuffer" "AudioContextOptions" "AudioNode" "AudioBufferSourceNode" "AudioDestinationNode"))) (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwindef" "winnt" "windef" "winuser" "dsound" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vx1priddda8mac6zq9qxr3pjc3sai5vs2rrzqks2564grldcjw7") (r "1.56")))

(define-public crate-tinyaudio-0.1.3 (c (n "tinyaudio") (v "0.1.3") (d (list (d (n "aaudio") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "alsa-sys") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "core-foundation-sys") (r "^0.8.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "coreaudio-sys") (r "^0.2.8") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "js-sys") (r "^0.3.61") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.34") (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "web-sys") (r "^0.3.61") (f (quote ("Request" "Window" "Response" "AudioContext" "AudioBuffer" "AudioContextOptions" "AudioNode" "AudioBufferSourceNode" "AudioDestinationNode"))) (d #t) (t "cfg(all(target_os = \"unknown\", target_arch = \"wasm32\"))") (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwindef" "winnt" "windef" "winuser" "dsound" "synchapi" "winbase"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07lwl5qnyiw7vdnrjclglxn2dcfhh6bvx1pvl5p5xpjhirps3avs") (r "1.56")))

