(define-module (crates-io ti ny tinywasm) #:use-module (crates-io))

(define-public crate-tinywasm-0.0.2 (c (n "tinywasm") (v "0.0.2") (d (list (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tinywasm-parser") (r "^0.0.2") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.0.2") (k 0)))) (h "1x4xp2rhndx92fhmkwp91x6zrh8856nimijbl321fki9wfbny3f8") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.0.3 (c (n "tinywasm") (v "0.0.3") (d (list (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tinywasm-parser") (r "^0.0.3") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.0.3") (k 0)))) (h "1plar1g324bfl59lf3p4fw3q9sqcb0m1k4jmbqs0rpj98ih4nr6k") (f (quote (("parser" "tinywasm-parser") ("nightly") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.0.4 (c (n "tinywasm") (v "0.0.4") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.0.4") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.0.4") (k 0)) (d (n "wast") (r "^69.0") (d #t) (k 2)))) (h "1mk0nwi641qfww9abfqnr2qpl24xgqsmbaqlb0qazjdy45az9npx") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.0.5 (c (n "tinywasm") (v "0.0.5") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.0.5-alpha.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.0.5-alpha.0") (k 0)) (d (n "wast") (r "^69.0") (d #t) (k 2)))) (h "14bssgxq9351mvngs800ddc8vjb729fjb9jp9y16pm71yx8yc4hv") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.1.0 (c (n "tinywasm") (v "0.1.0") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.1.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.1.0") (k 0)) (d (n "wast") (r "^69.0") (d #t) (k 2)))) (h "106k72dkn897f9m40k6x2kzi463bbcrg6qb8r37049asn5yg3r6d") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.2.0 (c (n "tinywasm") (v "0.2.0") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.2.0-alpha.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.2.0-alpha.0") (k 0)) (d (n "wast") (r "^70.0") (d #t) (k 2)))) (h "1xgi17d25jq95pl6nq8d6snd1va36qdcrn2c56iqfbswyy221i28") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.3.0 (c (n "tinywasm") (v "0.3.0") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.3.0-alpha.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.3.0-alpha.0") (k 0)) (d (n "wast") (r "^70.0") (d #t) (k 2)))) (h "0hnxlyj751rigkfghwvwyfdl094h7dmf97z80c1znakqk8agl38s") (f (quote (("parser" "tinywasm-parser") ("default" "std" "parser" "logging")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-types/logging" "tinywasm-parser?/logging"))))))

(define-public crate-tinywasm-0.4.0 (c (n "tinywasm") (v "0.4.0") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.4.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.4.0") (k 0)) (d (n "wast") (r "^70.0") (d #t) (k 2)))) (h "06md8wqd6cq5ypqbk0s9v2f8zj8n44gygnvgv5zpfc7ijkpi3pd7") (f (quote (("unsafe" "tinywasm-types/unsafe") ("parser" "tinywasm-parser") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

(define-public crate-tinywasm-0.4.1 (c (n "tinywasm") (v "0.4.1") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.4.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.4.0") (k 0)) (d (n "wast") (r "^70.0") (d #t) (k 2)))) (h "0qpdx4rbbikh711f9vzmw0nlw5l1ydpiahpxa948jw2ciwc8i4ij") (f (quote (("unsafe" "tinywasm-types/unsafe") ("parser" "tinywasm-parser") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

(define-public crate-tinywasm-0.5.0 (c (n "tinywasm") (v "0.5.0") (d (list (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.5.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.5.0") (k 0)) (d (n "wast") (r "^200.0") (d #t) (k 2)))) (h "0ip4kvplppfx8z7l1qhy335iqhq2r94lf6wq52lgl0ysp7dkcmq5") (f (quote (("unsafe" "tinywasm-types/unsafe") ("parser" "tinywasm-parser") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

(define-public crate-tinywasm-0.6.0 (c (n "tinywasm") (v "0.6.0") (d (list (d (n "_log") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.6.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.6.0") (k 0)) (d (n "wast") (r "^202.0") (d #t) (k 2)))) (h "1zwh8v2l2n07lcj1dgswgbal2821vdriqnidx90xlxwlgg39xb3l") (f (quote (("unsafe" "tinywasm-types/unsafe") ("parser" "tinywasm-parser") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "_log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

(define-public crate-tinywasm-0.6.1 (c (n "tinywasm") (v "0.6.1") (d (list (d (n "_log") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.6.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.6.0") (k 0)) (d (n "wast") (r "^207.0") (d #t) (k 2)))) (h "0gj091nhnh0sj9l5b7vcrf8zqqs029s7qd1rqg92j7xda54qn1cy") (f (quote (("unsafe" "tinywasm-types/unsafe") ("parser" "tinywasm-parser") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "_log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

(define-public crate-tinywasm-0.7.0 (c (n "tinywasm") (v "0.7.0") (d (list (d (n "_log") (r "^0.4") (o #t) (d #t) (k 0) (p "log")) (d (n "eyre") (r "^0.6") (d #t) (k 2)) (d (n "libm") (r "^0.2") (k 0)) (d (n "owo-colors") (r "^4.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinywasm-parser") (r "^0.7.0") (o #t) (k 0)) (d (n "tinywasm-types") (r "^0.7.0") (k 0)) (d (n "wast") (r "^207.0") (d #t) (k 2)))) (h "1xvrqdww67ajszd917j7n6z8rmq0kb2svizh3nrjkjqlf1szn5yb") (f (quote (("parser" "tinywasm-parser") ("nightly") ("default" "std" "parser" "logging" "archive") ("archive" "tinywasm-types/archive")))) (s 2) (e (quote (("std" "tinywasm-parser?/std" "tinywasm-types/std") ("logging" "_log" "tinywasm-parser?/logging" "tinywasm-types/logging"))))))

