(define-module (crates-io ti ny tiny-bip39) #:use-module (crates-io))

(define-public crate-tiny-bip39-0.6.0 (c (n "tiny-bip39") (v "0.6.0") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.7") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.6") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (f (quote ("parallel"))) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)))) (h "1qwz4dksx1gaygradm178hqhha3r7i3zhws1lr6xi613rcqm8hd1") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.6.1 (c (n "tiny-bip39") (v "0.6.1") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.8") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)))) (h "15sjqmd6f1d7dh7pxppr24b2p94psz78jcz1lq0pmy970r3qlf7m") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.6.2 (c (n "tiny-bip39") (v "0.6.2") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.1.8") (d #t) (k 0)) (d (n "hex") (r "^0.3.2") (d #t) (k 2)) (d (n "hmac") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^0.1.8") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 0)))) (h "0q60k3zlfb61mw7pwrais8xvqypm2r225800afiixsza2dj6gif1") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.7.0 (c (n "tiny-bip39") (v "0.7.0") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)))) (h "14hdci0k4lvprlfbszxnjyll4ippzylj99jiv1yd21wfzq1zpl8w") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.7.1 (c (n "tiny-bip39") (v "0.7.1") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.12") (d #t) (k 0)))) (h "1qw5as5n4i3xhp6r4ivm6w2bpg9ww8pa3szsx3hkr5b6ypc8r156") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.7.2 (c (n "tiny-bip39") (v "0.7.2") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.12") (d #t) (k 0)))) (h "0s6lpji5i3ivh835l7cjbizx2d0lwyrczzvxw7nwpb2agm7yqmg2") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.7.3 (c (n "tiny-bip39") (v "0.7.3") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "hmac") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.2.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.3.0") (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "sha2") (r "^0.8.1") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.12") (d #t) (k 0)))) (h "1wiigssfjr86gl7v348gxc7vdanvfqb5x9hc4xh1dbn2bh25w5mh") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.8.0 (c (n "tiny-bip39") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hmac") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.13") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1f2r5r64i5zb1fxfxdrix0zx57mxj3wpwsi85q1z3rxsb53lrr6r") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.8.1 (c (n "tiny-bip39") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hmac") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.13") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0a39qfipiid6lww66sxa3l8q5f05ab9p2nb2l2szzm6r4ibalkaj") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-0.8.2 (c (n "tiny-bip39") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 2)) (d (n "hmac") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.4.0") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.13") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "zeroize") (r "^1.1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "17c3073drxkpp1dmv27sn08f70l5iamdd3x7qc9b6ny8vywrrigz") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

(define-public crate-tiny-bip39-1.0.0 (c (n "tiny-bip39") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.11.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.19") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "zeroize") (r "^1.5.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0q98iv3wgbd41wyxxd5is8sddi53k9ary45rbi5fi8dmb39r9k32") (f (quote (("spanish") ("korean") ("japanese") ("italian") ("french") ("default" "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish") ("chinese-traditional") ("chinese-simplified"))))))

