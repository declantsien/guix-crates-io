(define-module (crates-io ti de tide-compress) #:use-module (crates-io))

(define-public crate-tide-compress-0.1.0 (c (n "tide-compress") (v "0.1.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.0") (d #t) (k 0)) (d (n "tide") (r "^0.9") (d #t) (k 0)))) (h "11hlc7mpax13ghpr1hw4zacl1l8jarj4dgg4yl6ys40hyyfd5j88") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.1.1 (c (n "tide-compress") (v "0.1.1") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "http-types") (r "^2.0") (d #t) (k 0)) (d (n "tide") (r "^0.9") (d #t) (k 0)))) (h "0n053dl0abr5bka6qx3pln1156y4d1vn5i46wk8bxzh6fwjmz483") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.2.0 (c (n "tide-compress") (v "0.2.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "http-types") (r "^2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "tide") (r "^0.9") (d #t) (k 0)))) (h "1bb4ljd62jwf0a93mc6maxqysj23yy9pr3zxl7v84l4h5j80zxyq") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.3.0 (c (n "tide-compress") (v "0.3.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("unstable" "attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "http-types") (r "^2.2") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "tide") (r "^0.10") (d #t) (k 0)))) (h "00n0xjj9nd7x8ccdwc75rcw48ls84lfqhfbn8arcv26kcixn6ffc") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.4.0 (c (n "tide-compress") (v "0.4.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.0") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "tide") (r "^0.12") (d #t) (k 0)))) (h "0pyr8caxz4pd8gh5azy3i882m8dhc4fzfj5l68f6vy6s4sb7n9mg") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.5.0 (c (n "tide-compress") (v "0.5.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "tide") (r "^0.13") (d #t) (k 0)))) (h "0j16fziv4iczb7iafnq2mqbs262simzv0zn867jzxmakdjx2wv3m") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.6.0 (c (n "tide-compress") (v "0.6.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-util") (r "^0.3") (f (quote ("io"))) (d #t) (k 0)) (d (n "http-types") (r "^2.5.0") (d #t) (k 0)) (d (n "tide") (r "^0.13") (d #t) (k 0)))) (h "11pbdkisank11ici785nzk9q9njr01bzfpvbyjf1wli7cgznx312") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.7.0 (c (n "tide-compress") (v "0.7.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "tide") (r "^0.14") (d #t) (k 0)))) (h "1gwx4ln1cwc7wh65zc8dy2y3ybpg7d03iaiyw7sv3vz4qma9rw32") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.8.0 (c (n "tide-compress") (v "0.8.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "tide") (r "^0.15") (d #t) (k 0)))) (h "0rid76cwkjraxc8ld1qr4zw7sxabhabin31ka2f0jkjx3my3m82h") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.8.1 (c (n "tide-compress") (v "0.8.1") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "tide") (r "^0.15") (k 0)))) (h "0hvac7c8ycga64drgfpj471iprksha2515g6gc6j66aw9bydydy3") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "brotli" "gzip") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.9.0 (c (n "tide-compress") (v "0.9.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "tide") (r "^0.16") (k 0)))) (h "06965zzl8g5c6fvv6gjcsjmm4pxva4dm07nq26k4gifbbs4f6n8x") (f (quote (("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate"))))))

(define-public crate-tide-compress-0.10.0 (c (n "tide-compress") (v "0.10.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 1)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (d #t) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "1za49lmrj56idiwf5bi1gljvd33kvr20gk2icda7jrh0kfn5ql61") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

(define-public crate-tide-compress-0.10.1 (c (n "tide-compress") (v "0.10.1") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 1)) (d (n "async-std") (r "^1.6") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (d #t) (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (d #t) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "1bvyzqlq5hbn8g21cvycaixfyw6kym6r0fgv80fid2dcps582x7j") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

(define-public crate-tide-compress-0.10.2 (c (n "tide-compress") (v "0.10.2") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 1)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (f (quote ("h1-client-rustls"))) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "0baipv7grhnm7syqvkb02d1717755k4kp7f597b972laa3y799m3") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

(define-public crate-tide-compress-0.10.3 (c (n "tide-compress") (v "0.10.3") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 1)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (f (quote ("h1-client-rustls"))) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "1vbc40vsjnvh4lir2wcy56ryll1ki42gqf4n772v3938kw92nllp") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

(define-public crate-tide-compress-0.10.4 (c (n "tide-compress") (v "0.10.4") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (o #t) (d #t) (k 1)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 1)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (f (quote ("h1-client-rustls"))) (o #t) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "1s4cf5v3m58rkd1ymm6cssz6p8lq5qminq27g4mnkv817si6z6sk") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf" "_build_deps") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check") ("_build_deps" "async-std" "phf_codegen" "serde" "serde_json" "surf"))))))

(define-public crate-tide-compress-0.10.5 (c (n "tide-compress") (v "0.10.5") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (o #t) (d #t) (k 1)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 1)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "phf_codegen") (r "^0.10") (o #t) (d #t) (k 1)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 1)) (d (n "surf") (r "^2.3.2") (f (quote ("h1-client-rustls"))) (o #t) (k 1)) (d (n "tide") (r "^0.16") (k 0)))) (h "0iiyn464fvf9lxfci21flj79p8m19wj1p4gha8afgigwma15sbmn") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf" "_build_deps") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check") ("_build_deps" "async-std" "phf_codegen" "serde" "serde_json" "surf"))))))

(define-public crate-tide-compress-0.10.6 (c (n "tide-compress") (v "0.10.6") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (k 0)))) (h "0ndkysfkmak7ijiwg7famcfsks54y53frhm1dr6b0yr49xsmx9cj") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

(define-public crate-tide-compress-0.11.0 (c (n "tide-compress") (v "0.11.0") (d (list (d (n "async-compression") (r "^0.3") (f (quote ("futures-bufread"))) (d #t) (k 0)) (d (n "futures-lite") (r "^1.11") (d #t) (k 0)) (d (n "http-types") (r "^2.5") (k 0)) (d (n "phf") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.5") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (k 0)) (d (n "async-h1") (r "^2.1") (d #t) (k 2)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)))) (h "051xcy6sg1hirkisi2fih2ljj6sh390jsgrk7ry31f89px9zq3q0") (f (quote (("regex-check" "regex") ("gzip" "async-compression/gzip") ("deflate" "async-compression/deflate") ("default" "all") ("db-check" "regex-check" "phf") ("brotli" "async-compression/brotli") ("all" "brotli" "gzip" "deflate" "db-check"))))))

