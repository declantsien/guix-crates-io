(define-module (crates-io ti me timecat) #:use-module (crates-io))

(define-public crate-timecat-0.1.0 (c (n "timecat") (v "0.1.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "08kw4kxk8p3mvvm8g31xy52xnw3qzxvi6xmv5n12zk4lda7wwlyd")))

(define-public crate-timecat-0.2.0 (c (n "timecat") (v "0.2.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "1v1d8ckjhsd9pgv8l9h3nhjws94m27l44qfvb3ahhshz2lwim96v")))

(define-public crate-timecat-1.0.0 (c (n "timecat") (v "1.0.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "0n870f6sszk92p0zia9sd4kh0szfnsmhcy13lmqibdjza15l90iz")))

(define-public crate-timecat-1.0.1 (c (n "timecat") (v "1.0.1") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "0fid5iwd8xd398097zwi5svy1zmgcbh7wvxbjqqvldqrpqgknjap")))

(define-public crate-timecat-1.0.2 (c (n "timecat") (v "1.0.2") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "1svqjzb4frdx2k58jgp5kx7fbrwb0x9s4nih1zyw9w4hykfagpbq")))

(define-public crate-timecat-1.1.0 (c (n "timecat") (v "1.1.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "1xy7w49d3m4nv9238b235hkxay59i3bsk6kdbmyiavh7q2j8dqdm") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-timecat-1.2.0 (c (n "timecat") (v "1.2.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "0ljabp38wxhzw93qpj0wlfsgih7icmx82xhgv0jvspnyj83px6sh") (f (quote (("engine" "nnue") ("default" "binary") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest"))))))

(define-public crate-timecat-1.3.0 (c (n "timecat") (v "1.3.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (d #t) (k 0)) (d (n "colored") (r "2.*") (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (d #t) (k 1)))) (h "0zfvly4r4f4pfd86dgv8a7lmm3kwisbib69ak6ny4fxviiazqvp4") (f (quote (("engine" "nnue") ("default" "binary") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest"))))))

(define-public crate-timecat-1.4.0 (c (n "timecat") (v "1.4.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "17zcixxhjj5dli653zzd968q8rhqr9q1si8hyfj5557cnnribjlj") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.0 (c (n "timecat") (v "1.5.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0s995hq5inp2rc17iysj88y5pdbzswmjf3lwasmsm1506yyaz0h6") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.1 (c (n "timecat") (v "1.5.1") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1ynxcnxchwnymdc5d687ljzrv08xyzavprkc5drncaciyy87iq3k") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.2 (c (n "timecat") (v "1.5.2") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1p8bwqabw7p2mkxhp4b3alcys8gzzfb342q5v4c2cb2b5r01wkj3") (f (quote (("engine" "nnue_evaluation") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue_evaluation" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue_evaluation" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.3 (c (n "timecat") (v "1.5.3") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1zsc1hk5kk71j1h8l7awcdwq335pzw0zrvarhrcg1168vw4ijvgn") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.4 (c (n "timecat") (v "1.5.4") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1anyyyljpsq9ky88q4pbfbavl0v3yryii1ckzpyyh33gw4rcbp6f") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.5 (c (n "timecat") (v "1.5.5") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1lhk0srllvak25m6l7x05xhdcix90kb688s1rzdrn8yab3rlgw84") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.6 (c (n "timecat") (v "1.5.6") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0nxsrp90xzr5j4pm15wzrz4wy8d3hdvrzsa08pimvvvc6mb23wdy") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.5.7 (c (n "timecat") (v "1.5.7") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1vrlgkq82xsbgpa07m9paqvf586ivxp0db790p2slvqd58m6i1kd") (f (quote (("engine" "nnue") ("default" "binary" "colored_output") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.6.0 (c (n "timecat") (v "1.6.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "failure") (r "0.*") (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1y2sa0jsp27fqhhfy5vi123saqgkdgc1wj4zljfmvlbq59nlwiqy") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.6.1 (c (n "timecat") (v "1.6.1") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0xbqf1kgjjgjd0iz38m7zp8a2rmrjxq3kac7jzijk6790ql0106i") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.6.2 (c (n "timecat") (v "1.6.2") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0pq6hjix5i186n5149lqhrrik0162rwk83hwl9fpqaz3j4bm3vhi") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.6.3 (c (n "timecat") (v "1.6.3") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0lz6p8x9wa6p2xzpr73vnvqg7n09hpg7mz4i1mpkxhqdf03ilj4j") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.0 (c (n "timecat") (v "1.7.0") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1hkpyhqgcp2fl34ngsyrxhf9ldasnv42zgvyfz9msvnbnhsb1f92") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.1 (c (n "timecat") (v "1.7.1") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0b7j6wpcrp5y83b590g25aw4kgm8f6x8j4pwxmcbjr5z903kv350") (f (quote (("speed") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.2 (c (n "timecat") (v "1.7.2") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "0gpgyl7i35l78k522ap7am6zmkjk1vglf297l283vawimxfcymfd") (f (quote (("speed") ("experimental") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("debug") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.3 (c (n "timecat") (v "1.7.3") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1dzagy5d440hq980y8qspclxdha0270zay2fyy48km85a25xg6dc") (f (quote (("speed") ("experimental") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("debug" "experimental") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.4 (c (n "timecat") (v "1.7.4") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1sqmikbgcjis0lbpv1n7ikqp6r5lp8y1pvcsq4yf7d82hha10r03") (f (quote (("speed") ("experimental") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("debug" "experimental") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

(define-public crate-timecat-1.7.5 (c (n "timecat") (v "1.7.5") (d (list (d (n "arrayvec") (r "0.*") (d #t) (k 0)) (d (n "binread") (r "^2.2.0") (f (quote ("const_generics"))) (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14.3") (f (quote ("min_const_generics" "derive" "extern_crate_alloc"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "2.*") (o #t) (d #t) (k 0)) (d (n "itertools") (r "0.*") (d #t) (k 0)) (d (n "lazy_static") (r "1.*") (d #t) (k 0)) (d (n "paste") (r "1.*") (d #t) (k 0)) (d (n "reqwest") (r "0.*") (f (quote ("blocking"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "1.*") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha256") (r "1.*") (o #t) (d #t) (k 1)))) (h "1fg2dpfyax47mnzpph23pa7i24jyi9cnij8jp7dl433h694ahksf") (f (quote (("speed") ("experimental") ("engine" "nnue") ("default" "binary" "colored_output" "speed") ("debug" "experimental") ("copy_large_structs") ("colored_output" "colored") ("binary" "nnue" "engine")))) (s 2) (e (quote (("serde" "dep:serde") ("nnue" "dep:reqwest" "dep:sha256" "dep:binread" "dep:bytemuck"))))))

