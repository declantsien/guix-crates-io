(define-module (crates-io ti me timeline_rs) #:use-module (crates-io))

(define-public crate-timeline_rs-0.1.0 (c (n "timeline_rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 2)) (d (n "bevy") (r "^0.13") (f (quote ("bevy_render"))) (o #t) (k 0)) (d (n "bevy_egui") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "egui-dropdown") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "minidom") (r "^0.12.0") (d #t) (k 0)) (d (n "quickxml_to_serde") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0pd175qvy1w92fyv4nhvl7hajsmhxy17ywyyj1fkkx47lzh77nrg") (f (quote (("default")))) (s 2) (e (quote (("bevy_example" "dep:bevy" "bevy/default" "bevy_egui" "egui-dropdown") ("bevy" "dep:bevy"))))))

(define-public crate-timeline_rs-0.1.1 (c (n "timeline_rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "assert_float_eq") (r "^1.1.3") (d #t) (k 2)) (d (n "bevy") (r "^0.13") (f (quote ("bevy_render"))) (o #t) (k 0)) (d (n "bevy_egui") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "minidom") (r "^0.12.0") (d #t) (k 0)) (d (n "quickxml_to_serde") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1q7hdwnlvwgrdz8gbdc5ysgyqxqd8sz40ybhq8bd9m8li3w9x4zw") (f (quote (("default")))) (s 2) (e (quote (("bevy_example" "dep:bevy" "bevy/default" "bevy_egui") ("bevy" "dep:bevy"))))))

