(define-module (crates-io ti me time) #:use-module (crates-io))

(define-public crate-time-0.0.1 (c (n "time") (v "0.0.1") (d (list (d (n "gcc") (r "*") (d #t) (k 0)))) (h "0ixlgdlvssq2hdk2i5im5gndf2s4qlnbp234kzhg03q5wd5f68x6") (y #t)))

(define-public crate-time-0.0.2 (c (n "time") (v "0.0.2") (d (list (d (n "gcc") (r "*") (d #t) (k 0)))) (h "1k4dmb5y2x390hrrk75c5zlm3m0wjv1cvfyn4hp4zcy1kfqynmvh") (y #t)))

(define-public crate-time-0.0.3 (c (n "time") (v "0.0.3") (d (list (d (n "gcc") (r "*") (d #t) (k 0)))) (h "0mdhcac9yzlz0x6lsyyl8cnf8h2q6wh3f69akvq72jzwmm21vgi3") (y #t)))

(define-public crate-time-0.1.0 (c (n "time") (v "0.1.0") (d (list (d (n "gcc") (r "^0.1.0") (d #t) (k 1)))) (h "1dqbk71d3xqw4yvw4n43zbxbnap7qlg2ag1yak2h6lx9kndz9bgr")))

(define-public crate-time-0.1.1 (c (n "time") (v "0.1.1") (d (list (d (n "gcc") (r "^0.1.0") (d #t) (k 1)))) (h "169knjpvxmbp4mjw5j5igp0bxy8pdfhjmdpkjmpbkcn3xs648m9w")))

(define-public crate-time-0.1.2 (c (n "time") (v "0.1.2") (d (list (d (n "gcc") (r "^0.1.0") (d #t) (k 1)))) (h "1p64cbq42vylcy63d1dj75jakxhmp3mn2xnfagl29q9krbshjfbr")))

(define-public crate-time-0.1.3 (c (n "time") (v "0.1.3") (d (list (d (n "gcc") (r "^0.1.0") (d #t) (k 1)))) (h "13j6i3qdyd449r3ryd1ifz3n6g4g3ivby293n5hbgc5hhrri83y2")))

(define-public crate-time-0.1.4 (c (n "time") (v "0.1.4") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.1") (d #t) (k 0)))) (h "0z6rh6qwhwv47fhsn3srk1jxi8rdrsqknmpl2i0saiyj3mg4hjqr")))

(define-public crate-time-0.1.5 (c (n "time") (v "0.1.5") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1qdwb5sxdrrkazfjyj30l5d0k5gj78mkaa2waj1jn35rd4wfvln7")))

(define-public crate-time-0.1.6 (c (n "time") (v "0.1.6") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0gwgdlxxzh3f1iiyxjiqc4cqixiw05ir20b8dg2hzzaylbp3d3hw")))

(define-public crate-time-0.1.7 (c (n "time") (v "0.1.7") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "072zf9n9v3c2sig0lry1j0hc96djw6zw05pabmcc3j6c94qsbxcg")))

(define-public crate-time-0.1.8 (c (n "time") (v "0.1.8") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0bnpmbhd8ys4r1qmk00qhij8zihhb2m870nrsns3ab8flx2bsg7v")))

(define-public crate-time-0.1.9 (c (n "time") (v "0.1.9") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "16zpmbh2zlxny7c62g2b7ybgrp2k2k7y1hxgkhv8cbzjg2sjmpyn")))

(define-public crate-time-0.1.10 (c (n "time") (v "0.1.10") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1wl58s65bvs7qkpb6v5a9lw5lkl2kdlp3diwa3x1ydwj7aiyqmva")))

(define-public crate-time-0.1.11 (c (n "time") (v "0.1.11") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1gwa5azyshvvd8iyxhq3iz8r3jrr4ijsrbz9n2zx1xj1xmfvzkk1")))

(define-public crate-time-0.1.12 (c (n "time") (v "0.1.12") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "05l2nfxrif49fp3dh0jvgkmyfbmxp6ca748a5n8pml90isv32pv1")))

(define-public crate-time-0.1.13 (c (n "time") (v "0.1.13") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1xabp8zxpnkcz9vpd8r9kiqwrpl4n6dcmg1510m30w91mcn45wvv")))

(define-public crate-time-0.1.14 (c (n "time") (v "0.1.14") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.1") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1hh82z6b5zd4a9md4q4mvb35kqrimc6ii10wy1r65v1afch6s6kq")))

(define-public crate-time-0.1.15 (c (n "time") (v "0.1.15") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1vdsbx7kbybpkncq3j7c5q0j5360blgmma602abfamm2wyv0mwdz")))

(define-public crate-time-0.1.16 (c (n "time") (v "0.1.16") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0rscnxr7ng94yyr2ls8g1jy40aswp4dxm9vjs2xj37qa92b11gwl")))

(define-public crate-time-0.1.17 (c (n "time") (v "0.1.17") (d (list (d (n "gcc") (r "^0.1") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "185jamdx4kbln199wsws1iab4qa0ldz0cpvz0iaaqf6dxais5pq6")))

(define-public crate-time-0.1.18 (c (n "time") (v "0.1.18") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.2") (o #t) (d #t) (k 0)))) (h "0rj505rzyz0zs10zx8mxr1sshlandmgs6qwdjyazsgrp4gfnw9vl")))

(define-public crate-time-0.1.19 (c (n "time") (v "0.1.19") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1cijsap4p9bky1yvvmi2wa6jk20w84nw44j0yrxh3dcw5zns5n5c")))

(define-public crate-time-0.1.20 (c (n "time") (v "0.1.20") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0r8i4n1xq57dd5z4khwh2ykkjdclxsy7swigrdkc6z6dpjznvz4r")))

(define-public crate-time-0.1.21 (c (n "time") (v "0.1.21") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "15vh6xnisyx9jpwi0x88ijr643mim0ppmsnl67pavhvphh0asl11")))

(define-public crate-time-0.1.22 (c (n "time") (v "0.1.22") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1b72i3a0b4bbqz629drbpb9widc151910i78pp9hyfc7xr6jc1r8") (f (quote (("std-duration"))))))

(define-public crate-time-0.1.23 (c (n "time") (v "0.1.23") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0m01j2r2pylb30hp0v79fiqmf6ry3qn9nsmffcgf9c0k80jn43mz") (f (quote (("std-duration"))))))

(define-public crate-time-0.1.24 (c (n "time") (v "0.1.24") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "00jvf4k0shf5fq1n33gav3h2p2qm3glks0qza72ivp6gh5xmcrsf") (f (quote (("std-duration"))))))

(define-public crate-time-0.1.25 (c (n "time") (v "0.1.25") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "06ca3ir3cx8v0m4c6jny94c70x2ddv35xbgg5vabp4lgr8mi03pj") (f (quote (("std-duration"))))))

(define-public crate-time-0.1.26 (c (n "time") (v "0.1.26") (d (list (d (n "gcc") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)))) (h "061f4gxm1zrd6dxki312rislpm3j73b18ks49a43f29c6gmnp6qz")))

(define-public crate-time-0.1.27 (c (n "time") (v "0.1.27") (d (list (d (n "advapi32-sys") (r "^0.1") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.1.23") (d #t) (k 0)))) (h "1bdxzrk06swhg7n7vx9g54f5lzyr5qywjb18virq5qg27k4zhhqx")))

(define-public crate-time-0.1.29 (c (n "time") (v "0.1.29") (d (list (d (n "advapi32-sys") (r "^0.1") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.1.23") (d #t) (k 0)))) (h "0gc7fivyij87468zf4r2vqvj1mxkdjxlb6zyy02nw15zikhd0ccm")))

(define-public crate-time-0.1.30 (c (n "time") (v "0.1.30") (d (list (d (n "advapi32-sys") (r "^0.1") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.1.23") (d #t) (k 0)))) (h "17w3djndanbs8l7621xjd88jbrdns3nifay22nsk6q4x55byds23")))

(define-public crate-time-0.1.31 (c (n "time") (v "0.1.31") (d (list (d (n "advapi32-sys") (r "^0.1") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (k 0)))) (h "10h52chywm2468zv4ymizi3hf8cqbljykpdgqcbf0gfv3bg0vsdc")))

(define-public crate-time-0.1.32 (c (n "time") (v "0.1.32") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (k 0)))) (h "1wqj5r41w8kqzaawaklzl8k8hyn8f6vir4i8qdpw109v4ci3habs")))

(define-public crate-time-0.1.33 (c (n "time") (v "0.1.33") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "libc") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (k 0)))) (h "1lajam2mwkdcs7qq2zg9whivigxx0ddvssixpxdvjj29k06g02f6")))

(define-public crate-time-0.1.34 (c (n "time") (v "0.1.34") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (k 0)))) (h "0afhmbiqfm8v2qpd59ffkdc975x1jpdw0nis7ivgax2rr6hyljlc")))

(define-public crate-time-0.1.35 (c (n "time") (v "0.1.35") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (k 0)))) (h "1bw977mljs38cdajkpl1g55jz5rj76d8pdxkgbh59pr05bbccziw")))

(define-public crate-time-0.1.36 (c (n "time") (v "0.1.36") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (k 2)) (d (n "kernel32-sys") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "1ppagfxd78ykjf55j34nhlzzqh1pyiar7cgr3zpmcqr02b0n66r1")))

(define-public crate-time-0.1.37 (c (n "time") (v "0.1.37") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (t "cfg(windows)") (k 2)) (d (n "kernel32-sys") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "18yihm2rz7xg4qm55zr43jaa61wajqk12i0y7zw2p2csjszwrmzz")))

(define-public crate-time-0.1.38 (c (n "time") (v "0.1.38") (d (list (d (n "advapi32-sys") (r "^0.1.2") (d #t) (t "cfg(windows)") (k 2)) (d (n "kernel32-sys") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.2.0") (d #t) (t "cfg(windows)") (k 0)))) (h "082mhjgwh4vl5vfi6p29pm3qndjman45c4k2x7rhxg3pmb9qimym")))

(define-public crate-time-0.1.39 (c (n "time") (v "0.1.39") (d (list (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.3") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "161hqx0gw722ikydanpahky447vaxqncwmkj66rny282vzqpalx1")))

(define-public crate-time-0.1.40 (c (n "time") (v "0.1.40") (d (list (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0yv6as6bnq3h37f7y7ird4ddqlglqzlm2b81d1z1mniznc7bw9fq")))

(define-public crate-time-0.1.41 (c (n "time") (v "0.1.41") (d (list (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0v0zp9h0480q2npjildhkpfgyp55m0s5jdz2m615ic0dpxks8zc4")))

(define-public crate-time-0.1.42 (c (n "time") (v "0.1.42") (d (list (d (n "libc") (r "^0.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0vsbvsz0ryxb35dy9j4anxvy8zlaplmjmi0a4z4l64bc135cz3fv")))

(define-public crate-time-0.2.0 (c (n "time") (v "0.2.0") (d (list (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0)))) (h "11amhkwg9adj6vmz1r76w1iriyh85637g2al5cswh1qsm3h6vhpw") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "std" "deprecated"))))))

(define-public crate-time-0.2.1 (c (n "time") (v "0.2.1") (d (list (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0)))) (h "1di1j2krda046422k2sm7vi9zqs1kb7zv73sjp6rbqqs2zbfavdc") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "std" "deprecated"))))))

(define-public crate-time-0.2.2 (c (n "time") (v "0.2.2") (d (list (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0)))) (h "14440snq640hx6gkpwf1y21fh8w8rnwkpkmyrix1x7kp3m7kzijy") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "std" "deprecated"))))))

(define-public crate-time-0.2.3 (c (n "time") (v "0.2.3") (d (list (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)))) (h "10kr6xzihrzac6zi9fadbknijl82xnz3hks8js9mq6hjh8x7gkp2") (f (quote (("panicking-api") ("deprecated") ("default" "deprecated") ("alloc" "serde/alloc")))) (y #t)))

(define-public crate-time-0.2.4 (c (n "time") (v "0.2.4") (d (list (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)))) (h "1ry2sjbgbg6biq779zfzxn68k9l5kipkcqxgdizml5jnr1p2r2fn") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.5 (c (n "time") (v "0.2.5") (d (list (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)))) (h "0dvrg7v5dqibkm5y07d3jnxb6jqlwmq3c21rqmqfhw9knajw04xw") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "deprecated" "std")))) (y #t)))

(define-public crate-time-0.2.6 (c (n "time") (v "0.2.6") (d (list (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)))) (h "1vz3hhj6ja7l9bx3q5ghs6frqgfgsxnp65yh032khm278hj79f5w") (f (quote (("std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.7 (c (n "time") (v "0.2.7") (d (list (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "14vsf416q5lizh78i7fnmq11a97yr1v7hhapi9acrp24kjasqhrh") (f (quote (("std" "libc" "winapi") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.8 (c (n "time") (v "0.2.8") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1wrv92nyix10vajk4dq8khq8ggm9l5y4nfbimmf2davwdxm9w5rx") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.9 (c (n "time") (v "0.2.9") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1fh9nvdzqmxsk0vcpphm01pwmxbbimzj6b4s79gnzm05an1sfab3") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.1.43 (c (n "time") (v "0.1.43") (d (list (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0f14wrgxj7ya2v4msg5mni7046bsm2angm7cn3pd3yv04gpm12na")))

(define-public crate-time-0.2.10 (c (n "time") (v "0.2.10") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.3") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0am1y2qkn1qx7a6rx2ind0x36vhbq8rv1f00jmnxn4djyzmxbjya") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.11 (c (n "time") (v "0.2.11") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1csm1i44rlld9lbl5v9bx9y8984f838hmh4snc0d9bp70z3xzxva") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.12 (c (n "time") (v "0.2.12") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "037f3581y974j425vk7v97fn66p9k0b5044p0p5q8gzs45fylq5k") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.13 (c (n "time") (v "0.2.13") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "10ryr2bivh9hx51gw9pharq3y1hmhm2cvhcry73g7rqhfl55idd6") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.14 (c (n "time") (v "0.2.14") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0ij426c07k7ff9lw2f3diz6139rd3bqk078y45m1lgvvhcg5i6y1") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.15 (c (n "time") (v "0.2.15") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1hg6zn71c9xb66j1i9wwwasrxapi5zhnnixfxrqngh76s8lhhcz1") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.2.16 (c (n "time") (v "0.2.16") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(cargo_web)") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "05fbb9hywfa96pxlcm5ps01pcyzzj8qw7xszd0x6gv0ybgfcll9s") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std") ("__doc"))))))

(define-public crate-time-0.1.44 (c (n "time") (v "0.1.44") (d (list (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasi") (r "=0.10.0") (d #t) (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0m9jwy2pcmk232r3b9r80fs12mkckfjffjha4qfaxcdq9a8ydfbd")))

(define-public crate-time-0.2.17 (c (n "time") (v "0.2.17") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0pdmvb56ck35vwcqfqbp8pi4pm8jgf2g09mvzvh14p98fa5cjzna") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.18 (c (n "time") (v "0.2.18") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0cg5bjgfimw95yanzxq7kzj3zgdabd5ayffvlm9bn74amrim2y0j") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.19 (c (n "time") (v "0.2.19") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "18bhl0nmfyd8drksskw830ybw9pr47pisfn4245wabqijgys3hc0") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.20 (c (n "time") (v "0.2.20") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1vizjlx9b5hdv1ha70188s1hljqcsq8kzn6dx6bipgy92g2m6j8d") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.21 (c (n "time") (v "0.2.21") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0b7b7z5syaqlah9cckdn0hy378hvdh31p46nbqgz1ag253xk2bic") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.22 (c (n "time") (v "0.2.22") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1bwk3as3d8a9qypwqw6i87dn0bs3s6jxk1gjzcbhks35j0f1bdsm") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.23 (c (n "time") (v "0.2.23") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12z95k0005rmyn9pf9v4hq80khsns7y5wfydnjr5jpci2yiyxnmw") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.24 (c (n "time") (v "0.2.24") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1xsq83n90nx4sa9ssvs688nh85dmizafhr9ndc6ln9na9pa3wg97") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.25 (c (n "time") (v "0.2.25") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7") (o #t) (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "standback") (r "^0.2.5") (k 0)) (d (n "standback") (r "^0.2") (d #t) (k 2)) (d (n "stdweb") (r "^0.4") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9") (d #t) (k 1)) (d (n "winapi") (r "^0.3") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1xs2l59b1dxjm9w9si37l21k7cqkakw9b4skq9a188icji3b158i") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.2.26 (c (n "time") (v "0.2.26") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.89") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand") (r "^0.7.3") (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "standback") (r "^0.2.15") (k 0)) (d (n "standback") (r "^0.2.15") (d #t) (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.2") (d #t) (k 1)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0wpkb0ri6jxsydqy9bk2b3iklhmj94pndl8208ni6mbrykxwpa08") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.3.0-alpha-0 (c (n "time") (v "0.3.0-alpha-0") (d (list (d (n "const_fn") (r "^0.4.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "serde") (r "^1.0.125") (o #t) (k 0)) (d (n "serde") (r "^1.0.125") (k 2)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)) (d (n "standback") (r "^0.3.1") (f (quote ("msrv-1-46"))) (k 0)) (d (n "time-macros") (r "=0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0kr28pc013m0h1adwdq6xhbwrgajj6m3b4xzsjpcfwfqp8m9bfr9") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std" "winapi") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.0-alpha-1 (c (n "time") (v "0.3.0-alpha-1") (d (list (d (n "const_fn") (r "^0.4.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "serde") (r "^1.0.125") (o #t) (k 0)) (d (n "serde") (r "^1.0.125") (k 2)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)) (d (n "standback") (r "^0.3.2") (f (quote ("msrv-1-46"))) (k 0)) (d (n "time-macros") (r "=0.2.0-alpha.0") (o #t) (d #t) (k 0)))) (h "1kbl9ga36bcgkl5fkgi9n3jgawbl6llkai34icrjgkg0ln19hhgq") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.2.27 (c (n "time") (v "0.2.27") (d (list (d (n "const_fn") (r "^0.4.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.89") (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand") (r "^0.7.3") (k 2)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "standback") (r "^0.2.15") (k 0)) (d (n "standback") (r "^0.2.15") (d #t) (k 2)) (d (n "stdweb") (r "^0.4.20") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "time-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "version_check") (r "^0.9.2") (d #t) (k 1)) (d (n "winapi") (r "^0.3.9") (f (quote ("minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0hm209d078jfgxzjhi5xqim64q31rlj1h70zz57qbmpbirzsjlj7") (f (quote (("std" "libc" "winapi" "stdweb" "standback/std") ("panicking-api") ("deprecated") ("default" "deprecated" "std"))))))

(define-public crate-time-0.3.0-alpha-2 (c (n "time") (v "0.3.0-alpha-2") (d (list (d (n "const_fn") (r "^0.4.7") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.93") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (k 2)) (d (n "serde") (r "^1.0.125") (o #t) (k 0)) (d (n "serde") (r "^1.0.125") (k 2)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.125") (d #t) (k 2)) (d (n "standback") (r "^0.3.2") (f (quote ("msrv-1-46"))) (k 0)) (d (n "time-macros") (r "=0.2.0-alpha.1") (o #t) (d #t) (k 0)))) (h "027dy3jfsxdsqwawsvai00bzmp7hfzawghsjfkskxjgrydx6v40g") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.0 (c (n "time") (v "0.3.0") (d (list (d (n "compiletest") (r "^0.7.0") (d #t) (k 2) (p "compiletest_rs")) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.0") (o #t) (d #t) (k 0)))) (h "0blly39b5340bn2k8nhb7pbmbpkyj3n5823afnnp5rsncif57wkc") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.1 (c (n "time") (v "0.3.1") (d (list (d (n "compiletest") (r "^0.7.0") (d #t) (k 2) (p "compiletest_rs")) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.1") (o #t) (d #t) (k 0)))) (h "1rlgh04dpww0zccw6pfssms9r2nxrj34a16vqfz5bm65v63nfxqs") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.2 (c (n "time") (v "0.3.2") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.2") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1c2j1n31j6yfzbskb81dyky6j98s1xkysf92ik75sfpvm74i02iy") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.3 (c (n "time") (v "0.3.3") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "00vdrjz05v98kkp8m5daa8p94airz3as1k527d2r60lf2xawzqfd") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.4 (c (n "time") (v "0.3.4") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(unsound_local_offset)") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1pdfqxh21v31lshlsnckl0wln96bvsnirhn2dbld2axcmq6ypglr") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.5 (c (n "time") (v "0.3.5") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^0.4.7") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(any(target_os = \"linux\", unsound_local_offset))") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1b943jf54q1667i328x3z73fsjdhcqdqccxckx1nzwwaz9ygxvs1") (f (quote (("std" "alloc") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.6 (c (n "time") (v "0.3.6") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "04xllphczli8wfrl7y2ma76mn9b1s12rcayy6p1pjlg0k294pmf8") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.7 (c (n "time") (v "0.3.7") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0gbmwlkj15dfhbqvxlzji1ffc1lidblpgg1q3b3378hgyfcbqk00") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.8 (c (n "time") (v "0.3.8") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.3") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0qbj5hgs94l4r3x2wkhx3ag0blx4y6n7yvmdmgnvig1zvhcm658s") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (y #t)))

(define-public crate-time-0.3.9 (c (n "time") (v "0.3.9") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.34") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1p8dsb0zwa2r9bz2f31kxfsij6qhmkf1as3ch82z0q58lw42ww62") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc"))))))

(define-public crate-time-0.3.10 (c (n "time") (v "0.3.10") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1c175s84m1i1kl12k85c6x9frx84lbba6xp1lr0dcc033i61ll42") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.57.0")))

(define-public crate-time-0.3.11 (c (n "time") (v "0.3.11") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "05rjpgfsq6gvizn89ydwwmy0ihgfvikxcwq8bz09dw5jvi0izjbj") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.57.0")))

(define-public crate-time-0.3.12 (c (n "time") (v "0.3.12") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "03w7ik5vkiyzxxfp3ilmyj1s26sxqmbflzjgx3yrgfi3zj9wrdvl") (f (quote (("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.57.0")))

(define-public crate-time-0.3.13 (c (n "time") (v "0.3.13") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0iga3vqslwxjam1n67njc220b53ki3wkyzq7gwy8nidiljgzyxnv") (f (quote (("wasm-bindgen" "js-sys") ("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.57.0")))

(define-public crate-time-0.3.14 (c (n "time") (v "0.3.14") (d (list (d (n "criterion") (r "^0.3.5") (d #t) (t "cfg(bench)") (k 2)) (d (n "criterion-cycles-per-byte") (r "^0.1.2") (d #t) (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "16vzxws9rmb7pg682r9fq3jvj14yr7lhhs8v4nwsdhqqnql9lgrw") (f (quote (("wasm-bindgen" "js-sys") ("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.59.0")))

(define-public crate-time-0.3.15 (c (n "time") (v "0.3.15") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck-dep") (r "^1.0.3") (o #t) (k 0) (p "quickcheck")) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-macros") (r "=0.2.4") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.63") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "035ggryin0n3x8fjqmbb8wybsbsmmvkx5bmckk1qw8ylqj2sjd6n") (f (quote (("wasm-bindgen" "js-sys") ("std" "alloc") ("serde-well-known" "serde/alloc" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("quickcheck" "quickcheck-dep" "alloc") ("parsing") ("macros" "time-macros") ("local-offset" "std") ("large-dates" "time-macros/large-dates") ("formatting" "itoa" "std") ("default" "std") ("alloc")))) (r "1.59.0")))

(define-public crate-time-0.3.16 (c (n "time") (v "0.3.16") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.0") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.5") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1jpv33lwhvxxibxw09rr3y02q1lwhfmy7nrdv430x1c0k65mraqg") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("local-offset" "std") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.60.0")))

(define-public crate-time-0.3.17 (c (n "time") (v "0.3.17") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.0") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.6") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.6") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0xl3lg062kzfs2byg8aigx98wygd767rhjs3lsy37ggf2x3byqd5") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.60.0")))

(define-public crate-time-0.1.45 (c (n "time") (v "0.1.45") (d (list (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wasi") (r "=0.10.0") (d #t) (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "processthreadsapi" "winbase"))) (d #t) (k 2)))) (h "0nl0pzv9yf56djy8y5dx25nka5pr2q1ivlandb3d24pksgx7ly8v")))

(define-public crate-time-0.3.18 (c (n "time") (v "0.3.18") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.0") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.6") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.6") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "04w65rm49f7sj410yd1nqqydbdnaz9cpmbdfnb87dm81ygm9f05g") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.62.0")))

(define-public crate-time-0.3.19 (c (n "time") (v "0.3.19") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.0") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.7") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.7") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1hnnp3138zxk42r077jxhk1kma16bn9di1w5k3yzi3zd7wxhl9ak") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.62.0")))

(define-public crate-time-0.3.20 (c (n "time") (v "0.3.20") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.0") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.8") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.8") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "142qkacz9gby0693p70744zs37svxc2dj6mkbfkmx6yinknby36d") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.63.0")))

(define-public crate-time-0.3.21 (c (n "time") (v "0.3.21") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.9") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.9") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1k1nr3882n71x1q6sj15nzny84xcg00r81ps4fcwmjxa9qw06d4g") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.65.0")))

(define-public crate-time-0.3.22 (c (n "time") (v "0.3.22") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.9") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.9") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1z8y87bxq0fr23r1ma7kb1a15ws2spa8ah77v42y0fi4y4y1p7pa") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.65.0")))

(define-public crate-time-0.3.23 (c (n "time") (v "0.3.23") (d (list (d (n "criterion") (r "^0.4.0") (t "cfg(bench)") (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.10") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.10") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0ihlz293f792cd7v7qhpkx8rqkzs0fr77bzddw8msfpld309kqsr") (f (quote (("std" "alloc") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde") ("rand" "dep:rand") ("quickcheck" "dep:quickcheck" "alloc") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.65.0")))

(define-public crate-time-0.3.24 (c (n "time") (v "0.3.24") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.5") (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.11") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "12rh0pa5nyibybv4can3kag8drzamg646iaqnd3ad0j8jv6sp7mp") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.25 (c (n "time") (v "0.3.25") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.7") (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.126") (o #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.11") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.11") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1skmrl9r4n16gyz068h8pr18wb5202gh83ppplznd3dib0yxdzdh") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.26 (c (n "time") (v "0.3.26") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.7") (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r ">=1.0.126, <=1.0.171") (o #t) (k 0)) (d (n "serde") (r ">=1.0.126, <=1.0.171") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.12") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.12") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "01qyfpqbwljyywnq2qwwx1x7rqm0h4pcrxx20qwsph88dfn0k7d7") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.27 (c (n "time") (v "0.3.27") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.7") (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.13") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.13") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "01yfml5cv20pvmmk6vpiqpqr40q41s1klagj91gyb3bdkbkrxcqb") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.28 (c (n "time") (v "0.3.28") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.7") (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.1") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.14") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.14") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0j3yl5q4w9vcw55hxxb1a3crls1w82v5dahicj7c4ifjgxavpxhp") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.29 (c (n "time") (v "0.3.29") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.7") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.15") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.15") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1zhq1ch3vs1pxqbbgw9hispqphz206fc490dmkf97i4981pq0vs2") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.30 (c (n "time") (v "0.3.30") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.15") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.15") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1xgnflidij6361zjg4mzz4lqndayq1ph82n1cbjydppj02rlm8y4") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.31 (c (n "time") (v "0.3.31") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.16") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.16") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0gjqcdsdbh0r5vi4c2vrj5a6prdviapx731wwn07cvpqqd1blmzn") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.32 (c (n "time") (v "0.3.32") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 2)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "1gb89vzvvla7ww5rvw5pv6h92rsbicvjpxsbm68wpd5zgkbwx07y") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.33 (c (n "time") (v "0.3.33") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 2)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0y9n11m5c64pfwmqrykgwyqq17983v587rhrkwh10zx0nxwlpch0") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.34 (c (n "time") (v "0.3.34") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 2)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.17") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "0jc7wgprzqjhzd0nqkbmdlnjwyddnswmjw86ni2vq55v45jqn968") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.35 (c (n "time") (v "0.3.35") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 2)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.18") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.18") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "10h5rbkml4zzm41gnam09nsbw347miwd1n0y5p1ipwgb7pkfr2gg") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

(define-public crate-time-0.3.36 (c (n "time") (v "0.3.36") (d (list (d (n "criterion") (r "^0.5.1") (t "cfg(bench)") (k 2)) (d (n "deranged") (r "^0.3.9") (f (quote ("powerfmt"))) (k 0)) (d (n "itoa") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (o #t) (d #t) (t "cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.98") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 0)) (d (n "num-conv") (r "^0.1.0") (d #t) (k 2)) (d (n "num_threads") (r "^0.1.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "powerfmt") (r "^0.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (o #t) (k 0)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (o #t) (k 0)) (d (n "rand") (r "^0.8.4") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.184") (o #t) (k 0)) (d (n "serde") (r "^1.0.184") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.126") (d #t) (k 2)) (d (n "time-core") (r "=0.1.2") (d #t) (k 0)) (d (n "time-macros") (r "=0.2.18") (o #t) (d #t) (k 0)) (d (n "time-macros") (r "=0.2.18") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.68") (d #t) (t "cfg(__ui_tests)") (k 2)))) (h "11g8hdpahgrf1wwl2rpsg5nxq3aj7ri6xr672v4qcij6cgjqizax") (f (quote (("std" "alloc" "deranged/std") ("serde-well-known" "serde" "formatting" "parsing") ("serde-human-readable" "serde" "formatting" "parsing") ("default" "std")))) (s 2) (e (quote (("wasm-bindgen" "dep:js-sys") ("serde" "dep:serde" "time-macros?/serde" "deranged/serde") ("rand" "dep:rand" "deranged/rand") ("quickcheck" "dep:quickcheck" "alloc" "deranged/quickcheck") ("parsing" "time-macros?/parsing") ("macros" "dep:time-macros") ("local-offset" "std" "dep:libc" "dep:num_threads") ("large-dates" "time-macros?/large-dates") ("formatting" "dep:itoa" "std" "time-macros?/formatting") ("alloc" "serde?/alloc")))) (r "1.67.0")))

