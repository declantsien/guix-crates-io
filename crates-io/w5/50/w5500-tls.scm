(define-module (crates-io w5 #{50}# w5500-tls) #:use-module (crates-io))

(define-public crate-w5500-tls-0.1.0-alpha.0 (c (n "w5500-tls") (v "0.1.0-alpha.0") (h "0fisbgwhpnk04y533l8kpqzgsrg0i302anlk1yqc784bxas9lj96")))

(define-public crate-w5500-tls-0.1.0-alpha.1 (c (n "w5500-tls") (v "0.1.0-alpha.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.10.1") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.9.0") (d #t) (k 0)))) (h "19vaj618i8vpm5y6k08gp5gl8cjqndn1pvqn4w5bzibqifgp46xw") (f (quote (("std" "w5500-hl/std") ("embedded-hal" "w5500-hl/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.1.0 (c (n "w5500-tls") (v "0.1.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.9.0") (d #t) (k 0)))) (h "0adi65mws6c269znw9p1iq8970iwmlr55qryi0zws89ysz4jwwba") (f (quote (("std" "w5500-hl/std") ("embedded-hal" "w5500-hl/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.1.1 (c (n "w5500-tls") (v "0.1.1") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.9.0") (d #t) (k 0)))) (h "1k42g578wp2gxz9rgkjkxyx0qw416zz738rq7jcqhh42bz3dpdfp") (f (quote (("std" "w5500-hl/std") ("embedded-hal" "w5500-hl/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.1.2 (c (n "w5500-tls") (v "0.1.2") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "p256-cm4") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.9.0") (d #t) (k 0)))) (h "1il4zfv8awxmwki7v67vn964pya9sxjrsxjy2jm1qgi2hp2yyalq") (f (quote (("std" "w5500-hl/std") ("embedded-hal" "w5500-hl/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.1.3 (c (n "w5500-tls") (v "0.1.3") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.11") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "p256-cm4") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.9.0") (d #t) (k 0)))) (h "07zhhcxyaj3nphv55hi5vm5ccvc6x5ind379m7n8bjwspp1wcc63") (f (quote (("std" "w5500-hl/std") ("embedded-hal" "w5500-hl/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.2.0 (c (n "w5500-tls") (v "0.2.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.13") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "p256-cm4") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.10.0") (d #t) (k 0)))) (h "1fcbqxzvkpqq07g6fw1sb2zx75jz27fj01crk9bjyfcyl2w7z7c5") (f (quote (("std" "w5500-hl/std") ("ip_in_core" "w5500-hl/ip_in_core") ("eh1" "w5500-hl/eh1") ("eh0" "w5500-hl/eh0")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

(define-public crate-w5500-tls-0.3.0 (c (n "w5500-tls") (v "0.3.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 2)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "hkdf") (r "^0.12") (k 0)) (d (n "hmac") (r "^0.12") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mqttbytes") (r "^0.6") (d #t) (k 2)) (d (n "p256") (r "^0.13") (f (quote ("arithmetic" "ecdh"))) (k 0)) (d (n "p256-cm4") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "subtle") (r "^2") (k 0)) (d (n "w5500-hl") (r "^0.11.0") (d #t) (k 0)))) (h "18g9j24n9p3b4k8ydmpg25igmc9vnl0hh49fx77na8k2qdij2jr0") (f (quote (("std" "w5500-hl/std") ("ip_in_core" "w5500-hl/ip_in_core") ("eh1" "w5500-hl/eh1") ("eh0" "w5500-hl/eh0")))) (s 2) (e (quote (("defmt" "w5500-hl/defmt" "dep:defmt" "heapless/defmt-impl"))))))

