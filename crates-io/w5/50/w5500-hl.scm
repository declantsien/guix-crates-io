(define-module (crates-io w5 #{50}# w5500-hl) #:use-module (crates-io))

(define-public crate-w5500-hl-0.1.0-alpha.1 (c (n "w5500-hl") (v "0.1.0-alpha.1") (d (list (d (n "embedded-hal-mock") (r "^0.7") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "stderrlog") (r "^0.5") (d #t) (k 2)) (d (n "trust-dns-client") (r "^0.20") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.4") (d #t) (k 0)) (d (n "w5500-regsim") (r "^0.1.0-alpha.1") (d #t) (k 2)))) (h "1lsrc84w5z0qmc31h3jxxfdv6zz3gjiv67aiiy04fi7rq2ikyka5")))

(define-public crate-w5500-hl-0.1.0-alpha.2 (c (n "w5500-hl") (v "0.1.0-alpha.2") (d (list (d (n "embedded-hal-mock") (r "~0.7") (d #t) (k 2)) (d (n "httparse") (r "^1") (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "stderrlog") (r "~0.5") (d #t) (k 2)) (d (n "trust-dns-client") (r "~0.20") (d #t) (k 2)) (d (n "version-sync") (r "~0.9") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.5.1") (d #t) (k 0)) (d (n "w5500-regsim") (r "^0.1.0-alpha.2") (d #t) (k 2)))) (h "03fb3i7lh2i8s3vbj0qzsbnnl0zg5m21ipj3zxpzknk3nk8zihj4")))

(define-public crate-w5500-hl-0.1.0 (c (n "w5500-hl") (v "0.1.0") (d (list (d (n "embedded-hal-mock") (r "~0.7") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.1") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.5.1") (f (quote ("embedded-hal"))) (k 0)))) (h "0awfbgf6rr9pxwp5x6cxipyjpmvarn2r1yzqyqmvpkwd9ncdfqg9")))

(define-public crate-w5500-hl-0.2.0 (c (n "w5500-hl") (v "0.2.0") (d (list (d (n "embedded-hal-mock") (r "~0.7") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.1") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.6") (d #t) (k 0)) (d (n "w5500-ll") (r "~0.6") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "0nc8b7mdn374h8vxqfkqr08chxss3bmra6x35gq8kylfp80ipgk1") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt"))))))

(define-public crate-w5500-hl-0.3.0 (c (n "w5500-hl") (v "0.3.0") (d (list (d (n "embedded-hal-mock") (r "~0.7") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.2") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.7") (d #t) (k 0)) (d (n "w5500-ll") (r "~0.7") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "1b8brc58aa97di3cqwgq80ab2vhckpnq6rzlzajc8j1hcq7rdp6l") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt"))))))

(define-public crate-w5500-hl-0.4.0 (c (n "w5500-hl") (v "0.4.0") (d (list (d (n "embedded-hal-mock") (r "~0.7") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.2") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.8") (d #t) (k 0)) (d (n "w5500-ll") (r "~0.8") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "0vs6afiijknygvfdkqx8ccbrrqr0y31lzc16p6gjxlkzz93whxyk") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt"))))))

(define-public crate-w5500-hl-0.5.0 (c (n "w5500-hl") (v "0.5.0") (d (list (d (n "embedded-hal-mock") (r "~0.8") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.3") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.8") (d #t) (k 0)) (d (n "w5500-ll") (r "~0.8") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "0m08fa19jx4affyvicz6gc5kzi213js8m3cbsidar523p1a402sn") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt"))))))

(define-public crate-w5500-hl-0.6.0 (c (n "w5500-hl") (v "0.6.0") (d (list (d (n "embedded-hal-mock") (r "~0.8") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "~0.9.3") (d #t) (k 2)) (d (n "w5500-ll") (r "~0.9") (d #t) (k 0)) (d (n "w5500-ll") (r "~0.9") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "05y6w7ki3iap7nwfvfi9787j98nygfh3qbgi6qw91kjw2byi0s2i") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt")))) (r "1.56")))

(define-public crate-w5500-hl-0.7.0 (c (n "w5500-hl") (v "0.7.0") (d (list (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "version-sync") (r "^0.9.3") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.10") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.10") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "0bgqxy4k73r9bdzz63w1cp85msm0ncpcfv1yg01nmqvjvw8vly14") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt")))) (r "1.56")))

(define-public crate-w5500-hl-0.7.1 (c (n "w5500-hl") (v "0.7.1") (d (list (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.10") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.10") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "01k3k8dyq4c8blblyqbk9dnjzpnvpjyrf3ay3kgby58yvxfj135s") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal") ("defmt" "w5500-ll/defmt")))) (r "1.56")))

(define-public crate-w5500-hl-0.8.0 (c (n "w5500-hl") (v "0.8.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.10") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.10") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "190ja2r45h2i5yn4f45vy9kkf4lr6r5xysxqzw9bf59hh1x8s3a5") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-ll/defmt" "dep:defmt"))))))

(define-public crate-w5500-hl-0.9.0 (c (n "w5500-hl") (v "0.9.0") (d (list (d (n "defmt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.10") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.10") (f (quote ("embedded-hal" "defmt"))) (d #t) (k 2)))) (h "1xlzmppgyl11sjd8ldhimcba7hx0x7iqdsdng0xw50f42kkfa2y5") (f (quote (("std" "w5500-ll/std") ("embedded-hal" "w5500-ll/embedded-hal")))) (s 2) (e (quote (("defmt" "w5500-ll/defmt" "dep:defmt"))))))

(define-public crate-w5500-hl-0.10.0 (c (n "w5500-hl") (v "0.10.0") (d (list (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.11") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.11.0") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.11.0") (f (quote ("eh1" "defmt"))) (d #t) (k 2)))) (h "139ng86ph05xhj90zgdfwyvv30glsxdxyg5j6ldrvs6qw150mfg4") (f (quote (("std" "w5500-ll/std") ("ip_in_core" "w5500-ll/ip_in_core") ("eh1" "w5500-ll/eh1") ("eh0" "w5500-ll/eh0")))) (s 2) (e (quote (("defmt" "w5500-ll/defmt" "dep:defmt"))))))

(define-public crate-w5500-hl-0.11.0 (c (n "w5500-hl") (v "0.11.0") (d (list (d (n "defmt") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 2)) (d (n "w5500-ll") (r "^0.12.0") (d #t) (k 0)) (d (n "w5500-ll") (r "^0.12.0") (f (quote ("eh1" "defmt"))) (d #t) (k 2)))) (h "0sfmdr9idhhyg8jna1fz1crgn4gdkhb8ilwg09rfj8lpzfbbfpil") (f (quote (("std" "w5500-ll/std") ("ip_in_core" "w5500-ll/ip_in_core") ("eh1" "w5500-ll/eh1") ("eh0" "w5500-ll/eh0")))) (s 2) (e (quote (("defmt" "w5500-ll/defmt" "dep:defmt"))))))

