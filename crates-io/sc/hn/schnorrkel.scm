(define-module (crates-io sc hn schnorrkel) #:use-module (crates-io))

(define-public crate-schnorrkel-0.0.0 (c (n "schnorrkel") (v "0.0.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "05jir9hw87ndnxk7gb2d6ql95dq2zlgwn75bm1fqxd1hi0qlymgy") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.1.0 (c (n "schnorrkel") (v "0.1.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "0k01rrhi0rgwiwz71vw1j8m13ir31zdfqz0rbg3qhmbqi29na057") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.1.1 (c (n "schnorrkel") (v "0.1.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "0fbs9c9qcjb8ib4vxqyxpvmv0fb3p45ay0nhl01xilxyz4cgbvxm") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.2.0 (c (n "schnorrkel") (v "0.2.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "0h5mqim0fhwq618c494r2100zyh55kj489bcc7r0rk83l91pgv5p") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.3.0 (c (n "schnorrkel") (v "0.3.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "1v74ynw8fnbz329w0r50pndl17kcxvm0fis3k4a5kipx9fkqcigw") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.4.0 (c (n "schnorrkel") (v "0.4.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "012cjm573rd6a4g957ac75lxhma341vr07dv9fbcpfwzsjl56knd") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.5.0 (c (n "schnorrkel") (v "0.5.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "034qlax8m4xcsxmswlp12749b16sk48q3jr1nw4hxx3div4mdzsy") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.6.0 (c (n "schnorrkel") (v "0.6.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "0015mq84h6n6jjgqr7xsn92b27w072vfy9iiddl705j5gqfszc0l") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.6.1 (c (n "schnorrkel") (v "0.6.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (k 0)) (d (n "failure") (r "^0.1.1") (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "merlin") (r "^1.1.0") (k 0)) (d (n "rand") (r "^0.6.0") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)))) (h "01czssrmflb1yj5mwasbn9f1n3xxqy3pbvi2hf812yjlk0sd9cxb") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly" "clear_on_drop/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.7.0 (c (n "schnorrkel") (v "0.7.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "1h1v3b41df7qal46a6xwmphz66lc476k40dkqajbwfv9kmfd65d1") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("ed25519_dalek" "sha2") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.8.0 (c (n "schnorrkel") (v "0.8.0") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "1qk7skddv1k6bknfawpm41qrfvj54hdidpan4hk1i4ih5cyvpy4b") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.8.1 (c (n "schnorrkel") (v "0.8.1") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "0c27ljymxlwgivjhgh4fgj3x4nc64z3kpgis84bglr4pqlhbsryd") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.8.2 (c (n "schnorrkel") (v "0.8.2") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "0bnp35lg4i7ajkx3gzzma8fclr26pv6srcsvgq0n0nlif45x3fwd") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.8.3 (c (n "schnorrkel") (v "0.8.3") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "0lf9q4w8ph49b1szkpvddk6aynrkl8qz9fv6d44f9y9v4w1kczal") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.8.4 (c (n "schnorrkel") (v "0.8.4") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.2") (k 0)))) (h "1dawphxclbdgxdm5bghy0xlw8idzb5ahl28wnwhkz9a95ylxds3p") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("u64_backend" "curve25519-dalek/u64_backend" "ed25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend" "ed25519-dalek/u32_backend") ("std" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend" "ed25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-schnorrkel-0.8.5 (c (n "schnorrkel") (v "0.8.5") (d (list (d (n "bincode") (r "^0.9") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^1.2") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.1") (o #t) (k 0)) (d (n "failure") (r "^0.1.5") (k 0)) (d (n "hex-literal") (r "^0.2.0") (d #t) (k 2)) (d (n "merlin") (r "^1.2") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("i128_support"))) (o #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 2)) (d (n "rand_core") (r "^0.4.2") (k 0)) (d (n "rand_os") (r "^0.1.3") (o #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)) (d (n "sha3") (r "^0.8") (d #t) (k 2)) (d (n "subtle") (r "^2.1") (k 0)) (d (n "zeroize") (r "^0.9.3") (k 0)))) (h "1lr3j19xd7q564ygh95wvidrfjcyaapp417lr74l0y63nf0q7kga") (f (quote (("yolocrypto" "curve25519-dalek/yolocrypto") ("wasm-bindgen" "rand_os/wasm-bindgen") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("stdweb" "rand_os/stdweb") ("std" "rand_os" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend" "rand") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc"))))))

(define-public crate-schnorrkel-0.9.0 (c (n "schnorrkel") (v "0.9.0") (d (list (d (n "aead") (r "^0.2.0") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (k 0)) (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (k 0)) (d (n "getrandom") (r "^0.1.14") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "merlin") (r "^2.0") (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "sha2") (r "^0.8.0") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "1yn21fri9bf38192xrr6m9nbq6610x4lqxmkl6zv3sgm9kvsc370") (f (quote (("wasm-bindgen" "getrandom/wasm-bindgen") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("stdweb" "getrandom/stdweb") ("std" "getrandom" "curve25519-dalek/std" "rand/std") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend" "rand" "getrandom") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc"))))))

(define-public crate-schnorrkel-0.9.1 (c (n "schnorrkel") (v "0.9.1") (d (list (d (n "aead") (r "^0.2.0") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.5") (k 0)) (d (n "arrayvec") (r "^0.5.1") (k 0)) (d (n "bincode") (r "^1.2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^2.0") (k 0)) (d (n "ed25519-dalek") (r "^1.0.0-pre.3") (o #t) (k 0)) (d (n "failure") (r "^0.1.6") (o #t) (k 0)) (d (n "getrandom") (r "^0.1.14") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "merlin") (r "^2.0") (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (k 0)) (d (n "sha2") (r "^0.8.0") (k 0)) (d (n "sha2") (r "^0.8.0") (d #t) (k 2)) (d (n "sha3") (r "^0.8.2") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "0qkq4sm7yppih2zw753aadfqwn69ngv15spnd3m1xn3hzqx406q2") (f (quote (("wasm-bindgen" "getrandom/wasm-bindgen") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("stdweb" "getrandom/stdweb") ("std" "getrandom" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend" "rand" "getrandom") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc"))))))

(define-public crate-schnorrkel-0.9.2 (c (n "schnorrkel") (v "0.9.2") (d (list (d (n "aead") (r "^0.4.0") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (k 0)) (d (n "arrayvec") (r "^0.5.2") (k 0)) (d (n "bincode") (r "^1.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0") (k 0) (p "curve25519-dalek-ng")) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8.3") (o #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (k 0)) (d (n "sha2") (r "^0.9.3") (k 0)) (d (n "sha2") (r "^0.9.3") (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0) (p "subtle-ng")) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "0rn2532iavnr5w3r2a595qih4q8ql5gyrzdzjjliiihyvyynsxpp") (f (quote (("wasm-bindgen" "getrandom/wasm-bindgen") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "getrandom" "curve25519-dalek/std" "rand/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend" "rand" "getrandom") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.10.0 (c (n "schnorrkel") (v "0.10.0") (d (list (d (n "aead") (r "^0.4.0") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (k 0)) (d (n "arrayvec") (r "^0.5.2") (k 0)) (d (n "bincode") (r "^1.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0") (k 0) (p "curve25519-dalek-ng")) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "getrandom") (r "^0.2.2") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (k 0)) (d (n "sha2") (r "^0.9.3") (k 0)) (d (n "sha2") (r "^0.9.3") (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0) (p "subtle-ng")) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "0nclz523lrrqglkrgl8xk39cjmi4d085x26m96yfh66a8c59w585") (f (quote (("wasm-bindgen" "getrandom/wasm-bindgen") ("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "getrandom" "curve25519-dalek/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("default" "std" "u64_backend" "getrandom") ("chacha" "rand_chacha") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.10.1 (c (n "schnorrkel") (v "0.10.1") (d (list (d (n "aead") (r "^0.4.0") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (k 0)) (d (n "arrayvec") (r "^0.5.2") (k 0)) (d (n "bincode") (r "^1.3.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0") (k 0) (p "curve25519-dalek-ng")) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (k 0)) (d (n "sha2") (r "^0.9.3") (k 0)) (d (n "sha2") (r "^0.9.3") (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0) (p "subtle-ng")) (d (n "zeroize") (r "^1.2.0") (f (quote ("zeroize_derive"))) (k 0)))) (h "14nd24zajxcwf0mm21b2zb9j403q8934iwz7cqf6bi8mrw72pggp") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "getrandom" "curve25519-dalek/std") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "u64_backend" "getrandom") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc"))))))

(define-public crate-schnorrkel-0.10.2 (c (n "schnorrkel") (v "0.10.2") (d (list (d (n "aead") (r "^0.4.3") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.6") (k 0)) (d (n "arrayvec") (r "^0.7.0") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.1") (k 0) (p "curve25519-dalek-ng")) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3.3") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.9.8") (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 2)) (d (n "sha3") (r "^0.9.1") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (k 0) (p "subtle-ng")) (d (n "zeroize") (r "^1.4.2") (f (quote ("zeroize_derive"))) (k 0)))) (h "13fj2397adlrn4zswjd7h4l817n2b0cvlipj3zvcsvhy6x2pcjw4") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "getrandom" "curve25519-dalek/std" "serde_bytes/std") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly" "curve25519-dalek/nightly" "rand/nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "u64_backend" "getrandom") ("avx2_backend" "curve25519-dalek/avx2_backend") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "serde_bytes/alloc"))))))

(define-public crate-schnorrkel-0.11.0 (c (n "schnorrkel") (v "0.11.0") (d (list (d (n "aead") (r "^0.5.2") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.7") (k 0)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.0") (f (quote ("digest" "zeroize" "precomputed-tables" "legacy_compatibility"))) (k 0)) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (k 0)))) (h "025hxy0gfp5p6bn6jjingkmsj2dd92crwrgvkdg8k15qxajzmlvj") (f (quote (("std" "alloc" "getrandom" "serde_bytes/std") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "getrandom") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "serde_bytes/alloc"))))))

(define-public crate-schnorrkel-0.11.1 (c (n "schnorrkel") (v "0.11.1") (d (list (d (n "aead") (r "^0.5.2") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.7") (k 0)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.0") (f (quote ("digest" "zeroize" "precomputed-tables" "legacy_compatibility"))) (k 0)) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (k 0)))) (h "094qgknnvshxc3q7r2fxnl2kaar8vk4vx4bcxavgqpbdwv2awjh6") (f (quote (("std" "alloc" "getrandom" "serde_bytes/std" "rand") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly") ("getrandom" "rand_core/getrandom" "rand/std_rng") ("default" "std" "getrandom") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "serde_bytes/alloc")))) (y #t)))

(define-public crate-schnorrkel-0.11.2 (c (n "schnorrkel") (v "0.11.2") (d (list (d (n "aead") (r "^0.5.2") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.7") (k 0)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.0") (f (quote ("digest" "zeroize" "precomputed-tables" "legacy_compatibility"))) (k 0)) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (k 0)))) (h "1f3vyvjc7rd17xpvzkg33bxiszacs7ms0z7jybbbjrzk2zrfng3b") (f (quote (("std" "alloc" "getrandom" "serde_bytes/std" "rand") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly") ("getrandom" "rand_core/getrandom" "rand/std_rng") ("default" "std" "getrandom") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "serde_bytes/alloc"))))))

(define-public crate-schnorrkel-0.11.3 (c (n "schnorrkel") (v "0.11.3") (d (list (d (n "aead") (r "^0.5.2") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.7") (k 0)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.0") (f (quote ("digest" "zeroize" "precomputed-tables" "legacy_compatibility"))) (k 0)) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (k 0)))) (h "0kwjgmrha6r2wdzibladdf95yri8fz73f2q5ng01pl7mybczy66s") (f (quote (("std" "alloc" "getrandom" "serde_bytes/std" "rand") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly") ("getrandom" "rand_core/getrandom") ("default" "std" "getrandom") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "serde_bytes/alloc"))))))

(define-public crate-schnorrkel-0.11.4 (c (n "schnorrkel") (v "0.11.4") (d (list (d (n "aead") (r "^0.5.2") (o #t) (k 0)) (d (n "arrayref") (r "^0.3.7") (k 0)) (d (n "arrayvec") (r "^0.7.4") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.1.0") (f (quote ("digest" "zeroize" "precomputed-tables" "legacy_compatibility"))) (k 0)) (d (n "failure") (r "^0.1.8") (o #t) (k 0)) (d (n "getrandom_or_panic") (r "^0.0.3") (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "merlin") (r "^3.0.0") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "rand_core") (r "^0.6.2") (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (k 0)) (d (n "serde_crate") (r "^1.0.130") (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.68") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 2)) (d (n "subtle") (r "^2.4.1") (k 0)) (d (n "zeroize") (r "^1.6") (f (quote ("zeroize_derive"))) (k 0)))) (h "187aa52b1msam04qb8w44l8w36cqq9zf1sjzbw2dgam0idnqzqcd") (f (quote (("std" "alloc" "getrandom" "serde_bytes/std" "rand_core/std" "getrandom_or_panic/std") ("serde" "serde_crate" "serde_bytes" "cfg-if") ("preaudit_deprecated") ("nightly") ("default" "std" "getrandom") ("asm" "sha2/asm") ("alloc" "curve25519-dalek/alloc" "rand_core/alloc" "getrandom_or_panic/alloc" "serde_bytes/alloc")))) (s 2) (e (quote (("getrandom" "rand_core/getrandom" "getrandom_or_panic/getrandom" "aead?/getrandom") ("aead" "dep:aead"))))))

