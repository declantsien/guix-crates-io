(define-module (crates-io sc hn schnorr-evm) #:use-module (crates-io))

(define-public crate-schnorr-evm-0.1.0 (c (n "schnorr-evm") (v "0.1.0") (d (list (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)))) (h "0b4fg4n17dgblwlgs7zrvldni112c9p6yq7qka0rm8r2s0d3c8ws") (f (quote (("std" "rand_core/getrandom") ("default" "std")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-schnorr-evm-0.1.1 (c (n "schnorr-evm") (v "0.1.1") (d (list (d (n "frost-core") (r "^1.0.0") (f (quote ("internals"))) (o #t) (d #t) (k 0)) (d (n "frost-secp256k1") (r "^1.0.0") (o #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "hash2curve"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)))) (h "0cvf6v4brdp7hma9r8c8zgrhkcx8kkb9vn9ykx2pi69l8cq2nnk5") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "rand_core/getrandom" "dep:frost-core" "dep:frost-secp256k1") ("serde" "dep:serde"))))))

(define-public crate-schnorr-evm-0.1.2 (c (n "schnorr-evm") (v "0.1.2") (d (list (d (n "frost-core") (r "^1.0.0") (f (quote ("internals"))) (o #t) (d #t) (k 0)) (d (n "frost-secp256k1") (r "^1.0.0") (o #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("arithmetic" "hash2curve"))) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (k 0)) (d (n "sha3") (r "^0.10.8") (k 0)))) (h "0gq4bm82x0r15hbjkwk56dfj7cvzp6hidmxna68ij90593q8zlqj") (f (quote (("default" "std")))) (s 2) (e (quote (("std" "rand_core/getrandom" "dep:frost-core" "dep:frost-secp256k1") ("serde" "dep:serde"))))))

