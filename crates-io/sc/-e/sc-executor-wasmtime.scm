(define-module (crates-io sc -e sc-executor-wasmtime) #:use-module (crates-io))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.2 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.2") (d (list (d (n "codec") (r "^1.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.2") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "wasmi") (r "^0.6.2") (d #t) (k 0)) (d (n "wasmtime") (r "^0.11") (d #t) (k 0)))) (h "0mfmmwfqqjbmpf3a9blqish51zwxcqcgwrimy2wf13vkwls483rf")))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.3 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.2") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.2") (d #t) (k 0)) (d (n "wasmi") (r "^0.6.2") (d #t) (k 0)) (d (n "wasmtime") (r "^0.11") (d #t) (k 0)))) (h "1r9y12dbwq494ik3xwplmhi9wfyqradrdjw6sv0z3b91p6h7ymj9")))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.5 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.5") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.5") (d #t) (k 0)) (d (n "wasmtime") (r "^0.13.0-threadsafe.1") (d #t) (k 0) (p "substrate-wasmtime")))) (h "0qhpjlr067pd4mj920h2wfm402hs2swing7hnwjczfglgmlzlgfb")))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.6 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.59.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.6") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.6") (d #t) (k 0)) (d (n "wasmtime") (r "^0.13.0-threadsafe.1") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.12.0") (d #t) (k 0)) (d (n "wasmtime_runtime") (r "^0.13.0-threadsafe.1") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "19d0q3xxyvis8lc9s4fy0d4vcgqcgi4ichkci9kq8ifkssc8iq55")))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.7 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.7") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.7") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.1") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.1") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "0ddnz8xb8zh2s7qawzwnp79px49wlvzrqnrmw701iffq2hpphc7f")))

(define-public crate-sc-executor-wasmtime-0.8.0-alpha.8 (c (n "sc-executor-wasmtime") (v "0.8.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-alpha.8") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-alpha.8") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.2") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.2") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "0xy9hjh1s029klf2wn2dv8y3j1g77pspg1gbh50bh77dy8hx2dr1")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc1 (c (n "sc-executor-wasmtime") (v "0.8.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc1") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "1i5pwk3wy52p441rsjcrl8gmbb6njqd2ga8mzab8xzhv275g7r5r")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc2 (c (n "sc-executor-wasmtime") (v "0.8.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc2") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "114p90fqv4amvbaqvknlqn0p57icp91r6l3sw3arz4j784z98kp9")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc3 (c (n "sc-executor-wasmtime") (v "0.8.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc3") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "14h4vxv6462gyf2fkhbny5g5wpcga94kg3rdzqnf2v47phjhpsq0")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc4 (c (n "sc-executor-wasmtime") (v "0.8.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.63") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.63") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc4") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "wasmtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.16") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.16.0-threadsafe.4") (d #t) (k 0) (p "substrate-wasmtime-runtime")))) (h "0h5wyhcqyxjrzlscq7dxlnr0jnysy1k4qgh5a313g0cp4b6zv8id")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc5 (c (n "sc-executor-wasmtime") (v "0.8.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (d #t) (k 0) (p "parity-scale-codec")) (d (n "cranelift-codegen") (r "^0.66.0") (d #t) (k 0)) (d (n "cranelift-wasm") (r "^0.66.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc5") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "wasmtime") (r "^0.19.0") (d #t) (k 0) (p "substrate-wasmtime")) (d (n "wasmtime-environ") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmtime-runtime") (r "^0.19.0") (d #t) (k 0)))) (h "1jmg3gv881h0qn6zq9z2zxfpkjmiiz3f58vw8bwlz3rjxa1brbby")))

(define-public crate-sc-executor-wasmtime-0.8.0-rc6 (c (n "sc-executor-wasmtime") (v "0.8.0-rc6") (d (list (d (n "codec") (r "^1.3.4") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.14.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0-rc6") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "wasmtime") (r "^0.19") (d #t) (k 0)))) (h "0vsrhbll2i54gvg2avjfaaw8dryv5dm9xmfvjbby3xlmz3igmrkn")))

(define-public crate-sc-executor-wasmtime-0.8.0 (c (n "sc-executor-wasmtime") (v "0.8.0") (d (list (d (n "codec") (r "^1.3.4") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.14.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmtime") (r "^0.19") (d #t) (k 0)))) (h "02pa3mjv64k0rq42kxqx0fc1g73h4kbfl92k3llc7i9j36fd5iy5")))

(define-public crate-sc-executor-wasmtime-0.8.1 (c (n "sc-executor-wasmtime") (v "0.8.1") (d (list (d (n "codec") (r "^1.3.4") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.14.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.8.0") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^2.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^2.0.0") (d #t) (k 0)) (d (n "wasmtime") (r "^0.19") (d #t) (k 0)))) (h "03088rfyszmm7w7c9zpl1k6zrr8pw6msm4nxy4ybnpzydcl4bzxp")))

(define-public crate-sc-executor-wasmtime-0.9.0 (c (n "sc-executor-wasmtime") (v "0.9.0") (d (list (d (n "codec") (r "^2.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.14.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.9.0") (d #t) (k 0)) (d (n "scoped-tls") (r "^1.0") (d #t) (k 0)) (d (n "sp-allocator") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-core") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^3.0.0") (d #t) (k 0)) (d (n "wasmtime") (r "^0.22") (d #t) (k 0)))) (h "0dlyvpk1bclwpni9yqw1ipqp89wyay3116m0k11zybdd3yc3qrr4")))

(define-public crate-sc-executor-wasmtime-0.10.0 (c (n "sc-executor-wasmtime") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^4.1.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.10.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "12cf3f5bsxmaxfcci5pqgkbiwg8gqy5ac9fhgyfq1dkc27aljw2p")))

(define-public crate-sc-executor-wasmtime-0.11.0 (c (n "sc-executor-wasmtime") (v "0.11.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^5.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.11.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^9.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0wh5vyxl3b06fn4zky4bzszgiyh5k0lh5m8aw8kiz4lp48n3c43m")))

(define-public crate-sc-executor-wasmtime-0.12.0 (c (n "sc-executor-wasmtime") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^6.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.12.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^9.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1vbhjlrphv8j87rqjjvy41ksg79882nj5zhm3ikvmafssxsk2r0y")))

(define-public crate-sc-executor-wasmtime-0.13.0 (c (n "sc-executor-wasmtime") (v "0.13.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^7.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.13.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^10.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "048h08dz0jljr0pkkgrx037j6p16whd8i9gb5bfj4kg74gch8ywa")))

(define-public crate-sc-executor-wasmtime-0.14.0 (c (n "sc-executor-wasmtime") (v "0.14.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.0.0") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^8.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.14.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^10.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^8.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0g467y9pd71x7lriivi4bs64iv53vk1b8ghvddmqpbvhg50jjjkp")))

(define-public crate-sc-executor-wasmtime-0.15.0 (c (n "sc-executor-wasmtime") (v "0.15.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^9.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.15.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^11.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^9.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0kfr834n20ifj77am54mcp2lx0pqsr2a1z6j4qb5zd8197w7f31j")))

(define-public crate-sc-executor-wasmtime-0.16.0 (c (n "sc-executor-wasmtime") (v "0.16.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^10.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.16.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^12.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^9.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "05xi3i06rax9zdqn16r33zaj9fcs2s088jags4v1yb1qgir4papz")))

(define-public crate-sc-executor-wasmtime-0.17.0 (c (n "sc-executor-wasmtime") (v "0.17.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.35.9") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^11.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.17.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^12.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^9.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^1.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "memory-init-cow" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1dyqd5ndz64ahv78xvlzd2mx0jm3h5nn260banwrxl1x9r5zh2m3")))

(define-public crate-sc-executor-wasmtime-0.18.0 (c (n "sc-executor-wasmtime") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.0") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^12.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.18.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^13.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^10.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^5.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0mj0vrk9lz3bj703v89lmbgf6nb74z82qnwawj78m9bxj9fb7jq8")))

(define-public crate-sc-executor-wasmtime-0.19.0 (c (n "sc-executor-wasmtime") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.0") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^13.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.19.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^14.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^11.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^5.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0jwx4pp3k5nlakm4b84xkxlsm6rqvvfm6y9s7plp93wc6ahcz7sq")))

(define-public crate-sc-executor-wasmtime-0.20.0 (c (n "sc-executor-wasmtime") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^14.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.20.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^15.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^12.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^6.0.0") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0mw43r34rz0p7lg399qwxl7ych4hl2l0gppw7jcvqyvng7f3zw3x")))

(define-public crate-sc-executor-wasmtime-0.21.0 (c (n "sc-executor-wasmtime") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^15.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.21.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^16.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^13.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^6.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1wnss2ama729rn238yl2y7qcx951n5q06d7866775wk5sdcis0kw")))

(define-public crate-sc-executor-wasmtime-0.22.0 (c (n "sc-executor-wasmtime") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.2.2") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^16.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.22.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^16.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^13.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^6.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "10iqm60ybhc31r1myjy5wq8fh0rlrnnx04v780rvilpmvq0k9h44")))

(define-public crate-sc-executor-wasmtime-0.23.0-dev.2 (c (n "sc-executor-wasmtime") (v "0.23.0-dev.2") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^16.1.0-dev.2") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.23.0-dev.2") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^17.1.0-dev.2") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^14.1.0-dev.2") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "10y4iskib3264hvgd61j3hrx8dm228g48ridfxr0jxzcsj5677ab")))

(define-public crate-sc-executor-wasmtime-0.23.0-dev.3 (c (n "sc-executor-wasmtime") (v "0.23.0-dev.3") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^16.1.0-dev.3") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.23.0-dev.3") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^17.1.0-dev.3") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^14.1.0-dev.3") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "17j2vixyq59hsdbxhy4xxda6qvc3nbkv97kdh7k0w94hz19dbd24")))

(define-public crate-sc-executor-wasmtime-0.23.0-dev.4 (c (n "sc-executor-wasmtime") (v "0.23.0-dev.4") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^16.1.0-dev.4") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.23.0-dev.4") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^17.1.0-dev.4") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^14.1.0-dev.4") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0dq9kpwdyybgknmz5bdbrwq7rbqy1pcd5k8i71micz4ranqsp4c9")))

(define-public crate-sc-executor-wasmtime-0.23.0-dev.5 (c (n "sc-executor-wasmtime") (v "0.23.0-dev.5") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "=16.1.0-dev.5") (d #t) (k 0)) (d (n "sc-executor-common") (r "=0.23.0-dev.5") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "=17.1.0-dev.5") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "=14.1.0-dev.5") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0byh5bz2yg3wb66346n053yff9vw60c6gr3zcfa6m89g3qgqv9vg")))

(define-public crate-sc-executor-wasmtime-0.23.0-dev.6 (c (n "sc-executor-wasmtime") (v "0.23.0-dev.6") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "=16.1.0-dev.6") (d #t) (k 0)) (d (n "sc-executor-common") (r "=0.23.0-dev.6") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "=17.1.0-dev.6") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "=14.1.0-dev.6") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "14xcmlfdwrvblpyfb11gn1iwwl2mnq2qw69ri3wys7ja8nr0d6vw")))

(define-public crate-sc-executor-wasmtime-0.23.0 (c (n "sc-executor-wasmtime") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^17.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.23.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^18.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^15.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "16f89anylby12x2x4wjz5215hlnmc150f7j3kd0727nqk3mx63pa")))

(define-public crate-sc-executor-wasmtime-0.24.0 (c (n "sc-executor-wasmtime") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^18.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.24.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^19.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^16.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1kdv5836likg1km5q6l5mg1z4h9qdnlb4z4qv0h0m17k82fnhq9y")))

(define-public crate-sc-executor-wasmtime-0.25.0-dev.1 (c (n "sc-executor-wasmtime") (v "0.25.0-dev.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "=19.0.0-dev.1") (d #t) (k 0)) (d (n "sc-executor-common") (r "=0.25.0-dev.1") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "=20.0.0-dev.1") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "=17.0.0-dev.1") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1s27vlhvbaxf8nb5p9k1zy9dywf4mafaa4bd3fqghhg6g39qj4z6")))

(define-public crate-sc-executor-wasmtime-0.25.0 (c (n "sc-executor-wasmtime") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^19.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.25.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^20.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^17.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0cf98hysb47idkj60gl19nx8gsvfwpx21vbciyssr8klrfh1a9d8")))

(define-public crate-sc-executor-wasmtime-0.26.0 (c (n "sc-executor-wasmtime") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^20.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.26.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^21.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^18.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1g1ksvvnknk32h3m613lbnlgs33mxh2vjqxyff15534j7rrps5pr")))

(define-public crate-sc-executor-wasmtime-0.27.0 (c (n "sc-executor-wasmtime") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("std" "mm" "fs" "param" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^21.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.27.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^22.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^18.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0k3byydx68bqlin222nllmayp3xbcx6rnl44d5b1crvhbd4yqkzs")))

(define-public crate-sc-executor-wasmtime-0.28.0 (c (n "sc-executor-wasmtime") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^22.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.28.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^23.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^19.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "11hzh8md19w17iq6f64j3w82mdg9bdfw2yzynizpm3ky5by3ba8k")))

(define-public crate-sc-executor-wasmtime-0.29.0 (c (n "sc-executor-wasmtime") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.121") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^23.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.29.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^24.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^20.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "1n69b9kgmflw9q16zq0pm02jp593c75czys792phqh381vmacasw")))

(define-public crate-sc-executor-wasmtime-0.30.0 (c (n "sc-executor-wasmtime") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^24.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.30.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^25.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^20.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0hm631wpd0sni70rc9ylb6a0gnma3xisdwqbrvzw2kmmk9vqg8rh")))

(define-public crate-sc-executor-wasmtime-0.31.0 (c (n "sc-executor-wasmtime") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^25.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.31.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^26.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^20.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "12bbxvikgs6v2q0z9gqda81ikk9clhmh8yprgqrnqj35hb4czjjd")))

(define-public crate-sc-executor-wasmtime-0.32.0 (c (n "sc-executor-wasmtime") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^26.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.32.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^26.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^20.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "0zy88h4qr2fzqym0zgzr4dfq2a7pdnjr6c9fc5n185mxcij2hdzs")))

(define-public crate-sc-executor-wasmtime-0.33.0 (c (n "sc-executor-wasmtime") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^27.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.33.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^27.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^21.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "00shvcfrkjnad5l7j4dckw5ykkp49y9pac234xbsydw9llp6br0b")))

(define-public crate-sc-executor-wasmtime-0.34.0 (c (n "sc-executor-wasmtime") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (d #t) (k 2) (p "parity-scale-codec")) (d (n "libc") (r "^0.2.152") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "rustix") (r "^0.36.7") (f (quote ("fs" "mm" "param" "std" "use-libc"))) (k 0)) (d (n "sc-allocator") (r "^28.0.0") (d #t) (k 0)) (d (n "sc-executor-common") (r "^0.34.0") (d #t) (k 0)) (d (n "sp-runtime-interface") (r "^27.0.0") (d #t) (k 0)) (d (n "sp-wasm-interface") (r "^21.0.0") (f (quote ("wasmtime"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "wasmtime") (r "^8.0.1") (f (quote ("cache" "cranelift" "jitdump" "parallel-compilation" "pooling-allocator"))) (k 0)) (d (n "wat") (r "^1.0") (d #t) (k 2)))) (h "025vwghz3qrkvp1mf7y2xhw5r3cqykz17s88navlfx3kn8jb75qv")))

