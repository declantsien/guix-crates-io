(define-module (crates-io sc ry scrypto-compiler) #:use-module (crates-io))

(define-public crate-scrypto-compiler-1.2.0-dev (c (n "scrypto-compiler") (v "1.2.0-dev") (d (list (d (n "cargo_toml") (r "^0.15.3") (d #t) (k 0)) (d (n "radix-common") (r "^1.2.0-dev") (k 0)) (d (n "radix-engine") (r "^1.2.0-dev") (k 0)) (d (n "radix-engine-interface") (r "^1.2.0-dev") (k 0)) (d (n "radix-rust") (r "^1.2.0-dev") (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "wasm-opt") (r "^0.114.1") (d #t) (k 0)))) (h "1k1f8gvg1h7kllyqc5q9rbhh8v18i0wmpdb4hr211s70rbvnjn0v") (f (quote (("std" "serde_json/std" "radix-engine-interface/std" "radix-common/std" "radix-engine/std" "radix-engine/moka" "radix-rust/std") ("default" "std") ("alloc" "serde_json/alloc" "radix-engine-interface/alloc" "radix-common/alloc" "radix-engine/alloc" "radix-engine/lru" "radix-rust/alloc"))))))

(define-public crate-scrypto-compiler-1.2.0 (c (n "scrypto-compiler") (v "1.2.0") (d (list (d (n "cargo_toml") (r "^0.15.3") (d #t) (k 0)) (d (n "radix-common") (r "^1.2.0") (k 0)) (d (n "radix-engine") (r "^1.2.0") (k 0)) (d (n "radix-engine-interface") (r "^1.2.0") (k 0)) (d (n "radix-rust") (r "^1.2.0") (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "wasm-opt") (r "^0.114.1") (d #t) (k 0)))) (h "0rg6p8bma3v4vkg0f49ykqnp8x8hi41cvx80r1aa6ahzd4s51sry") (f (quote (("std" "serde_json/std" "radix-engine-interface/std" "radix-common/std" "radix-engine/std" "radix-engine/moka" "radix-rust/std") ("default" "std") ("alloc" "serde_json/alloc" "radix-engine-interface/alloc" "radix-common/alloc" "radix-engine/alloc" "radix-engine/lru" "radix-rust/alloc"))))))

