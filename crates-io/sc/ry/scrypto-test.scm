(define-module (crates-io sc ry scrypto-test) #:use-module (crates-io))

(define-public crate-scrypto-test-1.2.0-dev (c (n "scrypto-test") (v "1.2.0-dev") (d (list (d (n "ouroboros") (r "^0.17.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-common") (r "^1.2.0-dev") (k 0)) (d (n "radix-engine") (r "^1.2.0-dev") (f (quote ("radix_engine_tests" "db_checker"))) (k 0)) (d (n "radix-engine-interface") (r "^1.2.0-dev") (k 0)) (d (n "radix-native-sdk") (r "^1.2.0-dev") (k 0)) (d (n "radix-substate-store-impls") (r "^1.2.0-dev") (k 0)) (d (n "radix-substate-store-interface") (r "^1.2.0-dev") (k 0)) (d (n "radix-substate-store-queries") (r "^1.2.0-dev") (k 0)) (d (n "radix-transactions") (r "^1.2.0-dev") (k 0)) (d (n "sbor") (r "^1.2.0-dev") (k 0)) (d (n "scrypto-compiler") (r "^1.2.0-dev") (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "wabt") (r "^0.10.0") (d #t) (k 0)))) (h "1d2wlr7mkm1h3spmvbhwkaa491qyf4gx4qdh6kff5b4q79k548l1") (f (quote (("std" "moka" "sbor/std" "radix-native-sdk/std" "scrypto-compiler/std" "radix-transactions/std" "radix-engine/std" "radix-substate-store-queries/std" "radix-substate-store-impls/std" "radix-common/std" "radix-engine-interface/std" "radix-substate-store-interface/std") ("rocksdb" "radix-substate-store-impls/rocksdb") ("resource_tracker") ("post_run_db_check") ("moka" "radix-engine/moka") ("lru" "radix-engine/lru") ("default" "std") ("alloc" "lru" "sbor/alloc" "radix-native-sdk/alloc" "scrypto-compiler/alloc" "radix-transactions/alloc" "radix-engine/alloc" "radix-substate-store-queries/alloc" "radix-substate-store-impls/alloc" "radix-common/alloc" "radix-engine-interface/alloc" "radix-substate-store-interface/alloc"))))))

(define-public crate-scrypto-test-1.2.0 (c (n "scrypto-test") (v "1.2.0") (d (list (d (n "ouroboros") (r "^0.17.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "radix-common") (r "^1.2.0") (k 0)) (d (n "radix-engine") (r "^1.2.0") (f (quote ("radix_engine_tests" "db_checker"))) (k 0)) (d (n "radix-engine-interface") (r "^1.2.0") (k 0)) (d (n "radix-native-sdk") (r "^1.2.0") (k 0)) (d (n "radix-substate-store-impls") (r "^1.2.0") (k 0)) (d (n "radix-substate-store-interface") (r "^1.2.0") (k 0)) (d (n "radix-substate-store-queries") (r "^1.2.0") (k 0)) (d (n "radix-transactions") (r "^1.2.0") (k 0)) (d (n "sbor") (r "^1.2.0") (k 0)) (d (n "scrypto-compiler") (r "^1.2.0") (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "wabt") (r "^0.10.0") (d #t) (k 0)))) (h "09n835bsd533sz7ahvncp0156jvh70qlf7sfvmhyyasxgpqq0cw2") (f (quote (("std" "moka" "sbor/std" "radix-native-sdk/std" "scrypto-compiler/std" "radix-transactions/std" "radix-engine/std" "radix-substate-store-queries/std" "radix-substate-store-impls/std" "radix-common/std" "radix-engine-interface/std" "radix-substate-store-interface/std") ("rocksdb" "radix-substate-store-impls/rocksdb") ("resource_tracker" "radix-engine/resource_tracker" "radix-common/resource_tracker") ("post_run_db_check") ("moka" "radix-engine/moka") ("lru" "radix-engine/lru") ("default" "std") ("coverage" "radix-common/coverage" "radix-engine/coverage") ("alloc" "lru" "sbor/alloc" "radix-native-sdk/alloc" "scrypto-compiler/alloc" "radix-transactions/alloc" "radix-engine/alloc" "radix-substate-store-queries/alloc" "radix-substate-store-impls/alloc" "radix-common/alloc" "radix-engine-interface/alloc" "radix-substate-store-interface/alloc"))))))

