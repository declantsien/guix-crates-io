(define-module (crates-io sc ry scrypto-derive) #:use-module (crates-io))

(define-public crate-scrypto-derive-1.2.0-dev (c (n "scrypto-derive") (v "1.2.0-dev") (d (list (d (n "proc-macro2") (r "^1.0.38") (d #t) (k 0)) (d (n "quote") (r "^1.0.18") (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0-dev") (k 0)) (d (n "radix-common") (r "^1.2.0-dev") (k 0)) (d (n "regex") (r "=1.9.3") (k 0)) (d (n "sbor") (r "^1.2.0-dev") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "syn") (r "^1.0.93") (f (quote ("full" "extra-traits" "full" "extra-traits"))) (d #t) (k 0)))) (h "1navly1am8f0k703clxc03q8ylah1zqddzn5fnkbg7i56gmpf1yr") (f (quote (("trace") ("std" "serde/std" "serde_json/std" "radix-blueprint-schema-init/std" "radix-common/std" "radix-blueprint-schema-init/serde" "sbor/std") ("no-schema") ("default" "std") ("alloc" "serde/alloc" "serde_json/alloc" "radix-blueprint-schema-init/alloc" "radix-common/alloc" "radix-blueprint-schema-init/serde" "sbor/alloc"))))))

(define-public crate-scrypto-derive-1.2.0 (c (n "scrypto-derive") (v "1.2.0") (d (list (d (n "proc-macro2") (r "^1.0.38") (d #t) (k 0)) (d (n "quote") (r "^1.0.18") (d #t) (k 0)) (d (n "radix-blueprint-schema-init") (r "^1.2.0") (k 0)) (d (n "radix-common") (r "^1.2.0") (k 0)) (d (n "regex") (r "=1.9.3") (k 0)) (d (n "sbor") (r "^1.2.0") (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "syn") (r "^1.0.93") (f (quote ("full" "extra-traits" "full" "extra-traits"))) (d #t) (k 0)))) (h "1vf0b2gf4kk363qk971f47hb2qk15l5chiqxsx5p1r4jyb1s0sf3") (f (quote (("trace") ("std" "serde/std" "serde_json/std" "radix-blueprint-schema-init/std" "radix-common/std" "radix-blueprint-schema-init/serde" "sbor/std") ("no-schema") ("default" "std") ("alloc" "serde/alloc" "serde_json/alloc" "radix-blueprint-schema-init/alloc" "radix-common/alloc" "radix-blueprint-schema-init/serde" "sbor/alloc"))))))

