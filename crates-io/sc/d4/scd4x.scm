(define-module (crates-io sc d4 scd4x) #:use-module (crates-io))

(define-public crate-scd4x-0.1.0 (c (n "scd4x") (v "0.1.0") (d (list (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.7") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "sensirion-i2c") (r "^0.1") (d #t) (k 0)))) (h "0pk2f3wv3qmm6jp6j9wg5aqa1py5vrm3nf45h66qiank915la3g6")))

(define-public crate-scd4x-0.2.0 (c (n "scd4x") (v "0.2.0") (d (list (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "sensirion-i2c") (r "^0.1") (d #t) (k 0)))) (h "1yr1v67xsyvcamp7i7kcr5bmbrn228r2js79nqvjy8x3agd0b2b5") (f (quote (("scd41"))))))

(define-public crate-scd4x-0.2.1 (c (n "scd4x") (v "0.2.1") (d (list (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "sensirion-i2c") (r "^0.1") (d #t) (k 0)))) (h "0dicb9b2nbh10n2lrk89xs7p3744c52bn0f8rh9jpxbxljzil7mc") (f (quote (("scd41"))))))

(define-public crate-scd4x-0.2.2 (c (n "scd4x") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.56") (o #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (k 0)) (d (n "sensirion-i2c") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (o #t) (d #t) (k 0)))) (h "1md0918xbg9rn6fzvfxm4a4d2mjc76hmfm6f88siznm57n2jbw5q") (f (quote (("util" "structopt" "simplelog" "humantime" "linux-embedded-hal" "anyhow") ("scd41") ("default" "util"))))))

(define-public crate-scd4x-0.2.3 (c (n "scd4x") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.56") (o #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.8") (d #t) (k 2)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (k 0)) (d (n "sensirion-i2c") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (o #t) (d #t) (k 0)))) (h "0hrd1qnwxx05iqa7i6f6ws8w0mgp8bkclzsmj0l6sahdxhzigs7x") (f (quote (("util" "structopt" "simplelog" "humantime" "linux-embedded-hal" "anyhow") ("scd41") ("default"))))))

(define-public crate-scd4x-0.3.0 (c (n "scd4x") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.56") (o #t) (k 0)) (d (n "defmt") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^1.0.0") (d #t) (k 0)) (d (n "embedded-hal-mock") (r "^0.10.0") (d #t) (k 2)) (d (n "humantime") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "linux-embedded-hal") (r "^0.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (k 0)) (d (n "sensirion-i2c") (r "^0.3.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (o #t) (d #t) (k 0)))) (h "118zslyfzkw2fwknd7vcb7vrdifv916qkzmivjd9739qp0w51j59") (f (quote (("util" "structopt" "simplelog" "humantime" "linux-embedded-hal" "anyhow") ("scd41") ("default"))))))

