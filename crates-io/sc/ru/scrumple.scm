(define-module (crates-io sc ru scrumple) #:use-module (crates-io))

(define-public crate-scrumple-1.2.1 (c (n "scrumple") (v "1.2.1") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^0.3.5") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0ibagklkzzg5bjh73n6gvv60f1rczsr3qh5whxi5pkm72jig3234") (f (quote (("default") ("bench"))))))

(define-public crate-scrumple-1.2.2 (c (n "scrumple") (v "1.2.2") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^0.3.5") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "1kn7x7qz4ws05n666ii70ilk5q3rw2kb78wl678km9jxlfric3x2") (f (quote (("default") ("bench"))))))

(define-public crate-scrumple-1.2.3 (c (n "scrumple") (v "1.2.3") (d (list (d (n "base64") (r "^0.6.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.4") (d #t) (k 2)) (d (n "crossbeam") (r "^0.2") (d #t) (k 0)) (d (n "esparse") (r "^0.1.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "indoc") (r "^0.3.5") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 0)) (d (n "memchr") (r "^2.0.1") (d #t) (k 0)) (d (n "notify") (r "^4.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 2)))) (h "0sijlmm1sd3g4m7hkwrwx1jw32pncsbq45qrzpnw980bsw6g83fj") (f (quote (("default") ("bench"))))))

