(define-module (crates-io sc x_ scx_lavd) #:use-module (crates-io))

(define-public crate-scx_lavd-0.1.1 (c (n "scx_lavd") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "plain") (r "^0.2.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "scx_utils") (r "^0.7") (d #t) (k 0)) (d (n "scx_utils") (r "^0.7") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1jm1lkm8lj38rxk39z3qqbs9w2fjj7hs7sc2rfs5vjp9m34qdg1x") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_lavd-0.1.2 (c (n "scx_lavd") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "plain") (r "^0.2.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0d1nfh6dmcrmlbmccj2a20p2l5sihi7ccbahyp6p8bsr5cabbqg8") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_lavd-0.1.3 (c (n "scx_lavd") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "plain") (r "^0.2.3") (d #t) (k 0)) (d (n "rlimit") (r "^0.10.1") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8.1") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8.1") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0lp7hnq78l6ac2j7fwccavpnq33aaaw5qbsfnyj5s702dmrnrmk5") (f (quote (("enable_backtrace"))))))

