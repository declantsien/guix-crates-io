(define-module (crates-io sc x_ scx_rustland) #:use-module (crates-io))

(define-public crate-scx_rustland-0.0.1 (c (n "scx_rustland") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.22.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "scx_utils") (r "^0.4") (d #t) (k 0)) (d (n "scx_utils") (r "^0.4") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "1sz3z99sm197iig2v7a3rgvgfkm0y4zqr2g2dbz17iln66q6kwf1") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_rustland-0.0.2 (c (n "scx_rustland") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.22.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "scx_utils") (r "^0.5") (d #t) (k 0)) (d (n "scx_utils") (r "^0.5") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "1fdvx1pb09ahjbx0ghlyqydrwr0bj0lnfdc3w4rnwgchaidb7m5q") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_rustland-0.0.3 (c (n "scx_rustland") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.22.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "scx_utils") (r "^0.6") (d #t) (k 0)) (d (n "scx_utils") (r "^0.6") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "0if0f54is6cpxy8qzxa8d8v6zz2gj6zs5cf4l03apy82crz7hw4l") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_rustland-0.0.5 (c (n "scx_rustland") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.3") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.3") (d #t) (k 1)) (d (n "scx_utils") (r "^0.8") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "1jhg63slbgc7vmq0psyhi60v5lxfbzl2km6vp2i7kynwn3351rni") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_rustland-0.0.6 (c (n "scx_rustland") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.4") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.4") (d #t) (k 1)) (d (n "scx_utils") (r "^0.8") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "0mamkl388k3wfrc3lc7ajyf7ydrgnsm21lj2yq5xjx195knxqs44") (f (quote (("enable_backtrace"))))))

(define-public crate-scx_rustland-0.0.7 (c (n "scx_rustland") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1") (f (quote ("termination"))) (d #t) (k 0)) (d (n "fb_procfs") (r "^0.7.0") (d #t) (k 0)) (d (n "libbpf-rs") (r "^0.23.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "plain") (r "^0.2.3") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.5") (d #t) (k 0)) (d (n "scx_rustland_core") (r "^0.5") (d #t) (k 1)) (d (n "scx_utils") (r "^0.8.1") (d #t) (k 0)) (d (n "scx_utils") (r "^0.8.1") (d #t) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)))) (h "0bxwwnshyi5xcxawkj0nhb5n5qzdgnbs7wdlkzplzsbhg2mq8a6f") (f (quote (("enable_backtrace"))))))

