(define-module (crates-io sc tp sctp-proto) #:use-module (crates-io))

(define-public crate-sctp-proto-0.0.0 (c (n "sctp-proto") (v "0.0.0") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "1nc7bxx4ammsql8ngljilswc261x3kpj30nbxil6zz86s56yq2xl")))

(define-public crate-sctp-proto-0.1.0 (c (n "sctp-proto") (v "0.1.0") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^2.1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0d9g4w5w9zp96d8hv5dvgqp41sirs32qbq38v2c2q882607yxphp")))

(define-public crate-sctp-proto-0.1.1 (c (n "sctp-proto") (v "0.1.1") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^2.1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.10") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "111gnawxhcds8c1q35m2fardz0gc4z28gk1xp88snqx279kjlhv7")))

(define-public crate-sctp-proto-0.1.2 (c (n "sctp-proto") (v "0.1.2") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.0") (f (quote ("env-filter" "fmt" "ansi" "time" "local-time"))) (k 2)))) (h "0ihlswnlrd26yv6c983b6lspn41rdmvr9xcngrypj9af5ipknz3p")))

(define-public crate-sctp-proto-0.1.3 (c (n "sctp-proto") (v "0.1.3") (d (list (d (n "arbitrary") (r "^1.0.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3.0.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.21") (d #t) (k 0)) (d (n "tinyvec") (r "^1.1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1p187348671qrqknwx39g9c87za37r2kbfyymsg013bgznml033h")))

(define-public crate-sctp-proto-0.1.4 (c (n "sctp-proto") (v "0.1.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1qar0nm9c752nwr36qil0c3ljp8qg1lygxhcgkjkh2p6vmpc1flw")))

(define-public crate-sctp-proto-0.1.5 (c (n "sctp-proto") (v "0.1.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1vff2yms38fwcvw1k5wrb9203pwgxx450aiqjacpm5yj3khf2ymf")))

(define-public crate-sctp-proto-0.1.6 (c (n "sctp-proto") (v "0.1.6") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "0sl86nhzij5d6q6kna6k2x48jwn0z9xaia80dadi27vb7xmb0kji")))

(define-public crate-sctp-proto-0.1.7 (c (n "sctp-proto") (v "0.1.7") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)))) (h "1g48m2q411gq104bzm67n5qdb92jnaq41crw1irmqafk93qwwr4g")))

(define-public crate-sctp-proto-0.2.0 (c (n "sctp-proto") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "0xdhzm3wkplmwnalwhgdvz50r7izjn7vmqwkb21ksb7kjdnz194p")))

(define-public crate-sctp-proto-0.2.1 (c (n "sctp-proto") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "1l07nkf1zpbimb4hd56y390lb6w8xnh1b39qlpqa97xhs1vy3p65")))

(define-public crate-sctp-proto-0.2.2 (c (n "sctp-proto") (v "0.2.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "097v15zcjxd54wvxamc7l6bi047n0lri35h5dcr5zha4pdw0y8mn")))

