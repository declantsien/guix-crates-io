(define-module (crates-io sc he schema_analysis) #:use-module (crates-io))

(define-public crate-schema_analysis-0.3.0 (c (n "schema_analysis") (v "0.3.0") (d (list (d (n "bson") (r "^1.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.6.0") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "rawbson") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0pdn36q5yyjwh9rbf34xw2lcd7ixbdmnh17930jk2wdrj05g5jlm") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.3.1 (c (n "schema_analysis") (v "0.3.1") (d (list (d (n "bson") (r "^1.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.6.0") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "rawbson") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.2") (d #t) (k 2)))) (h "0lrik1i1fan65f3wmcs6d4wqz8vrbndvk075d536bbzw0lqv0k5m") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.3.2 (c (n "schema_analysis") (v "0.3.2") (d (list (d (n "bson") (r "^1.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.6.0") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "rawbson") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.2") (d #t) (k 2)))) (h "0igl9c1biwxj1k2hr1jgw6nw6jfbq5cncl5d895bh335j40jwny4") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.3.3 (c (n "schema_analysis") (v "0.3.3") (d (list (d (n "bson") (r "^1.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.6.0") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "rawbson") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.2") (d #t) (k 2)))) (h "1cv91qxvf8jzvx04hj3pbnfql25qfk4aklgsf5hzvy34qkfgyrjx") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.3.4 (c (n "schema_analysis") (v "0.3.4") (d (list (d (n "bson") (r "^1.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.6.0") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7") (d #t) (k 0)) (d (n "ordered-float") (r "^2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "rawbson") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9.2") (d #t) (k 2)))) (h "0shmagvi29kdw6bx5h5mzx125wpz2wwp9caah4f5y6x7zjiiiiww") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.4.1 (c (n "schema_analysis") (v "0.4.1") (d (list (d (n "bson") (r "^2.0") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.7") (o #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "ordered-float") (r "^2.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1pbwkyk3d4iaqxj5sa40cgl364vvisj70vk49ssly8pv72yidxhk") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared")))) (y #t)))

(define-public crate-schema_analysis-0.5.0 (c (n "schema_analysis") (v "0.5.0") (d (list (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9") (d #t) (k 0)) (d (n "json_typegen_shared") (r "^0.7") (o #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.0") (d #t) (k 2)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize"))) (d #t) (k 2)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "version-sync") (r "^0.9") (d #t) (k 2)))) (h "1d38va9m0dsgpmb74vaa6kdvmihn8mz4xbmqi90k8smszdl4skzp") (f (quote (("schemars_integration" "schemars" "serde_json") ("json_typegen" "json_typegen_shared"))))))

