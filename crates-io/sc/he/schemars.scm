(define-module (crates-io sc he schemars) #:use-module (crates-io))

(define-public crate-schemars-0.1.0 (c (n "schemars") (v "0.1.0") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "17626wbxg9gsdqpmqvdfz9ml1w3x85c8p1lydjwplj8qc5kn77dn")))

(define-public crate-schemars-0.1.1 (c (n "schemars") (v "0.1.1") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "147iyc3smiy4kdzbnp84fys2i7pvhkxz4y8mld1680nr0fm394hi")))

(define-public crate-schemars-0.1.2 (c (n "schemars") (v "0.1.2") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1mv5w3yryh7jv49fjr9h8qwk35sl9jl32byddap5iahbmw9zf0nh")))

(define-public crate-schemars-0.1.3 (c (n "schemars") (v "0.1.3") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0ay9zn7qvmd2g6j8f6hd6mjk7ar1scbgrqdh22gc3s990nm45hm5")))

(define-public crate-schemars-0.1.4 (c (n "schemars") (v "0.1.4") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "016c1dbm1l0lrv6lzq762nkl04f88f3n4xhyrccr0hsa7ma9yy5r")))

(define-public crate-schemars-0.1.5 (c (n "schemars") (v "0.1.5") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0cnjlxxdz8qkzq1v4mi87c2qi2ff0dnwfnaah6rj23dpx6div4s6")))

(define-public crate-schemars-0.1.6 (c (n "schemars") (v "0.1.6") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "18vmlv9c9rh46bj9xark1bydyc0k4m6dmarhpawqv4lp0xbcp8c1")))

(define-public crate-schemars-0.1.7 (c (n "schemars") (v "0.1.7") (d (list (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "193igix57qk641mil6a0skhl12q7x25hl0jwq1dwq8disgai0xvh")))

(define-public crate-schemars-0.1.8 (c (n "schemars") (v "0.1.8") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0p9sy9sznk59jbw38c02jj6x5rfkmpzb1y1fc7hfjwvz3admb8qj")))

(define-public crate-schemars-0.1.9 (c (n "schemars") (v "0.1.9") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1ik37pb8ryb2jd78mlnwgnsj0kkqg5lq7ackrfljz02zq52svlf4")))

(define-public crate-schemars-0.1.10 (c (n "schemars") (v "0.1.10") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0drxxkalpnzmn3w3zckfp5gkxwj6x89q37r8gw29qkcph5h84sp4")))

(define-public crate-schemars-0.2.0 (c (n "schemars") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1gn3wkcfk2pw6517pggdd0v99gx39sghk3hxca6fabir61vpb3m2")))

(define-public crate-schemars-0.3.0 (c (n "schemars") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1jphwdvc9sc0c117z5gq1wd3rkp3shw1p74djdbhyv2ksjag7f8j")))

(define-public crate-schemars-0.4.0 (c (n "schemars") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "11rbbwanjnx0whwy9pd54cgccw54mamrnd47bszqn4d5kc2krd4q") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.4.1 (c (n "schemars") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0y0a9hxh8rkk4i48pdpjam9i9n2mk97vajm2h9d3a5vqx4s6vam8") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.5.0 (c (n "schemars") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1lbcm2cfqf2qhwwir1lfhl6pbzdlyqalhx852sc1iq1d3w6mrg9c") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.5.1 (c (n "schemars") (v "0.5.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "08s8kypy4h4x762nbkhafmqljy9fiyr0gk0x4wz71bwc35b9ng97") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.0-doc (c (n "schemars") (v "0.6.0-doc") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.6.0-doc") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0pbxbrlcrc22p1hc93mi5ddaq9ayrh98bblw45kynlv42m860nar") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.0-alpha (c (n "schemars") (v "0.6.0-alpha") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.6.0-alpha") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1qll90mhp9qwv4dm6ji694426y8wzl83m98xnbkxz21svkkyjm4j") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.0-alpha-2 (c (n "schemars") (v "0.6.0-alpha-2") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.6.0-alpha-2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "033izgap9s48d8yyj7iwmss6a18f6vb3jc7fy3m29gqxl3zw7zgn") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.0 (c (n "schemars") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "^0.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "11ksia14a2z517rmfd9plyncdkqnq7wz13sddxajlhbqybhbssaj") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.1 (c (n "schemars") (v "0.6.1") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "146458sw59r4fb8ah3mfl74scd1iy3naxrvchgj9rbahnlqqnhvk") (f (quote (("derive_json_schema"))))))

(define-public crate-schemars-0.6.2 (c (n "schemars") (v "0.6.2") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.6.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "05q0ggljn4r9ha2xlgm31bwq8ci3033jj7h7sbpsxzzjr52jl0xg") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.6.3 (c (n "schemars") (v "0.6.3") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.6.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0mdn3y4ccjwdy8dygn461sfxcsd884yl3bdapklk5wvbnkccx4xg") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.6.4 (c (n "schemars") (v "0.6.4") (d (list (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0nsq01iha0ic8n5i5k2yvcx0c4y8gg58y3a4jsgkp6gq9swi57s5") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.6.5 (c (n "schemars") (v "0.6.5") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.6.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1v6acgxkbhaw7fzg4mp09jv231f0mr224my629435wxasrrrfmh7") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.0-alpha-1 (c (n "schemars") (v "0.7.0-alpha-1") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.0-alpha-1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1w0znq20pxja4i1c7hj8grgcss96ax1f3rr0fd1wpbzbblphcsck") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.0-alpha-2 (c (n "schemars") (v "0.7.0-alpha-2") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.0-alpha-2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "17skjipa4frsjiksn8ffbwxllrjz23wv9r8h5i61ja6gbsv5f10a") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.0 (c (n "schemars") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1m0hd1g9jdwihqyjr6l6r2mf249cwricg4m4w5q4bsb048y1vnqh") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.1 (c (n "schemars") (v "0.7.1") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0c06fhhyf6gxl3q9l6ch69c08s13j6m0sf95acacv4v8ac7qd3gw") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.2 (c (n "schemars") (v "0.7.2") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1hsvcn71sigmz34l3p3632jd0x6x9j5fv06bjv5xciq049y28rlg") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.3 (c (n "schemars") (v "0.7.3") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1y3gac4j2anj0lfqrnsgld6pj5zsr0gkcp76alj7s7if304z1dfs") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.4 (c (n "schemars") (v "0.7.4") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1177qr74shb5m0zhjrb5s7gjaf6yvw5hxpk2p5aml54aajiqs2kx") (f (quote (("impl_json_schema") ("derive_json_schema" "impl_json_schema"))))))

(define-public crate-schemars-0.7.5 (c (n "schemars") (v "0.7.5") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "03vkqsaw10kwzi8lj2g308q8pwapx0s5i2g7andx23i24d27l8bq") (f (quote (("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.7.6 (c (n "schemars") (v "0.7.6") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "= 0.7.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0qbapl5xk9pl5vlngljh6zwxpgh68yl32gkapym58sgdmdkfsxxy") (f (quote (("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.0-alpha-1 (c (n "schemars") (v "0.8.0-alpha-1") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.0-alpha-1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0in1476fdhgi3rdbi34npbdpir98n9wfj7n6bs6anv2q3ykl6ms1") (f (quote (("ui_test") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.0-alpha-2 (c (n "schemars") (v "0.8.0-alpha-2") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.0-alpha-2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "15l9xak949yljf413j5acq75svj1s8qx1f40wrdsmginr8fi3lx0") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.0-alpha-3 (c (n "schemars") (v "0.8.0-alpha-3") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.0-alpha-3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0kwbplnamc99s3nd20y70bgac02ix1b83nir4idqnfg8ghh3g4z3") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.0-alpha-4 (c (n "schemars") (v "0.8.0-alpha-4") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.0-alpha-4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1yizakgvnp4zb4xfky6azpirnxpc8vq2mjs2mksc15i8bh4dw6gv") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.0 (c (n "schemars") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0dswfrh5nb4xcq0pyyibx9xzyvwxhpzbwwvygy2986biadr6cgvn") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.1 (c (n "schemars") (v "0.8.1") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0i0ar30a59fikibfwwfnhpg1mh5hnnfx0n08rnbmlz646xblf94a") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.2 (c (n "schemars") (v "0.8.2") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1ws8vvpy54lvbzv7aj0ydxmfx9dx3rq7hglqb4xna6gvbcbnj6zq") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.3 (c (n "schemars") (v "0.8.3") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0y6bcsrc2sigri8612r8gmwpn9c5r6200v56rfswrb1mmriv8smw") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.4 (c (n "schemars") (v "0.8.4") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1qfvx4pghg5i1l1gzbk5k460ww9sd8bsjzc6bf0486hy3vii4p48") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.5 (c (n "schemars") (v "0.8.5") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "19cqak5g154jdqbihyfvl7diq5jq7vvq2hmdg24g22pg6ajqa95q") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.6 (c (n "schemars") (v "0.8.6") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "02alfash9pjcq4byafp0d2g8myxlh48yp7di81bxyzraih4qv96p") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.7 (c (n "schemars") (v "0.8.7") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "schemars_derive") (r "=0.8.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "0s23d8z5xr65bphq2x5bhrsgvylngilmgyghf3grl8mqcz3c06i7") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.8 (c (n "schemars") (v "0.8.8") (d (list (d (n "arrayvec") (r "^0.5") (o #t) (k 0)) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (k 0)))) (h "1qvhq1yixygd8ihc0qxmnhw4x08fa44q88v088gvc6pa1k4a7df6") (f (quote (("ui_test") ("preserve_order" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive"))))))

(define-public crate-schemars-0.8.9 (c (n "schemars") (v "0.8.9") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0xzwxx611ldrqhavl3pvv77q1pdnc0m0yjz7smlzqxdzcfrfq8bx") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-schemars-0.8.10 (c (n "schemars") (v "0.8.10") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "1vflhh1gnnjj2r5ishagmbca0myg47jg1afqyg5rabfnldkvfiqq") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-schemars-0.8.11 (c (n "schemars") (v "0.8.11") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "01xkqpp4hxssypjvpv5v58hi6hv99kcj7sf8dl127rr93z3bcpra") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-schemars-0.8.12 (c (n "schemars") (v "0.8.12") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0kz41p88zdrh0rmabldi8qkpbgjz3kdx9ny5zp1z1r92hql17ih2") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-schemars-0.8.13 (c (n "schemars") (v "0.8.13") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.13") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0qd1a36ppy8a9x6n33hss0xpczm8rc083jwhkhwdh7n7sk88qgvn") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.14 (c (n "schemars") (v "0.8.14") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.14") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "1k7837xma4z9qh1jvsh4f58b4y1xzlcmirn35j2q2dppmra31qk5") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.15 (c (n "schemars") (v "0.8.15") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.15") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "034wjb2gmrpfc46n79dy7zkysqgyl7xmy71fxrv2ldsm67hhqyqz") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.16 (c (n "schemars") (v "0.8.16") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.16") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0aadpjkaq7yl11b02pg4mwanylck328zg0q7w56dv6j89568z8j5") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.17 (c (n "schemars") (v "0.8.17") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.17") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "02fkz3ra09gk7h9bs4c8i347ry41ia8v96rjvimljf05f0nchmbz") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.18 (c (n "schemars") (v "0.8.18") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.18") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "1iy2isz4fsbbh8nlynzf9mg9fhcrmw2mrkcarr9l5j7shywh3zha") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.19 (c (n "schemars") (v "0.8.19") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.19") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "1vr1dwpx900b3d824f309lmzc6cj61a1dzq1zc3nbd4wj7b7wvpw") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.20 (c (n "schemars") (v "0.8.20") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.20") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0aby31lm1jwlj5hlw5lqq7xyzhc6vrmghdjq995f5asbl7p8q8dh") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-0.8.21 (c (n "schemars") (v "0.8.21") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal03") (r "^0.3") (o #t) (k 0) (p "bigdecimal")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (f (quote ("serde"))) (o #t) (d #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.21") (o #t) (d #t) (k 0)) (d (n "semver") (r "^1.0.9") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "14lyx04388wgbilgcm0nl75w6359nw16glswfqv7x2rpi9329h09") (f (quote (("uuid" "uuid08") ("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("bigdecimal" "bigdecimal03") ("arrayvec" "arrayvec05")))) (r "1.60")))

(define-public crate-schemars-1.0.0-alpha.1 (c (n "schemars") (v "1.0.0-alpha.1") (d (list (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes1") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either1") (r "^1.3") (o #t) (k 0) (p "either")) (d (n "enumset1") (r "^1.0") (o #t) (k 0) (p "enumset")) (d (n "indexmap2") (r "^2.0") (o #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "ref-cast") (r "^1.0.22") (d #t) (k 0)) (d (n "rust_decimal1") (r "^1") (o #t) (k 0) (p "rust_decimal")) (d (n "schemars_derive") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "semver1") (r "^1.0.9") (o #t) (k 0) (p "semver")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec1") (r "^1.0") (o #t) (k 0) (p "smallvec")) (d (n "smol_str02") (r "^0.2.1") (o #t) (k 0) (p "smol_str")) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url2") (r "^2.0") (o #t) (k 0) (p "url")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "0fhs1djhc8fgmz75xynwpv87bh7mkdbz7v90559r3k5pq6d4bh6l") (f (quote (("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("derive" "schemars_derive") ("default" "derive")))) (r "1.60")))

(define-public crate-schemars-1.0.0-alpha.2 (c (n "schemars") (v "1.0.0-alpha.2") (d (list (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal04") (r "^0.4") (o #t) (k 0) (p "bigdecimal")) (d (n "bytes1") (r "^1.0") (o #t) (k 0) (p "bytes")) (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either1") (r "^1.3") (o #t) (k 0) (p "either")) (d (n "enumset1") (r "^1.0") (o #t) (k 0) (p "enumset")) (d (n "indexmap2") (r "^2.0") (o #t) (k 0) (p "indexmap")) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "ref-cast") (r "^1.0.22") (d #t) (k 0)) (d (n "rust_decimal1") (r "^1") (o #t) (k 0) (p "rust_decimal")) (d (n "schemars_derive") (r "=1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "semver1") (r "^1.0.9") (o #t) (k 0) (p "semver")) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec1") (r "^1.0") (o #t) (k 0) (p "smallvec")) (d (n "smol_str02") (r "^0.2.1") (o #t) (k 0) (p "smol_str")) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url2") (r "^2.0") (o #t) (k 0) (p "url")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "17k9yi38h2mk2ag09j322jn147x29pzlfwfynrndh15931wix6zc") (f (quote (("ui_test") ("raw_value" "serde_json/raw_value") ("preserve_order" "serde_json/preserve_order") ("derive" "schemars_derive") ("default" "derive")))) (r "1.60")))

