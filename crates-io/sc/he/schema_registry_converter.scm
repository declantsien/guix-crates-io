(define-module (crates-io sc he schema_registry_converter) #:use-module (crates-io))

(define-public crate-schema_registry_converter-0.1.0 (c (n "schema_registry_converter") (v "0.1.0") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.12.0") (d #t) (k 2)) (d (n "rdkafka") (r "^0.17.0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "00lirr7sphxvkv8f5fibjqv9s9whgdp6bwhxbv56byxgrhxsmsrl")))

(define-public crate-schema_registry_converter-0.2.0 (c (n "schema_registry_converter") (v "0.2.0") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.12.0") (d #t) (k 2)) (d (n "rdkafka") (r "^0.17.0") (d #t) (k 2)) (d (n "rdkafka-sys") (r "^0.11.4-0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "0fiibg56s2pvpb1m2nzgqjfzmzj89iqgravhaiqkicgzr5vw0jna")))

(define-public crate-schema_registry_converter-0.3.0 (c (n "schema_registry_converter") (v "0.3.0") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.12.0") (d #t) (k 2)) (d (n "rdkafka") (r "^0.17.0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "1bajggwyg6687sxi6qnchnjdshw5ap16zhpvqykri4mpq91p7fmw")))

(define-public crate-schema_registry_converter-0.3.1 (c (n "schema_registry_converter") (v "0.3.1") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.12.0") (d #t) (k 2)) (d (n "rdkafka") (r "^0.17.0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "0rwg14fqc6c0l9c3qw6xc8yxfqfkibbayvsnw2h8kqysl5ld1vrv")))

(define-public crate-schema_registry_converter-0.3.2 (c (n "schema_registry_converter") (v "0.3.2") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "mockito") (r "^0.12.0") (d #t) (k 2)) (d (n "rdkafka") (r "^0.17.0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "1q0sjmq0p1nfmbd99qc41sswra7hpinq2hag682iccjpnxiic5kx")))

(define-public crate-schema_registry_converter-1.0.0 (c (n "schema_registry_converter") (v "1.0.0") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 2)) (d (n "mockito") (r "^0.16.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.20.0") (d #t) (k 2)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "06gj89dkd799wr42zv12sciilcrp77n39qcxpr5wh0sz2hkhd2qy") (f (quote (("kafka_test") ("default"))))))

(define-public crate-schema_registry_converter-1.1.0 (c (n "schema_registry_converter") (v "1.1.0") (d (list (d (n "avro-rs") (r ">= 0.6") (d #t) (k 0)) (d (n "byteorder") (r ">= 1.0") (d #t) (k 0)) (d (n "curl") (r ">= 0.4") (d #t) (k 0)) (d (n "futures") (r "^0.1.25") (d #t) (k 2)) (d (n "mockito") (r "^0.16.0") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.20.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">= 0.8.0, < 2.0") (d #t) (k 0)))) (h "07l4c6w6q6w9k67mqjdindzk9j2hby4gvfsk7wjfvjmb7p5f8qbq") (f (quote (("kafka_test") ("default"))))))

(define-public crate-schema_registry_converter-2.0.0 (c (n "schema_registry_converter") (v "2.0.0") (d (list (d (n "avro-rs") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.27.0") (d #t) (k 2)) (d (n "protofish") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rdkafka") (r "^0.23.1") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.4") (o #t) (d #t) (k 0)))) (h "1g20yqfai2rgh03p2dry709f0vjfjyn4h9n06hnqmchvwbg1ml44") (f (quote (("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("kafka_test") ("json" "url" "valico") ("default" "futures") ("blocking" "reqwest/blocking") ("avro" "avro-rs"))))))

(define-public crate-schema_registry_converter-2.0.1 (c (n "schema_registry_converter") (v "2.0.1") (d (list (d (n "avro-rs") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.27.0") (d #t) (k 2)) (d (n "protofish") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rdkafka") (r "^0.23.1") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.4") (o #t) (d #t) (k 0)))) (h "11wyyddjlryizzgll1bmlh334n2hw1ij21wh2z5n5zm7ank53bnd") (f (quote (("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("kafka_test") ("json" "url" "valico") ("default" "futures") ("blocking" "reqwest/blocking") ("avro" "avro-rs"))))))

(define-public crate-schema_registry_converter-2.0.2 (c (n "schema_registry_converter") (v "2.0.2") (d (list (d (n "avro-rs") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.29.0") (d #t) (k 2)) (d (n "protofish") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rdkafka") (r "^0.25.0") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.2.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.5") (o #t) (d #t) (k 0)))) (h "0x5hx9chmpnhp34s2m849a6axlc5i0a33q190a5yrq99va9qk37q") (f (quote (("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("kafka_test") ("json" "url" "valico") ("default" "futures") ("blocking" "reqwest/blocking") ("avro" "avro-rs"))))))

(define-public crate-schema_registry_converter-2.1.0 (c (n "schema_registry_converter") (v "2.1.0") (d (list (d (n "avro-rs") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30.0") (d #t) (k 2)) (d (n "protofish") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rdkafka") (r "^0.26.0") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.6") (o #t) (d #t) (k 0)))) (h "1cr9pki1a9xyg1f20616klgmck6l98x1vrshiwy7bfri07hsmiqr") (f (quote (("rustls_tls" "reqwest/rustls-tls") ("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("native_tls" "reqwest/native-tls") ("kafka_test") ("json" "url" "valico") ("easy" "tokio") ("default" "futures" "native_tls") ("blocking" "reqwest/blocking") ("avro" "avro-rs"))))))

(define-public crate-schema_registry_converter-3.0.0 (c (n "schema_registry_converter") (v "3.0.0") (d (list (d (n "apache-avro") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "protofish") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.28.0") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.6") (o #t) (d #t) (k 0)))) (h "1r402jq028lkx22lpi9cmsp9v45x0fkg52wlafrham4z5ljsyl7r") (f (quote (("rustls_tls" "reqwest/rustls-tls") ("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("native_tls" "reqwest/native-tls") ("kafka_test") ("json" "url" "valico") ("easy" "tokio") ("default" "futures" "native_tls") ("blocking" "reqwest/blocking") ("avro" "apache-avro"))))))

(define-public crate-schema_registry_converter-3.1.0 (c (n "schema_registry_converter") (v "3.1.0") (d (list (d (n "apache-avro") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.31.0") (d #t) (k 2)) (d (n "protofish") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "valico") (r "^3.6") (o #t) (d #t) (k 0)))) (h "0z2g4qp5n2xjrq26951mc6pfas2q3khdjx302biyqdx8pr8w58ay") (f (quote (("rustls_tls" "reqwest/rustls-tls") ("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("native_tls" "reqwest/native-tls") ("kafka_test") ("json" "url" "valico") ("easy" "tokio") ("default" "futures" "native_tls") ("blocking" "reqwest/blocking") ("avro" "apache-avro"))))))

(define-public crate-schema_registry_converter-4.0.0 (c (n "schema_registry_converter") (v "4.0.0") (d (list (d (n "apache-avro") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^5.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "logos") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^1.2.0") (d #t) (k 2)) (d (n "protofish") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.29.0") (f (quote ("cmake-build"))) (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.22") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "valico") (r "^4.0") (o #t) (d #t) (k 0)))) (h "1f8lfjbwhaqshsiazaixwxiq9i542a111j73vpnjbqq4sr1a9rfk") (f (quote (("rustls_tls" "reqwest/rustls-tls") ("proto_raw" "integer-encoding" "logos") ("proto_decoder" "bytes" "integer-encoding" "logos" "protofish") ("native_tls" "reqwest/native-tls") ("kafka_test") ("json" "url" "valico") ("easy" "tokio") ("default" "futures" "native_tls") ("blocking" "reqwest/blocking") ("avro" "apache-avro"))))))

