(define-module (crates-io sc he schemafy) #:use-module (crates-io))

(define-public crate-schemafy-0.1.0 (c (n "schemafy") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.1.0") (d #t) (k 1)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)))) (h "0c36swavazfwzm89bw6j61bwwajy1vac4f9x83kpdv7lsn08l9cm") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-schemafy-0.1.1 (c (n "schemafy") (v "0.1.1") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.1.0") (d #t) (k 1)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)))) (h "1iih98jpsgjgwg7z67ld9q1yhrzi1f00zy4ayigpfw9jcj8f51wm") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-schemafy-0.2.0 (c (n "schemafy") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.2.0") (d #t) (k 1)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)))) (h "17j2swl0mdrksazphcny2visbfcl5bvk1zq14z8jj5p7q3w14xh7") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-schemafy-0.1.2 (c (n "schemafy") (v "0.1.2") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.1.1") (d #t) (k 1)) (d (n "serde") (r "^0.8") (d #t) (k 0)) (d (n "serde_derive") (r "^0.8") (d #t) (k 0)) (d (n "serde_json") (r "^0.8") (d #t) (k 0)))) (h "18b4874738cija1rxgivy5l1jwysr6fcwjsqjq9fhkcqzaic5ccc") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-schemafy-0.2.1 (c (n "schemafy") (v "0.2.1") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.2.0") (d #t) (k 1)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)))) (h "190wp8xds75ywqscwigv1hhhi5pabw58q723kq61rdsls13yyv20")))

(define-public crate-schemafy-0.2.2 (c (n "schemafy") (v "0.2.2") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.2.0") (d #t) (k 1)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)))) (h "1ml0260p6wy7s1bhb86d7q64jibxicw137pw1x37jxwx2jia6chx")))

(define-public crate-schemafy-0.3.0 (c (n "schemafy") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.3.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0iwidr3j4c3ivqh5406p4vbzwqaqy52979aqkhwm4z9d7yhz2k2v")))

(define-public crate-schemafy-0.4.0 (c (n "schemafy") (v "0.4.0") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1r89lk9bvgwc0vr4bnh4xfwiyqqb2smnikdc5rhbrp8xz7dkm2ml")))

(define-public crate-schemafy-0.4.1 (c (n "schemafy") (v "0.4.1") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1yf1s8mh73a9aygzws6gng5adapk41d3d1b2sbs8b5j81h2shnml")))

(define-public crate-schemafy-0.4.2 (c (n "schemafy") (v "0.4.2") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1ki2q58ayl2768q77dpga7cf5gw6gsih7zv90bhqdmqjwsg4d89b")))

(define-public crate-schemafy-0.4.3 (c (n "schemafy") (v "0.4.3") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "052vjb7ks3n989za476z5rx4vdgp3zy2mzvbcb22zffv21j53p21")))

(define-public crate-schemafy-0.4.4 (c (n "schemafy") (v "0.4.4") (d (list (d (n "Inflector") (r "^0.6.0") (d #t) (k 0)) (d (n "itertools") (r "^0.5.9") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "054mw0hhsw8bk45szxhyy3608wswcalrqlzyag451lji4xq4j22d")))

(define-public crate-schemafy-0.4.5 (c (n "schemafy") (v "0.4.5") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "quote") (r "^0.3") (d #t) (k 0)) (d (n "schemafy_snapshot") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0bwgry9l1razr4gdbs60hjw3rxwlhvdz63yhrqjaz2ais7sp2a0k")))

(define-public crate-schemafy-0.5.0 (c (n "schemafy") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "schemafy_core") (r "^0.5.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^0.15") (d #t) (k 0)))) (h "0fz5bb4v4gkf0gzywgwysr7hn0smz5bgwdd8wc8p9fwywsn055ic") (f (quote (("internal-regenerate"))))))

(define-public crate-schemafy-0.5.1 (c (n "schemafy") (v "0.5.1") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "schemafy_core") (r "^0.5.1") (d #t) (k 0)) (d (n "schemafy_lib") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.6") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1qq57kg2dks3y2fv05n4x5nrqs0zz877ck5aiibiql5vs9a6hsn1") (f (quote (("internal-regenerate"))))))

(define-public crate-schemafy-0.5.2 (c (n "schemafy") (v "0.5.2") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "schemafy_core") (r "^0.5.2") (d #t) (k 0)) (d (n "schemafy_lib") (r "^0.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.6") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1mc63prw2j3rm8y7ks3yx7sl318kr3dn92y4y8qy7nl70aj5psla") (f (quote (("internal-regenerate") ("generate-tests"))))))

(define-public crate-schemafy-0.6.0 (c (n "schemafy") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "schemafy_core") (r "^0.6.0") (d #t) (k 0)) (d (n "schemafy_core") (r "^0.6.0") (d #t) (k 1)) (d (n "schemafy_lib") (r "^0.6.0") (d #t) (k 0)) (d (n "schemafy_lib") (r "^0.6.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.7") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "06cahdgngimkygfgnjwfrnhrkxpyhfz7f1k3ngy74ng8cimc29cp") (f (quote (("internal-regenerate") ("generate-tests"))))))

