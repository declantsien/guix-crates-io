(define-module (crates-io sc yl scylladb) #:use-module (crates-io))

(define-public crate-scylladb-0.1.0 (c (n "scylladb") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "01m2yi4rhf9p5aplyinyqlq66hbm75d13j4kjdr2yij2civngqmx") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.1 (c (n "scylladb") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1y8rb0ash63bnmm3l4dyb882s4bnbz0p2klbwpcc8xran8dbs0ag") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.2 (c (n "scylladb") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1cahgw98n1y4yf8hq2whkpyx6msf6jq51pfvkphrjmckyq0ip9xs") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.3 (c (n "scylladb") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0jww9335y78x3hpy0bqigvs8w80y49701yvw891apac2sm6xlylg") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.4 (c (n "scylladb") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1q9q0d1r7drh488fy0qvb031hcddy2wldnj0faknn4a3ynya7bjg") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.5 (c (n "scylladb") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0drrjpqzk54adl8ggbjkf2c75msgp6kczlnxc8rvrszvwrdb6kd9") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.6 (c (n "scylladb") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1d6r8ylm29l8grd0whi9c563da54dybl9x99bwdfrimhvvwpn0dh") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.7 (c (n "scylladb") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0xg78vab9gawri4s1gr6df9kfmkrvfqx7ypsfnl3skn8jw952psk") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.8 (c (n "scylladb") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1kl2239k5brh19326s5awdq4l2ydn0r0i968b5wk6ck5qq8ksmfg") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.9 (c (n "scylladb") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "1xs3lmw0swyrm415hkmpl4f0npllb9xancrh14r79rc657gg19px") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.10 (c (n "scylladb") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.19") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.18") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "09mk6z3jdksva8jlsw6fxb5pqhdim1wl8rrqyinx4cp7hi2hdwrq") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.11 (c (n "scylladb") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.4") (d #t) (k 2)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0w48fq84v689d75ppg3s4y1gg4cv03b7gznkmz7q4q9x4ax0hfj1") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.12 (c (n "scylladb") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "scylla") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)))) (h "0zkl8q4m3396kvgzg6rdvh9qajr0cr50kkd40khyb29ah09rm2zr") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.13 (c (n "scylladb") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "scylla") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)))) (h "1jhfrrbcxj8iwfv12ykkmrsr9mr7v1x3lyv0qza45lvfn2jribpp") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

(define-public crate-scylladb-0.1.14 (c (n "scylladb") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arc-swap") (r "^1.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (o #t) (d #t) (k 0)) (d (n "overclock") (r "^0.1") (f (quote ("backserver"))) (o #t) (k 0)) (d (n "port_scanner") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scylladb-macros") (r "^0.1") (d #t) (k 0)) (d (n "scylladb-parse") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("io-util" "net"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "scylla") (r "^0.8") (d #t) (k 2)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "rt-multi-thread" "signal" "net" "io-util"))) (d #t) (k 2)))) (h "1sr4hy2c7fhn35axf09blhxidqng1wsfsrpsrdkbnxh4fh4rrnjd") (f (quote (("default" "app") ("app" "overclock" "overclock/prefabs" "overclock/tungstenite" "async-trait" "serde" "serde_json" "futures" "futures-util" "rand" "url" "num_cpus" "dyn-clone"))))))

