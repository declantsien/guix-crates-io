(define-module (crates-io sc yl scylla-proxy) #:use-module (crates-io))

(define-public crate-scylla-proxy-0.0.1 (c (n "scylla-proxy") (v "0.0.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bigdecimal") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.6") (d #t) (k 0)) (d (n "ntest") (r "^0.8.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "scylla-cql") (r "^0.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (f (quote ("net" "time" "io-util" "sync" "rt" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "1xx1nbjjli7nj5vs5byj0w6c2qwibj223igqp1dnr9syqc8rzkjg") (f (quote (("defaults"))))))

(define-public crate-scylla-proxy-0.0.2 (c (n "scylla-proxy") (v "0.0.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bigdecimal") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.6") (d #t) (k 0)) (d (n "ntest") (r "^0.8.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "scylla-cql") (r "^0.0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (f (quote ("net" "time" "io-util" "sync" "rt" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "16srmcwnp0f6dznlym7xadxk2hci9vj42wxlhv5zx177ph67ikwz") (f (quote (("defaults"))))))

(define-public crate-scylla-proxy-0.0.3 (c (n "scylla-proxy") (v "0.0.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "bigdecimal") (r "^0.2.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "bytes") (r "^1.2.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.6") (d #t) (k 0)) (d (n "ntest") (r "^0.8.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "scylla-cql") (r "^0.0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (f (quote ("net" "time" "io-util" "sync" "rt" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.25") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (d #t) (k 0)))) (h "13yg51x0anhx69953avlich8qr7gn9ab5dcgy2qbzp2n8386cca4") (f (quote (("defaults"))))))

