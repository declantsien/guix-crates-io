(define-module (crates-io sc yl scyllax-macros-core) #:use-module (crates-io))

(define-public crate-scyllax-macros-core-0.1.8-alpha (c (n "scyllax-macros-core") (v "0.1.8-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.8-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1zrh7b52l5nnciybh3kr2l74qyq2nphrim0iygc108axvhbgqkaz")))

(define-public crate-scyllax-macros-core-0.1.9-alpha (c (n "scyllax-macros-core") (v "0.1.9-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.9-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1v1arbkczx4s69051v4jrwxn1xhcgigr50hl2an6ip1nw85bs50i")))

(define-public crate-scyllax-macros-core-0.1.9-alpha.2 (c (n "scyllax-macros-core") (v "0.1.9-alpha.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1gkqxwmban16n0h8hspmjxfwifzvq0zsvk8066vgqh73idyqcb43")))

(define-public crate-scyllax-macros-core-0.1.9-alpha.3 (c (n "scyllax-macros-core") (v "0.1.9-alpha.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1r0ndhja37jz588wli2a4dn6rv3l1dr88phhr6ckdv75rldlbj0s")))

(define-public crate-scyllax-macros-core-0.1.9-alpha.4 (c (n "scyllax-macros-core") (v "0.1.9-alpha.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.9-alpha.4") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "13x8xpky7zrmn4lv7jv5xkdjnyh0fzif7p0n97i9ywqr79p2chpj")))

(define-public crate-scyllax-macros-core-0.1.10-alpha (c (n "scyllax-macros-core") (v "0.1.10-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.10-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0f1w5njr9mzdsql4lj02pk0vikl16sb4hq8jw321dyvmq02gm5n1")))

(define-public crate-scyllax-macros-core-0.1.11-alpha (c (n "scyllax-macros-core") (v "0.1.11-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.11-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "12j5674mbsajjsn2bvhn53mk3lawwjgs8c0scq549zqycbndp3sf")))

(define-public crate-scyllax-macros-core-0.1.0 (c (n "scyllax-macros-core") (v "0.1.0") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0wzzn7wck1lm7qdd21qjw707g66pj3r0f0zp9isvx1xq848a33gz")))

(define-public crate-scyllax-macros-core-0.1.1-alpha (c (n "scyllax-macros-core") (v "0.1.1-alpha") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.1-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0hxi4bz14gizxmzzzdbdmj1yrj5spp37jj6rr4dxzqiaa4viffqg")))

(define-public crate-scyllax-macros-core-0.1.1 (c (n "scyllax-macros-core") (v "0.1.1") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.1.1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1m0n3kpmpbizfisrlp5cssr2qf1gvb3py0hv8kcm7vb75cvwyiz2")))

(define-public crate-scyllax-macros-core-0.2.0-alpha (c (n "scyllax-macros-core") (v "0.2.0-alpha") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.2.0-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0j3vabwa86dfp3c84j9wwr2y44dfxp1yf235xdl07hbq0ln325vj")))

(define-public crate-scyllax-macros-core-0.2.0-alpha.1 (c (n "scyllax-macros-core") (v "0.2.0-alpha.1") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.2.0-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1f4529yx1ia0xi27if05rxgz6qy2dnkxa14vq2l7xl88j77aiap2")))

(define-public crate-scyllax-macros-core-0.2.0-alpha.3 (c (n "scyllax-macros-core") (v "0.2.0-alpha.3") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.2.0-alpha") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0yjq4iwsb1i2nkm008llw521q6gzx96vpbv9bx6l7fck6n4prklw")))

(define-public crate-scyllax-macros-core-0.2.0 (c (n "scyllax-macros-core") (v "0.2.0") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "0yyzwg62gxw8i2syvgaxmz5zsvp170b93q4r467m748zzmynm078")))

(define-public crate-scyllax-macros-core-0.2.1 (c (n "scyllax-macros-core") (v "0.2.1") (d (list (d (n "bae") (r "^0.2") (d #t) (k 0) (p "sea-bae")) (d (n "convert_case") (r "^0.6.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (f (quote ("suggestions"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "scyllax-parser") (r "^0.2.1") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "derive" "extra-traits"))) (d #t) (k 0)))) (h "1iwl5hxz7ajmxjphmq5jn7d2xj80zfzfpi8yc86xdzfjfr9bpss2")))

