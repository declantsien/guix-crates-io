(define-module (crates-io sc yl scyllax) #:use-module (crates-io))

(define-public crate-scyllax-0.1.0-alpha (c (n "scyllax") (v "0.1.0-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.0-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0c1whgn6h69msh6akhh855f784a8d57rz4a2s559pvszszn90l42")))

(define-public crate-scyllax-0.1.1-alpha (c (n "scyllax") (v "0.1.1-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.1-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "01yqcssi8mhg0l36c9nwbccnnzynri9sk2w2nw8zw51gpnw714n5") (y #t)))

(define-public crate-scyllax-0.1.2-alpha (c (n "scyllax") (v "0.1.2-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.2-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1c05ski89ww7dy9l27ahiax7wsjs9459022a78nh7w395wmfpvzl") (y #t)))

(define-public crate-scyllax-0.1.3-alpha (c (n "scyllax") (v "0.1.3-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.3-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1914fjbc5b3vshr4m65cvyvbwhryqgwdrg7nwbxdkbmmzb48pbbn") (y #t)))

(define-public crate-scyllax-0.1.4-alpha (c (n "scyllax") (v "0.1.4-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.4-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1z32mf8ddfzyzarad93sbj2z5zy9xcy99hgkhr1galx357mgw8x3") (y #t)))

(define-public crate-scyllax-0.1.5-alpha (c (n "scyllax") (v "0.1.5-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.5-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0c7x5h39kmz8ir7cmxda90h0hk5g6m35jzsgf4swfl7jqjffa0vl") (y #t)))

(define-public crate-scyllax-0.1.6-alpha (c (n "scyllax") (v "0.1.6-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.6-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1jbdpak6zm4bhqhnzmrpnqr27553q6jrb0jfnkmh2wh2m8ks19v5") (y #t)))

(define-public crate-scyllax-0.1.7-alpha (c (n "scyllax") (v "0.1.7-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.7-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1xczmmv70sc0nwx6qmm1g7w8z71k9dzv93k4fz8l6rwr2i88ybab") (y #t)))

(define-public crate-scyllax-0.1.8-alpha (c (n "scyllax") (v "0.1.8-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.8-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1rmfviqxx7jaybqfcbv41xp22wnblklc43ippsl932xaknfl54vf") (y #t)))

(define-public crate-scyllax-0.1.9-alpha (c (n "scyllax") (v "0.1.9-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.9") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.9-alpha") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.9-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1gwc87cnhvjcmf2z2xzm8lkwxddxmyspgvl1rx796afx1gmy1hcm") (y #t)))

(define-public crate-scyllax-0.1.9-alpha.2 (c (n "scyllax") (v "0.1.9-alpha.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "132qbh2w3pnvg72x1scxpqbhwh33y2wn6m1mgq8rbgcjw476bi5y") (y #t)))

(define-public crate-scyllax-0.1.9-alpha.3 (c (n "scyllax") (v "0.1.9-alpha.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.9-alpha.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1iva3phf04r8b3ya83sr0fjqmhs2vz9kkw5wqsxbdzxifybix522") (y #t)))

(define-public crate-scyllax-0.1.9-alpha.4 (c (n "scyllax") (v "0.1.9-alpha.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.9-alpha.3") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.9-alpha.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "14c38bgv68b492pynyqkfd9zlj8xk2p3ymv70k3c09lndc9k4wk7") (y #t)))

(define-public crate-scyllax-0.1.10-alpha (c (n "scyllax") (v "0.1.10-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.10-alpha") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.10-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0zcf4i7a0anj5dy5mr79anv14h72qh7255ch0yypsdh5vasgl6yn")))

(define-public crate-scyllax-0.1.11-alpha (c (n "scyllax") (v "0.1.11-alpha") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.11-alpha") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.11-alpha") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0650ywrx9b5aycqhf2gq83byiw4ssvwfr80ms2dazpqj05xqp2i8")))

(define-public crate-scyllax-0.1.0 (c (n "scyllax") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0jjnrmdbwgf4yq78spl1kkb0wbimccd27hikccjbm8k76080a6a9")))

(define-public crate-scyllax-0.1.1-alpha.2 (c (n "scyllax") (v "0.1.1-alpha.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.1-alpha.2") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.1-alpha") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1aibxxjpd9r2bsd1rx93ywvz1liihglhic3dlh7bavw8gx4m7538") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.1.1 (c (n "scyllax") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.10") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1ahkz3r2zakf62ynsldjqx0p9wi07bh5nmad5qrgs79af2mb7lc8") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.0-alpha (c (n "scyllax") (v "0.2.0-alpha") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.0-alpha") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.0-alpha") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "13lv84xd899vj7i2bbdy5ywah8pm7ijkkfsc3gmllkggxk5cic6k") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.0-alpha.1 (c (n "scyllax") (v "0.2.0-alpha.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "1f1815hk8fndfwkh8md4mnirkkqhhxrkakfgbq3js0m7d6xv2r7b") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.0-alpha.2 (c (n "scyllax") (v "0.2.0-alpha.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.0-alpha.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0dmvf5mczzba71paa3cq34jryhj07fs0z5qnjha3b594ypl36rx0") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.0-alpha.3 (c (n "scyllax") (v "0.2.0-alpha.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.0-alpha.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "17zihphv93k8yb2h0wa6lmhiywqyi52y4gfsrrcs419sinpzc6h9") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.0 (c (n "scyllax") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "0w9ns38xfxscr0j6hnzfmj6bhbkx7y1ms3qnkwkim33pj54635vk") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

(define-public crate-scyllax-0.2.1 (c (n "scyllax") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "mac_address") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "scylla") (r "^0.12") (f (quote ("time"))) (d #t) (k 0)) (d (n "scyllax-macros") (r "^0.2.1") (d #t) (k 0)) (d (n "scyllax-macros-core") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "tracing"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v1" "std" "fast-rng"))) (d #t) (k 0)))) (h "00nyfbk1gqw6j41f68b6w5ic07fgvsvixaqb2jrgficfr036l8n8") (f (quote (("json" "serde_json" "serde") ("grpc" "prost-types") ("default"))))))

