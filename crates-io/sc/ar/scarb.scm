(define-module (crates-io sc ar scarb) #:use-module (crates-io))

(define-public crate-scarb-0.0.1 (c (n "scarb") (v "0.0.1") (h "0j4b0679561pb62qry9dyzy3akirhmbmnw6glc4fjk3hwqj9fc71") (y #t) (r "1.66")))

(define-public crate-scarb-0.1.0-rc.0 (c (n "scarb") (v "0.1.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.9") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.63") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "camino") (r "^1.1.2") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "fs4") (r "^0.6.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.37.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.0") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^2.1.3") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-potat") (r "^1.1.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.6") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.4") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 1)))) (h "1mvpkv4z47anpyzrqnrgfj6cn0j4ahsr0xzjn1f1rncby3wh6x8j") (r "1.67")))

(define-public crate-scarb-0.1.0-rc.2 (c (n "scarb") (v "0.1.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.9") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "fs4") (r "^0.6.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.37.2") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^2.1.3") (f (quote ("color-auto"))) (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.0.1") (f (quote ("builder"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol") (r "^1.3.0") (d #t) (k 0)) (d (n "smol-potat") (r "^1.1.2") (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.10") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.7") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 1)))) (h "0yk7bx4ql8pygmy9h1lk5h3ca7bylww4ckjnignm91bk5hl0mg0k") (r "1.67")))

(define-public crate-scarb-0.1.0 (c (n "scarb") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.9") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.0") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.10.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "fs4") (r "^0.6.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.43.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^3.0.2") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.0.1") (f (quote ("builder"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.147") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.1.23") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.10") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 1)))) (h "0l5vkcldxq0ixgxwdp8lahlvajnzsnq9zwd2ww5c1mpqh63s7s18") (r "1.67")))

(define-public crate-scarb-0.2.0-alpha.0 (c (n "scarb") (v "0.2.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.9") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.11.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.0") (d #t) (k 0)) (d (n "dunce") (r "^1.0.3") (d #t) (k 0)) (d (n "fs4") (r "^0.6.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.43.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.140") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^3.0.2") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.1.0") (f (quote ("builder"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.159") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.10") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (k 1)))) (h "0ss22f61n9g5bl1l3fr1v9wv17chydpp17jj158i4454a4iqnj7r") (r "1.67")))

(define-public crate-scarb-0.2.0 (c (n "scarb") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.3.0") (f (quote ("builder"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0fxiarwqyi1ddxmnxgsjvg3l4v83nn87rximp7amjz2b4v13kn57") (r "1.67")))

(define-public crate-scarb-0.2.1 (c (n "scarb") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.0.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.0.0") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.3") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "=1.2.0") (f (quote ("builder"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.1") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.8") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "01hj3s2vjmzxbz366xr5ys2qdi0y7k1mfqlazfh5kdkkfjr36agr") (r "1.67")))

(define-public crate-scarb-0.3.0 (c (n "scarb") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^1.1.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^1.1.0") (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 1)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0fh2jdscgzhx0lskjslpwrjqx74qahrf18604zsadaqqi8yagw8d") (r "1.69")))

(define-public crate-scarb-0.5.0-alpha.0 (c (n "scarb") (v "0.5.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc2") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "06zlvjflf6x2pa96sz61x3g56vdnn7qwyspn8pm4163mf9mjf8m2") (r "1.70")))

(define-public crate-scarb-0.5.0-alpha.1 (c (n "scarb") (v "0.5.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc3") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc3") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0d1znvmqmrpvwiqzl1bl3s64r359pzyrhw2xy1rbhqnmmd4z8gyv")))

(define-public crate-scarb-0.5.0-alpha.2 (c (n "scarb") (v "0.5.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc4") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc4") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "1brxgnbqlaxc72mc40q4ya5yp1yfghs1ay9jxbrs2hl1xqbydsn6")))

(define-public crate-scarb-0.5.0-alpha.3 (c (n "scarb") (v "0.5.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc5") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.44.1") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0im18kp6l5683mvz5k31xcgyh11jhd3p2lfj0qnzmlkyc8qzpvy9")))

(define-public crate-scarb-0.5.0-alpha.4 (c (n "scarb") (v "0.5.0-alpha.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc6") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.0") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.47.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.144") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.4") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "16hzy460122zl9fyxsaxy0y0fyg9liw11s8xhi63kqa7l58dnkw1")))

(define-public crate-scarb-0.5.0 (c (n "scarb") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.10") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.47.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0zxasqj0qq5bbid08s581my4zs2afzzl9d9xm9x05rafn67iagwa")))

(define-public crate-scarb-0.5.2 (c (n "scarb") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.2") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.10") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.47.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "0qxcw02gcqi8mf8m2h99236y5mzcdw3p2qabwz07xzpy6knsgvr6")))

(define-public crate-scarb-0.6.0-alpha.1 (c (n "scarb") (v "0.6.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "cairo-lang-compiler") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-filesystem") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-formatter") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-semantic") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-sierra-to-casm") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc1") (f (quote ("env_logger"))) (d #t) (k 0)) (d (n "camino") (r "^1.1.4") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.15.4") (d #t) (k 1)) (d (n "clap") (r "^4.3.10") (f (quote ("derive" "env" "string"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^2.0.1") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "create-output-dir") (r "^1.0.0") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "deno_task_shell") (r "^0.12.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "diffy") (r "^0.3.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dunce") (r "^1.0.4") (d #t) (k 0)) (d (n "fs4") (r "^0.6.5") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (f (quote ("std" "async-await"))) (k 0)) (d (n "gix") (r "^0.47.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (d #t) (k 0)) (d (n "indoc") (r "^2.0.1") (d #t) (k 0)) (d (n "io_tee") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (k 2)) (d (n "ntest") (r "^0.9.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.2") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (f (quote ("camino"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.3") (d #t) (k 0)) (d (n "predicates") (r "^3.0.3") (d #t) (k 2)) (d (n "scarb-metadata") (r "^1.4.0") (f (quote ("builder" "packages_filter"))) (k 0)) (d (n "semver") (r "^1.0.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_test") (r "^1.0.163") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.4.2") (f (quote ("serde"))) (d #t) (k 2)) (d (n "smol_str") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snapbox") (r "^0.4.11") (f (quote ("cmd" "path"))) (d #t) (k 2)) (d (n "test-case") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "io-util" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.5") (d #t) (k 0)) (d (n "toml_edit") (r "^0.19.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.6") (f (quote ("xxh3"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate"))) (k 1)))) (h "1l43x6rgggnragsvxgqdrbkxvann2kfhbi5s0vv3lsh3d20ni42l")))

