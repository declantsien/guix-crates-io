(define-module (crates-io sc io scionmultiaddr) #:use-module (crates-io))

(define-public crate-scionmultiaddr-0.18.1 (c (n "scionmultiaddr") (v "0.18.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0x4b4aymk0sjzv5r4cs4vidpwwj9j8a7fpgb2x8ngj9f46l86vnc") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.2 (c (n "scionmultiaddr") (v "0.18.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0nh24nxsgc14m7lz2gwn7srzc592dmhmc142mcg5rgwsp55j7p24") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.3 (c (n "scionmultiaddr") (v "0.18.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0fsckc6kj97gyn1qpc2pxfmqv0lhad1vr2b4yvb0v0bv5bajgkma") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.4 (c (n "scionmultiaddr") (v "0.18.4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0gxl1ksidkw3ipqm9h3hksm0pw16060rhzzlq72ncl25a5lxwdar") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.5 (c (n "scionmultiaddr") (v "0.18.5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0695n1h6fxxssygm8pk65mig21w5ch7z33fp3in4lgiydspmyxxp") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.6 (c (n "scionmultiaddr") (v "0.18.6") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "05yjpc7p3sl77wxyyhdh5b8z1j36rnlgj38ly2pm3nf0w8w5vazd") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.7 (c (n "scionmultiaddr") (v "0.18.7") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1bqmam2y5n8x6f18s24kg7kdl24r2f546cq891bz8v9gafgfi5yi") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.8 (c (n "scionmultiaddr") (v "0.18.8") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1bpzzpljs3v8fq5ys5zmflqw5sw0k2k79n0q32znlycli1ab8gcl") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.9 (c (n "scionmultiaddr") (v "0.18.9") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.0") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "1cn7whv5lb8wn02jjjaxc558r0qy49g48fn65k47xz90g21a3xdj") (f (quote (("default" "url")))) (r "1.59.0")))

(define-public crate-scionmultiaddr-0.18.10 (c (n "scionmultiaddr") (v "0.18.10") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "byteorder") (r "^1.3.1") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.8") (f (quote ("peerid"))) (d #t) (k 0)) (d (n "multibase") (r "^0.9.1") (d #t) (k 0)) (d (n "multihash") (r "^0.19") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "scionnet") (r "^0.0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.70") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "unsigned-varint") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (o #t) (k 0)))) (h "0nigckss3hhn70799g12phbqiqdchki8dm0z450pf4d6cb9rrnag") (f (quote (("default" "url")))) (r "1.59.0")))

