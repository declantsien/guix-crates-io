(define-module (crates-io sc re screen-13) #:use-module (crates-io))

(define-public crate-screen-13-0.1.0 (c (n "screen-13") (v "0.1.0") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "fbx_direct") (r "^0.6") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "^0.5") (f (quote ("wgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.5") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.5") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.5") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.5") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.9") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.6") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 0)) (d (n "shaderc") (r "^0.6") (d #t) (k 1)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "Document" "Element" "HtmlElement" "Node" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.22") (f (quote ("web-sys"))) (d #t) (k 0)))) (h "0xd1r44nxc7qfj2sqvj00da9kzyhm7l50gskrdjd8h86k9wy0z0a")))

(define-public crate-screen-13-0.1.1 (c (n "screen-13") (v "0.1.1") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "1ay2c87xabx97vzn1r8c7bxmkh2z70lnn2md30z7h3dawdn6axmn") (f (quote (("forward-3d") ("deferred-3d") ("default" "deferred-3d" "forward-3d") ("debug-names"))))))

(define-public crate-screen-13-0.1.2 (c (n "screen-13") (v "0.1.2") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0zvhmbjqh3zpqav5dmplysk1idk2jy7wnnjsjhwlg9178s6pslck") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.3 (c (n "screen-13") (v "0.1.3") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0lyda1fziagjv4rlbma0mid7c45w7yyx7fbzy7yfx0yd89h0cs19") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.4 (c (n "screen-13") (v "0.1.4") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "092qfimya9kqyqc823aax1jfh8lidpv2dcblv036akfhavy87sdy") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.5 (c (n "screen-13") (v "0.1.5") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0gpd146i9a3lfcxcqxc0xpbdfak61fmx0xa1zcacq7r18169kjgm") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.6 (c (n "screen-13") (v "0.1.6") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "1sn6cbiyvr2bs7wq5g0cmf0ambgznxyh0kc0k5jpnd9vxv0p9vj7") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.7 (c (n "screen-13") (v "0.1.7") (d (list (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "1azp9jy8kjbyjhlc22iaranaxngcdmy1k8fjfxkxwq6cxdvv1jqr") (f (quote (("forward-3d") ("deferred-3d") ("default" "auto-cull" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.1.8 (c (n "screen-13") (v "0.1.8") (d (list (d (n "a_r_c_h_e_r_y") (r "^0.4") (d #t) (k 0)) (d (n "app_dirs") (r "^1.2") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "genmesh") (r "^0.6") (d #t) (k 1)) (d (n "gfx-backend-gl") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gfx-hal") (r "^0.6") (d #t) (k 0)) (d (n "gfx-impl") (r "^0.6") (f (quote ("x11"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))") (k 0) (p "gfx-backend-vulkan")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0) (p "gfx-backend-metal")) (d (n "gfx-impl") (r "^0.6") (d #t) (t "cfg(target_os = \"windows\")") (k 0) (p "gfx-backend-dx11")) (d (n "glam") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glam") (r "^0.11") (d #t) (k 1)) (d (n "gltf") (r "^0.15") (d #t) (k 0)) (d (n "hecs") (r "^0.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 0)) (d (n "shaderc") (r "^0.7") (d #t) (k 1)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winit") (r "^0.24") (d #t) (k 0)))) (h "0srixga7rgyk79qyr78407ayprvl768zxa0hp2sq1zhwznpvxjmn") (f (quote (("xr") ("multi-monitor") ("low-power") ("forward-3d") ("deferred-3d") ("default" "deferred-3d" "forward-3d") ("debug-names") ("auto-cull"))))))

(define-public crate-screen-13-0.2.0 (c (n "screen-13") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "archery") (r "^0.4.3") (d #t) (k 0) (p "a_r_c_h_e_r_y")) (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "ash") (r "^0.35") (d #t) (k 0)) (d (n "ash-window") (r "^0.9") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "derive_builder") (r "^0.10") (d #t) (k 0)) (d (n "glam") (r "^0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gltf") (r "^1.0") (d #t) (k 0)) (d (n "gpu-allocator") (r "^0.16") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "imgui") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num-format") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "puffin") (r "^0.12") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "spirv-reflect") (r "^0.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "typenum") (r "^1.12") (d #t) (k 0)) (d (n "vk-sync") (r "^0.3.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "1h1b71yz9y4s0ls13k8glzj4vlki65pzpzhil012rrn9lvgccz18") (f (quote (("pak") ("default" "pak") ("bake" "glob" "pak"))))))

(define-public crate-screen-13-0.3.0 (c (n "screen-13") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "archery") (r "^0.4") (d #t) (k 0)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "1raxif08fxnlr9k8b2hv113crgz18803n46lvii44yvvjc6qvda7")))

(define-public crate-screen-13-0.3.1 (c (n "screen-13") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "archery") (r "^0.4") (d #t) (k 0)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "0qalm237762z26h59jygi8qij66vjm0n1v405gi34pl17gwd6abw")))

(define-public crate-screen-13-0.3.2 (c (n "screen-13") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "archery") (r "^0.4") (d #t) (k 0)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "1abdb695fad7ww955mlglrcasv6nyyadm8mfbkq5xnrpkrqaiaz9")))

(define-public crate-screen-13-0.4.0 (c (n "screen-13") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "egui") (r "^0.18.0") (d #t) (k 2)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "07ki023vb8kgvsjbrspg3zlyihnmwfj7diqlqqzbv7hr33cb5ldz")))

(define-public crate-screen-13-0.4.1 (c (n "screen-13") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "egui") (r "^0.18.0") (d #t) (k 2)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "1dk4c11myvb6aj2ga1f91m0kyljqh9wq1vjaahwhm90rsqwp87nj")))

(define-public crate-screen-13-0.4.2 (c (n "screen-13") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "egui") (r "^0.18.0") (d #t) (k 2)) (d (n "glam") (r "^0.20") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "16649w8yxs1dvcz9dr9lvd42a0f74d61alzns8kq0wah8s92inlp")))

(define-public crate-screen-13-0.5.0 (c (n "screen-13") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "egui") (r "^0.18.0") (d #t) (k 2)) (d (n "glam") (r "^0.21") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.18") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.5") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.26") (d #t) (k 0)))) (h "03cz7gyzy1ipjw7yvm4j5gzqfnrlrbfiwb060bigx4hazq7mmbpp")))

(define-public crate-screen-13-0.6.0 (c (n "screen-13") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.21") (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "178jg59yjim2fd4iykxzqv9a0ww91n2l2av2ng569b2s677jjbp9")))

(define-public crate-screen-13-0.6.1 (c (n "screen-13") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.21") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "10c3n6816ywd4s718xcm4blws5yrarg12fsywizshpqp33abffrk")))

(define-public crate-screen-13-0.6.2 (c (n "screen-13") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.21") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.19") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "1s8jdxk98mybxw7ri927xa8fh1x7ii0j08m9dz7sbm5ail0379jp")))

(define-public crate-screen-13-0.6.3 (c (n "screen-13") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.20") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "0zbd9wc07vabadays14wnmw63pdk32akh5s7apzxlrvqkiiwick9")))

(define-public crate-screen-13-0.6.4 (c (n "screen-13") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.20") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "0wqd7ay2sa3wa16zqv35pm98j1p36v7kd5a2y3222381w9qmc04l")))

(define-public crate-screen-13-0.6.5 (c (n "screen-13") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.10") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.20") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "00vmv0rcil82psfgkgv7x3c6p25cjfpp28xbbfb4nbr6ygbp48xq")))

(define-public crate-screen-13-0.7.0 (c (n "screen-13") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.21") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "0wxvyaq5abanq550lj8iy1klaab6jsa73c55s796xcnrsdz50s71")))

(define-public crate-screen-13-0.7.1 (c (n "screen-13") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.21") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "176cfj2krsfgw3zpki8zr1cnzgyx52jzilxh92cp0478akz6qmmh")))

(define-public crate-screen-13-0.8.0 (c (n "screen-13") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.9") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.21") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^0.6") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.27") (d #t) (k 0)))) (h "1mjygpfi00badd1nwsdfyq16l01knz0x6kvj91jq48r3108y5d22")))

(define-public crate-screen-13-0.8.1 (c (n "screen-13") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r "^0.37") (d #t) (k 0)) (d (n "ash-molten") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.22") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r "^0.2") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r ">=0.6.2") (d #t) (k 0)) (d (n "tobj") (r "^3.2") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r ">=0.27") (d #t) (k 0)))) (h "1n819pq3jx6k95j39y4f9hlf71sys43y2fp0hhfzmn3gjqb5cn2i")))

(define-public crate-screen-13-0.9.0 (c (n "screen-13") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.22") (d #t) (k 0)) (d (n "half") (r "^2.2") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^3.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r ">=0.6.2") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "17zn000f8sgw75lsbxqckxmkaxql1b9a7l51q4qmj9x6vr8cji5j") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.9.1 (c (n "screen-13") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.24") (d #t) (k 0)) (d (n "half") (r "^2.2") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.1") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "=1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.28") (d #t) (k 0)))) (h "1nayjrrflrrbvajvrwfjj39v3hsr62i1kf7p30mys5605d57x9xj") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.9.2 (c (n "screen-13") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.2") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "=1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "09v2wxkgbv5xxifk47v121zpzalg4abdjisv00iqpqp7z64fhv8h") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.9.3 (c (n "screen-13") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.2") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "=1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "1a894cminwph0pksjskx0lnv6jm2vfwi1kbvpzvhwy949viczb31") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.9.4 (c (n "screen-13") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.13") (d #t) (k 2)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.2") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "=1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "06ak6gi49gzr5cwfcmdl9nyz5wm8n7ayvakfyz5lxh7pi2d965vs") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.10.0 (c (n "screen-13") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1, <0.38") (d #t) (k 0)) (d (n "ash-molten") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 2)) (d (n "derive_builder") (r "^0.13") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.15") (d #t) (k 2)))) (h "0r1g5gkq1kmwafgxzgsvmvx2gvmjnpy7bcz8a4rf74h8dd8ix96q") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.11.0 (c (n "screen-13") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1, <0.38") (d #t) (k 0)) (d (n "ash-molten") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.15") (d #t) (k 2)))) (h "034afssa001ihj72wa4a3r5ck5in62208yjanrgchxm04ysvnvy9") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.11.1 (c (n "screen-13") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1, <0.38") (d #t) (k 0)) (d (n "ash-molten") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (d #t) (k 2)) (d (n "puffin_http") (r "^0.16") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.15") (d #t) (k 2)))) (h "1v39kpp0gxfhz6ip0vckj8m6n4d42i571211d3s5gyg9kvc8wmfy") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.11.2 (c (n "screen-13") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1, <0.38") (d #t) (k 0)) (d (n "ash-molten") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.25") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (d #t) (k 2)) (d (n "puffin_http") (r "^0.16") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^1.1.1") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.15") (d #t) (k 2)))) (h "0089g2qzspcc95mjwkimwdnqkvnzqfqd7rsvn326czlzy32893mw") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

(define-public crate-screen-13-0.11.3 (c (n "screen-13") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "ash") (r ">=0.37.1, <0.38") (d #t) (k 0)) (d (n "ash-molten") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "ash-window") (r "^0.12") (d #t) (k 0)) (d (n "bmfont") (r "^0.3") (k 2)) (d (n "bytemuck") (r "^1.14") (d #t) (k 2)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20") (d #t) (k 0)) (d (n "glam") (r "^0.27") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "gpu-allocator") (r "^0.26") (d #t) (k 0)) (d (n "half") (r "^2.3") (f (quote ("bytemuck"))) (d #t) (k 2)) (d (n "hassle-rs") (r "^0.11") (d #t) (k 2)) (d (n "image") (r "^0.25") (d #t) (k 2)) (d (n "inline-spirv") (r "^0.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "meshopt") (r "^0.2") (d #t) (k 2)) (d (n "ordered-float") (r "^4.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "polyhedron-ops") (r ">=0.2, <=0.2.4") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "profiling") (r "^1.0") (d #t) (k 0)) (d (n "puffin") (r "^0.19") (d #t) (k 2)) (d (n "puffin_http") (r "^0.16") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "raw-window-handle") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "spirq") (r "^1.2") (d #t) (k 0)) (d (n "tobj") (r "^4.0") (d #t) (k 2)) (d (n "vk-sync") (r "^0.4.0") (d #t) (k 0) (p "vk-sync-fork")) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.16") (d #t) (k 2)))) (h "0vgqjpwjy3lagl72d35xjcqirlsv7hvg7j60k361ay0d115dch1w") (f (quote (("profile-with-tracy" "profiling/profile-with-tracy") ("profile-with-superluminal" "profiling/profile-with-superluminal") ("profile-with-puffin" "profiling/profile-with-puffin") ("profile-with-optick" "profiling/profile-with-optick") ("default"))))))

