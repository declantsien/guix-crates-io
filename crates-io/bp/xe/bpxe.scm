(define-module (crates-io bp xe bpxe) #:use-module (crates-io))

(define-public crate-bpxe-0.1.0 (c (n "bpxe") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (k 0)) (d (n "linkme") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rhai") (r "^0.19.10") (f (quote ("sync" "serde"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strong-xml") (r "^0.6.0") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tia") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0m71r3qwsgrpyz7l6apb9fd511i5c5cm178j4zj0hcl0mz6l8i6d") (f (quote (("default" "rhai"))))))

(define-public crate-bpxe-0.1.1 (c (n "bpxe") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (k 0)) (d (n "linkme") (r "^0.2") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rhai") (r "^0.19.10") (f (quote ("sync" "serde"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strong-xml") (r "^0.6.0") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tia") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0yhw6vv9r72abrc2058vmkblqrc1sc4s41an5j0lbmh6w2yr4bj4") (f (quote (("default" "rhai"))))))

(define-public crate-bpxe-0.1.2 (c (n "bpxe") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bpxe-bpmn-schema") (r "^0.1.2") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "intertrait") (r "^0.2") (d #t) (k 0)) (d (n "linkme") (r "^0.2") (d #t) (k 0)) (d (n "rhai") (r "^0.19.10") (f (quote ("sync" "serde"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strong-xml") (r "^0.6.0") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tia") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "15z101gyrab8pd8zfyy07ks38ap754s25db5anvkab2wsh1h1gnd") (f (quote (("default" "rhai"))))))

(define-public crate-bpxe-0.2.0 (c (n "bpxe") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bpxe-bpmn-schema") (r "^0.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "factory") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rhai") (r "^0.19.10") (f (quote ("sync" "serde"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "streamunordered") (r "^0.5.1") (d #t) (k 0)) (d (n "strong-xml") (r "^0.6.0") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tia") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("macros" "rt" "time" "sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "19k01lbfaqw6jl9glj9cp8h06296bnlq6xc0f3lys7bab1pr9s6i") (f (quote (("default" "rhai"))))))

(define-public crate-bpxe-0.2.1 (c (n "bpxe") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bpxe-bpmn-schema") (r "^0.2.1") (d #t) (k 0)) (d (n "bpxe-internal-macros") (r "^0.2.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "factory") (r "^0.1.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "instant") (r "^0.1.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "num-bigint") (r "^0.3.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 2)) (d (n "rhai") (r "^0.19.10") (f (quote ("sync" "serde"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 2)) (d (n "ron") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "streamunordered") (r "^0.5.2") (d #t) (k 0)) (d (n "strong-xml") (r "^0.6.0") (d #t) (k 0)) (d (n "sxd-document") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tia") (r "^1.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("macros" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("macros" "time" "sync"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("macros" "time" "sync"))) (d #t) (t "wasm32-wasi") (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.20") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "wasm32-unknown-unknown") (k 2)) (d (n "wasm-rs-async-executor") (r "^0.8.1") (f (quote ("debug"))) (d #t) (k 0)) (d (n "wasm-rs-dbg") (r "^0.1.2") (d #t) (k 0)) (d (n "wasm-rs-shared-channel") (r "^0.1.0") (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("console" "DedicatedWorkerGlobalScope"))) (d #t) (t "wasm32-unknown-unknown") (k 0)))) (h "0a64a6msv4gvsvrsglfla1q5x04sqv3mp33d8kcfia1gprsqc68p") (f (quote (("default" "rhai"))))))

