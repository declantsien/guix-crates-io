(define-module (crates-io fb _f fb_futures_ext) #:use-module (crates-io))

(define-public crate-fb_futures_ext-0.1.0 (c (n "fb_futures_ext") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bytes-old") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0) (p "bytes")) (d (n "fb_cloned") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lock_ext") (r "^0.1") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1") (d #t) (k 0)))) (h "19g8khyxcvwqh42lh0k9pszqwflk014jb2xxzlw00f177rn1304r")))

(define-public crate-fb_futures_ext-0.1.1 (c (n "fb_futures_ext") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bytes-old") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0) (p "bytes")) (d (n "fb_cloned") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lock_ext") (r "^0.1") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1") (d #t) (k 0)))) (h "18f1iha2lk329ykr1f23vbc04cgw2qgmnf0lhbclxxn8fsp1ldbq")))

(define-public crate-fb_futures_ext-0.1.2 (c (n "fb_futures_ext") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bytes-old") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0) (p "bytes")) (d (n "fb_cloned") (r "^0.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lock_ext") (r "^0.1") (d #t) (k 2)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-io") (r "^0.1") (d #t) (k 0)) (d (n "tokio-threadpool") (r "^0.1") (d #t) (k 0)))) (h "14x75by992ys0k887j7w9i1v49xhhgy8v7kacs0phsfipwq4pg6l")))

(define-public crate-fb_futures_ext-0.2.0 (c (n "fb_futures_ext") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "pin-project") (r "^0.4.30") (d #t) (k 0)) (d (n "shared_error") (r "^0.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full" "test-util" "tracing"))) (d #t) (k 0)))) (h "1wzvwij2yb0i9l3a1w5js4l7r3dy8zmlxxqyz11dxarnzis10rix")))

