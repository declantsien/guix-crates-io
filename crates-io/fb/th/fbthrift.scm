(define-module (crates-io fb th fbthrift) #:use-module (crates-io))

(define-public crate-fbthrift-0.0.1+unstable (c (n "fbthrift") (v "0.0.1+unstable") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.29") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bufsize") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes-old") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0) (p "bytes")) (d (n "const-cstr") (r "^0.3.0") (d #t) (k 0)) (d (n "ghost") (r "^0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gsykn0ly7xi79wjb2fwqhi5k2rzdhj4w63ynr4jww1ii0ircdh0")))

(define-public crate-fbthrift-0.0.2 (c (n "fbthrift") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.29") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bufsize") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes-old") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0) (p "bytes")) (d (n "const-cstr") (r "^0.3.0") (d #t) (k 0)) (d (n "ghost") (r "^0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1088cw6hm1qjaxbyp0lmzmh7lap6dkl1np5qzligsnaywhz8ajg5")))

(define-public crate-fbthrift-0.0.3 (c (n "fbthrift") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "bufsize") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.13") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "ghost") (r "^0.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^1.1.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "panic-message") (r "^0.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0qnq6y3naw2q4n01ifzx673k1q1b7vvw37066dkbwgl22dmpgb2h")))

