(define-module (crates-io xs k- xsk-rs) #:use-module (crates-io))

(define-public crate-xsk-rs-0.1.0 (c (n "xsk-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.0.9-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-core" "macros" "test-util" "blocking" "sync"))) (k 2)))) (h "11vpvizqbqyz929jwh45qks6d66i4dnvcmr8armz4jcky1qkcwb1") (y #t)))

(define-public crate-xsk-rs-0.2.0 (c (n "xsk-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "etherparse") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.2.0-3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.3.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-core" "macros" "test-util" "blocking" "sync" "signal"))) (k 2)))) (h "1ndbvhnchz0p8b3fz3ikz1rwiss6yh9n7z5sjpnnx51vdimb8zip")))

(define-public crate-xsk-rs-0.2.1 (c (n "xsk-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 2)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1.7") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "etherparse") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.3.0-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.3.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.22") (f (quote ("rt-core" "macros" "test-util" "blocking" "sync" "signal"))) (k 2)))) (h "19ni22vg47sfpczg5kqkwqqyfjk4yb58s90zmz9wnblvhi85y7fk")))

(define-public crate-xsk-rs-0.2.2 (c (n "xsk-rs") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.3.0-2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal"))) (k 2)))) (h "1jyjf0knj2kzgl8a7jzqr23pj6q4viyz43lx0fva7q487my2h1ks")))

(define-public crate-xsk-rs-0.2.3 (c (n "xsk-rs") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.3.0-2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal"))) (k 2)))) (h "0y49k9q13p9cwrz6vss1c4giw0grji4c63zr7lj5ribsdkr3a056")))

(define-public crate-xsk-rs-0.2.4 (c (n "xsk-rs") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.2") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.4.0-2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal"))) (k 2)))) (h "18xpsx0bzdlv2mhwassvarw3sp412lqkknvn0540p2k69pzqqdjj")))

(define-public crate-xsk-rs-0.3.0 (c (n "xsk-rs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.6.0-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal" "time"))) (k 2)))) (h "0dzl6z55yicy314hrpw9r7hrfgsa7nifyfvly1zbg1j13xzscfjy")))

(define-public crate-xsk-rs-0.4.0 (c (n "xsk-rs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.6.0-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal" "time"))) (k 2)))) (h "1hm4pnbw269893lhmjr6wzc8fiyjl95f83gk6w78icz2dxjcpd30")))

(define-public crate-xsk-rs-0.4.1 (c (n "xsk-rs") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 2)) (d (n "ctrlc") (r "^3.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "etherparse") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "libbpf-sys") (r "^0.6.0-1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.7") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal" "time"))) (k 2)))) (h "1vhxh3yk536lxam5i9bmn8f8i228xh041ivvrxqd9kd5nghd77mv")))

(define-public crate-xsk-rs-0.6.1 (c (n "xsk-rs") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 2)) (d (n "ctrlc") (r "^3.4.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "libc") (r "^0.2.155") (d #t) (k 0)) (d (n "libxdp-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rtnetlink") (r "^0.14.0") (d #t) (k 2)) (d (n "serial_test") (r "^2.0.0") (d #t) (k 2)) (d (n "structopt") (r "^0.3.26") (d #t) (k 2)) (d (n "tokio") (r "^1.6") (f (quote ("rt-multi-thread" "macros" "sync" "signal" "time"))) (k 2)))) (h "0paijf8x4hmccaw6hxy6j0c9jm4cv1pslbaafgzzxgp46z0iq3jp")))

