(define-module (crates-io lf -g lf-gfx) #:use-module (crates-io))

(define-public crate-lf-gfx-0.1.0 (c (n "lf-gfx") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "06mvzg4hc0r25qd04qhp9ywyrj6wb01s8n0lzj6mx2d6rn5imm5m")))

(define-public crate-lf-gfx-0.1.1 (c (n "lf-gfx") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "0hc50sz6hwc8ikf5jqbcpqbh91378kdckl9a5abc2br3n75sfdlw")))

(define-public crate-lf-gfx-0.1.2 (c (n "lf-gfx") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ibnz1m2vsxm2h3k1zf8sg1l5xrclpmp2v01vng16nkmjk56ap3d")))

(define-public crate-lf-gfx-0.2.1 (c (n "lf-gfx") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "0gih3n1h9pi0vn9px1ar7n01qnklnvgnlnwxn2xvjs09v6na7nph")))

(define-public crate-lf-gfx-0.2.2 (c (n "lf-gfx") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "16zyq2nz18l1xhxrzwdf30c5nls8q7b68nh67qnk3pqhydjlg5k3")))

(define-public crate-lf-gfx-0.2.3 (c (n "lf-gfx") (v "0.2.3") (d (list (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "1m7gxyfc6i9cvkny4yp2a4rblslywx9c4a5hix8qasgjvxic3d91")))

(define-public crate-lf-gfx-0.3.0 (c (n "lf-gfx") (v "0.3.0") (d (list (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "1n9x6ap68h2jkh1qrxkl06qkqshilw12m3k4b5a5h6v1dvfr6isw")))

(define-public crate-lf-gfx-0.4.0 (c (n "lf-gfx") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.28") (f (quote ("serde"))) (d #t) (k 0)))) (h "006alqmrb1dywyj026y1hwi0agn1x0zjq8wibznsw57djsa8w4h2")))

(define-public crate-lf-gfx-0.5.0 (c (n "lf-gfx") (v "0.5.0") (d (list (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_05"))) (d #t) (k 0)))) (h "1br3vmn47dgfdlppn2m42fy0gj6nzdi2jg07fca8h69nfy8xfgzg")))

(define-public crate-lf-gfx-0.6.0 (c (n "lf-gfx") (v "0.6.0") (d (list (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_05"))) (d #t) (k 0)))) (h "0f5qdkj93d19jjdy74qixis73qmaipk14j3gw5q2jyb0ydqpr9ca")))

(define-public crate-lf-gfx-0.7.0 (c (n "lf-gfx") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "=0.3.67") (f (quote ("Window" "Storage" "Element" "Node" "HtmlDialogElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_05"))) (d #t) (k 0)))) (h "144qzqmfch422kdvzv9wibq5i1zqa6182whj4z31dnn09lnghakz")))

(define-public crate-lf-gfx-0.7.1 (c (n "lf-gfx") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "=0.3.67") (f (quote ("Window" "Storage" "Element" "Node" "HtmlDialogElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_05"))) (d #t) (k 0)))) (h "027cslyvzql2bblhi199n7a94jplcyhph00zpz9q6fpgwkxvsrna")))

(define-public crate-lf-gfx-0.7.2 (c (n "lf-gfx") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "=0.3.67") (f (quote ("Window" "Storage" "Element" "Node" "HtmlDialogElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_06"))) (d #t) (k 0)))) (h "11979m3z5a69z3l06msy4cpc43l8j2j2nz7pv8kjy80fdjadzp3z") (y #t)))

(define-public crate-lf-gfx-0.7.3 (c (n "lf-gfx") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.3") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dirs") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "flume") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "=0.3.67") (f (quote ("Window" "Storage" "Element" "Node" "HtmlDialogElement"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.19") (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("serde" "rwh_06"))) (d #t) (k 0)))) (h "11p08x3hns5ipymzan1i46d3fprk569rmp7bfddry9jlw3fp9z2x")))

