(define-module (crates-io bt re btree_graph) #:use-module (crates-io))

(define-public crate-btree_graph-0.1.0 (c (n "btree_graph") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1m9svii003djbcy9j7mhr14pibvwbbmiw0zdsmnq2gn79fvh6xik") (f (quote (("yaml" "serde" "serde_yaml") ("json" "serde" "serde_json") ("fmt") ("default") ("cbor" "serde" "serde_cbor"))))))

(define-public crate-btree_graph-0.1.1 (c (n "btree_graph") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1rs00sjac3v2wxg3wh6jbsnb56mfmcv95rm866rv7imxv1izxwl9") (f (quote (("yaml" "serde" "serde_yaml") ("json" "serde" "serde_json") ("fmt") ("default") ("cbor" "serde" "serde_cbor"))))))

(define-public crate-btree_graph-0.1.2 (c (n "btree_graph") (v "0.1.2") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1mgmivbrpnahf83djalrrk4jawi4hzx66zj8ry45p41brmjz4adl") (f (quote (("yaml" "serde" "serde_yaml") ("json" "serde" "serde_json") ("fmt") ("default") ("cbor" "serde" "serde_cbor"))))))

(define-public crate-btree_graph-0.1.3 (c (n "btree_graph") (v "0.1.3") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0f96wdjw7scq3rpjqls0w3wmy9pnjk9154bgb780si7sq6ycc9gx") (f (quote (("fmt") ("default"))))))

(define-public crate-btree_graph-0.1.4 (c (n "btree_graph") (v "0.1.4") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "try_encoding_from") (r "^0.1") (o #t) (k 0)))) (h "1g7an79fhmgcqdsnbg7lmycidpxixf221mbkpjgx1syh7i4g3h5l") (f (quote (("serde_yaml" "try_encoding_from/yaml") ("serde_json" "try_encoding_from/json") ("serde_cbor" "try_encoding_from/cbor") ("fmt")))) (y #t)))

(define-public crate-btree_graph-0.2.0 (c (n "btree_graph") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "try_encoding_from") (r "^0.1") (o #t) (k 0)))) (h "1ng525a7kpyf18r4gk54hrwlpbxmbzvwds39r22f3mk5zwq0xjd1") (f (quote (("serde_yaml" "try_encoding_from/yaml") ("serde_json" "try_encoding_from/json") ("serde_cbor" "try_encoding_from/cbor") ("fmt"))))))

(define-public crate-btree_graph-0.2.1 (c (n "btree_graph") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "try_encoding_from") (r "^0.1") (o #t) (k 0)))) (h "0m5ivmwalx4px5wrvynsghwlih194rkw5d05nibfsw3j1v079sgp") (f (quote (("serde_yaml" "try_encoding_from/yaml") ("serde_json" "try_encoding_from/json") ("serde_cbor" "try_encoding_from/cbor") ("fmt"))))))

(define-public crate-btree_graph-0.2.2 (c (n "btree_graph") (v "0.2.2") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "try_encoding_from") (r "^0.1") (o #t) (k 0)))) (h "0zdyw95slxiqcnbwdjri6k50fdd5vv4ajs6p3ihpfxhjpp1fw2s5") (f (quote (("serde_yaml" "try_encoding_from/yaml") ("serde_json" "try_encoding_from/json") ("serde_cbor" "try_encoding_from/cbor") ("fmt"))))))

