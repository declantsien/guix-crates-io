(define-module (crates-io bt le btleplug) #:use-module (crates-io))

(define-public crate-btleplug-0.3.1 (c (n "btleplug") (v "0.3.1") (d (list (d (n "backtrace") (r "^0.3.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^4.0") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "winrt") (r "^0.6.0") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "0qhm4czjq8msg6jpkf1dh1w2jlhcfrmnm7jdznqbz123flfzxgjp")))

(define-public crate-btleplug-0.4.0 (c (n "btleplug") (v "0.4.0") (d (list (d (n "async-std") (r "^1.4.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.45") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "nix") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^4.0") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6.0") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "0l7842idw3ahn0l84bphnh85zbcgqj4hdg7m78jh05l3ak9nj44z")))

(define-public crate-btleplug-0.4.1 (c (n "btleplug") (v "0.4.1") (d (list (d (n "async-std") (r "^1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.45") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "libc") (r "^0.2.67") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4.0") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6.0") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "1riz860qv6gra8b03carklprkhpzi9jwqn8xdk2cbaa5ccla9272")))

(define-public crate-btleplug-0.4.2 (c (n "btleplug") (v "0.4.2") (d (list (d (n "async-std") (r "^1.5.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.46") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.7") (d #t) (k 0)) (d (n "libc") (r "^0.2.69") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6.0") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "1d3ghlpyfip822bvjdvsn47fwrv42kjy3wpcdipkchlg12rfd2b9")))

(define-public crate-btleplug-0.4.3 (c (n "btleplug") (v "0.4.3") (d (list (d (n "async-std") (r "^1.6.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.48") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 0)) (d (n "cocoa") (r "^0.20.1") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.20.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.71") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.111") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6.0") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "06xsy6bjmj99klqy4zlmlshxid6l0hl528apb1kd7j1msk4y5gnp")))

(define-public crate-btleplug-0.4.4 (c (n "btleplug") (v "0.4.4") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.50") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.73") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "02v2ya29smchf1izfkmw008i3sm78b2yrsr573121dacbhdy8knh")))

(define-public crate-btleplug-0.5.0 (c (n "btleplug") (v "0.5.0") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.50") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^3.11.7") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.73") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "1v9wz6v9nnhsjzs35yafcpvcv159b3jwnglfn7lf2swpdw2cd1n0")))

(define-public crate-btleplug-0.5.1 (c (n "btleplug") (v "0.5.1") (d (list (d (n "async-std") (r "^1.6.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.50") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.23.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^3.11.7") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.73") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.17.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.114") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "0p0xdav0np78y7gjaiybc22ap2g5l98cr9ql5jbd23ija4m3bm87")))

(define-public crate-btleplug-0.5.2 (c (n "btleplug") (v "0.5.2") (d (list (d (n "async-std") (r "^1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^3.11.10") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.18.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "1ad1fxhaxcy406ma1cz5iw7dzh078y0ws69zzwbcvc3n8q20w3d7")))

(define-public crate-btleplug-0.5.3 (c (n "btleplug") (v "0.5.3") (d (list (d (n "async-std") (r "^1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^3.11.10") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.18.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "0rwg1xnppkp3qvgayv0f6p388pyad6npkq0k1cfx1kji34bm9drw")))

(define-public crate-btleplug-0.5.4 (c (n "btleplug") (v "0.5.4") (d (list (d (n "async-std") (r "^1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "backtrace") (r "^0.3.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^3.11.10") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.79") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nix") (r "^0.18.0") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "0qqbkhc8rzcngbxqglpvmpcfi46lz1piixm2jydwsmas0jlvawaz")))

(define-public crate-btleplug-0.5.5 (c (n "btleplug") (v "0.5.5") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.55") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "libc") (r "^0.2.82") (d #t) (k 0)) (d (n "log") (r "^0.4.13") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "nom") (r "^4") (f (quote ("verbose-errors"))) (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "rand") (r "^0.8.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.119") (f (quote ("derive"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "winrt") (r "^0.6") (f (quote ("windows-devices" "windows-storage"))) (d #t) (k 0)))) (h "1sdifl0pxs1s6i725wj0mwshdk7szjzr7clzhpcafz0yiv3p1kgh")))

(define-public crate-btleplug-0.6.0 (c (n "btleplug") (v "0.6.0") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dbus-codegen") (r "^0.9.1") (k 1)) (d (n "displaydoc") (r "^0.1.7") (d #t) (k 0)) (d (n "enum_primitive") (r "^0.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num") (r "^0.3.1") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"ios\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (o #t) (k 0)) (d (n "simple_logger") (r "^1.11.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "winrt") (r "^0.7.2") (d #t) (k 0)))) (h "0gv8n9crvf414g32j58s8d15a7kk6c6idvmp4906zsqla0lkq2x0")))

(define-public crate-btleplug-0.7.0 (c (n "btleplug") (v "0.7.0") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dbus-codegen") (r "^0.9.1") (k 1)) (d (n "displaydoc") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde_cr") (r "^1.0.123") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "simple_logger") (r "^1.11.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0z0ik6n29vpvi0qc18rmp0zq2d0ynpyyxia8sz6asalz63fhfsng") (f (quote (("serde" "uuid/serde" "serde_cr")))) (y #t)))

(define-public crate-btleplug-0.7.1 (c (n "btleplug") (v "0.7.1") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dbus-codegen") (r "^0.9.1") (k 1)) (d (n "displaydoc") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde_cr") (r "^1.0.123") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "simple_logger") (r "^1.11.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "1ybw8zn079hfp4qq6zkbwmvq09fg2aj6k226cinjdwpykrnb9fbr") (f (quote (("serde" "uuid/serde" "serde_cr"))))))

(define-public crate-btleplug-0.7.2 (c (n "btleplug") (v "0.7.2") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dbus-codegen") (r "^0.9.1") (k 1)) (d (n "displaydoc") (r "^0.1.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "libc") (r "^0.2.85") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "serde_cr") (r "^1.0.123") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "simple_logger") (r "^1.11.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "18sirr6lwnjbvn4vd23nxw39cl9wx242qkra88da7an723rxqxa6") (f (quote (("serde" "uuid/serde" "serde_cr"))))))

(define-public crate-btleplug-0.7.3 (c (n "btleplug") (v "0.7.3") (d (list (d (n "async-std") (r "^1.9.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "dbus-codegen") (r "^0.9.1") (k 1)) (d (n "displaydoc") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde_cr") (r "^1.0.126") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "simple_logger") (r "^1.11.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.3.1") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "1w429snv4jr7265zvs50qsc92bf43h1qyf3sy6hz15j8j0mk6iki") (f (quote (("serde" "uuid/serde" "serde_cr"))))))

(define-public crate-btleplug-0.8.0 (c (n "btleplug") (v "0.8.0") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.126") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.64") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("rt"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.9.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "1dkyr2ldbj0rvzcfbmc7ac12v6hzwy0j59v0i837d7mys7m3v16d") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.8.1 (c (n "btleplug") (v "0.8.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.3.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.127") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.66") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "1dcrvilkbi4c78sxqvlnba8xxq6da27y9bcdcaldksqzpywbrlsh") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.9.0 (c (n "btleplug") (v "0.9.0") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^4.0.2") (d #t) (k 0)) (d (n "dbus") (r "^0.9.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "displaydoc") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.16") (d #t) (k 0)) (d (n "libc") (r "^0.2.99") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.127") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.66") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("rt" "sync"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "tokio") (r "^1.10.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.18.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "103piim3b47l8w3vqj4g8l2a6iav6wgn7npygbkigkkwaiks8bm5") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.9.1 (c (n "btleplug") (v "0.9.1") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.5.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.0.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.112") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.74") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.28.0") (f (quote ("std" "Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0gnxfgyx0q8q0l62g6l1yvdhfdzndf19wnwlj637w1czgn19r736") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.9.2 (c (n "btleplug") (v "0.9.2") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.5.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.1.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.136") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.8") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 0)) (d (n "windows") (r "^0.33.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1as1krc36k3dqdln8cwz8dxmmkaqx3c8a3hrpryn9igaam6x1kgs") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.0 (c (n "btleplug") (v "0.10.0") (d (list (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.3.4") (d #t) (k 0)) (d (n "dbus") (r "^0.9.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.6") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.140") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.82") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 0)) (d (n "windows") (r "^0.39.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1yl8wx0mgxwi4dznik3f2mfhk3jgy4z4xvdpxax4zbhacl9najjw") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.1 (c (n "btleplug") (v "0.10.1") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.133") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 0)) (d (n "windows") (r "^0.41.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0z31kz5yi8gl6847cgv416cgdps0lfj739s9av3irlds3gnq69fy") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.2 (c (n "btleplug") (v "0.10.2") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.133") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 0)) (d (n "windows") (r "^0.41.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01a8yxmhk9kykiyknh0pdj3f8ipy7gllwla1g635mngl0d6rfm9x") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.3 (c (n "btleplug") (v "0.10.3") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.133") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.145") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.85") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.10") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (d #t) (k 0)) (d (n "windows") (r "^0.41.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0y002zk2f0k9vxn3ns03qx15jq9j5937wi3zr5mfz9zccr0lbqdd") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.4 (c (n "btleplug") (v "0.10.4") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.6.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.137") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.7") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.147") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.22.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.22.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.11") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (d #t) (k 0)) (d (n "windows") (r "^0.43.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07jg47x0fw19jmrcf68yy27m77aivc11326cj21s4s6387mij51k") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.10.5 (c (n "btleplug") (v "0.10.5") (d (list (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.141") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.9") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.160") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.12") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ic1zcfm4nf9abdih3w49h5zp5zgbirnw14y538xpxi7klxi63kr") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.0 (c (n "btleplug") (v "0.11.0") (d (list (d (n "async-trait") (r "^0.1.70") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.4.0") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.10") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.166") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.100") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.41") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.0") (d #t) (k 0)) (d (n "windows") (r "^0.48.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1wbdb3sc5bsva5r87mm4g4clgvsrd2pa1l0zm0fnj6qpm7qj9bd1") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.1 (c (n "btleplug") (v "0.11.1") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.147") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.12") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.188") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.105") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0d15pbggl8ysf2lhcsxd10jgzgplydwcmaq62kmmw834hlg4yrxs") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.2 (c (n "btleplug") (v "0.11.2") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.12") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 0)) (d (n "windows") (r "^0.52.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1svrsgcq9d2bpbq94ri2b3yyqr4yczrf9yc0vkch86vzvhp94bfx") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.3 (c (n "btleplug") (v "0.11.3") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.150") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.12") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.192") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 0)) (d (n "windows") (r "^0.52.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "183j5w9ichjv3g57vg9y3kgaawf2w0s9bb5mj5pw9m7khq0p0hq7") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.4 (c (n "btleplug") (v "0.11.4") (d (list (d (n "async-trait") (r "^0.1.76") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.13") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.193") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.109") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.53") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 0)) (d (n "windows") (r "^0.52.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lc3b7r6vv3kmbf17231yzdf5jyzp0amchl44xsz7yv0lpkbbwnk") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

(define-public crate-btleplug-0.11.5 (c (n "btleplug") (v "0.11.5") (d (list (d (n "async-trait") (r "^0.1.76") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "bluez-async") (r "^0.7.2") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "cocoa") (r "^0.25.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "dbus") (r "^0.9.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "jni") (r "^0.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "jni-utils") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "libc") (r "^0.2.151") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde_bytes") (r "^0.11.13") (o #t) (d #t) (k 0)) (d (n "serde_cr") (r "^1.0.193") (f (quote ("derive"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0.109") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.53") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (f (quote ("sync"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 0)) (d (n "windows") (r "^0.52.0") (f (quote ("Devices_Bluetooth" "Devices_Bluetooth_GenericAttributeProfile" "Devices_Bluetooth_Advertisement" "Devices_Radios" "Foundation_Collections" "Foundation" "Storage_Streams"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1kwry4pm6di4s4mdjgr46nicmnzw3yz8l05jb4lwffa9p6fmyd5s") (f (quote (("serde" "uuid/serde" "serde_cr" "serde_bytes"))))))

